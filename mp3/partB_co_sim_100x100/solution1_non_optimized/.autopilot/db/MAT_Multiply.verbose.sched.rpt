

================================================================
== Vivado HLS Report for 'MAT_Multiply'
================================================================
* Date:           Fri Oct  2 07:17:25 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        partB
* Solution:       solution1_non_optimized
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.69|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-------------+-----+-------------+---------+
    |      Latency      |      Interval     | Pipeline|
    | min |     max     | min |     max     |   Type  |
    +-----+-------------+-----+-------------+---------+
    |    1|  11009006004|    2|  11009006005|   none  |
    +-----+-------------+-----+-------------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+------------+-------------+--------------------+-----------+-----------+------+----------+
        |               |          Latency         |      Iteration     |  Initiation Interval  | Trip |          |
        |   Loop Name   |     min    |     max     |       Latency      |  achieved |   target  | Count| Pipelined|
        +---------------+------------+-------------+--------------------+-----------+-----------+------+----------+
        |- Row          |  2003002000|  11003002000| 2003002 ~ 11003002 |          -|          -|  1000|    no    |
        | + Col         |     2003000|     11003000|    2003 ~ 11003    |          -|          -|  1000|    no    |
        |  ++ Product   |        2000|        11000|       2 ~ 11       |          -|          -|  1000|    no    |
        |- Row_Assign   |     2002000|      4002000|     2002 ~ 4002    |          -|          -|  1000|    no    |
        | + Col_Assign  |        2000|         4000|        2 ~ 4       |          -|          -|  1000|    no    |
        +---------------+------------+-------------+--------------------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 21
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (tmp_s)
	17  / (!tmp_s)
2 --> 
	3  / true
3 --> 
	17  / (exitcond4)
	4  / (!exitcond4)
4 --> 
	5  / (!exitcond3)
	3  / (exitcond3)
5 --> 
	6  / true
6 --> 
	16  / (!exitcond2 & !tmp_10) | (!exitcond2 & !tmp_14)
	7  / (!exitcond2 & tmp_10 & tmp_14)
	4  / (exitcond2)
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	6  / true
17 --> 
	18  / (tmp_s & !exitcond1)
18 --> 
	19  / (!exitcond & tmp_12)
	21  / (!exitcond & !tmp_12)
	17  / (exitcond)
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	18  / true
* FSM state operations: 

 <State 1>: 5.26ns
ST_1: stg_22 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i32* %A) nounwind, !map !0

ST_1: stg_23 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32* %B) nounwind, !map !6

ST_1: stg_24 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i64* %C) nounwind, !map !10

ST_1: stg_25 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32 %mA) nounwind, !map !14

ST_1: stg_26 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i32 %nA) nounwind, !map !20

ST_1: stg_27 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i32 %mB) nounwind, !map !24

ST_1: stg_28 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i32 %nB) nounwind, !map !28

ST_1: stg_29 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i32 %mC) nounwind, !map !32

ST_1: stg_30 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i32 %nC) nounwind, !map !36

ST_1: stg_31 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecTopModule([13 x i8]* @str) nounwind

ST_1: nC_read [1/1] 0.00ns
:10  %nC_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %nC) nounwind

ST_1: mC_read [1/1] 0.00ns
:11  %mC_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %mC) nounwind

ST_1: nB_read [1/1] 0.00ns
:12  %nB_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %nB) nounwind

ST_1: mB_read [1/1] 0.00ns
:13  %mB_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %mB) nounwind

ST_1: nA_read [1/1] 0.00ns
:14  %nA_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %nA) nounwind

ST_1: mA_read [1/1] 0.00ns
:15  %mA_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %mA) nounwind

ST_1: arrayA [1/1] 0.00ns
:16  %arrayA = alloca [1000000 x i32], align 4

ST_1: arrayB [1/1] 0.00ns
:17  %arrayB = alloca [1000000 x i32], align 4

ST_1: arrayC [1/1] 0.00ns
:18  %arrayC = alloca [1000000 x i64], align 8

ST_1: stg_41 [1/1] 0.00ns
:19  call void (...)* @_ssdm_op_SpecInterface(i32* %A, [8 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 100, [1 x i8]* @p_str3, [1 x i8]* @p_str3, [1 x i8]* @p_str3) nounwind

ST_1: stg_42 [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecInterface(i32* %B, [8 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 100, [1 x i8]* @p_str3, [1 x i8]* @p_str3, [1 x i8]* @p_str3) nounwind

ST_1: stg_43 [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecInterface(i64* %C, [8 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 100, [1 x i8]* @p_str3, [1 x i8]* @p_str3, [1 x i8]* @p_str3) nounwind

ST_1: tmp [1/1] 2.52ns
:22  %tmp = icmp eq i32 %nA_read, %mB_read

ST_1: tmp_7 [1/1] 2.52ns
:23  %tmp_7 = icmp eq i32 %mA_read, %mC_read

ST_1: tmp_9 [1/1] 2.52ns
:24  %tmp_9 = icmp eq i32 %nB_read, %nC_read

ST_1: tmp1 [1/1] 1.37ns
:25  %tmp1 = and i1 %tmp_7, %tmp_9

ST_1: tmp_s [1/1] 1.37ns
:26  %tmp_s = and i1 %tmp1, %tmp

ST_1: stg_49 [1/1] 0.00ns
:27  br i1 %tmp_s, label %1, label %.loopexit

ST_1: stg_50 [2/2] 1.04ns
:0  call fastcc void @MAT_Multiply_load_mat(i32* %A, [1000000 x i32]* nocapture %arrayA, i32 %mC_read, i32 %mB_read) nounwind

ST_1: stg_51 [2/2] 1.04ns
:1  call fastcc void @MAT_Multiply_load_mat(i32* %B, [1000000 x i32]* nocapture %arrayB, i32 %mB_read, i32 %nC_read) nounwind


 <State 2>: 1.57ns
ST_2: stg_52 [1/2] 0.00ns
:0  call fastcc void @MAT_Multiply_load_mat(i32* %A, [1000000 x i32]* nocapture %arrayA, i32 %mC_read, i32 %mB_read) nounwind

ST_2: stg_53 [1/2] 0.00ns
:1  call fastcc void @MAT_Multiply_load_mat(i32* %B, [1000000 x i32]* nocapture %arrayB, i32 %mB_read, i32 %nC_read) nounwind

ST_2: stg_54 [1/1] 1.57ns
:2  br label %2


 <State 3>: 3.64ns
ST_3: i [1/1] 0.00ns
:0  %i = phi i10 [ 0, %1 ], [ %i_2, %11 ]

ST_3: phi_mul1 [1/1] 0.00ns
:1  %phi_mul1 = phi i20 [ 0, %1 ], [ %next_mul1, %11 ]

ST_3: next_mul1 [1/1] 2.08ns
:2  %next_mul1 = add i20 %phi_mul1, 1000

ST_3: i_cast8 [1/1] 0.00ns
:3  %i_cast8 = zext i10 %i to i32

ST_3: exitcond4 [1/1] 2.07ns
:4  %exitcond4 = icmp eq i10 %i, -24

ST_3: empty [1/1] 0.00ns
:5  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1000, i64 1000, i64 1000) nounwind

ST_3: i_2 [1/1] 1.84ns
:6  %i_2 = add i10 %i, 1

ST_3: stg_62 [1/1] 1.57ns
:7  br i1 %exitcond4, label %.preheader, label %3

ST_3: stg_63 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str4) nounwind

ST_3: tmp_8 [1/1] 0.00ns
:1  %tmp_8 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str4) nounwind

ST_3: tmp_2 [1/1] 2.52ns
:2  %tmp_2 = icmp ult i32 %i_cast8, %mC_read

ST_3: stg_66 [1/1] 1.57ns
:3  br label %4


 <State 4>: 4.69ns
ST_4: j [1/1] 0.00ns
:0  %j = phi i10 [ 0, %3 ], [ %j_2, %10 ]

ST_4: j_cast7 [1/1] 0.00ns
:1  %j_cast7 = zext i10 %j to i32

ST_4: j_cast7_cast [1/1] 0.00ns
:2  %j_cast7_cast = zext i10 %j to i20

ST_4: exitcond3 [1/1] 2.07ns
:3  %exitcond3 = icmp eq i10 %j, -24

ST_4: empty_4 [1/1] 0.00ns
:4  %empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1000, i64 1000, i64 1000) nounwind

ST_4: j_2 [1/1] 1.84ns
:5  %j_2 = add i10 %j, 1

ST_4: stg_73 [1/1] 0.00ns
:6  br i1 %exitcond3, label %11, label %5

ST_4: p_addr [1/1] 2.08ns
:2  %p_addr = add i20 %j_cast7_cast, %phi_mul1

ST_4: tmp_6 [1/1] 0.00ns
:3  %tmp_6 = zext i20 %p_addr to i64

ST_4: arrayC_addr [1/1] 0.00ns
:4  %arrayC_addr = getelementptr [1000000 x i64]* %arrayC, i64 0, i64 %tmp_6

ST_4: stg_77 [2/2] 2.61ns
:5  store i64 0, i64* %arrayC_addr, align 8

ST_4: tmp_5 [1/1] 2.52ns
:6  %tmp_5 = icmp ult i32 %j_cast7, %nC_read

ST_4: tmp_10 [1/1] 1.37ns
:7  %tmp_10 = and i1 %tmp_2, %tmp_5

ST_4: empty_7 [1/1] 0.00ns
:0  %empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str4, i32 %tmp_8) nounwind

ST_4: stg_81 [1/1] 0.00ns
:1  br label %2


 <State 5>: 2.61ns
ST_5: stg_82 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str5) nounwind

ST_5: tmp_4 [1/1] 0.00ns
:1  %tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str5) nounwind

ST_5: stg_84 [1/2] 2.61ns
:5  store i64 0, i64* %arrayC_addr, align 8

ST_5: stg_85 [1/1] 1.57ns
:8  br label %6


 <State 6>: 4.69ns
ST_6: k [1/1] 0.00ns
:0  %k = phi i10 [ 0, %5 ], [ %k_1, %._crit_edge ]

ST_6: phi_mul [1/1] 0.00ns
:1  %phi_mul = phi i20 [ 0, %5 ], [ %next_mul, %._crit_edge ]

ST_6: k_cast6 [1/1] 0.00ns
:2  %k_cast6 = zext i10 %k to i32

ST_6: k_cast6_cast [1/1] 0.00ns
:3  %k_cast6_cast = zext i10 %k to i20

ST_6: exitcond2 [1/1] 2.07ns
:4  %exitcond2 = icmp eq i10 %k, -24

ST_6: empty_5 [1/1] 0.00ns
:5  %empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1000, i64 1000, i64 1000) nounwind

ST_6: k_1 [1/1] 1.84ns
:6  %k_1 = add i10 %k, 1

ST_6: stg_93 [1/1] 0.00ns
:7  br i1 %exitcond2, label %10, label %7

ST_6: stg_94 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str6) nounwind

ST_6: next_mul [1/1] 2.08ns
:1  %next_mul = add i20 %phi_mul, 1000

ST_6: stg_96 [1/1] 0.00ns
:2  br i1 %tmp_10, label %8, label %._crit_edge

ST_6: tmp_14 [1/1] 2.52ns
:0  %tmp_14 = icmp ult i32 %k_cast6, %mB_read

ST_6: stg_98 [1/1] 0.00ns
:1  br i1 %tmp_14, label %9, label %._crit_edge5

ST_6: p_addr1 [1/1] 2.08ns
:0  %p_addr1 = add i20 %k_cast6_cast, %phi_mul1

ST_6: tmp_15 [1/1] 0.00ns
:1  %tmp_15 = zext i20 %p_addr1 to i64

ST_6: arrayA_addr [1/1] 0.00ns
:2  %arrayA_addr = getelementptr [1000000 x i32]* %arrayA, i64 0, i64 %tmp_15

ST_6: arrayA_load [4/4] 2.61ns
:3  %arrayA_load = load i32* %arrayA_addr, align 4

ST_6: p_addr4 [1/1] 2.08ns
:4  %p_addr4 = add i20 %j_cast7_cast, %phi_mul

ST_6: tmp_16 [1/1] 0.00ns
:5  %tmp_16 = zext i20 %p_addr4 to i64

ST_6: arrayB_addr [1/1] 0.00ns
:6  %arrayB_addr = getelementptr [1000000 x i32]* %arrayB, i64 0, i64 %tmp_16

ST_6: arrayB_load [4/4] 2.61ns
:7  %arrayB_load = load i32* %arrayB_addr, align 4

ST_6: empty_6 [1/1] 0.00ns
:0  %empty_6 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str5, i32 %tmp_4) nounwind

ST_6: stg_108 [1/1] 0.00ns
:1  br label %4


 <State 7>: 2.61ns
ST_7: arrayA_load [3/4] 2.61ns
:3  %arrayA_load = load i32* %arrayA_addr, align 4

ST_7: arrayB_load [3/4] 2.61ns
:7  %arrayB_load = load i32* %arrayB_addr, align 4


 <State 8>: 2.61ns
ST_8: arrayA_load [2/4] 2.61ns
:3  %arrayA_load = load i32* %arrayA_addr, align 4

ST_8: arrayB_load [2/4] 2.61ns
:7  %arrayB_load = load i32* %arrayB_addr, align 4


 <State 9>: 8.69ns
ST_9: arrayA_load [1/4] 2.61ns
:3  %arrayA_load = load i32* %arrayA_addr, align 4

ST_9: arrayB_load [1/4] 2.61ns
:7  %arrayB_load = load i32* %arrayB_addr, align 4

ST_9: tmp_17 [6/6] 6.08ns
:8  %tmp_17 = mul nsw i32 %arrayB_load, %arrayA_load


 <State 10>: 6.08ns
ST_10: tmp_17 [5/6] 6.08ns
:8  %tmp_17 = mul nsw i32 %arrayB_load, %arrayA_load


 <State 11>: 6.08ns
ST_11: tmp_17 [4/6] 6.08ns
:8  %tmp_17 = mul nsw i32 %arrayB_load, %arrayA_load


 <State 12>: 6.08ns
ST_12: tmp_17 [3/6] 6.08ns
:8  %tmp_17 = mul nsw i32 %arrayB_load, %arrayA_load

ST_12: arrayC_load_1 [4/4] 2.61ns
:10  %arrayC_load_1 = load i64* %arrayC_addr, align 8


 <State 13>: 6.08ns
ST_13: tmp_17 [2/6] 6.08ns
:8  %tmp_17 = mul nsw i32 %arrayB_load, %arrayA_load

ST_13: arrayC_load_1 [3/4] 2.61ns
:10  %arrayC_load_1 = load i64* %arrayC_addr, align 8


 <State 14>: 6.08ns
ST_14: tmp_17 [1/6] 6.08ns
:8  %tmp_17 = mul nsw i32 %arrayB_load, %arrayA_load

ST_14: arrayC_load_1 [2/4] 2.61ns
:10  %arrayC_load_1 = load i64* %arrayC_addr, align 8


 <State 15>: 8.62ns
ST_15: tmp_18 [1/1] 0.00ns
:9  %tmp_18 = sext i32 %tmp_17 to i64

ST_15: arrayC_load_1 [1/4] 2.61ns
:10  %arrayC_load_1 = load i64* %arrayC_addr, align 8

ST_15: tmp_19 [1/1] 3.40ns
:11  %tmp_19 = add nsw i64 %arrayC_load_1, %tmp_18

ST_15: stg_127 [2/2] 2.61ns
:12  store i64 %tmp_19, i64* %arrayC_addr, align 8


 <State 16>: 2.61ns
ST_16: stg_128 [1/2] 2.61ns
:12  store i64 %tmp_19, i64* %arrayC_addr, align 8

ST_16: stg_129 [1/1] 0.00ns
:13  br label %._crit_edge5

ST_16: stg_130 [1/1] 0.00ns
._crit_edge5:0  br label %._crit_edge

ST_16: stg_131 [1/1] 0.00ns
._crit_edge:0  br label %6


 <State 17>: 2.52ns
ST_17: i_1 [1/1] 0.00ns
.preheader:0  %i_1 = phi i10 [ %i_3, %16 ], [ 0, %2 ]

ST_17: phi_mul2 [1/1] 0.00ns
.preheader:1  %phi_mul2 = phi i20 [ %next_mul2, %16 ], [ 0, %2 ]

ST_17: next_mul2 [1/1] 2.08ns
.preheader:2  %next_mul2 = add i20 %phi_mul2, 1000

ST_17: i_1_cast4 [1/1] 0.00ns
.preheader:3  %i_1_cast4 = zext i10 %i_1 to i32

ST_17: exitcond1 [1/1] 2.07ns
.preheader:4  %exitcond1 = icmp eq i10 %i_1, -24

ST_17: empty_8 [1/1] 0.00ns
.preheader:5  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1000, i64 1000, i64 1000) nounwind

ST_17: i_3 [1/1] 1.84ns
.preheader:6  %i_3 = add i10 %i_1, 1

ST_17: stg_139 [1/1] 0.00ns
.preheader:7  br i1 %exitcond1, label %.loopexit, label %12

ST_17: stg_140 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str7) nounwind

ST_17: tmp_1 [1/1] 0.00ns
:1  %tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str7) nounwind

ST_17: tmp_3 [1/1] 2.52ns
:2  %tmp_3 = icmp ult i32 %i_1_cast4, %mC_read

ST_17: stg_143 [1/1] 1.57ns
:3  br label %13

ST_17: stg_144 [1/1] 0.00ns
.loopexit:0  ret void


 <State 18>: 4.69ns
ST_18: j_1 [1/1] 0.00ns
:0  %j_1 = phi i10 [ 0, %12 ], [ %j_3, %._crit_edge6 ]

ST_18: j_1_cast2 [1/1] 0.00ns
:1  %j_1_cast2 = zext i10 %j_1 to i32

ST_18: j_1_cast2_cast [1/1] 0.00ns
:2  %j_1_cast2_cast = zext i10 %j_1 to i20

ST_18: exitcond [1/1] 2.07ns
:3  %exitcond = icmp eq i10 %j_1, -24

ST_18: empty_9 [1/1] 0.00ns
:4  %empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1000, i64 1000, i64 1000) nounwind

ST_18: j_3 [1/1] 1.84ns
:5  %j_3 = add i10 %j_1, 1

ST_18: stg_151 [1/1] 0.00ns
:6  br i1 %exitcond, label %16, label %14

ST_18: stg_152 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str8) nounwind

ST_18: tmp_11 [1/1] 2.52ns
:1  %tmp_11 = icmp ult i32 %j_1_cast2, %nC_read

ST_18: tmp_12 [1/1] 1.37ns
:2  %tmp_12 = and i1 %tmp_3, %tmp_11

ST_18: stg_155 [1/1] 0.00ns
:3  br i1 %tmp_12, label %15, label %._crit_edge6

ST_18: p_addr6 [1/1] 2.08ns
:0  %p_addr6 = add i20 %j_1_cast2_cast, %phi_mul2

ST_18: tmp_13 [1/1] 0.00ns
:1  %tmp_13 = zext i20 %p_addr6 to i64

ST_18: arrayC_addr_1 [1/1] 0.00ns
:2  %arrayC_addr_1 = getelementptr [1000000 x i64]* %arrayC, i64 0, i64 %tmp_13

ST_18: arrayC_load [4/4] 2.61ns
:3  %arrayC_load = load i64* %arrayC_addr_1, align 8

ST_18: empty_10 [1/1] 0.00ns
:0  %empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str7, i32 %tmp_1) nounwind

ST_18: stg_161 [1/1] 0.00ns
:1  br label %.preheader


 <State 19>: 2.61ns
ST_19: arrayC_load [3/4] 2.61ns
:3  %arrayC_load = load i64* %arrayC_addr_1, align 8


 <State 20>: 2.61ns
ST_20: arrayC_load [2/4] 2.61ns
:3  %arrayC_load = load i64* %arrayC_addr_1, align 8


 <State 21>: 6.98ns
ST_21: arrayC_load [1/4] 2.61ns
:3  %arrayC_load = load i64* %arrayC_addr_1, align 8

ST_21: stg_165 [1/1] 4.38ns
:4  call void @_ssdm_op_Write.ap_fifo.i64P(i64* %C, i64 %arrayC_load) nounwind

ST_21: stg_166 [1/1] 0.00ns
:5  br label %._crit_edge6

ST_21: stg_167 [1/1] 0.00ns
._crit_edge6:0  br label %13



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
