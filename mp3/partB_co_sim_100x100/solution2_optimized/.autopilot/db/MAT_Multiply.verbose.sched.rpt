

================================================================
== Vivado HLS Report for 'MAT_Multiply'
================================================================
* Date:           Fri Oct  2 07:19:11 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        partB
* Solution:       solution2_optimized
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.99|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+------------+-----+------------+---------+
    |      Latency     |     Interval     | Pipeline|
    | min |     max    | min |     max    |   Type  |
    +-----+------------+-----+------------+---------+
    |    1|  4017000011|    2|  4017000012|   none  |
    +-----+------------+-----+------------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+------------+------------+----------+-----------+-----------+---------+----------+
        |                         |         Latency         | Iteration|  Initiation Interval  |   Trip  |          |
        |        Loop Name        |     min    |     max    |  Latency |  achieved |   target  |  Count  | Pipelined|
        +-------------------------+------------+------------+----------+-----------+-----------+---------+----------+
        |- Row_Col                |  4012000000|  4012000000|      4012|          -|          -|  1000000|    no    |
        | + Product               |        4006|        4006|        11|          4|          1|     1000|    yes   |
        |- Row_Assign_Col_Assign  |     1000003|     1000003|         5|          1|          1|  1000000|    yes   |
        +-------------------------+------------+------------+----------+-----------+-----------+---------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 11
  * Pipeline-1: initiation interval (II) = 1, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 24
* Pipeline: 2
  Pipeline-0: II = 4, D = 11, States = { 7 8 9 10 11 12 13 14 15 16 17 }
  Pipeline-1: II = 1, D = 5, States = { 19 20 21 22 23 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (tmp_s)
	24  / (!tmp_s)
2 --> 
	3  / true
3 --> 
	4  / (!exitcond_flatten)
	19  / (exitcond_flatten)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	18  / (exitcond2)
	8  / (!exitcond2)
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	7  / true
18 --> 
	3  / true
19 --> 
	24  / (exitcond_flatten1)
	20  / (!exitcond_flatten1)
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	19  / true
24 --> 
* FSM state operations: 

 <State 1>: 5.26ns
ST_1: stg_25 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i32* %A) nounwind, !map !0

ST_1: stg_26 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32* %B) nounwind, !map !6

ST_1: stg_27 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i64* %C) nounwind, !map !10

ST_1: stg_28 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32 %mA) nounwind, !map !14

ST_1: stg_29 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i32 %nA) nounwind, !map !20

ST_1: stg_30 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i32 %mB) nounwind, !map !24

ST_1: stg_31 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i32 %nB) nounwind, !map !28

ST_1: stg_32 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i32 %mC) nounwind, !map !32

ST_1: stg_33 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i32 %nC) nounwind, !map !36

ST_1: stg_34 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecTopModule([13 x i8]* @str) nounwind

ST_1: nC_read [1/1] 0.00ns
:10  %nC_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %nC) nounwind

ST_1: mC_read [1/1] 0.00ns
:11  %mC_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %mC) nounwind

ST_1: nB_read [1/1] 0.00ns
:12  %nB_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %nB) nounwind

ST_1: mB_read [1/1] 0.00ns
:13  %mB_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %mB) nounwind

ST_1: nA_read [1/1] 0.00ns
:14  %nA_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %nA) nounwind

ST_1: mA_read [1/1] 0.00ns
:15  %mA_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %mA) nounwind

ST_1: arrayA [1/1] 0.00ns
:16  %arrayA = alloca [1000 x i32000], align 8

ST_1: arrayB [1/1] 0.00ns
:17  %arrayB = alloca [1000 x i32000], align 8

ST_1: arrayC [1/1] 0.00ns
:18  %arrayC = alloca [1000000 x i64], align 8

ST_1: stg_44 [1/1] 0.00ns
:19  call void (...)* @_ssdm_op_SpecInterface(i32* %A, [8 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 100, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind

ST_1: stg_45 [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecInterface(i32* %B, [8 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 100, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind

ST_1: stg_46 [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecInterface(i64* %C, [8 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 100, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind

ST_1: tmp [1/1] 2.52ns
:22  %tmp = icmp eq i32 %nA_read, %mB_read

ST_1: tmp_7 [1/1] 2.52ns
:23  %tmp_7 = icmp eq i32 %mA_read, %mC_read

ST_1: tmp_9 [1/1] 2.52ns
:24  %tmp_9 = icmp eq i32 %nB_read, %nC_read

ST_1: tmp1 [1/1] 1.37ns
:25  %tmp1 = and i1 %tmp_7, %tmp_9

ST_1: tmp_s [1/1] 1.37ns
:26  %tmp_s = and i1 %tmp1, %tmp

ST_1: stg_52 [1/1] 0.00ns
:27  br i1 %tmp_s, label %1, label %.loopexit

ST_1: stg_53 [2/2] 0.00ns
:0  call fastcc void @MAT_Multiply_load_mat(i32* %A, [1000 x i32000]* %arrayA, i32 %mC_read, i32 %mB_read) nounwind

ST_1: stg_54 [2/2] 0.00ns
:1  call fastcc void @MAT_Multiply_load_mat.1(i32* %B, [1000 x i32000]* %arrayB, i32 %mB_read, i32 %nC_read) nounwind


 <State 2>: 1.57ns
ST_2: stg_55 [1/2] 0.00ns
:0  call fastcc void @MAT_Multiply_load_mat(i32* %A, [1000 x i32000]* %arrayA, i32 %mC_read, i32 %mB_read) nounwind

ST_2: stg_56 [1/2] 0.00ns
:1  call fastcc void @MAT_Multiply_load_mat.1(i32* %B, [1000 x i32000]* %arrayB, i32 %mB_read, i32 %nC_read) nounwind

ST_2: stg_57 [1/1] 1.57ns
:2  br label %2


 <State 3>: 6.05ns
ST_3: indvar_flatten [1/1] 0.00ns
:0  %indvar_flatten = phi i20 [ 0, %1 ], [ %indvar_flatten_next, %7 ]

ST_3: i [1/1] 0.00ns
:1  %i = phi i10 [ 0, %1 ], [ %i_mid2, %7 ]

ST_3: j [1/1] 0.00ns
:2  %j = phi i10 [ 0, %1 ], [ %j_2, %7 ]

ST_3: exitcond_flatten [1/1] 2.34ns
:3  %exitcond_flatten = icmp eq i20 %indvar_flatten, -48576

ST_3: indvar_flatten_next [1/1] 2.08ns
:4  %indvar_flatten_next = add i20 %indvar_flatten, 1

ST_3: stg_63 [1/1] 1.57ns
:5  br i1 %exitcond_flatten, label %.preheader.preheader, label %.reset

ST_3: exitcond [1/1] 2.07ns
.reset:2  %exitcond = icmp eq i10 %j, -24

ST_3: j_mid2 [1/1] 1.37ns
.reset:3  %j_mid2 = select i1 %exitcond, i10 0, i10 %j

ST_3: i_s [1/1] 1.84ns
.reset:4  %i_s = add i10 %i, 1

ST_3: i_mid2 [1/1] 1.37ns
.reset:5  %i_mid2 = select i1 %exitcond, i10 %i_s, i10 %i

ST_3: tmp_1 [1/1] 0.00ns
.reset:8  %tmp_1 = zext i10 %i_mid2 to i64

ST_3: arrayA_addr [1/1] 0.00ns
.reset:10  %arrayA_addr = getelementptr [1000 x i32000]* %arrayA, i64 0, i64 %tmp_1

ST_3: arrayA_load [4/4] 2.61ns
.reset:11  %arrayA_load = load i32000* %arrayA_addr, align 8

ST_3: tmp_6 [1/1] 0.00ns
.reset:16  %tmp_6 = zext i10 %j_mid2 to i64

ST_3: arrayB_addr [1/1] 0.00ns
.reset:24  %arrayB_addr = getelementptr [1000 x i32000]* %arrayB, i64 0, i64 %tmp_6

ST_3: arrayB_load [4/4] 2.61ns
.reset:25  %arrayB_load = load i32000* %arrayB_addr, align 8


 <State 4>: 3.89ns
ST_4: i_cast8 [1/1] 0.00ns
.reset:6  %i_cast8 = zext i10 %i_mid2 to i32

ST_4: tmp_2 [1/1] 2.52ns
.reset:9  %tmp_2 = icmp ult i32 %i_cast8, %mC_read

ST_4: arrayA_load [3/4] 2.61ns
.reset:11  %arrayA_load = load i32000* %arrayA_addr, align 8

ST_4: j_cast7 [1/1] 0.00ns
.reset:12  %j_cast7 = zext i10 %j_mid2 to i32

ST_4: tmp_5 [1/1] 2.52ns
.reset:22  %tmp_5 = icmp ult i32 %j_cast7, %nC_read

ST_4: tmp_10 [1/1] 1.37ns
.reset:23  %tmp_10 = and i1 %tmp_2, %tmp_5

ST_4: arrayB_load [3/4] 2.61ns
.reset:25  %arrayB_load = load i32000* %arrayB_addr, align 8


 <State 5>: 8.99ns
ST_5: i_cast8_cast [1/1] 0.00ns
.reset:7  %i_cast8_cast = zext i10 %i_mid2 to i20

ST_5: arrayA_load [2/4] 2.61ns
.reset:11  %arrayA_load = load i32000* %arrayA_addr, align 8

ST_5: j_cast7_cast [1/1] 0.00ns
.reset:13  %j_cast7_cast = zext i10 %j_mid2 to i20

ST_5: p_addr1 [1/1] 3.36ns
.reset:17  %p_addr1 = mul i20 %i_cast8_cast, 1000

ST_5: p_addr2 [1/1] 3.02ns
.reset:18  %p_addr2 = add i20 %j_cast7_cast, %p_addr1

ST_5: tmp_8 [1/1] 0.00ns
.reset:19  %tmp_8 = zext i20 %p_addr2 to i64

ST_5: arrayC_addr [1/1] 0.00ns
.reset:20  %arrayC_addr = getelementptr [1000000 x i64]* %arrayC, i64 0, i64 %tmp_8

ST_5: stg_88 [2/2] 2.61ns
.reset:21  store i64 0, i64* %arrayC_addr, align 8

ST_5: arrayB_load [2/4] 2.61ns
.reset:25  %arrayB_load = load i32000* %arrayB_addr, align 8


 <State 6>: 2.61ns
ST_6: stg_90 [1/1] 0.00ns
.reset:0  call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @str1)

ST_6: empty_11 [1/1] 0.00ns
.reset:1  %empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1000000, i64 1000000, i64 1000000) nounwind

ST_6: arrayA_load [1/4] 2.61ns
.reset:11  %arrayA_load = load i32000* %arrayA_addr, align 8

ST_6: stg_93 [1/1] 0.00ns
.reset:14  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str6) nounwind

ST_6: tmp_4 [1/1] 0.00ns
.reset:15  %tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str6) nounwind

ST_6: stg_95 [1/2] 2.61ns
.reset:21  store i64 0, i64* %arrayC_addr, align 8

ST_6: arrayB_load [1/4] 2.61ns
.reset:25  %arrayB_load = load i32000* %arrayB_addr, align 8

ST_6: stg_97 [1/1] 1.57ns
.reset:26  br label %3


 <State 7>: 7.27ns
ST_7: k [1/1] 0.00ns
:0  %k = phi i10 [ 0, %.reset ], [ %k_1, %._crit_edge ]

ST_7: exitcond2 [1/1] 2.07ns
:1  %exitcond2 = icmp eq i10 %k, -24

ST_7: k_1 [1/1] 1.84ns
:2  %k_1 = add i10 %k, 1

ST_7: stg_101 [1/1] 0.00ns
:3  br i1 %exitcond2, label %7, label %4

ST_7: k_cast6 [1/1] 0.00ns
:0  %k_cast6 = zext i10 %k to i32

ST_7: stg_103 [1/1] 0.00ns
:5  br i1 %tmp_10, label %5, label %._crit_edge

ST_7: tmp_16 [1/1] 2.52ns
:0  %tmp_16 = icmp ult i32 %k_cast6, %mB_read

ST_7: stg_105 [1/1] 0.00ns
:1  br i1 %tmp_16, label %6, label %._crit_edge5

ST_7: tmp_17 [1/1] 0.00ns
:0  %tmp_17 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %k, i5 0)

ST_7: tmp_18 [1/1] 0.00ns
:1  %tmp_18 = or i15 %tmp_17, 31

ST_7: tmp_22 [1/1] 2.25ns
:2  %tmp_22 = icmp ugt i15 %tmp_17, %tmp_18

ST_7: tmp_23 [1/1] 0.00ns
:3  %tmp_23 = call i32000 @llvm.part.select.i32000(i32000 %arrayA_load, i32 31999, i32 0)

ST_7: tmp_24 [1/1] 1.96ns
:4  %tmp_24 = sub i15 %tmp_17, %tmp_18

ST_7: tmp_25 [1/1] 1.96ns
:5  %tmp_25 = sub i15 -769, %tmp_17

ST_7: tmp_26 [1/1] 1.96ns
:6  %tmp_26 = sub i15 %tmp_18, %tmp_17

ST_7: tmp_27 [1/1] 1.37ns
:7  %tmp_27 = select i1 %tmp_22, i15 %tmp_24, i15 %tmp_26

ST_7: tmp_28 [1/1] 1.37ns
:8  %tmp_28 = select i1 %tmp_22, i32000 %tmp_23, i32000 %arrayA_load

ST_7: tmp_29 [1/1] 1.37ns
:9  %tmp_29 = select i1 %tmp_22, i15 %tmp_25, i15 %tmp_17

ST_7: tmp_30 [1/1] 1.96ns
:10  %tmp_30 = sub i15 -769, %tmp_27

ST_7: tmp_31 [1/1] 0.00ns
:11  %tmp_31 = zext i15 %tmp_29 to i32000

ST_7: tmp_32 [1/1] 0.00ns
:12  %tmp_32 = zext i15 %tmp_30 to i32000

ST_7: tmp_33 [2/2] 3.65ns
:13  %tmp_33 = lshr i32000 %tmp_28, %tmp_31

ST_7: tmp_34 [1/1] 1.18ns
:14  %tmp_34 = lshr i32000 -1, %tmp_32

ST_7: stg_121 [1/1] 0.00ns
._crit_edge5:0  br label %._crit_edge


 <State 8>: 7.27ns
ST_8: tmp_33 [1/2] 3.65ns
:13  %tmp_33 = lshr i32000 %tmp_28, %tmp_31

ST_8: tmp_35 [1/1] 1.37ns
:15  %tmp_35 = and i32000 %tmp_33, %tmp_34

ST_8: tmp_36 [1/1] 0.00ns
:16  %tmp_36 = trunc i32000 %tmp_35 to i32

ST_8: tmp_37 [1/1] 2.25ns
:17  %tmp_37 = icmp ugt i15 %tmp_17, %tmp_18

ST_8: tmp_38 [1/1] 0.00ns
:18  %tmp_38 = call i32000 @llvm.part.select.i32000(i32000 %arrayB_load, i32 31999, i32 0)

ST_8: tmp_39 [1/1] 1.96ns
:19  %tmp_39 = sub i15 %tmp_17, %tmp_18

ST_8: tmp_40 [1/1] 1.96ns
:20  %tmp_40 = sub i15 -769, %tmp_17

ST_8: tmp_41 [1/1] 1.96ns
:21  %tmp_41 = sub i15 %tmp_18, %tmp_17

ST_8: tmp_42 [1/1] 1.37ns
:22  %tmp_42 = select i1 %tmp_37, i15 %tmp_39, i15 %tmp_41

ST_8: tmp_43 [1/1] 1.37ns
:23  %tmp_43 = select i1 %tmp_37, i32000 %tmp_38, i32000 %arrayB_load

ST_8: tmp_44 [1/1] 1.37ns
:24  %tmp_44 = select i1 %tmp_37, i15 %tmp_40, i15 %tmp_17

ST_8: tmp_45 [1/1] 1.96ns
:25  %tmp_45 = sub i15 -769, %tmp_42

ST_8: tmp_46 [1/1] 0.00ns
:26  %tmp_46 = zext i15 %tmp_44 to i32000

ST_8: tmp_47 [1/1] 0.00ns
:27  %tmp_47 = zext i15 %tmp_45 to i32000

ST_8: tmp_48 [2/2] 3.65ns
:28  %tmp_48 = lshr i32000 %tmp_43, %tmp_46

ST_8: tmp_49 [1/1] 1.18ns
:29  %tmp_49 = lshr i32000 -1, %tmp_47


 <State 9>: 5.02ns
ST_9: tmp_48 [1/2] 3.65ns
:28  %tmp_48 = lshr i32000 %tmp_43, %tmp_46

ST_9: tmp_50 [1/1] 1.37ns
:30  %tmp_50 = and i32000 %tmp_48, %tmp_49

ST_9: tmp_51 [1/1] 0.00ns
:31  %tmp_51 = trunc i32000 %tmp_50 to i32


 <State 10>: 6.08ns
ST_10: tmp_19 [6/6] 6.08ns
:32  %tmp_19 = mul nsw i32 %tmp_51, %tmp_36


 <State 11>: 6.08ns
ST_11: tmp_19 [5/6] 6.08ns
:32  %tmp_19 = mul nsw i32 %tmp_51, %tmp_36


 <State 12>: 6.08ns
ST_12: tmp_19 [4/6] 6.08ns
:32  %tmp_19 = mul nsw i32 %tmp_51, %tmp_36


 <State 13>: 6.08ns
ST_13: tmp_19 [3/6] 6.08ns
:32  %tmp_19 = mul nsw i32 %tmp_51, %tmp_36

ST_13: arrayC_load_1 [4/4] 2.61ns
:34  %arrayC_load_1 = load i64* %arrayC_addr, align 8


 <State 14>: 6.08ns
ST_14: tmp_19 [2/6] 6.08ns
:32  %tmp_19 = mul nsw i32 %tmp_51, %tmp_36

ST_14: arrayC_load_1 [3/4] 2.61ns
:34  %arrayC_load_1 = load i64* %arrayC_addr, align 8


 <State 15>: 6.08ns
ST_15: tmp_19 [1/6] 6.08ns
:32  %tmp_19 = mul nsw i32 %tmp_51, %tmp_36

ST_15: arrayC_load_1 [2/4] 2.61ns
:34  %arrayC_load_1 = load i64* %arrayC_addr, align 8


 <State 16>: 8.62ns
ST_16: tmp_20 [1/1] 0.00ns
:33  %tmp_20 = sext i32 %tmp_19 to i64

ST_16: arrayC_load_1 [1/4] 2.61ns
:34  %arrayC_load_1 = load i64* %arrayC_addr, align 8

ST_16: tmp_21 [1/1] 3.40ns
:35  %tmp_21 = add nsw i64 %arrayC_load_1, %tmp_20

ST_16: stg_153 [2/2] 2.61ns
:36  store i64 %tmp_21, i64* %arrayC_addr, align 8


 <State 17>: 2.61ns
ST_17: empty [1/1] 0.00ns
:1  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1000, i64 1000, i64 1000) nounwind

ST_17: stg_155 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str7) nounwind

ST_17: tmp_15 [1/1] 0.00ns
:3  %tmp_15 = call i32 (...)* @_ssdm_op_SpecRegionBegin([8 x i8]* @p_str7) nounwind

ST_17: stg_157 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind

ST_17: stg_158 [1/2] 2.61ns
:36  store i64 %tmp_21, i64* %arrayC_addr, align 8

ST_17: stg_159 [1/1] 0.00ns
:37  br label %._crit_edge5

ST_17: empty_9 [1/1] 0.00ns
._crit_edge:0  %empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([8 x i8]* @p_str7, i32 %tmp_15) nounwind

ST_17: stg_161 [1/1] 0.00ns
._crit_edge:1  br label %3


 <State 18>: 1.84ns
ST_18: empty_10 [1/1] 0.00ns
:0  %empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str6, i32 %tmp_4) nounwind

ST_18: j_2 [1/1] 1.84ns
:1  %j_2 = add i10 %j_mid2, 1

ST_18: stg_164 [1/1] 0.00ns
:2  br label %2


 <State 19>: 7.33ns
ST_19: indvar_flatten1 [1/1] 0.00ns
.preheader.preheader:0  %indvar_flatten1 = phi i20 [ %indvar_flatten_next1, %._crit_edge6 ], [ 0, %2 ]

ST_19: i_1 [1/1] 0.00ns
.preheader.preheader:1  %i_1 = phi i10 [ %i_1_mid2, %._crit_edge6 ], [ 0, %2 ]

ST_19: j_1 [1/1] 0.00ns
.preheader.preheader:2  %j_1 = phi i10 [ %j_3, %._crit_edge6 ], [ 0, %2 ]

ST_19: exitcond_flatten1 [1/1] 2.34ns
.preheader.preheader:3  %exitcond_flatten1 = icmp eq i20 %indvar_flatten1, -48576

ST_19: indvar_flatten_next1 [1/1] 2.08ns
.preheader.preheader:4  %indvar_flatten_next1 = add i20 %indvar_flatten1, 1

ST_19: stg_170 [1/1] 0.00ns
.preheader.preheader:5  br i1 %exitcond_flatten1, label %.loopexit, label %.preheader

ST_19: exitcond1 [1/1] 2.07ns
.preheader:2  %exitcond1 = icmp eq i10 %j_1, -24

ST_19: j_1_mid2 [1/1] 1.37ns
.preheader:3  %j_1_mid2 = select i1 %exitcond1, i10 0, i10 %j_1

ST_19: i_2 [1/1] 1.84ns
.preheader:4  %i_2 = add i10 %i_1, 1

ST_19: i_1_mid2 [1/1] 1.37ns
.preheader:5  %i_1_mid2 = select i1 %exitcond1, i10 %i_2, i10 %i_1

ST_19: i_1_cast4 [1/1] 0.00ns
.preheader:6  %i_1_cast4 = zext i10 %i_1_mid2 to i32

ST_19: tmp_3 [1/1] 2.52ns
.preheader:8  %tmp_3 = icmp ult i32 %i_1_cast4, %mC_read

ST_19: j_1_cast2 [1/1] 0.00ns
.preheader:9  %j_1_cast2 = zext i10 %j_1_mid2 to i32

ST_19: tmp_12 [1/1] 2.52ns
.preheader:14  %tmp_12 = icmp ult i32 %j_1_cast2, %nC_read

ST_19: tmp_13 [1/1] 1.37ns
.preheader:15  %tmp_13 = and i1 %tmp_3, %tmp_12

ST_19: stg_180 [1/1] 0.00ns
.preheader:16  br i1 %tmp_13, label %8, label %._crit_edge6

ST_19: j_3 [1/1] 1.84ns
._crit_edge6:1  %j_3 = add i10 %j_1_mid2, 1


 <State 20>: 8.99ns
ST_20: i_1_cast4_cast [1/1] 0.00ns
.preheader:7  %i_1_cast4_cast = zext i10 %i_1_mid2 to i20

ST_20: j_1_cast2_cast [1/1] 0.00ns
.preheader:10  %j_1_cast2_cast = zext i10 %j_1_mid2 to i20

ST_20: p_addr [1/1] 3.36ns
:0  %p_addr = mul i20 %i_1_cast4_cast, 1000

ST_20: p_addr3 [1/1] 3.02ns
:1  %p_addr3 = add i20 %j_1_cast2_cast, %p_addr

ST_20: tmp_14 [1/1] 0.00ns
:2  %tmp_14 = zext i20 %p_addr3 to i64

ST_20: arrayC_addr_1 [1/1] 0.00ns
:3  %arrayC_addr_1 = getelementptr [1000000 x i64]* %arrayC, i64 0, i64 %tmp_14

ST_20: arrayC_load [4/4] 2.61ns
:4  %arrayC_load = load i64* %arrayC_addr_1, align 8


 <State 21>: 2.61ns
ST_21: arrayC_load [3/4] 2.61ns
:4  %arrayC_load = load i64* %arrayC_addr_1, align 8


 <State 22>: 2.61ns
ST_22: arrayC_load [2/4] 2.61ns
:4  %arrayC_load = load i64* %arrayC_addr_1, align 8


 <State 23>: 6.98ns
ST_23: stg_191 [1/1] 0.00ns
.preheader:0  call void (...)* @_ssdm_op_SpecLoopName([22 x i8]* @str2)

ST_23: empty_13 [1/1] 0.00ns
.preheader:1  %empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1000000, i64 1000000, i64 1000000) nounwind

ST_23: stg_193 [1/1] 0.00ns
.preheader:11  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str9) nounwind

ST_23: tmp_11 [1/1] 0.00ns
.preheader:12  %tmp_11 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str9) nounwind

ST_23: stg_195 [1/1] 0.00ns
.preheader:13  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind

ST_23: arrayC_load [1/4] 2.61ns
:4  %arrayC_load = load i64* %arrayC_addr_1, align 8

ST_23: stg_197 [1/1] 4.38ns
:5  call void @_ssdm_op_Write.ap_fifo.i64P(i64* %C, i64 %arrayC_load) nounwind

ST_23: stg_198 [1/1] 0.00ns
:6  br label %._crit_edge6

ST_23: empty_12 [1/1] 0.00ns
._crit_edge6:0  %empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str9, i32 %tmp_11) nounwind

ST_23: stg_200 [1/1] 0.00ns
._crit_edge6:2  br label %.preheader.preheader


 <State 24>: 0.00ns
ST_24: stg_201 [1/1] 0.00ns
.loopexit:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
