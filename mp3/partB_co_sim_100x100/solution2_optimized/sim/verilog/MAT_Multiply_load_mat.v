// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MAT_Multiply_load_mat (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        X_dout,
        X_empty_n,
        X_read,
        arrayX_address0,
        arrayX_ce0,
        arrayX_we0,
        arrayX_d0,
        arrayX_q0,
        m,
        n
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg1_fsm_2 = 4'b100;
parameter    ap_ST_st7_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv14_0 = 14'b00000000000000;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv14_2710 = 14'b10011100010000;
parameter    ap_const_lv14_1 = 14'b1;
parameter    ap_const_lv7_64 = 7'b1100100;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv8_64 = 8'b1100100;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv13_1F = 13'b11111;
parameter    ap_const_lv12_C7F = 12'b110001111111;
parameter    ap_const_lv32_C7F = 32'b110001111111;
parameter    ap_const_lv3200_lc_1 = 3200'b
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] X_dout;
input   X_empty_n;
output   X_read;
output  [6:0] arrayX_address0;
output   arrayX_ce0;
output   arrayX_we0;
output  [3199:0] arrayX_d0;
input  [3199:0] arrayX_q0;
input  [31:0] m;
input  [31:0] n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg X_read;
reg arrayX_ce0;
reg arrayX_we0;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm = 4'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_22;
reg   [13:0] indvar_flatten_reg_100;
reg   [6:0] i_reg_111;
reg   [6:0] j_reg_122;
wire   [6:0] arrayX_addr_gep_fu_88_p3;
reg   [6:0] arrayX_addr_reg_379;
wire   [0:0] exitcond_flatten_fu_134_p2;
reg   [0:0] exitcond_flatten_reg_384;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_63;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg   [0:0] or_cond_reg_405;
reg    ap_sig_bdd_73;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
wire   [13:0] indvar_flatten_next_fu_140_p2;
reg   [13:0] indvar_flatten_next_reg_388;
wire   [6:0] j_mid2_fu_152_p3;
reg   [6:0] j_mid2_reg_393;
wire   [6:0] i_mid2_fu_166_p3;
reg   [6:0] i_mid2_reg_399;
wire   [0:0] or_cond_fu_192_p2;
reg   [0:0] ap_reg_ppstg_or_cond_reg_405_pp0_it1;
wire   [7:0] tmp_4_fu_210_p2;
reg   [7:0] tmp_4_reg_409;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_2;
reg    ap_sig_bdd_104;
wire   [6:0] tmp_224_fu_216_p1;
reg   [6:0] tmp_224_reg_414;
wire   [6:0] j_1_fu_220_p2;
reg   [6:0] j_1_reg_419;
wire   [11:0] tmp_230_fu_265_p3;
reg   [11:0] tmp_230_reg_424;
wire   [3199:0] tmp_239_fu_313_p3;
reg   [3199:0] tmp_239_reg_429;
wire   [3199:0] tmp_240_fu_321_p2;
reg   [3199:0] tmp_240_reg_434;
wire   [3199:0] p_demorgan_fu_342_p2;
reg   [3199:0] p_demorgan_reg_439;
reg   [13:0] indvar_flatten_phi_fu_104_p4;
reg   [6:0] i_phi_fu_115_p4;
reg   [6:0] j_phi_fu_126_p4;
wire   [0:0] exitcond9_fu_146_p2;
wire   [6:0] i_s_fu_160_p2;
wire   [31:0] i_cast3_fu_174_p1;
wire   [31:0] j_cast1_fu_183_p1;
wire   [0:0] tmp_fu_178_p2;
wire   [0:0] tmp_3_fu_187_p2;
wire   [6:0] tmp_1_fu_201_p0;
wire   [7:0] tmp_1_fu_201_p2;
wire   [7:0] j_cast2_fu_207_p1;
wire   [12:0] tmp_221_fu_225_p3;
wire   [12:0] tmp_222_fu_232_p2;
wire   [11:0] tmp_226_fu_244_p3;
wire   [0:0] tmp_225_fu_238_p2;
wire   [11:0] tmp_227_fu_251_p1;
wire   [11:0] tmp_229_fu_259_p2;
wire   [11:0] tmp_232_fu_281_p3;
wire   [11:0] tmp_231_fu_273_p3;
wire   [3199:0] tmp_228_fu_255_p1;
wire   [3199:0] tmp_234_fu_289_p1;
wire   [3199:0] tmp_237_fu_297_p2;
reg   [3199:0] tmp_238_fu_303_p4;
wire   [3199:0] tmp_235_fu_293_p1;
wire   [11:0] tmp_233_fu_327_p2;
wire   [3199:0] tmp_236_fu_332_p1;
wire   [3199:0] tmp_241_fu_336_p2;
wire   [3199:0] tmp_242_fu_347_p2;
wire   [3199:0] tmp_243_fu_352_p2;
wire   [3199:0] tmp_244_fu_358_p2;
reg    ap_sig_cseq_ST_st7_fsm_3;
reg    ap_sig_bdd_317;
reg   [3:0] ap_NS_fsm;
wire   [7:0] tmp_1_fu_201_p00;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_73 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(exitcond_flatten_fu_134_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (exitcond_flatten_reg_384 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(exitcond_flatten_reg_384 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_73 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (exitcond_flatten_reg_384 == ap_const_lv1_0))) begin
        i_reg_111 <= i_mid2_reg_399;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_111 <= ap_const_lv7_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_73 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (exitcond_flatten_reg_384 == ap_const_lv1_0))) begin
        indvar_flatten_reg_100 <= indvar_flatten_next_reg_388;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        indvar_flatten_reg_100 <= ap_const_lv14_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_73 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (exitcond_flatten_reg_384 == ap_const_lv1_0))) begin
        j_reg_122 <= j_1_reg_419;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        j_reg_122 <= ap_const_lv7_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_73 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_or_cond_reg_405_pp0_it1 <= or_cond_reg_405;
        exitcond_flatten_reg_384 <= exitcond_flatten_fu_134_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_73 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (exitcond_flatten_fu_134_p2 == ap_const_lv1_0))) begin
        i_mid2_reg_399 <= i_mid2_fu_166_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_73 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        indvar_flatten_next_reg_388 <= indvar_flatten_next_fu_140_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (exitcond_flatten_reg_384 == ap_const_lv1_0))) begin
        j_1_reg_419 <= j_1_fu_220_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_73 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (exitcond_flatten_fu_134_p2 == ap_const_lv1_0))) begin
        j_mid2_reg_393 <= j_mid2_fu_152_p3;
        or_cond_reg_405 <= or_cond_fu_192_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(ap_const_lv1_0 == ap_reg_ppstg_or_cond_reg_405_pp0_it1))) begin
        p_demorgan_reg_439 <= p_demorgan_fu_342_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(or_cond_reg_405 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (exitcond_flatten_reg_384 == ap_const_lv1_0))) begin
        tmp_224_reg_414 <= tmp_224_fu_216_p1;
        tmp_4_reg_409 <= tmp_4_fu_210_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(or_cond_reg_405 == ap_const_lv1_0) & ~(ap_sig_bdd_73 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        tmp_230_reg_424 <= tmp_230_fu_265_p3;
        tmp_239_reg_429 <= tmp_239_fu_313_p3;
        tmp_240_reg_434 <= tmp_240_fu_321_p2;
    end
end

/// X_read assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or or_cond_reg_405 or ap_sig_bdd_73 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(or_cond_reg_405 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_73 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        X_read = ap_const_logic_1;
    end else begin
        X_read = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st7_fsm_3)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_3))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_3)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. ///
always @ (ap_sig_bdd_63)
begin
    if (ap_sig_bdd_63) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg1_fsm_2 assign process. ///
always @ (ap_sig_bdd_104)
begin
    if (ap_sig_bdd_104) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_22)
begin
    if (ap_sig_bdd_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_3 assign process. ///
always @ (ap_sig_bdd_317)
begin
    if (ap_sig_bdd_317) begin
        ap_sig_cseq_ST_st7_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_3 = ap_const_logic_0;
    end
end

/// arrayX_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_73 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_pp0_stg1_fsm_2)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_73 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        arrayX_ce0 = ap_const_logic_1;
    end else begin
        arrayX_ce0 = ap_const_logic_0;
    end
end

/// arrayX_we0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_73 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppstg_or_cond_reg_405_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_73 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == ap_reg_ppstg_or_cond_reg_405_pp0_it1))) begin
        arrayX_we0 = ap_const_logic_1;
    end else begin
        arrayX_we0 = ap_const_logic_0;
    end
end

/// i_phi_fu_115_p4 assign process. ///
always @ (i_reg_111 or exitcond_flatten_reg_384 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or i_mid2_reg_399)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_384 == ap_const_lv1_0))) begin
        i_phi_fu_115_p4 = i_mid2_reg_399;
    end else begin
        i_phi_fu_115_p4 = i_reg_111;
    end
end

/// indvar_flatten_phi_fu_104_p4 assign process. ///
always @ (indvar_flatten_reg_100 or exitcond_flatten_reg_384 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or indvar_flatten_next_reg_388)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_384 == ap_const_lv1_0))) begin
        indvar_flatten_phi_fu_104_p4 = indvar_flatten_next_reg_388;
    end else begin
        indvar_flatten_phi_fu_104_p4 = indvar_flatten_reg_100;
    end
end

/// j_phi_fu_126_p4 assign process. ///
always @ (j_reg_122 or exitcond_flatten_reg_384 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or j_1_reg_419)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_384 == ap_const_lv1_0))) begin
        j_phi_fu_126_p4 = j_1_reg_419;
    end else begin
        j_phi_fu_126_p4 = j_reg_122;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond_flatten_fu_134_p2 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_73 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if ((~(ap_sig_bdd_73 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_73 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_73 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(exitcond_flatten_fu_134_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_73 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_73 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(exitcond_flatten_fu_134_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st7_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end
        end
        ap_ST_pp0_stg1_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
        end
        ap_ST_st7_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_104 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_104 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_22 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_22 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_317 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_317 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_63 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_63 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_73 assign process. ///
always @ (X_empty_n or or_cond_reg_405)
begin
    ap_sig_bdd_73 = ((X_empty_n == ap_const_logic_0) & ~(or_cond_reg_405 == ap_const_lv1_0));
end
assign arrayX_addr_gep_fu_88_p3 = ap_const_lv64_0;
assign arrayX_address0 = arrayX_addr_reg_379;
assign arrayX_d0 = (tmp_243_fu_352_p2 | tmp_244_fu_358_p2);
assign exitcond9_fu_146_p2 = (j_phi_fu_126_p4 == ap_const_lv7_64? 1'b1: 1'b0);
assign exitcond_flatten_fu_134_p2 = (indvar_flatten_phi_fu_104_p4 == ap_const_lv14_2710? 1'b1: 1'b0);
assign i_cast3_fu_174_p1 = i_mid2_fu_166_p3;
assign i_mid2_fu_166_p3 = ((exitcond9_fu_146_p2[0:0]===1'b1)? i_s_fu_160_p2: i_phi_fu_115_p4);
assign i_s_fu_160_p2 = (i_phi_fu_115_p4 + ap_const_lv7_1);
assign indvar_flatten_next_fu_140_p2 = (indvar_flatten_phi_fu_104_p4 + ap_const_lv14_1);
assign j_1_fu_220_p2 = (j_mid2_reg_393 + ap_const_lv7_1);
assign j_cast1_fu_183_p1 = j_mid2_fu_152_p3;
assign j_cast2_fu_207_p1 = j_mid2_reg_393;
assign j_mid2_fu_152_p3 = ((exitcond9_fu_146_p2[0:0]===1'b1)? ap_const_lv7_0: j_phi_fu_126_p4);
assign or_cond_fu_192_p2 = (tmp_fu_178_p2 & tmp_3_fu_187_p2);
assign p_demorgan_fu_342_p2 = (tmp_240_reg_434 & tmp_241_fu_336_p2);
assign tmp_1_fu_201_p0 = tmp_1_fu_201_p00;
assign tmp_1_fu_201_p00 = i_mid2_reg_399;
assign tmp_1_fu_201_p2 = (tmp_1_fu_201_p0 * $signed('h64));
assign tmp_221_fu_225_p3 = {{tmp_4_reg_409}, {ap_const_lv5_0}};
assign tmp_222_fu_232_p2 = (tmp_221_fu_225_p3 | ap_const_lv13_1F);
assign tmp_224_fu_216_p1 = tmp_4_fu_210_p2[6:0];
assign tmp_225_fu_238_p2 = (tmp_221_fu_225_p3 > tmp_222_fu_232_p2? 1'b1: 1'b0);
assign tmp_226_fu_244_p3 = {{tmp_224_reg_414}, {ap_const_lv5_0}};
assign tmp_227_fu_251_p1 = tmp_222_fu_232_p2[11:0];
assign tmp_228_fu_255_p1 = X_dout;
assign tmp_229_fu_259_p2 = ($signed(ap_const_lv12_C7F) - $signed(tmp_226_fu_244_p3));
assign tmp_230_fu_265_p3 = ((tmp_225_fu_238_p2[0:0]===1'b1)? tmp_226_fu_244_p3: tmp_227_fu_251_p1);
assign tmp_231_fu_273_p3 = ((tmp_225_fu_238_p2[0:0]===1'b1)? tmp_227_fu_251_p1: tmp_226_fu_244_p3);
assign tmp_232_fu_281_p3 = ((tmp_225_fu_238_p2[0:0]===1'b1)? tmp_229_fu_259_p2: tmp_226_fu_244_p3);
assign tmp_233_fu_327_p2 = ($signed(ap_const_lv12_C7F) - $signed(tmp_230_reg_424));
assign tmp_234_fu_289_p1 = tmp_232_fu_281_p3;
assign tmp_235_fu_293_p1 = tmp_231_fu_273_p3;
assign tmp_236_fu_332_p1 = tmp_233_fu_327_p2;
assign tmp_237_fu_297_p2 = tmp_228_fu_255_p1 << tmp_234_fu_289_p1;

integer ap_tvar_int_0;

always @ (tmp_237_fu_297_p2) begin
    for (ap_tvar_int_0 = 3200 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > ap_const_lv32_C7F - ap_const_lv32_0) begin
            tmp_238_fu_303_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_238_fu_303_p4[ap_tvar_int_0] = tmp_237_fu_297_p2[ap_const_lv32_C7F - ap_tvar_int_0];
        end
    end
end


assign tmp_239_fu_313_p3 = ((tmp_225_fu_238_p2[0:0]===1'b1)? tmp_238_fu_303_p4: tmp_237_fu_297_p2);
assign tmp_240_fu_321_p2 = ap_const_lv3200_lc_1 << tmp_235_fu_293_p1;
assign tmp_241_fu_336_p2 = ap_const_lv3200_lc_1 >> tmp_236_fu_332_p1;
assign tmp_242_fu_347_p2 = (p_demorgan_reg_439 ^ ap_const_lv3200_lc_1);
assign tmp_243_fu_352_p2 = (arrayX_q0 & tmp_242_fu_347_p2);
assign tmp_244_fu_358_p2 = (tmp_239_reg_429 & p_demorgan_reg_439);
assign tmp_3_fu_187_p2 = (j_cast1_fu_183_p1 < n? 1'b1: 1'b0);
assign tmp_4_fu_210_p2 = (tmp_1_fu_201_p2 + j_cast2_fu_207_p1);
assign tmp_fu_178_p2 = (i_cast3_fu_174_p1 < m? 1'b1: 1'b0);
always @ (posedge ap_clk)
begin
    arrayX_addr_reg_379[6:0] <= 7'b0000000;
end



endmodule //MAT_Multiply_load_mat

