// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _MAT_Multiply_HH_
#define _MAT_Multiply_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "MAT_Multiply_mul_32s_32s_32_6.h"

namespace ap_rtl {

struct MAT_Multiply : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > A_address0;
    sc_out< sc_logic > A_ce0;
    sc_in< sc_lv<32> > A_q0;
    sc_out< sc_lv<14> > B_address0;
    sc_out< sc_logic > B_ce0;
    sc_in< sc_lv<32> > B_q0;
    sc_out< sc_lv<14> > C_address0;
    sc_out< sc_logic > C_ce0;
    sc_out< sc_logic > C_we0;
    sc_out< sc_lv<64> > C_d0;
    sc_in< sc_lv<64> > C_q0;
    sc_in< sc_lv<8> > mA;
    sc_in< sc_lv<8> > nA;
    sc_in< sc_lv<8> > mB;
    sc_in< sc_lv<8> > nB;
    sc_in< sc_lv<8> > mC;
    sc_in< sc_lv<8> > nC;


    // Module declarations
    MAT_Multiply(sc_module_name name);
    SC_HAS_PROCESS(MAT_Multiply);

    ~MAT_Multiply();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    MAT_Multiply_mul_32s_32s_32_6<1,6,32,32,32>* MAT_Multiply_mul_32s_32s_32_6_U1;
    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_28;
    sc_signal< sc_lv<1> > tmp_4_fu_208_p2;
    sc_signal< sc_lv<1> > tmp_4_reg_362;
    sc_signal< sc_lv<14> > next_mul1_fu_214_p2;
    sc_signal< sc_lv<14> > next_mul1_reg_366;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_79;
    sc_signal< sc_lv<7> > i_1_fu_230_p2;
    sc_signal< sc_lv<7> > i_1_reg_374;
    sc_signal< sc_lv<1> > tmp_5_fu_236_p2;
    sc_signal< sc_lv<1> > tmp_5_reg_379;
    sc_signal< sc_lv<1> > exitcond2_fu_224_p2;
    sc_signal< sc_lv<7> > j_1_fu_251_p2;
    sc_signal< sc_lv<7> > j_1_reg_387;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_100;
    sc_signal< sc_lv<1> > tmp_9_fu_262_p2;
    sc_signal< sc_lv<1> > tmp_9_reg_392;
    sc_signal< sc_lv<1> > exitcond1_fu_245_p2;
    sc_signal< sc_lv<14> > tmp_trn6_cast_fu_267_p1;
    sc_signal< sc_lv<14> > tmp_trn6_cast_reg_396;
    sc_signal< sc_lv<14> > C_addr_reg_401;
    sc_signal< sc_lv<7> > k_1_fu_292_p2;
    sc_signal< sc_lv<7> > k_1_reg_409;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_122;
    sc_signal< sc_lv<1> > tmp_7_fu_298_p2;
    sc_signal< sc_lv<1> > tmp_7_reg_414;
    sc_signal< sc_lv<1> > exitcond_fu_286_p2;
    sc_signal< sc_lv<14> > next_mul_fu_303_p2;
    sc_signal< sc_lv<14> > next_mul_reg_418;
    sc_signal< sc_lv<32> > A_load_reg_433;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_bdd_149;
    sc_signal< sc_lv<32> > B_load_reg_438;
    sc_signal< sc_lv<32> > grp_fu_334_p2;
    sc_signal< sc_lv<32> > tmp_11_reg_443;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_10;
    sc_signal< bool > ap_sig_bdd_159;
    sc_signal< sc_lv<64> > C_load_reg_448;
    sc_signal< sc_lv<7> > i_reg_127;
    sc_signal< sc_lv<14> > phi_mul9_reg_138;
    sc_signal< sc_lv<7> > j_reg_150;
    sc_signal< sc_lv<7> > k_reg_161;
    sc_signal< sc_logic > ap_sig_cseq_ST_st12_fsm_11;
    sc_signal< bool > ap_sig_bdd_185;
    sc_signal< sc_lv<14> > phi_mul_reg_172;
    sc_signal< sc_lv<64> > tmp_6_fu_277_p1;
    sc_signal< sc_lv<64> > tmp_10_fu_319_p1;
    sc_signal< sc_lv<64> > tmp_14_fu_329_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st10_fsm_9;
    sc_signal< bool > ap_sig_bdd_201;
    sc_signal< sc_lv<64> > tmp_13_fu_341_p2;
    sc_signal< sc_lv<1> > tmp_1_fu_190_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_196_p2;
    sc_signal< sc_lv<1> > tmp1_fu_202_p2;
    sc_signal< sc_lv<1> > tmp_fu_184_p2;
    sc_signal< sc_lv<8> > i_cast_fu_220_p1;
    sc_signal< sc_lv<8> > j_cast_fu_241_p1;
    sc_signal< sc_lv<1> > tmp_8_fu_257_p2;
    sc_signal< sc_lv<14> > p_addr8_fu_271_p2;
    sc_signal< sc_lv<8> > k_cast_fu_282_p1;
    sc_signal< sc_lv<14> > tmp_10_trn_cast_fu_309_p1;
    sc_signal< sc_lv<14> > p_addr1_fu_313_p2;
    sc_signal< sc_lv<14> > p_addr4_fu_324_p2;
    sc_signal< sc_lv<32> > grp_fu_334_p0;
    sc_signal< sc_lv<32> > grp_fu_334_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_bdd_281;
    sc_signal< sc_lv<64> > tmp_12_fu_338_p1;
    sc_signal< sc_logic > grp_fu_334_ce;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_st1_fsm_0;
    static const sc_lv<12> ap_ST_st2_fsm_1;
    static const sc_lv<12> ap_ST_st3_fsm_2;
    static const sc_lv<12> ap_ST_st4_fsm_3;
    static const sc_lv<12> ap_ST_st5_fsm_4;
    static const sc_lv<12> ap_ST_st6_fsm_5;
    static const sc_lv<12> ap_ST_st7_fsm_6;
    static const sc_lv<12> ap_ST_st8_fsm_7;
    static const sc_lv<12> ap_ST_st9_fsm_8;
    static const sc_lv<12> ap_ST_st10_fsm_9;
    static const sc_lv<12> ap_ST_st11_fsm_10;
    static const sc_lv<12> ap_ST_st12_fsm_11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<14> ap_const_lv14_64;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_5;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_ce0();
    void thread_B_address0();
    void thread_B_ce0();
    void thread_C_address0();
    void thread_C_ce0();
    void thread_C_d0();
    void thread_C_we0();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_100();
    void thread_ap_sig_bdd_122();
    void thread_ap_sig_bdd_149();
    void thread_ap_sig_bdd_159();
    void thread_ap_sig_bdd_185();
    void thread_ap_sig_bdd_201();
    void thread_ap_sig_bdd_28();
    void thread_ap_sig_bdd_281();
    void thread_ap_sig_bdd_79();
    void thread_ap_sig_cseq_ST_st10_fsm_9();
    void thread_ap_sig_cseq_ST_st11_fsm_10();
    void thread_ap_sig_cseq_ST_st12_fsm_11();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_exitcond1_fu_245_p2();
    void thread_exitcond2_fu_224_p2();
    void thread_exitcond_fu_286_p2();
    void thread_grp_fu_334_ce();
    void thread_grp_fu_334_p0();
    void thread_grp_fu_334_p1();
    void thread_i_1_fu_230_p2();
    void thread_i_cast_fu_220_p1();
    void thread_j_1_fu_251_p2();
    void thread_j_cast_fu_241_p1();
    void thread_k_1_fu_292_p2();
    void thread_k_cast_fu_282_p1();
    void thread_next_mul1_fu_214_p2();
    void thread_next_mul_fu_303_p2();
    void thread_p_addr1_fu_313_p2();
    void thread_p_addr4_fu_324_p2();
    void thread_p_addr8_fu_271_p2();
    void thread_tmp1_fu_202_p2();
    void thread_tmp_10_fu_319_p1();
    void thread_tmp_10_trn_cast_fu_309_p1();
    void thread_tmp_12_fu_338_p1();
    void thread_tmp_13_fu_341_p2();
    void thread_tmp_14_fu_329_p1();
    void thread_tmp_1_fu_190_p2();
    void thread_tmp_3_fu_196_p2();
    void thread_tmp_4_fu_208_p2();
    void thread_tmp_5_fu_236_p2();
    void thread_tmp_6_fu_277_p1();
    void thread_tmp_7_fu_298_p2();
    void thread_tmp_8_fu_257_p2();
    void thread_tmp_9_fu_262_p2();
    void thread_tmp_fu_184_p2();
    void thread_tmp_trn6_cast_fu_267_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
