// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _MAT_Multiply_HH_
#define _MAT_Multiply_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "MAT_Multiply_mul_32s_32s_32_6.h"
#include "MAT_Multiply_A_cached_row.h"
#include "MAT_Multiply_B_cached.h"

namespace ap_rtl {

struct MAT_Multiply : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > A_dout;
    sc_in< sc_logic > A_empty_n;
    sc_out< sc_logic > A_read;
    sc_in< sc_lv<32> > B_dout;
    sc_in< sc_logic > B_empty_n;
    sc_out< sc_logic > B_read;
    sc_out< sc_lv<64> > C_din;
    sc_in< sc_logic > C_full_n;
    sc_out< sc_logic > C_write;
    sc_in< sc_lv<8> > mA;
    sc_in< sc_lv<8> > nA;
    sc_in< sc_lv<8> > mB;
    sc_in< sc_lv<8> > nB;
    sc_in< sc_lv<8> > mC;
    sc_in< sc_lv<8> > nC;


    // Module declarations
    MAT_Multiply(sc_module_name name);
    SC_HAS_PROCESS(MAT_Multiply);

    ~MAT_Multiply();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    MAT_Multiply_A_cached_row* A_cached_row_U;
    MAT_Multiply_B_cached* B_cached_U;
    MAT_Multiply_mul_32s_32s_32_6<1,6,32,32,32>* MAT_Multiply_mul_32s_32s_32_6_U1;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_30;
    sc_signal< sc_lv<1> > tmp_4_fu_289_p2;
    sc_signal< sc_lv<1> > tmp_4_reg_484;
    sc_signal< sc_lv<7> > i_1_fu_305_p2;
    sc_signal< sc_lv<7> > i_1_reg_491;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_73;
    sc_signal< sc_lv<1> > tmp_5_fu_311_p2;
    sc_signal< sc_lv<1> > tmp_5_reg_496;
    sc_signal< sc_lv<1> > exitcond4_fu_299_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_316_p2;
    sc_signal< sc_lv<1> > tmp_6_reg_501;
    sc_signal< sc_lv<7> > j_1_fu_332_p2;
    sc_signal< sc_lv<7> > j_1_reg_508;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_94;
    sc_signal< sc_lv<1> > tmp_s_fu_343_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_513;
    sc_signal< sc_lv<1> > exitcond3_fu_326_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_348_p2;
    sc_signal< sc_lv<1> > tmp_8_reg_517;
    sc_signal< sc_lv<7> > k_3_fu_360_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_114;
    sc_signal< sc_lv<1> > exitcond2_fu_354_p2;
    sc_signal< bool > ap_sig_bdd_123;
    sc_signal< sc_lv<14> > tmp_11_trn_cast_fu_371_p1;
    sc_signal< sc_lv<14> > tmp_11_trn_cast_reg_529;
    sc_signal< sc_lv<7> > k_4_fu_381_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_bdd_143;
    sc_signal< sc_lv<1> > exitcond1_fu_375_p2;
    sc_signal< bool > ap_sig_bdd_150;
    sc_signal< sc_lv<14> > next_mul_fu_387_p2;
    sc_signal< sc_lv<14> > tmp_13_trn_cast_fu_403_p1;
    sc_signal< sc_lv<14> > tmp_13_trn_cast_reg_547;
    sc_signal< sc_lv<7> > k_5_fu_417_p2;
    sc_signal< sc_lv<7> > k_5_reg_555;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_bdd_169;
    sc_signal< sc_lv<1> > exitcond_fu_411_p2;
    sc_signal< bool > ap_sig_bdd_179;
    sc_signal< sc_lv<1> > tmp_12_fu_423_p2;
    sc_signal< sc_lv<1> > tmp_12_reg_560;
    sc_signal< sc_lv<14> > next_mul5_fu_433_p2;
    sc_signal< sc_lv<14> > next_mul5_reg_570;
    sc_signal< sc_lv<32> > A_cached_row_q0;
    sc_signal< sc_lv<32> > A_cached_row_load_reg_580;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_bdd_200;
    sc_signal< sc_lv<32> > B_cached_q0;
    sc_signal< sc_lv<32> > B_cached_load_reg_585;
    sc_signal< sc_lv<32> > grp_fu_449_p2;
    sc_signal< sc_lv<32> > tmp_15_reg_590;
    sc_signal< sc_logic > ap_sig_cseq_ST_st13_fsm_12;
    sc_signal< bool > ap_sig_bdd_211;
    sc_signal< sc_lv<64> > temp_1_fu_462_p3;
    sc_signal< sc_logic > ap_sig_cseq_ST_st14_fsm_13;
    sc_signal< bool > ap_sig_bdd_223;
    sc_signal< sc_lv<7> > A_cached_row_address0;
    sc_signal< sc_logic > A_cached_row_ce0;
    sc_signal< sc_logic > A_cached_row_we0;
    sc_signal< sc_lv<32> > A_cached_row_d0;
    sc_signal< sc_lv<14> > B_cached_address0;
    sc_signal< sc_logic > B_cached_ce0;
    sc_signal< sc_logic > B_cached_we0;
    sc_signal< sc_lv<32> > B_cached_d0;
    sc_signal< sc_lv<7> > i_reg_173;
    sc_signal< sc_lv<7> > j_reg_184;
    sc_signal< sc_lv<7> > k_reg_196;
    sc_signal< sc_lv<7> > k_1_reg_207;
    sc_signal< sc_lv<14> > phi_mul_reg_218;
    sc_signal< sc_lv<7> > k_2_reg_229;
    sc_signal< sc_lv<64> > temp_reg_240;
    sc_signal< sc_lv<14> > phi_mul4_reg_253;
    sc_signal< sc_lv<64> > tmp_10_fu_366_p1;
    sc_signal< sc_lv<64> > tmp_11_fu_398_p1;
    sc_signal< sc_lv<64> > tmp_13_fu_428_p1;
    sc_signal< sc_lv<64> > tmp_14_fu_444_p1;
    sc_signal< sc_lv<1> > tmp_1_fu_271_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_277_p2;
    sc_signal< sc_lv<1> > tmp1_fu_283_p2;
    sc_signal< sc_lv<1> > tmp_fu_265_p2;
    sc_signal< sc_lv<8> > i_cast_fu_295_p1;
    sc_signal< sc_lv<8> > j_cast_fu_322_p1;
    sc_signal< sc_lv<1> > tmp_9_fu_338_p2;
    sc_signal< sc_lv<14> > p_addr3_fu_393_p2;
    sc_signal< sc_lv<8> > k_2_cast_fu_407_p1;
    sc_signal< sc_lv<14> > p_addr1_fu_439_p2;
    sc_signal< sc_lv<32> > grp_fu_449_p0;
    sc_signal< sc_lv<32> > grp_fu_449_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_7;
    sc_signal< bool > ap_sig_bdd_376;
    sc_signal< sc_lv<64> > tmp_16_fu_453_p1;
    sc_signal< sc_lv<64> > temp_2_fu_456_p2;
    sc_signal< sc_logic > grp_fu_449_ce;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_st1_fsm_0;
    static const sc_lv<14> ap_ST_st2_fsm_1;
    static const sc_lv<14> ap_ST_st3_fsm_2;
    static const sc_lv<14> ap_ST_st4_fsm_3;
    static const sc_lv<14> ap_ST_st5_fsm_4;
    static const sc_lv<14> ap_ST_st6_fsm_5;
    static const sc_lv<14> ap_ST_st7_fsm_6;
    static const sc_lv<14> ap_ST_st8_fsm_7;
    static const sc_lv<14> ap_ST_st9_fsm_8;
    static const sc_lv<14> ap_ST_st10_fsm_9;
    static const sc_lv<14> ap_ST_st11_fsm_10;
    static const sc_lv<14> ap_ST_st12_fsm_11;
    static const sc_lv<14> ap_ST_st13_fsm_12;
    static const sc_lv<14> ap_ST_st14_fsm_13;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<14> ap_const_lv14_64;
    static const sc_lv<32> ap_const_lv32_7;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_cached_row_address0();
    void thread_A_cached_row_ce0();
    void thread_A_cached_row_d0();
    void thread_A_cached_row_we0();
    void thread_A_read();
    void thread_B_cached_address0();
    void thread_B_cached_ce0();
    void thread_B_cached_d0();
    void thread_B_cached_we0();
    void thread_B_read();
    void thread_C_din();
    void thread_C_write();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_114();
    void thread_ap_sig_bdd_123();
    void thread_ap_sig_bdd_143();
    void thread_ap_sig_bdd_150();
    void thread_ap_sig_bdd_169();
    void thread_ap_sig_bdd_179();
    void thread_ap_sig_bdd_200();
    void thread_ap_sig_bdd_211();
    void thread_ap_sig_bdd_223();
    void thread_ap_sig_bdd_30();
    void thread_ap_sig_bdd_376();
    void thread_ap_sig_bdd_73();
    void thread_ap_sig_bdd_94();
    void thread_ap_sig_cseq_ST_st13_fsm_12();
    void thread_ap_sig_cseq_ST_st14_fsm_13();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_ap_sig_cseq_ST_st8_fsm_7();
    void thread_exitcond1_fu_375_p2();
    void thread_exitcond2_fu_354_p2();
    void thread_exitcond3_fu_326_p2();
    void thread_exitcond4_fu_299_p2();
    void thread_exitcond_fu_411_p2();
    void thread_grp_fu_449_ce();
    void thread_grp_fu_449_p0();
    void thread_grp_fu_449_p1();
    void thread_i_1_fu_305_p2();
    void thread_i_cast_fu_295_p1();
    void thread_j_1_fu_332_p2();
    void thread_j_cast_fu_322_p1();
    void thread_k_2_cast_fu_407_p1();
    void thread_k_3_fu_360_p2();
    void thread_k_4_fu_381_p2();
    void thread_k_5_fu_417_p2();
    void thread_next_mul5_fu_433_p2();
    void thread_next_mul_fu_387_p2();
    void thread_p_addr1_fu_439_p2();
    void thread_p_addr3_fu_393_p2();
    void thread_temp_1_fu_462_p3();
    void thread_temp_2_fu_456_p2();
    void thread_tmp1_fu_283_p2();
    void thread_tmp_10_fu_366_p1();
    void thread_tmp_11_fu_398_p1();
    void thread_tmp_11_trn_cast_fu_371_p1();
    void thread_tmp_12_fu_423_p2();
    void thread_tmp_13_fu_428_p1();
    void thread_tmp_13_trn_cast_fu_403_p1();
    void thread_tmp_14_fu_444_p1();
    void thread_tmp_16_fu_453_p1();
    void thread_tmp_1_fu_271_p2();
    void thread_tmp_3_fu_277_p2();
    void thread_tmp_4_fu_289_p2();
    void thread_tmp_5_fu_311_p2();
    void thread_tmp_6_fu_316_p2();
    void thread_tmp_8_fu_348_p2();
    void thread_tmp_9_fu_338_p2();
    void thread_tmp_fu_265_p2();
    void thread_tmp_s_fu_343_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
