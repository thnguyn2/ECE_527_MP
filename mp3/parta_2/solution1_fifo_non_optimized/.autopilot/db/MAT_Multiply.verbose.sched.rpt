

================================================================
== Vivado HLS Report for 'MAT_Multiply'
================================================================
* Date:           Mon Sep 28 14:09:17 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        parta_2
* Solution:       solution1_fifo_non_optimized
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      7.08|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+----------+-----+----------+---------+
    |     Latency    |    Interval    | Pipeline|
    | min |    max   | min |    max   |   Type  |
    +-----+----------+-----+----------+---------+
    |    1|  11040201|    2|  11040202|   none  |
    +-----+----------+-----+----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-------+----------+--------------+-----------+-----------+------+----------+
        |                 |      Latency     |   Iteration  |  Initiation Interval  | Trip |          |
        |    Loop Name    |  min  |    max   |    Latency   |  achieved |   target  | Count| Pipelined|
        +-----------------+-------+----------+--------------+-----------+-----------+------+----------+
        |- Row            |  20200|  11040200| 202 ~ 110402 |          -|          -|   100|    no    |
        | + Col           |    200|    110400|   2 ~ 1104   |          -|          -|   100|    no    |
        |  ++ RowCaching  |    100|       100|             1|          -|          -|   100|    no    |
        |  ++ ColCaching  |    100|       100|             1|          -|          -|   100|    no    |
        |  ++ Product     |    900|       900|             9|          -|          -|   100|    no    |
        +-----------------+-------+----------+--------------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 14
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (tmp_4 & !exitcond4)
3 --> 
	6  / (!exitcond3 & !tmp_s)
	4  / (!exitcond3 & tmp_s)
	2  / (exitcond3)
4 --> 
	4  / (tmp_8 & !exitcond2)
	5  / (!tmp_8) | (exitcond2)
5 --> 
	5  / (tmp_6 & !exitcond1)
	6  / (!tmp_6) | (exitcond1)
6 --> 
	7  / (tmp_s & !exitcond)
	3  / (!tmp_s) | (exitcond)
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	6  / true
* FSM state operations: 

 <State 1>: 6.31ns
ST_1: stg_15 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i32* %A), !map !0

ST_1: stg_16 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32* %B), !map !6

ST_1: stg_17 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i64* %C), !map !10

ST_1: stg_18 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i8 %mA) nounwind, !map !14

ST_1: stg_19 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i8 %nA) nounwind, !map !20

ST_1: stg_20 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i8 %mB) nounwind, !map !24

ST_1: stg_21 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i8 %nB) nounwind, !map !28

ST_1: stg_22 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i8 %mC) nounwind, !map !32

ST_1: stg_23 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i8 %nC) nounwind, !map !36

ST_1: stg_24 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecTopModule([13 x i8]* @str) nounwind

ST_1: nC_read [1/1] 0.00ns
:10  %nC_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %nC)

ST_1: mC_read [1/1] 0.00ns
:11  %mC_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %mC)

ST_1: nB_read [1/1] 0.00ns
:12  %nB_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %nB)

ST_1: mB_read [1/1] 0.00ns
:13  %mB_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %mB)

ST_1: nA_read [1/1] 0.00ns
:14  %nA_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %nA)

ST_1: mA_read [1/1] 0.00ns
:15  %mA_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %mA)

ST_1: A_cached_row [1/1] 0.00ns
:16  %A_cached_row = alloca [100 x i32], align 16

ST_1: B_cached [1/1] 0.00ns
:17  %B_cached = alloca [10000 x i32], align 4

ST_1: stg_33 [1/1] 0.00ns
:18  call void (...)* @_ssdm_op_SpecInterface(i64* %C, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_34 [1/1] 0.00ns
:19  call void (...)* @_ssdm_op_SpecInterface(i32* %B, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_35 [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecInterface(i32* %A, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: tmp [1/1] 2.00ns
:21  %tmp = icmp eq i8 %nA_read, %mB_read

ST_1: tmp_1 [1/1] 2.00ns
:22  %tmp_1 = icmp eq i8 %mA_read, %mC_read

ST_1: tmp_3 [1/1] 2.00ns
:23  %tmp_3 = icmp eq i8 %nB_read, %nC_read

ST_1: tmp1 [1/1] 1.37ns
:24  %tmp1 = and i1 %tmp_1, %tmp_3

ST_1: tmp_4 [1/1] 1.37ns
:25  %tmp_4 = and i1 %tmp1, %tmp

ST_1: stg_41 [1/1] 1.57ns
:26  br i1 %tmp_4, label %.preheader7, label %.loopexit8


 <State 2>: 2.00ns
ST_2: i [1/1] 0.00ns
.preheader7:0  %i = phi i7 [ %i_1, %9 ], [ 0, %0 ]

ST_2: i_cast [1/1] 0.00ns
.preheader7:1  %i_cast = zext i7 %i to i8

ST_2: exitcond4 [1/1] 1.97ns
.preheader7:2  %exitcond4 = icmp eq i7 %i, -28

ST_2: empty [1/1] 0.00ns
.preheader7:3  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind

ST_2: i_1 [1/1] 1.72ns
.preheader7:4  %i_1 = add i7 %i, 1

ST_2: stg_47 [1/1] 0.00ns
.preheader7:5  br i1 %exitcond4, label %.loopexit8, label %1

ST_2: stg_48 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str2) nounwind

ST_2: tmp_7 [1/1] 0.00ns
:1  %tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str2) nounwind

ST_2: tmp_5 [1/1] 2.00ns
:2  %tmp_5 = icmp ult i8 %i_cast, %mC_read

ST_2: tmp_6 [1/1] 1.97ns
:3  %tmp_6 = icmp eq i7 %i, 0

ST_2: stg_52 [1/1] 1.57ns
:4  br label %2

ST_2: stg_53 [1/1] 0.00ns
.loopexit8:0  ret void


 <State 3>: 3.54ns
ST_3: j [1/1] 0.00ns
:0  %j = phi i7 [ 0, %1 ], [ %j_1, %._crit_edge ]

ST_3: j_cast [1/1] 0.00ns
:1  %j_cast = zext i7 %j to i8

ST_3: exitcond3 [1/1] 1.97ns
:2  %exitcond3 = icmp eq i7 %j, -28

ST_3: empty_4 [1/1] 0.00ns
:3  %empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind

ST_3: j_1 [1/1] 1.72ns
:4  %j_1 = add i7 %j, 1

ST_3: stg_59 [1/1] 0.00ns
:5  br i1 %exitcond3, label %9, label %3

ST_3: stg_60 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str3) nounwind

ST_3: tmp_2 [1/1] 0.00ns
:1  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str3) nounwind

ST_3: tmp_9 [1/1] 2.00ns
:2  %tmp_9 = icmp ult i8 %j_cast, %nC_read

ST_3: tmp_s [1/1] 1.37ns
:3  %tmp_s = and i1 %tmp_5, %tmp_9

ST_3: stg_64 [1/1] 0.00ns
:4  br i1 %tmp_s, label %4, label %._crit_edge

ST_3: tmp_8 [1/1] 1.97ns
:0  %tmp_8 = icmp eq i7 %j, 0

ST_3: stg_66 [1/1] 1.57ns
:1  br i1 %tmp_8, label %.preheader5, label %.loopexit6

ST_3: empty_9 [1/1] 0.00ns
:0  %empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str2, i32 %tmp_7) nounwind

ST_3: stg_68 [1/1] 0.00ns
:1  br label %.preheader7


 <State 4>: 7.08ns
ST_4: k [1/1] 0.00ns
.preheader5:0  %k = phi i7 [ %k_3, %5 ], [ 0, %4 ]

ST_4: exitcond2 [1/1] 1.97ns
.preheader5:1  %exitcond2 = icmp eq i7 %k, -28

ST_4: empty_5 [1/1] 0.00ns
.preheader5:2  %empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind

ST_4: k_3 [1/1] 1.72ns
.preheader5:3  %k_3 = add i7 %k, 1

ST_4: stg_73 [1/1] 0.00ns
.preheader5:4  br i1 %exitcond2, label %.loopexit6, label %5

ST_4: stg_74 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str4) nounwind

ST_4: tmp_10 [1/1] 0.00ns
:1  %tmp_10 = zext i7 %k to i64

ST_4: A_read [1/1] 4.38ns
:2  %A_read = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_4: A_cached_row_addr [1/1] 0.00ns
:3  %A_cached_row_addr = getelementptr inbounds [100 x i32]* %A_cached_row, i64 0, i64 %tmp_10

ST_4: stg_78 [1/1] 2.71ns
:4  store i32 %A_read, i32* %A_cached_row_addr, align 4

ST_4: stg_79 [1/1] 0.00ns
:5  br label %.preheader5

ST_4: stg_80 [1/1] 0.00ns
.loopexit6:0  br i1 %tmp_6, label %.preheader.preheader, label %.loopexit

ST_4: tmp_11_trn_cast [1/1] 0.00ns
.preheader.preheader:0  %tmp_11_trn_cast = zext i7 %j to i14

ST_4: stg_82 [1/1] 1.57ns
.preheader.preheader:1  br label %.preheader


 <State 5>: 7.08ns
ST_5: k_1 [1/1] 0.00ns
.preheader:0  %k_1 = phi i7 [ %k_4, %6 ], [ 0, %.preheader.preheader ]

ST_5: phi_mul [1/1] 0.00ns
.preheader:1  %phi_mul = phi i14 [ %next_mul, %6 ], [ 0, %.preheader.preheader ]

ST_5: exitcond1 [1/1] 1.97ns
.preheader:2  %exitcond1 = icmp eq i7 %k_1, -28

ST_5: empty_6 [1/1] 0.00ns
.preheader:3  %empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind

ST_5: k_4 [1/1] 1.72ns
.preheader:4  %k_4 = add i7 %k_1, 1

ST_5: stg_88 [1/1] 0.00ns
.preheader:5  br i1 %exitcond1, label %.loopexit, label %6

ST_5: stg_89 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str5) nounwind

ST_5: B_read [1/1] 4.38ns
:1  %B_read = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_5: next_mul [1/1] 1.96ns
:2  %next_mul = add i14 %phi_mul, 100

ST_5: p_addr3 [1/1] 1.96ns
:3  %p_addr3 = add i14 %tmp_11_trn_cast, %phi_mul

ST_5: tmp_11 [1/1] 0.00ns
:4  %tmp_11 = zext i14 %p_addr3 to i64

ST_5: B_cached_addr [1/1] 0.00ns
:5  %B_cached_addr = getelementptr [10000 x i32]* %B_cached, i64 0, i64 %tmp_11

ST_5: stg_95 [1/1] 2.71ns
:6  store i32 %B_read, i32* %B_cached_addr, align 4

ST_5: stg_96 [1/1] 0.00ns
:7  br label %.preheader

ST_5: tmp_13_trn_cast [1/1] 0.00ns
.loopexit:0  %tmp_13_trn_cast = zext i7 %j to i14

ST_5: stg_98 [1/1] 1.57ns
.loopexit:1  br label %7


 <State 6>: 4.67ns
ST_6: k_2 [1/1] 0.00ns
:0  %k_2 = phi i7 [ 0, %.loopexit ], [ %k_5, %_ifconv ]

ST_6: temp [1/1] 0.00ns
:1  %temp = phi i64 [ 0, %.loopexit ], [ %temp_1, %_ifconv ]

ST_6: phi_mul4 [1/1] 0.00ns
:2  %phi_mul4 = phi i14 [ 0, %.loopexit ], [ %next_mul5, %_ifconv ]

ST_6: k_2_cast [1/1] 0.00ns
:3  %k_2_cast = zext i7 %k_2 to i8

ST_6: exitcond [1/1] 1.97ns
:4  %exitcond = icmp eq i7 %k_2, -28

ST_6: empty_7 [1/1] 0.00ns
:5  %empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind

ST_6: k_5 [1/1] 1.72ns
:6  %k_5 = add i7 %k_2, 1

ST_6: stg_106 [1/1] 0.00ns
:7  br i1 %exitcond, label %8, label %_ifconv

ST_6: tmp_12 [1/1] 2.00ns
_ifconv:1  %tmp_12 = icmp ult i8 %k_2_cast, %mB_read

ST_6: tmp_13 [1/1] 0.00ns
_ifconv:2  %tmp_13 = zext i7 %k_2 to i64

ST_6: A_cached_row_addr_1 [1/1] 0.00ns
_ifconv:3  %A_cached_row_addr_1 = getelementptr inbounds [100 x i32]* %A_cached_row, i64 0, i64 %tmp_13

ST_6: A_cached_row_load [2/2] 2.71ns
_ifconv:4  %A_cached_row_load = load i32* %A_cached_row_addr_1, align 4

ST_6: next_mul5 [1/1] 1.96ns
_ifconv:5  %next_mul5 = add i14 %phi_mul4, 100

ST_6: p_addr1 [1/1] 1.96ns
_ifconv:6  %p_addr1 = add i14 %tmp_13_trn_cast, %phi_mul4

ST_6: tmp_14 [1/1] 0.00ns
_ifconv:7  %tmp_14 = zext i14 %p_addr1 to i64

ST_6: B_cached_addr_1 [1/1] 0.00ns
_ifconv:8  %B_cached_addr_1 = getelementptr [10000 x i32]* %B_cached, i64 0, i64 %tmp_14

ST_6: B_cached_load [2/2] 2.71ns
_ifconv:9  %B_cached_load = load i32* %B_cached_addr_1, align 4

ST_6: stg_116 [1/1] 4.38ns
:0  call void @_ssdm_op_Write.ap_fifo.volatile.i64P(i64* %C, i64 %temp)

ST_6: stg_117 [1/1] 0.00ns
:1  br label %._crit_edge

ST_6: empty_8 [1/1] 0.00ns
._crit_edge:0  %empty_8 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str3, i32 %tmp_2) nounwind

ST_6: stg_119 [1/1] 0.00ns
._crit_edge:1  br label %2


 <State 7>: 2.71ns
ST_7: A_cached_row_load [1/2] 2.71ns
_ifconv:4  %A_cached_row_load = load i32* %A_cached_row_addr_1, align 4

ST_7: B_cached_load [1/2] 2.71ns
_ifconv:9  %B_cached_load = load i32* %B_cached_addr_1, align 4


 <State 8>: 6.08ns
ST_8: tmp_15 [6/6] 6.08ns
_ifconv:10  %tmp_15 = mul nsw i32 %B_cached_load, %A_cached_row_load


 <State 9>: 6.08ns
ST_9: tmp_15 [5/6] 6.08ns
_ifconv:10  %tmp_15 = mul nsw i32 %B_cached_load, %A_cached_row_load


 <State 10>: 6.08ns
ST_10: tmp_15 [4/6] 6.08ns
_ifconv:10  %tmp_15 = mul nsw i32 %B_cached_load, %A_cached_row_load


 <State 11>: 6.08ns
ST_11: tmp_15 [3/6] 6.08ns
_ifconv:10  %tmp_15 = mul nsw i32 %B_cached_load, %A_cached_row_load


 <State 12>: 6.08ns
ST_12: tmp_15 [2/6] 6.08ns
_ifconv:10  %tmp_15 = mul nsw i32 %B_cached_load, %A_cached_row_load


 <State 13>: 6.08ns
ST_13: tmp_15 [1/6] 6.08ns
_ifconv:10  %tmp_15 = mul nsw i32 %B_cached_load, %A_cached_row_load


 <State 14>: 4.77ns
ST_14: stg_128 [1/1] 0.00ns
_ifconv:0  call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str6) nounwind

ST_14: tmp_16 [1/1] 0.00ns
_ifconv:11  %tmp_16 = sext i32 %tmp_15 to i64

ST_14: temp_2 [1/1] 3.40ns
_ifconv:12  %temp_2 = add nsw i64 %temp, %tmp_16

ST_14: temp_1 [1/1] 1.37ns
_ifconv:13  %temp_1 = select i1 %tmp_12, i64 %temp_2, i64 %temp

ST_14: stg_132 [1/1] 0.00ns
_ifconv:14  br label %7



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
