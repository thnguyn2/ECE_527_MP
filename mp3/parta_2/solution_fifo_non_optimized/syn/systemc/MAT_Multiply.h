// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _MAT_Multiply_HH_
#define _MAT_Multiply_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "MAT_Multiply_mul_32s_32s_32_6.h"
#include "MAT_Multiply_A_cached_row.h"
#include "MAT_Multiply_B_cached.h"

namespace ap_rtl {

struct MAT_Multiply : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > A_dout;
    sc_in< sc_logic > A_empty_n;
    sc_out< sc_logic > A_read;
    sc_in< sc_lv<32> > B_dout;
    sc_in< sc_logic > B_empty_n;
    sc_out< sc_logic > B_read;
    sc_out< sc_lv<64> > C_din;
    sc_in< sc_logic > C_full_n;
    sc_out< sc_logic > C_write;
    sc_in< sc_lv<8> > mA;
    sc_in< sc_lv<8> > nA;
    sc_in< sc_lv<8> > mB;
    sc_in< sc_lv<8> > nB;
    sc_in< sc_lv<8> > mC;
    sc_in< sc_lv<8> > nC;


    // Module declarations
    MAT_Multiply(sc_module_name name);
    SC_HAS_PROCESS(MAT_Multiply);

    ~MAT_Multiply();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    MAT_Multiply_A_cached_row* A_cached_row_U;
    MAT_Multiply_B_cached* B_cached_U;
    MAT_Multiply_mul_32s_32s_32_6<1,6,32,32,32>* MAT_Multiply_mul_32s_32s_32_6_U1;
    sc_signal< sc_lv<15> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_31;
    sc_signal< sc_lv<1> > tmp_4_fu_303_p2;
    sc_signal< sc_lv<1> > tmp_4_reg_498;
    sc_signal< sc_lv<6> > i_1_fu_319_p2;
    sc_signal< sc_lv<6> > i_1_reg_505;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_74;
    sc_signal< sc_lv<1> > tmp_5_fu_325_p2;
    sc_signal< sc_lv<1> > tmp_5_reg_510;
    sc_signal< sc_lv<1> > exitcond4_fu_313_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_330_p2;
    sc_signal< sc_lv<1> > tmp_6_reg_515;
    sc_signal< sc_lv<6> > j_1_fu_346_p2;
    sc_signal< sc_lv<6> > j_1_reg_522;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_95;
    sc_signal< sc_lv<1> > tmp_8_fu_362_p2;
    sc_signal< sc_lv<1> > tmp_8_reg_530;
    sc_signal< sc_lv<1> > exitcond3_fu_340_p2;
    sc_signal< sc_lv<1> > tmp_s_fu_357_p2;
    sc_signal< sc_lv<6> > k_3_fu_374_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_113;
    sc_signal< sc_lv<1> > exitcond2_fu_368_p2;
    sc_signal< bool > ap_sig_bdd_122;
    sc_signal< sc_lv<12> > tmp_11_trn_cast_fu_385_p1;
    sc_signal< sc_lv<12> > tmp_11_trn_cast_reg_542;
    sc_signal< sc_lv<6> > k_4_fu_395_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_bdd_142;
    sc_signal< sc_lv<1> > exitcond1_fu_389_p2;
    sc_signal< bool > ap_sig_bdd_149;
    sc_signal< sc_lv<12> > next_mul_fu_401_p2;
    sc_signal< sc_lv<12> > tmp_13_trn_cast_fu_417_p1;
    sc_signal< sc_lv<12> > tmp_13_trn_cast_reg_560;
    sc_signal< sc_lv<6> > k_5_fu_431_p2;
    sc_signal< sc_lv<6> > k_5_reg_568;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_bdd_168;
    sc_signal< sc_lv<1> > tmp_12_fu_437_p2;
    sc_signal< sc_lv<1> > tmp_12_reg_573;
    sc_signal< sc_lv<1> > exitcond_fu_425_p2;
    sc_signal< sc_lv<12> > next_mul5_fu_447_p2;
    sc_signal< sc_lv<12> > next_mul5_reg_583;
    sc_signal< sc_lv<32> > A_cached_row_q0;
    sc_signal< sc_lv<32> > A_cached_row_load_reg_593;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_bdd_188;
    sc_signal< sc_lv<32> > B_cached_q0;
    sc_signal< sc_lv<32> > B_cached_load_reg_598;
    sc_signal< sc_lv<32> > grp_fu_463_p2;
    sc_signal< sc_lv<32> > tmp_15_reg_603;
    sc_signal< sc_logic > ap_sig_cseq_ST_st13_fsm_12;
    sc_signal< bool > ap_sig_bdd_199;
    sc_signal< sc_lv<64> > temp_1_fu_476_p3;
    sc_signal< sc_logic > ap_sig_cseq_ST_st14_fsm_13;
    sc_signal< bool > ap_sig_bdd_211;
    sc_signal< sc_lv<6> > A_cached_row_address0;
    sc_signal< sc_logic > A_cached_row_ce0;
    sc_signal< sc_logic > A_cached_row_we0;
    sc_signal< sc_lv<32> > A_cached_row_d0;
    sc_signal< sc_lv<12> > B_cached_address0;
    sc_signal< sc_logic > B_cached_ce0;
    sc_signal< sc_logic > B_cached_we0;
    sc_signal< sc_lv<32> > B_cached_d0;
    sc_signal< sc_lv<6> > i_reg_175;
    sc_signal< sc_lv<6> > j_reg_186;
    sc_signal< sc_logic > ap_sig_cseq_ST_st15_fsm_14;
    sc_signal< bool > ap_sig_bdd_246;
    sc_signal< sc_lv<6> > k_reg_198;
    sc_signal< sc_lv<6> > k_1_reg_209;
    sc_signal< sc_lv<12> > phi_mul_reg_220;
    sc_signal< sc_lv<6> > k_2_reg_231;
    sc_signal< sc_lv<64> > temp_reg_242;
    sc_signal< sc_lv<12> > phi_mul4_reg_254;
    sc_signal< sc_lv<64> > temp_2_reg_265;
    sc_signal< sc_lv<64> > tmp_10_fu_380_p1;
    sc_signal< sc_lv<64> > tmp_11_fu_412_p1;
    sc_signal< sc_lv<64> > tmp_13_fu_442_p1;
    sc_signal< sc_lv<64> > tmp_14_fu_458_p1;
    sc_signal< sc_lv<1> > tmp_1_fu_285_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_291_p2;
    sc_signal< sc_lv<1> > tmp1_fu_297_p2;
    sc_signal< sc_lv<1> > tmp_fu_279_p2;
    sc_signal< sc_lv<8> > i_cast6_fu_309_p1;
    sc_signal< sc_lv<8> > j_cast5_fu_336_p1;
    sc_signal< sc_lv<1> > tmp_9_fu_352_p2;
    sc_signal< sc_lv<12> > p_addr3_fu_407_p2;
    sc_signal< sc_lv<8> > k_2_cast2_fu_421_p1;
    sc_signal< sc_lv<12> > p_addr1_fu_453_p2;
    sc_signal< sc_lv<32> > grp_fu_463_p0;
    sc_signal< sc_lv<32> > grp_fu_463_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_7;
    sc_signal< bool > ap_sig_bdd_376;
    sc_signal< sc_lv<64> > tmp_16_fu_467_p1;
    sc_signal< sc_lv<64> > temp_3_fu_470_p2;
    sc_signal< sc_logic > grp_fu_463_ce;
    sc_signal< sc_lv<15> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<15> ap_ST_st1_fsm_0;
    static const sc_lv<15> ap_ST_st2_fsm_1;
    static const sc_lv<15> ap_ST_st3_fsm_2;
    static const sc_lv<15> ap_ST_st4_fsm_3;
    static const sc_lv<15> ap_ST_st5_fsm_4;
    static const sc_lv<15> ap_ST_st6_fsm_5;
    static const sc_lv<15> ap_ST_st7_fsm_6;
    static const sc_lv<15> ap_ST_st8_fsm_7;
    static const sc_lv<15> ap_ST_st9_fsm_8;
    static const sc_lv<15> ap_ST_st10_fsm_9;
    static const sc_lv<15> ap_ST_st11_fsm_10;
    static const sc_lv<15> ap_ST_st12_fsm_11;
    static const sc_lv<15> ap_ST_st13_fsm_12;
    static const sc_lv<15> ap_ST_st14_fsm_13;
    static const sc_lv<15> ap_ST_st15_fsm_14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<6> ap_const_lv6_32;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<12> ap_const_lv12_32;
    static const sc_lv<32> ap_const_lv32_7;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_cached_row_address0();
    void thread_A_cached_row_ce0();
    void thread_A_cached_row_d0();
    void thread_A_cached_row_we0();
    void thread_A_read();
    void thread_B_cached_address0();
    void thread_B_cached_ce0();
    void thread_B_cached_d0();
    void thread_B_cached_we0();
    void thread_B_read();
    void thread_C_din();
    void thread_C_write();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_113();
    void thread_ap_sig_bdd_122();
    void thread_ap_sig_bdd_142();
    void thread_ap_sig_bdd_149();
    void thread_ap_sig_bdd_168();
    void thread_ap_sig_bdd_188();
    void thread_ap_sig_bdd_199();
    void thread_ap_sig_bdd_211();
    void thread_ap_sig_bdd_246();
    void thread_ap_sig_bdd_31();
    void thread_ap_sig_bdd_376();
    void thread_ap_sig_bdd_74();
    void thread_ap_sig_bdd_95();
    void thread_ap_sig_cseq_ST_st13_fsm_12();
    void thread_ap_sig_cseq_ST_st14_fsm_13();
    void thread_ap_sig_cseq_ST_st15_fsm_14();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_ap_sig_cseq_ST_st8_fsm_7();
    void thread_exitcond1_fu_389_p2();
    void thread_exitcond2_fu_368_p2();
    void thread_exitcond3_fu_340_p2();
    void thread_exitcond4_fu_313_p2();
    void thread_exitcond_fu_425_p2();
    void thread_grp_fu_463_ce();
    void thread_grp_fu_463_p0();
    void thread_grp_fu_463_p1();
    void thread_i_1_fu_319_p2();
    void thread_i_cast6_fu_309_p1();
    void thread_j_1_fu_346_p2();
    void thread_j_cast5_fu_336_p1();
    void thread_k_2_cast2_fu_421_p1();
    void thread_k_3_fu_374_p2();
    void thread_k_4_fu_395_p2();
    void thread_k_5_fu_431_p2();
    void thread_next_mul5_fu_447_p2();
    void thread_next_mul_fu_401_p2();
    void thread_p_addr1_fu_453_p2();
    void thread_p_addr3_fu_407_p2();
    void thread_temp_1_fu_476_p3();
    void thread_temp_3_fu_470_p2();
    void thread_tmp1_fu_297_p2();
    void thread_tmp_10_fu_380_p1();
    void thread_tmp_11_fu_412_p1();
    void thread_tmp_11_trn_cast_fu_385_p1();
    void thread_tmp_12_fu_437_p2();
    void thread_tmp_13_fu_442_p1();
    void thread_tmp_13_trn_cast_fu_417_p1();
    void thread_tmp_14_fu_458_p1();
    void thread_tmp_16_fu_467_p1();
    void thread_tmp_1_fu_285_p2();
    void thread_tmp_3_fu_291_p2();
    void thread_tmp_4_fu_303_p2();
    void thread_tmp_5_fu_325_p2();
    void thread_tmp_6_fu_330_p2();
    void thread_tmp_8_fu_362_p2();
    void thread_tmp_9_fu_352_p2();
    void thread_tmp_fu_279_p2();
    void thread_tmp_s_fu_357_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
