// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="MAT_Multiply,hls_ip_2015_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.445750,HLS_SYN_LAT=540001,HLS_SYN_TPT=none,HLS_SYN_MEM=33,HLS_SYN_DSP=4,HLS_SYN_FF=296,HLS_SYN_LUT=374}" *)

module MAT_Multiply (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_dout,
        A_empty_n,
        A_read,
        B_dout,
        B_empty_n,
        B_read,
        C_din,
        C_full_n,
        C_write,
        mA,
        nA,
        mB,
        nB,
        mC,
        nC
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 8'b1;
parameter    ap_ST_st2_fsm_1 = 8'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 8'b100;
parameter    ap_ST_st5_fsm_3 = 8'b1000;
parameter    ap_ST_pp1_stg0_fsm_4 = 8'b10000;
parameter    ap_ST_st8_fsm_5 = 8'b100000;
parameter    ap_ST_pp2_stg0_fsm_6 = 8'b1000000;
parameter    ap_ST_st18_fsm_7 = 8'b10000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_true = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv14_0 = 14'b00000000000000;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv14_2710 = 14'b10011100010000;
parameter    ap_const_lv14_1 = 14'b1;
parameter    ap_const_lv7_64 = 7'b1100100;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv14_64 = 14'b1100100;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] A_dout;
input   A_empty_n;
output   A_read;
input  [31:0] B_dout;
input   B_empty_n;
output   B_read;
output  [31:0] C_din;
input   C_full_n;
output   C_write;
input  [7:0] mA;
input  [7:0] nA;
input  [7:0] mB;
input  [7:0] nB;
input  [7:0] mC;
input  [7:0] nC;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_read;
reg B_read;
reg C_write;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm = 8'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_24;
reg   [6:0] k_reg_216;
reg   [6:0] k_1_reg_228;
reg   [13:0] phi_mul_reg_239;
reg   [6:0] k_2_reg_250;
reg   [31:0] temp_reg_261;
reg   [13:0] phi_mul5_reg_274;
wire   [0:0] tmp_4_fu_310_p2;
reg   [0:0] tmp_4_reg_520;
wire   [0:0] exitcond_flatten_fu_316_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_79;
wire   [13:0] indvar_flatten_next_fu_322_p2;
reg   [13:0] indvar_flatten_next_reg_528;
wire   [6:0] j_mid2_fu_334_p3;
reg   [6:0] j_mid2_reg_533;
wire   [6:0] i_mid2_fu_348_p3;
reg   [6:0] i_mid2_reg_540;
wire   [0:0] tmp_6_fu_365_p2;
reg   [0:0] tmp_6_reg_545;
wire   [0:0] tmp_s_fu_380_p2;
reg   [0:0] tmp_s_reg_549;
wire   [0:0] tmp_8_fu_386_p2;
wire   [0:0] exitcond2_fu_392_p2;
reg   [0:0] exitcond2_reg_557;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_bdd_111;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_sig_bdd_118;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
wire   [6:0] k_3_fu_398_p2;
reg   [6:0] k_3_reg_561;
wire   [13:0] tmp_11_trn_cast_fu_409_p1;
reg   [13:0] tmp_11_trn_cast_reg_566;
reg    ap_sig_cseq_ST_st5_fsm_3;
reg    ap_sig_bdd_135;
wire   [0:0] exitcond1_fu_412_p2;
reg   [0:0] exitcond1_reg_571;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_4;
reg    ap_sig_bdd_147;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg    ap_sig_bdd_154;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
wire   [6:0] k_4_fu_418_p2;
wire   [13:0] next_mul_fu_424_p2;
wire   [13:0] p_addr4_fu_430_p2;
reg   [13:0] p_addr4_reg_585;
wire   [13:0] tmp_13_trn_cast_fu_439_p1;
reg   [13:0] tmp_13_trn_cast_reg_590;
reg    ap_sig_cseq_ST_st8_fsm_5;
reg    ap_sig_bdd_178;
wire   [0:0] exitcond_fu_442_p2;
reg   [0:0] exitcond_reg_595;
reg    ap_sig_cseq_ST_pp2_stg0_fsm_6;
reg    ap_sig_bdd_187;
reg    ap_reg_ppiten_pp2_it0 = 1'b0;
reg    ap_reg_ppiten_pp2_it1 = 1'b0;
reg    ap_reg_ppiten_pp2_it2 = 1'b0;
reg    ap_reg_ppiten_pp2_it3 = 1'b0;
reg    ap_reg_ppiten_pp2_it4 = 1'b0;
reg    ap_reg_ppiten_pp2_it5 = 1'b0;
reg    ap_reg_ppiten_pp2_it6 = 1'b0;
reg    ap_reg_ppiten_pp2_it7 = 1'b0;
reg    ap_reg_ppiten_pp2_it8 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_reg_595_pp2_it1;
reg   [0:0] ap_reg_ppstg_exitcond_reg_595_pp2_it2;
reg   [0:0] ap_reg_ppstg_exitcond_reg_595_pp2_it3;
reg   [0:0] ap_reg_ppstg_exitcond_reg_595_pp2_it4;
reg   [0:0] ap_reg_ppstg_exitcond_reg_595_pp2_it5;
reg   [0:0] ap_reg_ppstg_exitcond_reg_595_pp2_it6;
reg   [0:0] ap_reg_ppstg_exitcond_reg_595_pp2_it7;
wire   [6:0] k_5_fu_448_p2;
wire   [0:0] tmp_14_fu_458_p2;
reg   [0:0] tmp_14_reg_604;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_604_pp2_it1;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_604_pp2_it2;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_604_pp2_it3;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_604_pp2_it4;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_604_pp2_it5;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_604_pp2_it6;
reg   [0:0] ap_reg_ppstg_tmp_14_reg_604_pp2_it7;
wire   [13:0] next_mul6_fu_468_p2;
wire   [31:0] A_cached_row_q0;
reg  signed [31:0] A_cached_row_load_reg_624;
wire   [31:0] B_cached_q0;
reg  signed [31:0] B_cached_load_reg_629;
wire  signed [31:0] grp_fu_484_p2;
reg  signed [31:0] tmp_16_reg_634;
wire   [31:0] temp_1_fu_493_p3;
wire   [6:0] j_1_fu_500_p2;
reg    ap_sig_cseq_ST_st18_fsm_7;
reg    ap_sig_bdd_272;
reg    ap_sig_bdd_278;
reg   [6:0] A_cached_row_address0;
reg    A_cached_row_ce0;
reg    A_cached_row_we0;
wire   [31:0] A_cached_row_d0;
reg   [13:0] B_cached_address0;
reg    B_cached_ce0;
reg    B_cached_we0;
wire   [31:0] B_cached_d0;
reg   [13:0] indvar_flatten_reg_183;
reg   [6:0] i_reg_194;
reg   [6:0] j_reg_205;
reg   [6:0] k_phi_fu_220_p4;
wire   [63:0] tmp_10_fu_404_p1;
wire   [63:0] tmp_12_fu_435_p1;
wire   [63:0] tmp_15_fu_463_p1;
wire   [63:0] tmp_17_fu_479_p1;
wire   [0:0] tmp_1_fu_292_p2;
wire   [0:0] tmp_3_fu_298_p2;
wire   [0:0] tmp1_fu_304_p2;
wire   [0:0] tmp_fu_286_p2;
wire   [0:0] exitcond3_fu_328_p2;
wire   [6:0] i_s_fu_342_p2;
wire   [7:0] i_cast_fu_356_p1;
wire   [7:0] j_cast_fu_371_p1;
wire   [0:0] tmp_5_fu_360_p2;
wire   [0:0] tmp_9_fu_375_p2;
wire   [7:0] k_2_cast_fu_454_p1;
wire   [13:0] p_addr2_fu_474_p2;
wire  signed [31:0] grp_fu_484_p0;
wire  signed [31:0] grp_fu_484_p1;
wire  signed [31:0] temp_2_fu_488_p2;
wire    grp_fu_484_ce;
reg   [7:0] ap_NS_fsm;


MAT_Multiply_A_cached_row #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
A_cached_row_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( A_cached_row_address0 ),
    .ce0( A_cached_row_ce0 ),
    .we0( A_cached_row_we0 ),
    .d0( A_cached_row_d0 ),
    .q0( A_cached_row_q0 )
);

MAT_Multiply_B_cached #(
    .DataWidth( 32 ),
    .AddressRange( 10000 ),
    .AddressWidth( 14 ))
B_cached_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( B_cached_address0 ),
    .ce0( B_cached_ce0 ),
    .we0( B_cached_we0 ),
    .d0( B_cached_d0 ),
    .q0( B_cached_q0 )
);

MAT_Multiply_mul_32s_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MAT_Multiply_mul_32s_32s_32_6_U0(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_484_p0 ),
    .din1( grp_fu_484_p1 ),
    .ce( grp_fu_484_ce ),
    .dout( grp_fu_484_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_bdd_118 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond2_fu_392_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_4_reg_520 == ap_const_lv1_0) & (exitcond_flatten_fu_316_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_s_fu_380_p2) & ~(ap_const_lv1_0 == tmp_8_fu_386_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_bdd_118 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == exitcond2_fu_392_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_4_reg_520 == ap_const_lv1_0) & (exitcond_flatten_fu_316_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_s_fu_380_p2) & ~(ap_const_lv1_0 == tmp_8_fu_386_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_bdd_118 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond2_fu_392_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(ap_sig_bdd_154 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond1_fu_412_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3) & ~(ap_const_lv1_0 == tmp_6_reg_545))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(ap_sig_bdd_154 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & (ap_const_lv1_0 == exitcond1_fu_412_p2))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3) & ~(ap_const_lv1_0 == tmp_6_reg_545)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(ap_sig_bdd_154 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond1_fu_412_p2)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & ~(ap_const_lv1_0 == exitcond_fu_442_p2))) begin
            ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_5)) begin
            ap_reg_ppiten_pp2_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp2_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (ap_const_lv1_0 == exitcond_fu_442_p2))) begin
            ap_reg_ppiten_pp2_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_5) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & ~(ap_const_lv1_0 == exitcond_fu_442_p2)))) begin
            ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp2_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it2 <= ap_reg_ppiten_pp2_it1;
    end
end

/// ap_reg_ppiten_pp2_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it3 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it3 <= ap_reg_ppiten_pp2_it2;
    end
end

/// ap_reg_ppiten_pp2_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it4 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it4 <= ap_reg_ppiten_pp2_it3;
    end
end

/// ap_reg_ppiten_pp2_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it5 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it5 <= ap_reg_ppiten_pp2_it4;
    end
end

/// ap_reg_ppiten_pp2_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it6 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it6 <= ap_reg_ppiten_pp2_it5;
    end
end

/// ap_reg_ppiten_pp2_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it7 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it7 <= ap_reg_ppiten_pp2_it6;
    end
end

/// ap_reg_ppiten_pp2_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp2_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp2_it8 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp2_it8 <= ap_reg_ppiten_pp2_it7;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0) & ~(tmp_4_fu_310_p2 == ap_const_lv1_0))) begin
        i_reg_194 <= ap_const_lv7_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_7) & ~ap_sig_bdd_278)) begin
        i_reg_194 <= i_mid2_reg_540;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0) & ~(tmp_4_fu_310_p2 == ap_const_lv1_0))) begin
        indvar_flatten_reg_183 <= ap_const_lv14_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_7) & ~ap_sig_bdd_278)) begin
        indvar_flatten_reg_183 <= indvar_flatten_next_reg_528;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0) & ~(tmp_4_fu_310_p2 == ap_const_lv1_0))) begin
        j_reg_205 <= ap_const_lv7_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_7) & ~ap_sig_bdd_278)) begin
        j_reg_205 <= j_1_fu_500_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3) & ~(ap_const_lv1_0 == tmp_6_reg_545))) begin
        k_1_reg_228 <= ap_const_lv7_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_154 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & (ap_const_lv1_0 == exitcond1_fu_412_p2))) begin
        k_1_reg_228 <= k_4_fu_418_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_lv1_0 == exitcond_fu_442_p2))) begin
        k_2_reg_250 <= k_5_fu_448_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_5)) begin
        k_2_reg_250 <= ap_const_lv7_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_4_reg_520 == ap_const_lv1_0) & (exitcond_flatten_fu_316_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_s_fu_380_p2) & ~(ap_const_lv1_0 == tmp_8_fu_386_p2))) begin
        k_reg_216 <= ap_const_lv7_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_lv1_0 == exitcond2_reg_557) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_118 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        k_reg_216 <= k_3_reg_561;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & (ap_const_lv1_0 == exitcond_fu_442_p2))) begin
        phi_mul5_reg_274 <= next_mul6_fu_468_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_5)) begin
        phi_mul5_reg_274 <= ap_const_lv14_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3) & ~(ap_const_lv1_0 == tmp_6_reg_545))) begin
        phi_mul_reg_239 <= ap_const_lv14_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_154 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & (ap_const_lv1_0 == exitcond1_fu_412_p2))) begin
        phi_mul_reg_239 <= next_mul_fu_424_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it8) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_595_pp2_it7))) begin
        temp_reg_261 <= temp_1_fu_493_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_5)) begin
        temp_reg_261 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (ap_const_lv1_0 == exitcond_reg_595))) begin
        A_cached_row_load_reg_624 <= A_cached_row_q0;
        B_cached_load_reg_629 <= B_cached_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_6)) begin
        ap_reg_ppstg_exitcond_reg_595_pp2_it1 <= exitcond_reg_595;
        ap_reg_ppstg_tmp_14_reg_604_pp2_it1 <= tmp_14_reg_604;
        exitcond_reg_595 <= exitcond_fu_442_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_true == ap_true)) begin
        ap_reg_ppstg_exitcond_reg_595_pp2_it2 <= ap_reg_ppstg_exitcond_reg_595_pp2_it1;
        ap_reg_ppstg_exitcond_reg_595_pp2_it3 <= ap_reg_ppstg_exitcond_reg_595_pp2_it2;
        ap_reg_ppstg_exitcond_reg_595_pp2_it4 <= ap_reg_ppstg_exitcond_reg_595_pp2_it3;
        ap_reg_ppstg_exitcond_reg_595_pp2_it5 <= ap_reg_ppstg_exitcond_reg_595_pp2_it4;
        ap_reg_ppstg_exitcond_reg_595_pp2_it6 <= ap_reg_ppstg_exitcond_reg_595_pp2_it5;
        ap_reg_ppstg_exitcond_reg_595_pp2_it7 <= ap_reg_ppstg_exitcond_reg_595_pp2_it6;
        ap_reg_ppstg_tmp_14_reg_604_pp2_it2 <= ap_reg_ppstg_tmp_14_reg_604_pp2_it1;
        ap_reg_ppstg_tmp_14_reg_604_pp2_it3 <= ap_reg_ppstg_tmp_14_reg_604_pp2_it2;
        ap_reg_ppstg_tmp_14_reg_604_pp2_it4 <= ap_reg_ppstg_tmp_14_reg_604_pp2_it3;
        ap_reg_ppstg_tmp_14_reg_604_pp2_it5 <= ap_reg_ppstg_tmp_14_reg_604_pp2_it4;
        ap_reg_ppstg_tmp_14_reg_604_pp2_it6 <= ap_reg_ppstg_tmp_14_reg_604_pp2_it5;
        ap_reg_ppstg_tmp_14_reg_604_pp2_it7 <= ap_reg_ppstg_tmp_14_reg_604_pp2_it6;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(ap_sig_bdd_154 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        exitcond1_reg_571 <= exitcond1_fu_412_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_bdd_118 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        exitcond2_reg_557 <= exitcond2_fu_392_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_4_reg_520 == ap_const_lv1_0) & (exitcond_flatten_fu_316_p2 == ap_const_lv1_0))) begin
        i_mid2_reg_540 <= i_mid2_fu_348_p3;
        j_mid2_reg_533 <= j_mid2_fu_334_p3;
        tmp_6_reg_545 <= tmp_6_fu_365_p2;
        tmp_s_reg_549 <= tmp_s_fu_380_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_4_reg_520 == ap_const_lv1_0))) begin
        indvar_flatten_next_reg_528 <= indvar_flatten_next_fu_322_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_118 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        k_3_reg_561 <= k_3_fu_398_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(ap_sig_bdd_154 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & (ap_const_lv1_0 == exitcond1_fu_412_p2))) begin
        p_addr4_reg_585 <= p_addr4_fu_430_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3) & ~(ap_const_lv1_0 == tmp_6_reg_545))) begin
        tmp_11_trn_cast_reg_566[6 : 0] <= tmp_11_trn_cast_fu_409_p1[6 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_5)) begin
        tmp_13_trn_cast_reg_590[6 : 0] <= tmp_13_trn_cast_fu_439_p1[6 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (ap_const_lv1_0 == exitcond_fu_442_p2))) begin
        tmp_14_reg_604 <= tmp_14_fu_458_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_595_pp2_it6) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_14_reg_604_pp2_it6))) begin
        tmp_16_reg_634 <= grp_fu_484_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        tmp_4_reg_520 <= tmp_4_fu_310_p2;
    end
end

/// A_cached_row_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp2_stg0_fsm_6 or ap_reg_ppiten_pp2_it0 or tmp_10_fu_404_p1 or tmp_15_fu_463_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        A_cached_row_address0 = tmp_10_fu_404_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        A_cached_row_address0 = tmp_15_fu_463_p1;
    end else begin
        A_cached_row_address0 = 'bx;
    end
end

/// A_cached_row_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_118 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp2_stg0_fsm_6 or ap_reg_ppiten_pp2_it0)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_118 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        A_cached_row_ce0 = ap_const_logic_1;
    end else begin
        A_cached_row_ce0 = ap_const_logic_0;
    end
end

/// A_cached_row_we0 assign process. ///
always @ (exitcond2_reg_557 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_118 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_lv1_0 == exitcond2_reg_557) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_118 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        A_cached_row_we0 = ap_const_logic_1;
    end else begin
        A_cached_row_we0 = ap_const_logic_0;
    end
end

/// A_read assign process. ///
always @ (exitcond2_reg_557 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_118 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_lv1_0 == exitcond2_reg_557) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_118 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        A_read = ap_const_logic_1;
    end else begin
        A_read = ap_const_logic_0;
    end
end

/// B_cached_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it1 or ap_sig_cseq_ST_pp2_stg0_fsm_6 or ap_reg_ppiten_pp2_it0 or tmp_12_fu_435_p1 or tmp_17_fu_479_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
        B_cached_address0 = tmp_12_fu_435_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        B_cached_address0 = tmp_17_fu_479_p1;
    end else begin
        B_cached_address0 = 'bx;
    end
end

/// B_cached_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_sig_bdd_154 or ap_reg_ppiten_pp1_it1 or ap_sig_cseq_ST_pp2_stg0_fsm_6 or ap_reg_ppiten_pp2_it0)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_6) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_154 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        B_cached_ce0 = ap_const_logic_1;
    end else begin
        B_cached_ce0 = ap_const_logic_0;
    end
end

/// B_cached_we0 assign process. ///
always @ (exitcond1_reg_571 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_sig_bdd_154 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_lv1_0 == exitcond1_reg_571) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_154 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        B_cached_we0 = ap_const_logic_1;
    end else begin
        B_cached_we0 = ap_const_logic_0;
    end
end

/// B_read assign process. ///
always @ (exitcond1_reg_571 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_sig_bdd_154 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_lv1_0 == exitcond1_reg_571) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_154 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        B_read = ap_const_logic_1;
    end else begin
        B_read = ap_const_logic_0;
    end
end

/// C_write assign process. ///
always @ (tmp_s_reg_549 or ap_sig_cseq_ST_st18_fsm_7 or ap_sig_bdd_278)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_7) & ~(ap_const_lv1_0 == tmp_s_reg_549) & ~ap_sig_bdd_278)) begin
        C_write = ap_const_logic_1;
    end else begin
        C_write = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (tmp_4_reg_520 or exitcond_flatten_fu_316_p2 or ap_sig_cseq_ST_st2_fsm_1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ((tmp_4_reg_520 == ap_const_lv1_0) | ~(exitcond_flatten_fu_316_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (tmp_4_reg_520 or exitcond_flatten_fu_316_p2 or ap_sig_cseq_ST_st2_fsm_1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ((tmp_4_reg_520 == ap_const_lv1_0) | ~(exitcond_flatten_fu_316_p2 == ap_const_lv1_0)))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. ///
always @ (ap_sig_bdd_111)
begin
    if (ap_sig_bdd_111) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg0_fsm_4 assign process. ///
always @ (ap_sig_bdd_147)
begin
    if (ap_sig_bdd_147) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp2_stg0_fsm_6 assign process. ///
always @ (ap_sig_bdd_187)
begin
    if (ap_sig_bdd_187) begin
        ap_sig_cseq_ST_pp2_stg0_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp2_stg0_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st18_fsm_7 assign process. ///
always @ (ap_sig_bdd_272)
begin
    if (ap_sig_bdd_272) begin
        ap_sig_cseq_ST_st18_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_24)
begin
    if (ap_sig_bdd_24) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_79)
begin
    if (ap_sig_bdd_79) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_3 assign process. ///
always @ (ap_sig_bdd_135)
begin
    if (ap_sig_bdd_135) begin
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_5 assign process. ///
always @ (ap_sig_bdd_178)
begin
    if (ap_sig_bdd_178) begin
        ap_sig_cseq_ST_st8_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_5 = ap_const_logic_0;
    end
end

/// k_phi_fu_220_p4 assign process. ///
always @ (k_reg_216 or exitcond2_reg_557 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it1 or k_3_reg_561)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_lv1_0 == exitcond2_reg_557) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        k_phi_fu_220_p4 = k_3_reg_561;
    end else begin
        k_phi_fu_220_p4 = k_reg_216;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or tmp_4_reg_520 or exitcond_flatten_fu_316_p2 or tmp_6_reg_545 or tmp_s_fu_380_p2 or tmp_8_fu_386_p2 or exitcond2_fu_392_p2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_118 or ap_reg_ppiten_pp0_it1 or exitcond1_fu_412_p2 or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_154 or ap_reg_ppiten_pp1_it1 or exitcond_fu_442_p2 or ap_reg_ppiten_pp2_it0 or ap_reg_ppiten_pp2_it1 or ap_reg_ppiten_pp2_it7 or ap_reg_ppiten_pp2_it8 or ap_sig_bdd_278)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (((tmp_4_reg_520 == ap_const_lv1_0) | ~(exitcond_flatten_fu_316_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if ((~(tmp_4_reg_520 == ap_const_lv1_0) & (exitcond_flatten_fu_316_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_s_fu_380_p2) & (ap_const_lv1_0 == tmp_8_fu_386_p2))) begin
                ap_NS_fsm = ap_ST_st5_fsm_3;
            end else if ((~(tmp_4_reg_520 == ap_const_lv1_0) & (exitcond_flatten_fu_316_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_s_fu_380_p2) & ~(ap_const_lv1_0 == tmp_8_fu_386_p2))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st18_fsm_7;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_118 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond2_fu_392_p2))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_118 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond2_fu_392_p2))) begin
                ap_NS_fsm = ap_ST_st5_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_st5_fsm_3 : 
        begin
            if (~(ap_const_lv1_0 == tmp_6_reg_545)) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_5;
            end
        end
        ap_ST_pp1_stg0_fsm_4 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_154 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond1_fu_412_p2))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_154 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond1_fu_412_p2))) begin
                ap_NS_fsm = ap_ST_st8_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end
        end
        ap_ST_st8_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_pp2_stg0_fsm_6;
        end
        ap_ST_pp2_stg0_fsm_6 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp2_it8) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it7)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~(ap_const_lv1_0 == exitcond_fu_442_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)))) begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_6;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~(ap_const_lv1_0 == exitcond_fu_442_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1))) begin
                ap_NS_fsm = ap_ST_st18_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st18_fsm_7;
            end
        end
        ap_ST_st18_fsm_7 : 
        begin
            if (~ap_sig_bdd_278) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st18_fsm_7;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_cached_row_d0 = A_dout;
assign B_cached_d0 = B_dout;
assign C_din = temp_reg_261;

/// ap_sig_bdd_111 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_111 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_118 assign process. ///
always @ (A_empty_n or exitcond2_reg_557)
begin
    ap_sig_bdd_118 = ((A_empty_n == ap_const_logic_0) & (ap_const_lv1_0 == exitcond2_reg_557));
end

/// ap_sig_bdd_135 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_135 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_147 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_147 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_154 assign process. ///
always @ (B_empty_n or exitcond1_reg_571)
begin
    ap_sig_bdd_154 = ((B_empty_n == ap_const_logic_0) & (ap_const_lv1_0 == exitcond1_reg_571));
end

/// ap_sig_bdd_178 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_178 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_187 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_187 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_24 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_24 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_272 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_272 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_278 assign process. ///
always @ (C_full_n or tmp_s_reg_549)
begin
    ap_sig_bdd_278 = ((C_full_n == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_s_reg_549));
end

/// ap_sig_bdd_79 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_79 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end
assign exitcond1_fu_412_p2 = (k_1_reg_228 == ap_const_lv7_64? 1'b1: 1'b0);
assign exitcond2_fu_392_p2 = (k_phi_fu_220_p4 == ap_const_lv7_64? 1'b1: 1'b0);
assign exitcond3_fu_328_p2 = (j_reg_205 == ap_const_lv7_64? 1'b1: 1'b0);
assign exitcond_flatten_fu_316_p2 = (indvar_flatten_reg_183 == ap_const_lv14_2710? 1'b1: 1'b0);
assign exitcond_fu_442_p2 = (k_2_reg_250 == ap_const_lv7_64? 1'b1: 1'b0);
assign grp_fu_484_ce = ap_const_logic_1;
assign grp_fu_484_p0 = B_cached_load_reg_629;
assign grp_fu_484_p1 = A_cached_row_load_reg_624;
assign i_cast_fu_356_p1 = i_mid2_fu_348_p3;
assign i_mid2_fu_348_p3 = ((exitcond3_fu_328_p2[0:0]===1'b1)? i_s_fu_342_p2: i_reg_194);
assign i_s_fu_342_p2 = (i_reg_194 + ap_const_lv7_1);
assign indvar_flatten_next_fu_322_p2 = (indvar_flatten_reg_183 + ap_const_lv14_1);
assign j_1_fu_500_p2 = (j_mid2_reg_533 + ap_const_lv7_1);
assign j_cast_fu_371_p1 = j_mid2_fu_334_p3;
assign j_mid2_fu_334_p3 = ((exitcond3_fu_328_p2[0:0]===1'b1)? ap_const_lv7_0: j_reg_205);
assign k_2_cast_fu_454_p1 = k_2_reg_250;
assign k_3_fu_398_p2 = (k_phi_fu_220_p4 + ap_const_lv7_1);
assign k_4_fu_418_p2 = (k_1_reg_228 + ap_const_lv7_1);
assign k_5_fu_448_p2 = (k_2_reg_250 + ap_const_lv7_1);
assign next_mul6_fu_468_p2 = (phi_mul5_reg_274 + ap_const_lv14_64);
assign next_mul_fu_424_p2 = (phi_mul_reg_239 + ap_const_lv14_64);
assign p_addr2_fu_474_p2 = (tmp_13_trn_cast_reg_590 + phi_mul5_reg_274);
assign p_addr4_fu_430_p2 = (tmp_11_trn_cast_reg_566 + phi_mul_reg_239);
assign temp_1_fu_493_p3 = ((ap_reg_ppstg_tmp_14_reg_604_pp2_it7[0:0]===1'b1)? temp_2_fu_488_p2: temp_reg_261);
assign temp_2_fu_488_p2 = ($signed(tmp_16_reg_634) + $signed(temp_reg_261));
assign tmp1_fu_304_p2 = (tmp_1_fu_292_p2 & tmp_3_fu_298_p2);
assign tmp_10_fu_404_p1 = k_reg_216;
assign tmp_11_trn_cast_fu_409_p1 = j_mid2_reg_533;
assign tmp_12_fu_435_p1 = p_addr4_reg_585;
assign tmp_13_trn_cast_fu_439_p1 = j_mid2_reg_533;
assign tmp_14_fu_458_p2 = (k_2_cast_fu_454_p1 < mB? 1'b1: 1'b0);
assign tmp_15_fu_463_p1 = k_2_reg_250;
assign tmp_17_fu_479_p1 = p_addr2_fu_474_p2;
assign tmp_1_fu_292_p2 = (mA == mC? 1'b1: 1'b0);
assign tmp_3_fu_298_p2 = (nB == nC? 1'b1: 1'b0);
assign tmp_4_fu_310_p2 = (tmp1_fu_304_p2 & tmp_fu_286_p2);
assign tmp_5_fu_360_p2 = (i_cast_fu_356_p1 < mC? 1'b1: 1'b0);
assign tmp_6_fu_365_p2 = (i_mid2_fu_348_p3 == ap_const_lv7_0? 1'b1: 1'b0);
assign tmp_8_fu_386_p2 = (j_mid2_fu_334_p3 == ap_const_lv7_0? 1'b1: 1'b0);
assign tmp_9_fu_375_p2 = (j_cast_fu_371_p1 < nC? 1'b1: 1'b0);
assign tmp_fu_286_p2 = (nA == mB? 1'b1: 1'b0);
assign tmp_s_fu_380_p2 = (tmp_5_fu_360_p2 & tmp_9_fu_375_p2);
always @ (posedge ap_clk)
begin
    tmp_11_trn_cast_reg_566[13:7] <= 7'b0000000;
    tmp_13_trn_cast_reg_590[13:7] <= 7'b0000000;
end



endmodule //MAT_Multiply

