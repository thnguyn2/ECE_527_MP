// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "MAT_Multiply.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic MAT_Multiply::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic MAT_Multiply::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> MAT_Multiply::ap_ST_st1_fsm_0 = "1";
const sc_lv<8> MAT_Multiply::ap_ST_st2_fsm_1 = "10";
const sc_lv<8> MAT_Multiply::ap_ST_pp0_stg0_fsm_2 = "100";
const sc_lv<8> MAT_Multiply::ap_ST_st5_fsm_3 = "1000";
const sc_lv<8> MAT_Multiply::ap_ST_pp1_stg0_fsm_4 = "10000";
const sc_lv<8> MAT_Multiply::ap_ST_st8_fsm_5 = "100000";
const sc_lv<8> MAT_Multiply::ap_ST_pp2_stg0_fsm_6 = "1000000";
const sc_lv<8> MAT_Multiply::ap_ST_st18_fsm_7 = "10000000";
const sc_lv<32> MAT_Multiply::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> MAT_Multiply::ap_const_lv1_1 = "1";
const bool MAT_Multiply::ap_true = true;
const sc_lv<32> MAT_Multiply::ap_const_lv32_1 = "1";
const sc_lv<1> MAT_Multiply::ap_const_lv1_0 = "0";
const sc_lv<32> MAT_Multiply::ap_const_lv32_2 = "10";
const sc_lv<32> MAT_Multiply::ap_const_lv32_3 = "11";
const sc_lv<32> MAT_Multiply::ap_const_lv32_4 = "100";
const sc_lv<32> MAT_Multiply::ap_const_lv32_5 = "101";
const sc_lv<32> MAT_Multiply::ap_const_lv32_6 = "110";
const sc_lv<32> MAT_Multiply::ap_const_lv32_7 = "111";
const sc_lv<14> MAT_Multiply::ap_const_lv14_0 = "00000000000000";
const sc_lv<7> MAT_Multiply::ap_const_lv7_0 = "0000000";
const sc_lv<14> MAT_Multiply::ap_const_lv14_2710 = "10011100010000";
const sc_lv<14> MAT_Multiply::ap_const_lv14_1 = "1";
const sc_lv<7> MAT_Multiply::ap_const_lv7_64 = "1100100";
const sc_lv<7> MAT_Multiply::ap_const_lv7_1 = "1";
const sc_lv<14> MAT_Multiply::ap_const_lv14_64 = "1100100";

MAT_Multiply::MAT_Multiply(sc_module_name name) : sc_module(name), mVcdFile(0) {
    A_cached_row_U = new MAT_Multiply_A_cached_row("A_cached_row_U");
    A_cached_row_U->clk(ap_clk);
    A_cached_row_U->reset(ap_rst);
    A_cached_row_U->address0(A_cached_row_address0);
    A_cached_row_U->ce0(A_cached_row_ce0);
    A_cached_row_U->we0(A_cached_row_we0);
    A_cached_row_U->d0(A_cached_row_d0);
    A_cached_row_U->q0(A_cached_row_q0);
    B_cached_U = new MAT_Multiply_B_cached("B_cached_U");
    B_cached_U->clk(ap_clk);
    B_cached_U->reset(ap_rst);
    B_cached_U->address0(B_cached_address0);
    B_cached_U->ce0(B_cached_ce0);
    B_cached_U->we0(B_cached_we0);
    B_cached_U->d0(B_cached_d0);
    B_cached_U->q0(B_cached_q0);
    MAT_Multiply_mul_32s_32s_32_6_U0 = new MAT_Multiply_mul_32s_32s_32_6<1,6,32,32,32>("MAT_Multiply_mul_32s_32s_32_6_U0");
    MAT_Multiply_mul_32s_32s_32_6_U0->clk(ap_clk);
    MAT_Multiply_mul_32s_32s_32_6_U0->reset(ap_rst);
    MAT_Multiply_mul_32s_32s_32_6_U0->din0(grp_fu_484_p0);
    MAT_Multiply_mul_32s_32s_32_6_U0->din1(grp_fu_484_p1);
    MAT_Multiply_mul_32s_32s_32_6_U0->ce(grp_fu_484_ce);
    MAT_Multiply_mul_32s_32s_32_6_U0->dout(grp_fu_484_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_cached_row_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_6 );
    sensitive << ( ap_reg_ppiten_pp2_it0 );
    sensitive << ( tmp_10_fu_404_p1 );
    sensitive << ( tmp_15_fu_463_p1 );

    SC_METHOD(thread_A_cached_row_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_sig_bdd_118 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_6 );
    sensitive << ( ap_reg_ppiten_pp2_it0 );

    SC_METHOD(thread_A_cached_row_d0);
    sensitive << ( A_dout );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_A_cached_row_we0);
    sensitive << ( exitcond2_reg_557 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_sig_bdd_118 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_A_read);
    sensitive << ( exitcond2_reg_557 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_sig_bdd_118 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_B_cached_address0);
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_4 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_6 );
    sensitive << ( ap_reg_ppiten_pp2_it0 );
    sensitive << ( tmp_12_fu_435_p1 );
    sensitive << ( tmp_17_fu_479_p1 );

    SC_METHOD(thread_B_cached_ce0);
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_4 );
    sensitive << ( ap_sig_bdd_154 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_6 );
    sensitive << ( ap_reg_ppiten_pp2_it0 );

    SC_METHOD(thread_B_cached_d0);
    sensitive << ( B_dout );
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_4 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );

    SC_METHOD(thread_B_cached_we0);
    sensitive << ( exitcond1_reg_571 );
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_4 );
    sensitive << ( ap_sig_bdd_154 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );

    SC_METHOD(thread_B_read);
    sensitive << ( exitcond1_reg_571 );
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_4 );
    sensitive << ( ap_sig_bdd_154 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );

    SC_METHOD(thread_C_din);
    sensitive << ( temp_reg_261 );
    sensitive << ( tmp_s_reg_549 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_7 );
    sensitive << ( ap_sig_bdd_278 );

    SC_METHOD(thread_C_write);
    sensitive << ( tmp_s_reg_549 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_7 );
    sensitive << ( ap_sig_bdd_278 );

    SC_METHOD(thread_ap_done);
    sensitive << ( tmp_4_reg_520 );
    sensitive << ( exitcond_flatten_fu_316_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( tmp_4_reg_520 );
    sensitive << ( exitcond_flatten_fu_316_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_ap_sig_bdd_111);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_118);
    sensitive << ( A_empty_n );
    sensitive << ( exitcond2_reg_557 );

    SC_METHOD(thread_ap_sig_bdd_135);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_147);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_154);
    sensitive << ( B_empty_n );
    sensitive << ( exitcond1_reg_571 );

    SC_METHOD(thread_ap_sig_bdd_178);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_187);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_272);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_278);
    sensitive << ( C_full_n );
    sensitive << ( tmp_s_reg_549 );

    SC_METHOD(thread_ap_sig_bdd_79);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_2);
    sensitive << ( ap_sig_bdd_111 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp1_stg0_fsm_4);
    sensitive << ( ap_sig_bdd_147 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp2_stg0_fsm_6);
    sensitive << ( ap_sig_bdd_187 );

    SC_METHOD(thread_ap_sig_cseq_ST_st18_fsm_7);
    sensitive << ( ap_sig_bdd_272 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_24 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_79 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_3);
    sensitive << ( ap_sig_bdd_135 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_5);
    sensitive << ( ap_sig_bdd_178 );

    SC_METHOD(thread_exitcond1_fu_412_p2);
    sensitive << ( k_1_reg_228 );
    sensitive << ( ap_sig_cseq_ST_pp1_stg0_fsm_4 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( ap_sig_bdd_154 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );

    SC_METHOD(thread_exitcond2_fu_392_p2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_118 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( k_phi_fu_220_p4 );

    SC_METHOD(thread_exitcond3_fu_328_p2);
    sensitive << ( tmp_4_reg_520 );
    sensitive << ( exitcond_flatten_fu_316_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( j_reg_205 );

    SC_METHOD(thread_exitcond_flatten_fu_316_p2);
    sensitive << ( tmp_4_reg_520 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( indvar_flatten_reg_183 );

    SC_METHOD(thread_exitcond_fu_442_p2);
    sensitive << ( k_2_reg_250 );
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_6 );
    sensitive << ( ap_reg_ppiten_pp2_it0 );

    SC_METHOD(thread_grp_fu_484_ce);

    SC_METHOD(thread_grp_fu_484_p0);
    sensitive << ( ap_reg_ppiten_pp2_it2 );
    sensitive << ( B_cached_load_reg_629 );

    SC_METHOD(thread_grp_fu_484_p1);
    sensitive << ( ap_reg_ppiten_pp2_it2 );
    sensitive << ( A_cached_row_load_reg_624 );

    SC_METHOD(thread_i_cast_fu_356_p1);
    sensitive << ( i_mid2_fu_348_p3 );

    SC_METHOD(thread_i_mid2_fu_348_p3);
    sensitive << ( i_reg_194 );
    sensitive << ( exitcond3_fu_328_p2 );
    sensitive << ( i_s_fu_342_p2 );

    SC_METHOD(thread_i_s_fu_342_p2);
    sensitive << ( i_reg_194 );

    SC_METHOD(thread_indvar_flatten_next_fu_322_p2);
    sensitive << ( indvar_flatten_reg_183 );

    SC_METHOD(thread_j_1_fu_500_p2);
    sensitive << ( j_mid2_reg_533 );

    SC_METHOD(thread_j_cast_fu_371_p1);
    sensitive << ( j_mid2_fu_334_p3 );

    SC_METHOD(thread_j_mid2_fu_334_p3);
    sensitive << ( j_reg_205 );
    sensitive << ( exitcond3_fu_328_p2 );

    SC_METHOD(thread_k_2_cast_fu_454_p1);
    sensitive << ( k_2_reg_250 );

    SC_METHOD(thread_k_3_fu_398_p2);
    sensitive << ( k_phi_fu_220_p4 );

    SC_METHOD(thread_k_4_fu_418_p2);
    sensitive << ( k_1_reg_228 );

    SC_METHOD(thread_k_5_fu_448_p2);
    sensitive << ( k_2_reg_250 );

    SC_METHOD(thread_k_phi_fu_220_p4);
    sensitive << ( k_reg_216 );
    sensitive << ( exitcond2_reg_557 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( k_3_reg_561 );

    SC_METHOD(thread_next_mul6_fu_468_p2);
    sensitive << ( phi_mul5_reg_274 );

    SC_METHOD(thread_next_mul_fu_424_p2);
    sensitive << ( phi_mul_reg_239 );

    SC_METHOD(thread_p_addr2_fu_474_p2);
    sensitive << ( phi_mul5_reg_274 );
    sensitive << ( tmp_13_trn_cast_reg_590 );

    SC_METHOD(thread_p_addr4_fu_430_p2);
    sensitive << ( phi_mul_reg_239 );
    sensitive << ( tmp_11_trn_cast_reg_566 );

    SC_METHOD(thread_temp_1_fu_493_p3);
    sensitive << ( temp_reg_261 );
    sensitive << ( ap_reg_ppstg_tmp_14_reg_604_pp2_it7 );
    sensitive << ( temp_2_fu_488_p2 );

    SC_METHOD(thread_temp_2_fu_488_p2);
    sensitive << ( temp_reg_261 );
    sensitive << ( tmp_16_reg_634 );

    SC_METHOD(thread_tmp1_fu_304_p2);
    sensitive << ( tmp_1_fu_292_p2 );
    sensitive << ( tmp_3_fu_298_p2 );

    SC_METHOD(thread_tmp_10_fu_404_p1);
    sensitive << ( k_reg_216 );

    SC_METHOD(thread_tmp_11_trn_cast_fu_409_p1);
    sensitive << ( j_mid2_reg_533 );

    SC_METHOD(thread_tmp_12_fu_435_p1);
    sensitive << ( p_addr4_reg_585 );

    SC_METHOD(thread_tmp_13_trn_cast_fu_439_p1);
    sensitive << ( j_mid2_reg_533 );

    SC_METHOD(thread_tmp_14_fu_458_p2);
    sensitive << ( mB );
    sensitive << ( exitcond_fu_442_p2 );
    sensitive << ( ap_sig_cseq_ST_pp2_stg0_fsm_6 );
    sensitive << ( ap_reg_ppiten_pp2_it0 );
    sensitive << ( k_2_cast_fu_454_p1 );

    SC_METHOD(thread_tmp_15_fu_463_p1);
    sensitive << ( k_2_reg_250 );

    SC_METHOD(thread_tmp_17_fu_479_p1);
    sensitive << ( p_addr2_fu_474_p2 );

    SC_METHOD(thread_tmp_1_fu_292_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( mA );
    sensitive << ( mC );

    SC_METHOD(thread_tmp_3_fu_298_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( nB );
    sensitive << ( nC );

    SC_METHOD(thread_tmp_4_fu_310_p2);
    sensitive << ( tmp1_fu_304_p2 );
    sensitive << ( tmp_fu_286_p2 );

    SC_METHOD(thread_tmp_5_fu_360_p2);
    sensitive << ( mC );
    sensitive << ( tmp_4_reg_520 );
    sensitive << ( exitcond_flatten_fu_316_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_cast_fu_356_p1 );

    SC_METHOD(thread_tmp_6_fu_365_p2);
    sensitive << ( tmp_4_reg_520 );
    sensitive << ( exitcond_flatten_fu_316_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_mid2_fu_348_p3 );

    SC_METHOD(thread_tmp_8_fu_386_p2);
    sensitive << ( tmp_4_reg_520 );
    sensitive << ( exitcond_flatten_fu_316_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( j_mid2_fu_334_p3 );
    sensitive << ( tmp_s_fu_380_p2 );

    SC_METHOD(thread_tmp_9_fu_375_p2);
    sensitive << ( nC );
    sensitive << ( tmp_4_reg_520 );
    sensitive << ( exitcond_flatten_fu_316_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( j_cast_fu_371_p1 );

    SC_METHOD(thread_tmp_fu_286_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( nA );
    sensitive << ( mB );

    SC_METHOD(thread_tmp_s_fu_380_p2);
    sensitive << ( tmp_5_fu_360_p2 );
    sensitive << ( tmp_9_fu_375_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_4_reg_520 );
    sensitive << ( exitcond_flatten_fu_316_p2 );
    sensitive << ( tmp_6_reg_545 );
    sensitive << ( tmp_s_fu_380_p2 );
    sensitive << ( tmp_8_fu_386_p2 );
    sensitive << ( exitcond2_fu_392_p2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_118 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond1_fu_412_p2 );
    sensitive << ( ap_reg_ppiten_pp1_it0 );
    sensitive << ( ap_sig_bdd_154 );
    sensitive << ( ap_reg_ppiten_pp1_it1 );
    sensitive << ( exitcond_fu_442_p2 );
    sensitive << ( ap_reg_ppiten_pp2_it0 );
    sensitive << ( ap_reg_ppiten_pp2_it1 );
    sensitive << ( ap_reg_ppiten_pp2_it7 );
    sensitive << ( ap_reg_ppiten_pp2_it8 );
    sensitive << ( ap_sig_bdd_278 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000001";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp1_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp1_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp2_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp2_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp2_it2 = SC_LOGIC_0;
    ap_reg_ppiten_pp2_it3 = SC_LOGIC_0;
    ap_reg_ppiten_pp2_it4 = SC_LOGIC_0;
    ap_reg_ppiten_pp2_it5 = SC_LOGIC_0;
    ap_reg_ppiten_pp2_it6 = SC_LOGIC_0;
    ap_reg_ppiten_pp2_it7 = SC_LOGIC_0;
    ap_reg_ppiten_pp2_it8 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "MAT_Multiply_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_dout, "(port)A_dout");
    sc_trace(mVcdFile, A_empty_n, "(port)A_empty_n");
    sc_trace(mVcdFile, A_read, "(port)A_read");
    sc_trace(mVcdFile, B_dout, "(port)B_dout");
    sc_trace(mVcdFile, B_empty_n, "(port)B_empty_n");
    sc_trace(mVcdFile, B_read, "(port)B_read");
    sc_trace(mVcdFile, C_din, "(port)C_din");
    sc_trace(mVcdFile, C_full_n, "(port)C_full_n");
    sc_trace(mVcdFile, C_write, "(port)C_write");
    sc_trace(mVcdFile, mA, "(port)mA");
    sc_trace(mVcdFile, nA, "(port)nA");
    sc_trace(mVcdFile, mB, "(port)mB");
    sc_trace(mVcdFile, nB, "(port)nB");
    sc_trace(mVcdFile, mC, "(port)mC");
    sc_trace(mVcdFile, nC, "(port)nC");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_24, "ap_sig_bdd_24");
    sc_trace(mVcdFile, k_reg_216, "k_reg_216");
    sc_trace(mVcdFile, k_1_reg_228, "k_1_reg_228");
    sc_trace(mVcdFile, phi_mul_reg_239, "phi_mul_reg_239");
    sc_trace(mVcdFile, k_2_reg_250, "k_2_reg_250");
    sc_trace(mVcdFile, temp_reg_261, "temp_reg_261");
    sc_trace(mVcdFile, phi_mul5_reg_274, "phi_mul5_reg_274");
    sc_trace(mVcdFile, tmp_4_fu_310_p2, "tmp_4_fu_310_p2");
    sc_trace(mVcdFile, tmp_4_reg_520, "tmp_4_reg_520");
    sc_trace(mVcdFile, exitcond_flatten_fu_316_p2, "exitcond_flatten_fu_316_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_79, "ap_sig_bdd_79");
    sc_trace(mVcdFile, indvar_flatten_next_fu_322_p2, "indvar_flatten_next_fu_322_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_528, "indvar_flatten_next_reg_528");
    sc_trace(mVcdFile, j_mid2_fu_334_p3, "j_mid2_fu_334_p3");
    sc_trace(mVcdFile, j_mid2_reg_533, "j_mid2_reg_533");
    sc_trace(mVcdFile, i_mid2_fu_348_p3, "i_mid2_fu_348_p3");
    sc_trace(mVcdFile, i_mid2_reg_540, "i_mid2_reg_540");
    sc_trace(mVcdFile, tmp_6_fu_365_p2, "tmp_6_fu_365_p2");
    sc_trace(mVcdFile, tmp_6_reg_545, "tmp_6_reg_545");
    sc_trace(mVcdFile, tmp_s_fu_380_p2, "tmp_s_fu_380_p2");
    sc_trace(mVcdFile, tmp_s_reg_549, "tmp_s_reg_549");
    sc_trace(mVcdFile, tmp_8_fu_386_p2, "tmp_8_fu_386_p2");
    sc_trace(mVcdFile, exitcond2_fu_392_p2, "exitcond2_fu_392_p2");
    sc_trace(mVcdFile, exitcond2_reg_557, "exitcond2_reg_557");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_2, "ap_sig_cseq_ST_pp0_stg0_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_111, "ap_sig_bdd_111");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_sig_bdd_118, "ap_sig_bdd_118");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, k_3_fu_398_p2, "k_3_fu_398_p2");
    sc_trace(mVcdFile, k_3_reg_561, "k_3_reg_561");
    sc_trace(mVcdFile, tmp_11_trn_cast_fu_409_p1, "tmp_11_trn_cast_fu_409_p1");
    sc_trace(mVcdFile, tmp_11_trn_cast_reg_566, "tmp_11_trn_cast_reg_566");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_3, "ap_sig_cseq_ST_st5_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_135, "ap_sig_bdd_135");
    sc_trace(mVcdFile, exitcond1_fu_412_p2, "exitcond1_fu_412_p2");
    sc_trace(mVcdFile, exitcond1_reg_571, "exitcond1_reg_571");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp1_stg0_fsm_4, "ap_sig_cseq_ST_pp1_stg0_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_147, "ap_sig_bdd_147");
    sc_trace(mVcdFile, ap_reg_ppiten_pp1_it0, "ap_reg_ppiten_pp1_it0");
    sc_trace(mVcdFile, ap_sig_bdd_154, "ap_sig_bdd_154");
    sc_trace(mVcdFile, ap_reg_ppiten_pp1_it1, "ap_reg_ppiten_pp1_it1");
    sc_trace(mVcdFile, k_4_fu_418_p2, "k_4_fu_418_p2");
    sc_trace(mVcdFile, next_mul_fu_424_p2, "next_mul_fu_424_p2");
    sc_trace(mVcdFile, p_addr4_fu_430_p2, "p_addr4_fu_430_p2");
    sc_trace(mVcdFile, p_addr4_reg_585, "p_addr4_reg_585");
    sc_trace(mVcdFile, tmp_13_trn_cast_fu_439_p1, "tmp_13_trn_cast_fu_439_p1");
    sc_trace(mVcdFile, tmp_13_trn_cast_reg_590, "tmp_13_trn_cast_reg_590");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_5, "ap_sig_cseq_ST_st8_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_178, "ap_sig_bdd_178");
    sc_trace(mVcdFile, exitcond_fu_442_p2, "exitcond_fu_442_p2");
    sc_trace(mVcdFile, exitcond_reg_595, "exitcond_reg_595");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp2_stg0_fsm_6, "ap_sig_cseq_ST_pp2_stg0_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_187, "ap_sig_bdd_187");
    sc_trace(mVcdFile, ap_reg_ppiten_pp2_it0, "ap_reg_ppiten_pp2_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp2_it1, "ap_reg_ppiten_pp2_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp2_it2, "ap_reg_ppiten_pp2_it2");
    sc_trace(mVcdFile, ap_reg_ppiten_pp2_it3, "ap_reg_ppiten_pp2_it3");
    sc_trace(mVcdFile, ap_reg_ppiten_pp2_it4, "ap_reg_ppiten_pp2_it4");
    sc_trace(mVcdFile, ap_reg_ppiten_pp2_it5, "ap_reg_ppiten_pp2_it5");
    sc_trace(mVcdFile, ap_reg_ppiten_pp2_it6, "ap_reg_ppiten_pp2_it6");
    sc_trace(mVcdFile, ap_reg_ppiten_pp2_it7, "ap_reg_ppiten_pp2_it7");
    sc_trace(mVcdFile, ap_reg_ppiten_pp2_it8, "ap_reg_ppiten_pp2_it8");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_595_pp2_it1, "ap_reg_ppstg_exitcond_reg_595_pp2_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_595_pp2_it2, "ap_reg_ppstg_exitcond_reg_595_pp2_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_595_pp2_it3, "ap_reg_ppstg_exitcond_reg_595_pp2_it3");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_595_pp2_it4, "ap_reg_ppstg_exitcond_reg_595_pp2_it4");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_595_pp2_it5, "ap_reg_ppstg_exitcond_reg_595_pp2_it5");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_595_pp2_it6, "ap_reg_ppstg_exitcond_reg_595_pp2_it6");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_reg_595_pp2_it7, "ap_reg_ppstg_exitcond_reg_595_pp2_it7");
    sc_trace(mVcdFile, k_5_fu_448_p2, "k_5_fu_448_p2");
    sc_trace(mVcdFile, tmp_14_fu_458_p2, "tmp_14_fu_458_p2");
    sc_trace(mVcdFile, tmp_14_reg_604, "tmp_14_reg_604");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_14_reg_604_pp2_it1, "ap_reg_ppstg_tmp_14_reg_604_pp2_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_14_reg_604_pp2_it2, "ap_reg_ppstg_tmp_14_reg_604_pp2_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_14_reg_604_pp2_it3, "ap_reg_ppstg_tmp_14_reg_604_pp2_it3");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_14_reg_604_pp2_it4, "ap_reg_ppstg_tmp_14_reg_604_pp2_it4");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_14_reg_604_pp2_it5, "ap_reg_ppstg_tmp_14_reg_604_pp2_it5");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_14_reg_604_pp2_it6, "ap_reg_ppstg_tmp_14_reg_604_pp2_it6");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_14_reg_604_pp2_it7, "ap_reg_ppstg_tmp_14_reg_604_pp2_it7");
    sc_trace(mVcdFile, next_mul6_fu_468_p2, "next_mul6_fu_468_p2");
    sc_trace(mVcdFile, A_cached_row_q0, "A_cached_row_q0");
    sc_trace(mVcdFile, A_cached_row_load_reg_624, "A_cached_row_load_reg_624");
    sc_trace(mVcdFile, B_cached_q0, "B_cached_q0");
    sc_trace(mVcdFile, B_cached_load_reg_629, "B_cached_load_reg_629");
    sc_trace(mVcdFile, grp_fu_484_p2, "grp_fu_484_p2");
    sc_trace(mVcdFile, tmp_16_reg_634, "tmp_16_reg_634");
    sc_trace(mVcdFile, temp_1_fu_493_p3, "temp_1_fu_493_p3");
    sc_trace(mVcdFile, j_1_fu_500_p2, "j_1_fu_500_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st18_fsm_7, "ap_sig_cseq_ST_st18_fsm_7");
    sc_trace(mVcdFile, ap_sig_bdd_272, "ap_sig_bdd_272");
    sc_trace(mVcdFile, ap_sig_bdd_278, "ap_sig_bdd_278");
    sc_trace(mVcdFile, A_cached_row_address0, "A_cached_row_address0");
    sc_trace(mVcdFile, A_cached_row_ce0, "A_cached_row_ce0");
    sc_trace(mVcdFile, A_cached_row_we0, "A_cached_row_we0");
    sc_trace(mVcdFile, A_cached_row_d0, "A_cached_row_d0");
    sc_trace(mVcdFile, B_cached_address0, "B_cached_address0");
    sc_trace(mVcdFile, B_cached_ce0, "B_cached_ce0");
    sc_trace(mVcdFile, B_cached_we0, "B_cached_we0");
    sc_trace(mVcdFile, B_cached_d0, "B_cached_d0");
    sc_trace(mVcdFile, indvar_flatten_reg_183, "indvar_flatten_reg_183");
    sc_trace(mVcdFile, i_reg_194, "i_reg_194");
    sc_trace(mVcdFile, j_reg_205, "j_reg_205");
    sc_trace(mVcdFile, k_phi_fu_220_p4, "k_phi_fu_220_p4");
    sc_trace(mVcdFile, tmp_10_fu_404_p1, "tmp_10_fu_404_p1");
    sc_trace(mVcdFile, tmp_12_fu_435_p1, "tmp_12_fu_435_p1");
    sc_trace(mVcdFile, tmp_15_fu_463_p1, "tmp_15_fu_463_p1");
    sc_trace(mVcdFile, tmp_17_fu_479_p1, "tmp_17_fu_479_p1");
    sc_trace(mVcdFile, tmp_1_fu_292_p2, "tmp_1_fu_292_p2");
    sc_trace(mVcdFile, tmp_3_fu_298_p2, "tmp_3_fu_298_p2");
    sc_trace(mVcdFile, tmp1_fu_304_p2, "tmp1_fu_304_p2");
    sc_trace(mVcdFile, tmp_fu_286_p2, "tmp_fu_286_p2");
    sc_trace(mVcdFile, exitcond3_fu_328_p2, "exitcond3_fu_328_p2");
    sc_trace(mVcdFile, i_s_fu_342_p2, "i_s_fu_342_p2");
    sc_trace(mVcdFile, i_cast_fu_356_p1, "i_cast_fu_356_p1");
    sc_trace(mVcdFile, j_cast_fu_371_p1, "j_cast_fu_371_p1");
    sc_trace(mVcdFile, tmp_5_fu_360_p2, "tmp_5_fu_360_p2");
    sc_trace(mVcdFile, tmp_9_fu_375_p2, "tmp_9_fu_375_p2");
    sc_trace(mVcdFile, k_2_cast_fu_454_p1, "k_2_cast_fu_454_p1");
    sc_trace(mVcdFile, p_addr2_fu_474_p2, "p_addr2_fu_474_p2");
    sc_trace(mVcdFile, grp_fu_484_p0, "grp_fu_484_p0");
    sc_trace(mVcdFile, grp_fu_484_p1, "grp_fu_484_p1");
    sc_trace(mVcdFile, temp_2_fu_488_p2, "temp_2_fu_488_p2");
    sc_trace(mVcdFile, grp_fu_484_ce, "grp_fu_484_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("MAT_Multiply.hdltvin.dat");
    mHdltvoutHandle.open("MAT_Multiply.hdltvout.dat");
}

MAT_Multiply::~MAT_Multiply() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete A_cached_row_U;
    delete B_cached_U;
    delete MAT_Multiply_mul_32s_32s_32_6_U0;
}

void MAT_Multiply::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
             !(ap_sig_bdd_118.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_392_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                    !esl_seteq<1,1,1>(tmp_4_reg_520.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(exitcond_flatten_fu_316_p2.read(), ap_const_lv1_0) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_380_p2.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_386_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
             !(ap_sig_bdd_118.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_392_p2.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                     !esl_seteq<1,1,1>(tmp_4_reg_520.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(exitcond_flatten_fu_316_p2.read(), ap_const_lv1_0) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_380_p2.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_386_p2.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
                     !(ap_sig_bdd_118.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_392_p2.read())))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp1_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_4.read()) && 
             !(ap_sig_bdd_154.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_412_p2.read()))) {
            ap_reg_ppiten_pp1_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_3.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_545.read()))) {
            ap_reg_ppiten_pp1_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp1_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_4.read()) && 
             !(ap_sig_bdd_154.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_412_p2.read()))) {
            ap_reg_ppiten_pp1_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_3.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_545.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_4.read()) && 
                     !(ap_sig_bdd_154.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_412_p2.read())))) {
            ap_reg_ppiten_pp1_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp2_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_6.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_442_p2.read()))) {
            ap_reg_ppiten_pp2_it0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_5.read())) {
            ap_reg_ppiten_pp2_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp2_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_6.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_442_p2.read()))) {
            ap_reg_ppiten_pp2_it1 = ap_const_logic_1;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_5.read()) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_6.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_442_p2.read())))) {
            ap_reg_ppiten_pp2_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp2_it2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            ap_reg_ppiten_pp2_it2 = ap_reg_ppiten_pp2_it1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp2_it3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            ap_reg_ppiten_pp2_it3 = ap_reg_ppiten_pp2_it2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp2_it4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            ap_reg_ppiten_pp2_it4 = ap_reg_ppiten_pp2_it3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp2_it5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            ap_reg_ppiten_pp2_it5 = ap_reg_ppiten_pp2_it4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp2_it6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            ap_reg_ppiten_pp2_it6 = ap_reg_ppiten_pp2_it5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp2_it7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            ap_reg_ppiten_pp2_it7 = ap_reg_ppiten_pp2_it6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp2_it8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            ap_reg_ppiten_pp2_it8 = ap_reg_ppiten_pp2_it7.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_5.read())) {
            ap_reg_ppiten_pp2_it8 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         !esl_seteq<1,1,1>(tmp_4_fu_310_p2.read(), ap_const_lv1_0))) {
        i_reg_194 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_7.read()) && 
                !ap_sig_bdd_278.read())) {
        i_reg_194 = i_mid2_reg_540.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         !esl_seteq<1,1,1>(tmp_4_fu_310_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_183 = ap_const_lv14_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_7.read()) && 
                !ap_sig_bdd_278.read())) {
        indvar_flatten_reg_183 = indvar_flatten_next_reg_528.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         !esl_seteq<1,1,1>(tmp_4_fu_310_p2.read(), ap_const_lv1_0))) {
        j_reg_205 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_7.read()) && 
                !ap_sig_bdd_278.read())) {
        j_reg_205 = j_1_fu_500_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_545.read()))) {
        k_1_reg_228 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && 
                !(ap_sig_bdd_154.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_412_p2.read()))) {
        k_1_reg_228 = k_4_fu_418_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_442_p2.read()))) {
        k_2_reg_250 = k_5_fu_448_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_5.read())) {
        k_2_reg_250 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(tmp_4_reg_520.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_316_p2.read(), ap_const_lv1_0) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_380_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_386_p2.read()))) {
        k_reg_216 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_557.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
                !(ap_sig_bdd_118.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        k_reg_216 = k_3_reg_561.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_442_p2.read()))) {
        phi_mul5_reg_274 = next_mul6_fu_468_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_5.read())) {
        phi_mul5_reg_274 = ap_const_lv14_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_545.read()))) {
        phi_mul_reg_239 = ap_const_lv14_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && 
                !(ap_sig_bdd_154.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_412_p2.read()))) {
        phi_mul_reg_239 = next_mul_fu_424_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_595_pp2_it7.read()))) {
        temp_reg_261 = temp_1_fu_493_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_5.read())) {
        temp_reg_261 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_595.read()))) {
        A_cached_row_load_reg_624 = A_cached_row_q0.read();
        B_cached_load_reg_629 = B_cached_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_6.read())) {
        ap_reg_ppstg_exitcond_reg_595_pp2_it1 = exitcond_reg_595.read();
        ap_reg_ppstg_tmp_14_reg_604_pp2_it1 = tmp_14_reg_604.read();
        exitcond_reg_595 = exitcond_fu_442_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_true, ap_true)) {
        ap_reg_ppstg_exitcond_reg_595_pp2_it2 = ap_reg_ppstg_exitcond_reg_595_pp2_it1.read();
        ap_reg_ppstg_exitcond_reg_595_pp2_it3 = ap_reg_ppstg_exitcond_reg_595_pp2_it2.read();
        ap_reg_ppstg_exitcond_reg_595_pp2_it4 = ap_reg_ppstg_exitcond_reg_595_pp2_it3.read();
        ap_reg_ppstg_exitcond_reg_595_pp2_it5 = ap_reg_ppstg_exitcond_reg_595_pp2_it4.read();
        ap_reg_ppstg_exitcond_reg_595_pp2_it6 = ap_reg_ppstg_exitcond_reg_595_pp2_it5.read();
        ap_reg_ppstg_exitcond_reg_595_pp2_it7 = ap_reg_ppstg_exitcond_reg_595_pp2_it6.read();
        ap_reg_ppstg_tmp_14_reg_604_pp2_it2 = ap_reg_ppstg_tmp_14_reg_604_pp2_it1.read();
        ap_reg_ppstg_tmp_14_reg_604_pp2_it3 = ap_reg_ppstg_tmp_14_reg_604_pp2_it2.read();
        ap_reg_ppstg_tmp_14_reg_604_pp2_it4 = ap_reg_ppstg_tmp_14_reg_604_pp2_it3.read();
        ap_reg_ppstg_tmp_14_reg_604_pp2_it5 = ap_reg_ppstg_tmp_14_reg_604_pp2_it4.read();
        ap_reg_ppstg_tmp_14_reg_604_pp2_it6 = ap_reg_ppstg_tmp_14_reg_604_pp2_it5.read();
        ap_reg_ppstg_tmp_14_reg_604_pp2_it7 = ap_reg_ppstg_tmp_14_reg_604_pp2_it6.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_4.read()) && !(ap_sig_bdd_154.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())))) {
        exitcond1_reg_571 = exitcond1_fu_412_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && !(ap_sig_bdd_118.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        exitcond2_reg_557 = exitcond2_fu_392_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && !esl_seteq<1,1,1>(tmp_4_reg_520.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_316_p2.read(), ap_const_lv1_0))) {
        i_mid2_reg_540 = i_mid2_fu_348_p3.read();
        j_mid2_reg_533 = j_mid2_fu_334_p3.read();
        tmp_6_reg_545 = tmp_6_fu_365_p2.read();
        tmp_s_reg_549 = tmp_s_fu_380_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && !esl_seteq<1,1,1>(tmp_4_reg_520.read(), ap_const_lv1_0))) {
        indvar_flatten_next_reg_528 = indvar_flatten_next_fu_322_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(ap_sig_bdd_118.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        k_3_reg_561 = k_3_fu_398_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_4.read()) && !(ap_sig_bdd_154.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_412_p2.read()))) {
        p_addr4_reg_585 = p_addr4_fu_430_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_3.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_545.read()))) {
        tmp_11_trn_cast_reg_566 = tmp_11_trn_cast_fu_409_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_5.read())) {
        tmp_13_trn_cast_reg_590 = tmp_13_trn_cast_fu_439_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_442_p2.read()))) {
        tmp_14_reg_604 = tmp_14_fu_458_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_reg_595_pp2_it6.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_tmp_14_reg_604_pp2_it6.read()))) {
        tmp_16_reg_634 = grp_fu_484_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tmp_4_reg_520 = tmp_4_fu_310_p2.read();
    }
}

void MAT_Multiply::thread_A_cached_row_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        A_cached_row_address0 =  (sc_lv<7>) (tmp_10_fu_404_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_6.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it0.read()))) {
        A_cached_row_address0 =  (sc_lv<7>) (tmp_15_fu_463_p1.read());
    } else {
        A_cached_row_address0 = "XXXXXXX";
    }
}

void MAT_Multiply::thread_A_cached_row_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_6.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          !(ap_sig_bdd_118.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))))) {
        A_cached_row_ce0 = ap_const_logic_1;
    } else {
        A_cached_row_ce0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_A_cached_row_d0() {
    A_cached_row_d0 = A_dout.read();
}

void MAT_Multiply::thread_A_cached_row_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_557.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          !(ap_sig_bdd_118.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))))) {
        A_cached_row_we0 = ap_const_logic_1;
    } else {
        A_cached_row_we0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_A_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_557.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !(ap_sig_bdd_118.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        A_read = ap_const_logic_1;
    } else {
        A_read = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_B_cached_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()))) {
        B_cached_address0 =  (sc_lv<14>) (tmp_12_fu_435_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_6.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it0.read()))) {
        B_cached_address0 =  (sc_lv<14>) (tmp_17_fu_479_p1.read());
    } else {
        B_cached_address0 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void MAT_Multiply::thread_B_cached_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp2_stg0_fsm_6.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && 
          !(ap_sig_bdd_154.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()))))) {
        B_cached_ce0 = ap_const_logic_1;
    } else {
        B_cached_ce0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_B_cached_d0() {
    B_cached_d0 = B_dout.read();
}

void MAT_Multiply::thread_B_cached_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_571.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && 
          !(ap_sig_bdd_154.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()))))) {
        B_cached_we0 = ap_const_logic_1;
    } else {
        B_cached_we0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_B_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp1_stg0_fsm_4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_571.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read()) && 
         !(ap_sig_bdd_154.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())))) {
        B_read = ap_const_logic_1;
    } else {
        B_read = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_C_din() {
    C_din = temp_reg_261.read();
}

void MAT_Multiply::thread_C_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_7.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_549.read()) && 
         !ap_sig_bdd_278.read())) {
        C_write = ap_const_logic_1;
    } else {
        C_write = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         (esl_seteq<1,1,1>(tmp_4_reg_520.read(), ap_const_lv1_0) || 
          !esl_seteq<1,1,1>(exitcond_flatten_fu_316_p2.read(), ap_const_lv1_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         (esl_seteq<1,1,1>(tmp_4_reg_520.read(), ap_const_lv1_0) || 
          !esl_seteq<1,1,1>(exitcond_flatten_fu_316_p2.read(), ap_const_lv1_0)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_bdd_111() {
    ap_sig_bdd_111 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void MAT_Multiply::thread_ap_sig_bdd_118() {
    ap_sig_bdd_118 = (esl_seteq<1,1,1>(A_empty_n.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_557.read()));
}

void MAT_Multiply::thread_ap_sig_bdd_135() {
    ap_sig_bdd_135 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void MAT_Multiply::thread_ap_sig_bdd_147() {
    ap_sig_bdd_147 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void MAT_Multiply::thread_ap_sig_bdd_154() {
    ap_sig_bdd_154 = (esl_seteq<1,1,1>(B_empty_n.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_571.read()));
}

void MAT_Multiply::thread_ap_sig_bdd_178() {
    ap_sig_bdd_178 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void MAT_Multiply::thread_ap_sig_bdd_187() {
    ap_sig_bdd_187 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void MAT_Multiply::thread_ap_sig_bdd_24() {
    ap_sig_bdd_24 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void MAT_Multiply::thread_ap_sig_bdd_272() {
    ap_sig_bdd_272 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void MAT_Multiply::thread_ap_sig_bdd_278() {
    ap_sig_bdd_278 = (esl_seteq<1,1,1>(C_full_n.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_549.read()));
}

void MAT_Multiply::thread_ap_sig_bdd_79() {
    ap_sig_bdd_79 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void MAT_Multiply::thread_ap_sig_cseq_ST_pp0_stg0_fsm_2() {
    if (ap_sig_bdd_111.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_pp1_stg0_fsm_4() {
    if (ap_sig_bdd_147.read()) {
        ap_sig_cseq_ST_pp1_stg0_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp1_stg0_fsm_4 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_pp2_stg0_fsm_6() {
    if (ap_sig_bdd_187.read()) {
        ap_sig_cseq_ST_pp2_stg0_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp2_stg0_fsm_6 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st18_fsm_7() {
    if (ap_sig_bdd_272.read()) {
        ap_sig_cseq_ST_st18_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st18_fsm_7 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_24.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_79.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st5_fsm_3() {
    if (ap_sig_bdd_135.read()) {
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st8_fsm_5() {
    if (ap_sig_bdd_178.read()) {
        ap_sig_cseq_ST_st8_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_5 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_exitcond1_fu_412_p2() {
    exitcond1_fu_412_p2 = (!k_1_reg_228.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(k_1_reg_228.read() == ap_const_lv7_64);
}

void MAT_Multiply::thread_exitcond2_fu_392_p2() {
    exitcond2_fu_392_p2 = (!k_phi_fu_220_p4.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(k_phi_fu_220_p4.read() == ap_const_lv7_64);
}

void MAT_Multiply::thread_exitcond3_fu_328_p2() {
    exitcond3_fu_328_p2 = (!j_reg_205.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_205.read() == ap_const_lv7_64);
}

void MAT_Multiply::thread_exitcond_flatten_fu_316_p2() {
    exitcond_flatten_fu_316_p2 = (!indvar_flatten_reg_183.read().is_01() || !ap_const_lv14_2710.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_183.read() == ap_const_lv14_2710);
}

void MAT_Multiply::thread_exitcond_fu_442_p2() {
    exitcond_fu_442_p2 = (!k_2_reg_250.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(k_2_reg_250.read() == ap_const_lv7_64);
}

void MAT_Multiply::thread_grp_fu_484_ce() {
    grp_fu_484_ce = ap_const_logic_1;
}

void MAT_Multiply::thread_grp_fu_484_p0() {
    grp_fu_484_p0 = B_cached_load_reg_629.read();
}

void MAT_Multiply::thread_grp_fu_484_p1() {
    grp_fu_484_p1 = A_cached_row_load_reg_624.read();
}

void MAT_Multiply::thread_i_cast_fu_356_p1() {
    i_cast_fu_356_p1 = esl_zext<8,7>(i_mid2_fu_348_p3.read());
}

void MAT_Multiply::thread_i_mid2_fu_348_p3() {
    i_mid2_fu_348_p3 = (!exitcond3_fu_328_p2.read()[0].is_01())? sc_lv<7>(): ((exitcond3_fu_328_p2.read()[0].to_bool())? i_s_fu_342_p2.read(): i_reg_194.read());
}

void MAT_Multiply::thread_i_s_fu_342_p2() {
    i_s_fu_342_p2 = (!i_reg_194.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_reg_194.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void MAT_Multiply::thread_indvar_flatten_next_fu_322_p2() {
    indvar_flatten_next_fu_322_p2 = (!indvar_flatten_reg_183.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(indvar_flatten_reg_183.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void MAT_Multiply::thread_j_1_fu_500_p2() {
    j_1_fu_500_p2 = (!j_mid2_reg_533.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_mid2_reg_533.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void MAT_Multiply::thread_j_cast_fu_371_p1() {
    j_cast_fu_371_p1 = esl_zext<8,7>(j_mid2_fu_334_p3.read());
}

void MAT_Multiply::thread_j_mid2_fu_334_p3() {
    j_mid2_fu_334_p3 = (!exitcond3_fu_328_p2.read()[0].is_01())? sc_lv<7>(): ((exitcond3_fu_328_p2.read()[0].to_bool())? ap_const_lv7_0: j_reg_205.read());
}

void MAT_Multiply::thread_k_2_cast_fu_454_p1() {
    k_2_cast_fu_454_p1 = esl_zext<8,7>(k_2_reg_250.read());
}

void MAT_Multiply::thread_k_3_fu_398_p2() {
    k_3_fu_398_p2 = (!k_phi_fu_220_p4.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(k_phi_fu_220_p4.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void MAT_Multiply::thread_k_4_fu_418_p2() {
    k_4_fu_418_p2 = (!k_1_reg_228.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(k_1_reg_228.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void MAT_Multiply::thread_k_5_fu_448_p2() {
    k_5_fu_448_p2 = (!k_2_reg_250.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(k_2_reg_250.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void MAT_Multiply::thread_k_phi_fu_220_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_557.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        k_phi_fu_220_p4 = k_3_reg_561.read();
    } else {
        k_phi_fu_220_p4 = k_reg_216.read();
    }
}

void MAT_Multiply::thread_next_mul6_fu_468_p2() {
    next_mul6_fu_468_p2 = (!phi_mul5_reg_274.read().is_01() || !ap_const_lv14_64.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul5_reg_274.read()) + sc_biguint<14>(ap_const_lv14_64));
}

void MAT_Multiply::thread_next_mul_fu_424_p2() {
    next_mul_fu_424_p2 = (!phi_mul_reg_239.read().is_01() || !ap_const_lv14_64.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul_reg_239.read()) + sc_biguint<14>(ap_const_lv14_64));
}

void MAT_Multiply::thread_p_addr2_fu_474_p2() {
    p_addr2_fu_474_p2 = (!tmp_13_trn_cast_reg_590.read().is_01() || !phi_mul5_reg_274.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_13_trn_cast_reg_590.read()) + sc_biguint<14>(phi_mul5_reg_274.read()));
}

void MAT_Multiply::thread_p_addr4_fu_430_p2() {
    p_addr4_fu_430_p2 = (!tmp_11_trn_cast_reg_566.read().is_01() || !phi_mul_reg_239.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_11_trn_cast_reg_566.read()) + sc_biguint<14>(phi_mul_reg_239.read()));
}

void MAT_Multiply::thread_temp_1_fu_493_p3() {
    temp_1_fu_493_p3 = (!ap_reg_ppstg_tmp_14_reg_604_pp2_it7.read()[0].is_01())? sc_lv<32>(): ((ap_reg_ppstg_tmp_14_reg_604_pp2_it7.read()[0].to_bool())? temp_2_fu_488_p2.read(): temp_reg_261.read());
}

void MAT_Multiply::thread_temp_2_fu_488_p2() {
    temp_2_fu_488_p2 = (!tmp_16_reg_634.read().is_01() || !temp_reg_261.read().is_01())? sc_lv<32>(): (sc_bigint<32>(tmp_16_reg_634.read()) + sc_biguint<32>(temp_reg_261.read()));
}

void MAT_Multiply::thread_tmp1_fu_304_p2() {
    tmp1_fu_304_p2 = (tmp_1_fu_292_p2.read() & tmp_3_fu_298_p2.read());
}

void MAT_Multiply::thread_tmp_10_fu_404_p1() {
    tmp_10_fu_404_p1 = esl_zext<64,7>(k_reg_216.read());
}

void MAT_Multiply::thread_tmp_11_trn_cast_fu_409_p1() {
    tmp_11_trn_cast_fu_409_p1 = esl_zext<14,7>(j_mid2_reg_533.read());
}

void MAT_Multiply::thread_tmp_12_fu_435_p1() {
    tmp_12_fu_435_p1 = esl_zext<64,14>(p_addr4_reg_585.read());
}

void MAT_Multiply::thread_tmp_13_trn_cast_fu_439_p1() {
    tmp_13_trn_cast_fu_439_p1 = esl_zext<14,7>(j_mid2_reg_533.read());
}

void MAT_Multiply::thread_tmp_14_fu_458_p2() {
    tmp_14_fu_458_p2 = (!k_2_cast_fu_454_p1.read().is_01() || !mB.read().is_01())? sc_lv<1>(): (sc_biguint<8>(k_2_cast_fu_454_p1.read()) < sc_biguint<8>(mB.read()));
}

void MAT_Multiply::thread_tmp_15_fu_463_p1() {
    tmp_15_fu_463_p1 = esl_zext<64,7>(k_2_reg_250.read());
}

void MAT_Multiply::thread_tmp_17_fu_479_p1() {
    tmp_17_fu_479_p1 = esl_zext<64,14>(p_addr2_fu_474_p2.read());
}

void MAT_Multiply::thread_tmp_1_fu_292_p2() {
    tmp_1_fu_292_p2 = (!mA.read().is_01() || !mC.read().is_01())? sc_lv<1>(): sc_lv<1>(mA.read() == mC.read());
}

void MAT_Multiply::thread_tmp_3_fu_298_p2() {
    tmp_3_fu_298_p2 = (!nB.read().is_01() || !nC.read().is_01())? sc_lv<1>(): sc_lv<1>(nB.read() == nC.read());
}

void MAT_Multiply::thread_tmp_4_fu_310_p2() {
    tmp_4_fu_310_p2 = (tmp1_fu_304_p2.read() & tmp_fu_286_p2.read());
}

void MAT_Multiply::thread_tmp_5_fu_360_p2() {
    tmp_5_fu_360_p2 = (!i_cast_fu_356_p1.read().is_01() || !mC.read().is_01())? sc_lv<1>(): (sc_biguint<8>(i_cast_fu_356_p1.read()) < sc_biguint<8>(mC.read()));
}

void MAT_Multiply::thread_tmp_6_fu_365_p2() {
    tmp_6_fu_365_p2 = (!i_mid2_fu_348_p3.read().is_01() || !ap_const_lv7_0.is_01())? sc_lv<1>(): sc_lv<1>(i_mid2_fu_348_p3.read() == ap_const_lv7_0);
}

void MAT_Multiply::thread_tmp_8_fu_386_p2() {
    tmp_8_fu_386_p2 = (!j_mid2_fu_334_p3.read().is_01() || !ap_const_lv7_0.is_01())? sc_lv<1>(): sc_lv<1>(j_mid2_fu_334_p3.read() == ap_const_lv7_0);
}

void MAT_Multiply::thread_tmp_9_fu_375_p2() {
    tmp_9_fu_375_p2 = (!j_cast_fu_371_p1.read().is_01() || !nC.read().is_01())? sc_lv<1>(): (sc_biguint<8>(j_cast_fu_371_p1.read()) < sc_biguint<8>(nC.read()));
}

void MAT_Multiply::thread_tmp_fu_286_p2() {
    tmp_fu_286_p2 = (!nA.read().is_01() || !mB.read().is_01())? sc_lv<1>(): sc_lv<1>(nA.read() == mB.read());
}

void MAT_Multiply::thread_tmp_s_fu_380_p2() {
    tmp_s_fu_380_p2 = (tmp_5_fu_360_p2.read() & tmp_9_fu_375_p2.read());
}

void MAT_Multiply::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_4_reg_520.read(), ap_const_lv1_0) || !esl_seteq<1,1,1>(exitcond_flatten_fu_316_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else if ((!esl_seteq<1,1,1>(tmp_4_reg_520.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_316_p2.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_380_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_386_p2.read()))) {
                ap_NS_fsm = ap_ST_st5_fsm_3;
            } else if ((!esl_seteq<1,1,1>(tmp_4_reg_520.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_316_p2.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_380_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_386_p2.read()))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st18_fsm_7;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(ap_sig_bdd_118.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_392_p2.read()))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(ap_sig_bdd_118.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_392_p2.read()))) {
                ap_NS_fsm = ap_ST_st5_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            }
            break;
        case 8 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_545.read())) {
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st8_fsm_5;
            }
            break;
        case 16 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && !(ap_sig_bdd_154.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_412_p2.read()))) {
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it0.read()) && !(ap_sig_bdd_154.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp1_it1.read())) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_412_p2.read()))) {
                ap_NS_fsm = ap_ST_st8_fsm_5;
            } else {
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_pp2_stg0_fsm_6;
            break;
        case 64 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it8.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it7.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_442_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read())))) {
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_6;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_442_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp2_it1.read()))) {
                ap_NS_fsm = ap_ST_st18_fsm_7;
            } else {
                ap_NS_fsm = ap_ST_st18_fsm_7;
            }
            break;
        case 128 : 
            if (!ap_sig_bdd_278.read()) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st18_fsm_7;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

void MAT_Multiply::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_dout\" :  \"" << A_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_empty_n\" :  \"" << A_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_read\" :  \"" << A_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_dout\" :  \"" << B_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_empty_n\" :  \"" << B_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_read\" :  \"" << B_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_din\" :  \"" << C_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_full_n\" :  \"" << C_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_write\" :  \"" << C_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mA\" :  \"" << mA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nA\" :  \"" << nA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mB\" :  \"" << mB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nB\" :  \"" << nB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mC\" :  \"" << mC.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nC\" :  \"" << nC.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

