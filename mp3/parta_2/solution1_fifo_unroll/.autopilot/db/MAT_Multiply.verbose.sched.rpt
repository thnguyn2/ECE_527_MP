

================================================================
== Vivado HLS Report for 'MAT_Multiply'
================================================================
* Date:           Thu Oct  1 14:31:41 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        parta_2
* Solution:       solution1_fifo_unroll
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.47|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+---------+-----+---------+---------+
    |    Latency    |    Interval   | Pipeline|
    | min |   max   | min |   max   |   Type  |
    +-----+---------+-----+---------+---------+
    |    1|  9100201|    2|  9100202|   none  |
    +-----+---------+-----+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-------+---------+-------------+-----------+-----------+------+----------+
        |                 |     Latency     |  Iteration  |  Initiation Interval  | Trip |          |
        |    Loop Name    |  min  |   max   |   Latency   |  achieved |   target  | Count| Pipelined|
        +-----------------+-------+---------+-------------+-----------+-----------+------+----------+
        |- Row            |  20200|  9100200| 202 ~ 91002 |          -|          -|   100|    no    |
        | + Col           |    200|    91000|   2 ~ 910   |          -|          -|   100|    no    |
        |  ++ RowCaching  |    100|      100|           20|          -|          -|     5|    no    |
        |  ++ ColCaching  |    100|      100|           20|          -|          -|     5|    no    |
        |  ++ Product     |    105|      705|   21 ~ 141  |          -|          -|     5|    no    |
        +-----------------+-------+---------+-------------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 185
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (tmp_4 & !exitcond4)
3 --> 
	45  / (!exitcond3 & !tmp_s)
	4  / (!exitcond3 & tmp_s)
	2  / (exitcond3)
4 --> 
	5  / (tmp_8 & !exitcond2)
	24  / (!tmp_8) | (exitcond2)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	4  / true
24 --> 
	44  / (!tmp_6) | (exitcond1)
	25  / (tmp_6 & !exitcond1)
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	24  / true
44 --> 
	45  / true
45 --> 
	46  / (tmp_s & !exitcond & tmp_12)
	52  / (tmp_s & !exitcond & !tmp_12)
	3  / (!tmp_s) | (exitcond)
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / (tmp_14_1)
	59  / (!tmp_14_1)
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / (tmp_14_2)
	66  / (!tmp_14_2)
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / (tmp_14_3)
	73  / (!tmp_14_3)
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / (tmp_14_4)
	80  / (!tmp_14_4)
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / (tmp_14_5)
	87  / (!tmp_14_5)
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / (tmp_14_6)
	94  / (!tmp_14_6)
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / (tmp_14_7)
	101  / (!tmp_14_7)
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / (tmp_14_8)
	108  / (!tmp_14_8)
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / (tmp_14_9)
	115  / (!tmp_14_9)
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	112  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	115  / true
115 --> 
	116  / (tmp_14_s)
	122  / (!tmp_14_s)
116 --> 
	117  / true
117 --> 
	118  / true
118 --> 
	119  / true
119 --> 
	120  / true
120 --> 
	121  / true
121 --> 
	122  / true
122 --> 
	123  / (tmp_14_10)
	129  / (!tmp_14_10)
123 --> 
	124  / true
124 --> 
	125  / true
125 --> 
	126  / true
126 --> 
	127  / true
127 --> 
	128  / true
128 --> 
	129  / true
129 --> 
	130  / (tmp_14_11)
	136  / (!tmp_14_11)
130 --> 
	131  / true
131 --> 
	132  / true
132 --> 
	133  / true
133 --> 
	134  / true
134 --> 
	135  / true
135 --> 
	136  / true
136 --> 
	137  / (tmp_14_12)
	143  / (!tmp_14_12)
137 --> 
	138  / true
138 --> 
	139  / true
139 --> 
	140  / true
140 --> 
	141  / true
141 --> 
	142  / true
142 --> 
	143  / true
143 --> 
	144  / (tmp_14_13)
	150  / (!tmp_14_13)
144 --> 
	145  / true
145 --> 
	146  / true
146 --> 
	147  / true
147 --> 
	148  / true
148 --> 
	149  / true
149 --> 
	150  / true
150 --> 
	151  / (tmp_14_14)
	157  / (!tmp_14_14)
151 --> 
	152  / true
152 --> 
	153  / true
153 --> 
	154  / true
154 --> 
	155  / true
155 --> 
	156  / true
156 --> 
	157  / true
157 --> 
	158  / (tmp_14_15)
	164  / (!tmp_14_15)
158 --> 
	159  / true
159 --> 
	160  / true
160 --> 
	161  / true
161 --> 
	162  / true
162 --> 
	163  / true
163 --> 
	164  / true
164 --> 
	165  / (tmp_14_16)
	171  / (!tmp_14_16)
165 --> 
	166  / true
166 --> 
	167  / true
167 --> 
	168  / true
168 --> 
	169  / true
169 --> 
	170  / true
170 --> 
	171  / true
171 --> 
	172  / (tmp_14_17)
	178  / (!tmp_14_17)
172 --> 
	173  / true
173 --> 
	174  / true
174 --> 
	175  / true
175 --> 
	176  / true
176 --> 
	177  / true
177 --> 
	178  / true
178 --> 
	179  / (tmp_14_18)
	185  / (!tmp_14_18)
179 --> 
	180  / true
180 --> 
	181  / true
181 --> 
	182  / true
182 --> 
	183  / true
183 --> 
	184  / true
184 --> 
	185  / true
185 --> 
	45  / true
* FSM state operations: 

 <State 1>: 6.31ns
ST_1: stg_186 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i32* %A), !map !0

ST_1: stg_187 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32* %B), !map !6

ST_1: stg_188 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i64* %C), !map !10

ST_1: stg_189 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i8 %mA) nounwind, !map !14

ST_1: stg_190 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i8 %nA) nounwind, !map !20

ST_1: stg_191 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i8 %mB) nounwind, !map !24

ST_1: stg_192 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i8 %nB) nounwind, !map !28

ST_1: stg_193 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i8 %mC) nounwind, !map !32

ST_1: stg_194 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i8 %nC) nounwind, !map !36

ST_1: stg_195 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecTopModule([13 x i8]* @str) nounwind

ST_1: nC_read [1/1] 0.00ns
:10  %nC_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %nC)

ST_1: mC_read [1/1] 0.00ns
:11  %mC_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %mC)

ST_1: nB_read [1/1] 0.00ns
:12  %nB_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %nB)

ST_1: mB_read [1/1] 0.00ns
:13  %mB_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %mB)

ST_1: nA_read [1/1] 0.00ns
:14  %nA_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %nA)

ST_1: mA_read [1/1] 0.00ns
:15  %mA_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %mA)

ST_1: A_cached_row_0 [1/1] 0.00ns
:16  %A_cached_row_0 = alloca [10 x i32], align 4

ST_1: A_cached_row_1 [1/1] 0.00ns
:17  %A_cached_row_1 = alloca [10 x i32], align 4

ST_1: A_cached_row_2 [1/1] 0.00ns
:18  %A_cached_row_2 = alloca [10 x i32], align 4

ST_1: A_cached_row_3 [1/1] 0.00ns
:19  %A_cached_row_3 = alloca [10 x i32], align 4

ST_1: A_cached_row_4 [1/1] 0.00ns
:20  %A_cached_row_4 = alloca [10 x i32], align 4

ST_1: A_cached_row_5 [1/1] 0.00ns
:21  %A_cached_row_5 = alloca [10 x i32], align 4

ST_1: A_cached_row_6 [1/1] 0.00ns
:22  %A_cached_row_6 = alloca [10 x i32], align 4

ST_1: A_cached_row_7 [1/1] 0.00ns
:23  %A_cached_row_7 = alloca [10 x i32], align 4

ST_1: A_cached_row_8 [1/1] 0.00ns
:24  %A_cached_row_8 = alloca [10 x i32], align 4

ST_1: A_cached_row_9 [1/1] 0.00ns
:25  %A_cached_row_9 = alloca [10 x i32], align 4

ST_1: B_cached_0 [1/1] 0.00ns
:26  %B_cached_0 = alloca [100 x i32], align 4

ST_1: B_cached_1 [1/1] 0.00ns
:27  %B_cached_1 = alloca [100 x i32], align 4

ST_1: B_cached_2 [1/1] 0.00ns
:28  %B_cached_2 = alloca [100 x i32], align 4

ST_1: B_cached_3 [1/1] 0.00ns
:29  %B_cached_3 = alloca [100 x i32], align 4

ST_1: B_cached_4 [1/1] 0.00ns
:30  %B_cached_4 = alloca [100 x i32], align 4

ST_1: B_cached_5 [1/1] 0.00ns
:31  %B_cached_5 = alloca [100 x i32], align 4

ST_1: B_cached_6 [1/1] 0.00ns
:32  %B_cached_6 = alloca [100 x i32], align 4

ST_1: B_cached_7 [1/1] 0.00ns
:33  %B_cached_7 = alloca [100 x i32], align 4

ST_1: B_cached_8 [1/1] 0.00ns
:34  %B_cached_8 = alloca [100 x i32], align 4

ST_1: B_cached_9 [1/1] 0.00ns
:35  %B_cached_9 = alloca [100 x i32], align 4

ST_1: B_cached_10 [1/1] 0.00ns
:36  %B_cached_10 = alloca [100 x i32], align 4

ST_1: B_cached_11 [1/1] 0.00ns
:37  %B_cached_11 = alloca [100 x i32], align 4

ST_1: B_cached_12 [1/1] 0.00ns
:38  %B_cached_12 = alloca [100 x i32], align 4

ST_1: B_cached_13 [1/1] 0.00ns
:39  %B_cached_13 = alloca [100 x i32], align 4

ST_1: B_cached_14 [1/1] 0.00ns
:40  %B_cached_14 = alloca [100 x i32], align 4

ST_1: B_cached_15 [1/1] 0.00ns
:41  %B_cached_15 = alloca [100 x i32], align 4

ST_1: B_cached_16 [1/1] 0.00ns
:42  %B_cached_16 = alloca [100 x i32], align 4

ST_1: B_cached_17 [1/1] 0.00ns
:43  %B_cached_17 = alloca [100 x i32], align 4

ST_1: B_cached_18 [1/1] 0.00ns
:44  %B_cached_18 = alloca [100 x i32], align 4

ST_1: B_cached_19 [1/1] 0.00ns
:45  %B_cached_19 = alloca [100 x i32], align 4

ST_1: B_cached_20 [1/1] 0.00ns
:46  %B_cached_20 = alloca [100 x i32], align 4

ST_1: B_cached_21 [1/1] 0.00ns
:47  %B_cached_21 = alloca [100 x i32], align 4

ST_1: B_cached_22 [1/1] 0.00ns
:48  %B_cached_22 = alloca [100 x i32], align 4

ST_1: B_cached_23 [1/1] 0.00ns
:49  %B_cached_23 = alloca [100 x i32], align 4

ST_1: B_cached_24 [1/1] 0.00ns
:50  %B_cached_24 = alloca [100 x i32], align 4

ST_1: B_cached_25 [1/1] 0.00ns
:51  %B_cached_25 = alloca [100 x i32], align 4

ST_1: B_cached_26 [1/1] 0.00ns
:52  %B_cached_26 = alloca [100 x i32], align 4

ST_1: B_cached_27 [1/1] 0.00ns
:53  %B_cached_27 = alloca [100 x i32], align 4

ST_1: B_cached_28 [1/1] 0.00ns
:54  %B_cached_28 = alloca [100 x i32], align 4

ST_1: B_cached_29 [1/1] 0.00ns
:55  %B_cached_29 = alloca [100 x i32], align 4

ST_1: B_cached_30 [1/1] 0.00ns
:56  %B_cached_30 = alloca [100 x i32], align 4

ST_1: B_cached_31 [1/1] 0.00ns
:57  %B_cached_31 = alloca [100 x i32], align 4

ST_1: B_cached_32 [1/1] 0.00ns
:58  %B_cached_32 = alloca [100 x i32], align 4

ST_1: B_cached_33 [1/1] 0.00ns
:59  %B_cached_33 = alloca [100 x i32], align 4

ST_1: B_cached_34 [1/1] 0.00ns
:60  %B_cached_34 = alloca [100 x i32], align 4

ST_1: B_cached_35 [1/1] 0.00ns
:61  %B_cached_35 = alloca [100 x i32], align 4

ST_1: B_cached_36 [1/1] 0.00ns
:62  %B_cached_36 = alloca [100 x i32], align 4

ST_1: B_cached_37 [1/1] 0.00ns
:63  %B_cached_37 = alloca [100 x i32], align 4

ST_1: B_cached_38 [1/1] 0.00ns
:64  %B_cached_38 = alloca [100 x i32], align 4

ST_1: B_cached_39 [1/1] 0.00ns
:65  %B_cached_39 = alloca [100 x i32], align 4

ST_1: B_cached_40 [1/1] 0.00ns
:66  %B_cached_40 = alloca [100 x i32], align 4

ST_1: B_cached_41 [1/1] 0.00ns
:67  %B_cached_41 = alloca [100 x i32], align 4

ST_1: B_cached_42 [1/1] 0.00ns
:68  %B_cached_42 = alloca [100 x i32], align 4

ST_1: B_cached_43 [1/1] 0.00ns
:69  %B_cached_43 = alloca [100 x i32], align 4

ST_1: B_cached_44 [1/1] 0.00ns
:70  %B_cached_44 = alloca [100 x i32], align 4

ST_1: B_cached_45 [1/1] 0.00ns
:71  %B_cached_45 = alloca [100 x i32], align 4

ST_1: B_cached_46 [1/1] 0.00ns
:72  %B_cached_46 = alloca [100 x i32], align 4

ST_1: B_cached_47 [1/1] 0.00ns
:73  %B_cached_47 = alloca [100 x i32], align 4

ST_1: B_cached_48 [1/1] 0.00ns
:74  %B_cached_48 = alloca [100 x i32], align 4

ST_1: B_cached_49 [1/1] 0.00ns
:75  %B_cached_49 = alloca [100 x i32], align 4

ST_1: B_cached_50 [1/1] 0.00ns
:76  %B_cached_50 = alloca [100 x i32], align 4

ST_1: B_cached_51 [1/1] 0.00ns
:77  %B_cached_51 = alloca [100 x i32], align 4

ST_1: B_cached_52 [1/1] 0.00ns
:78  %B_cached_52 = alloca [100 x i32], align 4

ST_1: B_cached_53 [1/1] 0.00ns
:79  %B_cached_53 = alloca [100 x i32], align 4

ST_1: B_cached_54 [1/1] 0.00ns
:80  %B_cached_54 = alloca [100 x i32], align 4

ST_1: B_cached_55 [1/1] 0.00ns
:81  %B_cached_55 = alloca [100 x i32], align 4

ST_1: B_cached_56 [1/1] 0.00ns
:82  %B_cached_56 = alloca [100 x i32], align 4

ST_1: B_cached_57 [1/1] 0.00ns
:83  %B_cached_57 = alloca [100 x i32], align 4

ST_1: B_cached_58 [1/1] 0.00ns
:84  %B_cached_58 = alloca [100 x i32], align 4

ST_1: B_cached_59 [1/1] 0.00ns
:85  %B_cached_59 = alloca [100 x i32], align 4

ST_1: B_cached_60 [1/1] 0.00ns
:86  %B_cached_60 = alloca [100 x i32], align 4

ST_1: B_cached_61 [1/1] 0.00ns
:87  %B_cached_61 = alloca [100 x i32], align 4

ST_1: B_cached_62 [1/1] 0.00ns
:88  %B_cached_62 = alloca [100 x i32], align 4

ST_1: B_cached_63 [1/1] 0.00ns
:89  %B_cached_63 = alloca [100 x i32], align 4

ST_1: B_cached_64 [1/1] 0.00ns
:90  %B_cached_64 = alloca [100 x i32], align 4

ST_1: B_cached_65 [1/1] 0.00ns
:91  %B_cached_65 = alloca [100 x i32], align 4

ST_1: B_cached_66 [1/1] 0.00ns
:92  %B_cached_66 = alloca [100 x i32], align 4

ST_1: B_cached_67 [1/1] 0.00ns
:93  %B_cached_67 = alloca [100 x i32], align 4

ST_1: B_cached_68 [1/1] 0.00ns
:94  %B_cached_68 = alloca [100 x i32], align 4

ST_1: B_cached_69 [1/1] 0.00ns
:95  %B_cached_69 = alloca [100 x i32], align 4

ST_1: B_cached_70 [1/1] 0.00ns
:96  %B_cached_70 = alloca [100 x i32], align 4

ST_1: B_cached_71 [1/1] 0.00ns
:97  %B_cached_71 = alloca [100 x i32], align 4

ST_1: B_cached_72 [1/1] 0.00ns
:98  %B_cached_72 = alloca [100 x i32], align 4

ST_1: B_cached_73 [1/1] 0.00ns
:99  %B_cached_73 = alloca [100 x i32], align 4

ST_1: B_cached_74 [1/1] 0.00ns
:100  %B_cached_74 = alloca [100 x i32], align 4

ST_1: B_cached_75 [1/1] 0.00ns
:101  %B_cached_75 = alloca [100 x i32], align 4

ST_1: B_cached_76 [1/1] 0.00ns
:102  %B_cached_76 = alloca [100 x i32], align 4

ST_1: B_cached_77 [1/1] 0.00ns
:103  %B_cached_77 = alloca [100 x i32], align 4

ST_1: B_cached_78 [1/1] 0.00ns
:104  %B_cached_78 = alloca [100 x i32], align 4

ST_1: B_cached_79 [1/1] 0.00ns
:105  %B_cached_79 = alloca [100 x i32], align 4

ST_1: B_cached_80 [1/1] 0.00ns
:106  %B_cached_80 = alloca [100 x i32], align 4

ST_1: B_cached_81 [1/1] 0.00ns
:107  %B_cached_81 = alloca [100 x i32], align 4

ST_1: B_cached_82 [1/1] 0.00ns
:108  %B_cached_82 = alloca [100 x i32], align 4

ST_1: B_cached_83 [1/1] 0.00ns
:109  %B_cached_83 = alloca [100 x i32], align 4

ST_1: B_cached_84 [1/1] 0.00ns
:110  %B_cached_84 = alloca [100 x i32], align 4

ST_1: B_cached_85 [1/1] 0.00ns
:111  %B_cached_85 = alloca [100 x i32], align 4

ST_1: B_cached_86 [1/1] 0.00ns
:112  %B_cached_86 = alloca [100 x i32], align 4

ST_1: B_cached_87 [1/1] 0.00ns
:113  %B_cached_87 = alloca [100 x i32], align 4

ST_1: B_cached_88 [1/1] 0.00ns
:114  %B_cached_88 = alloca [100 x i32], align 4

ST_1: B_cached_89 [1/1] 0.00ns
:115  %B_cached_89 = alloca [100 x i32], align 4

ST_1: B_cached_90 [1/1] 0.00ns
:116  %B_cached_90 = alloca [100 x i32], align 4

ST_1: B_cached_91 [1/1] 0.00ns
:117  %B_cached_91 = alloca [100 x i32], align 4

ST_1: B_cached_92 [1/1] 0.00ns
:118  %B_cached_92 = alloca [100 x i32], align 4

ST_1: B_cached_93 [1/1] 0.00ns
:119  %B_cached_93 = alloca [100 x i32], align 4

ST_1: B_cached_94 [1/1] 0.00ns
:120  %B_cached_94 = alloca [100 x i32], align 4

ST_1: B_cached_95 [1/1] 0.00ns
:121  %B_cached_95 = alloca [100 x i32], align 4

ST_1: B_cached_96 [1/1] 0.00ns
:122  %B_cached_96 = alloca [100 x i32], align 4

ST_1: B_cached_97 [1/1] 0.00ns
:123  %B_cached_97 = alloca [100 x i32], align 4

ST_1: B_cached_98 [1/1] 0.00ns
:124  %B_cached_98 = alloca [100 x i32], align 4

ST_1: B_cached_99 [1/1] 0.00ns
:125  %B_cached_99 = alloca [100 x i32], align 4

ST_1: stg_312 [1/1] 0.00ns
:126  call void (...)* @_ssdm_op_SpecInterface(i64* %C, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_313 [1/1] 0.00ns
:127  call void (...)* @_ssdm_op_SpecInterface(i32* %B, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_314 [1/1] 0.00ns
:128  call void (...)* @_ssdm_op_SpecInterface(i32* %A, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: tmp [1/1] 2.00ns
:129  %tmp = icmp eq i8 %nA_read, %mB_read

ST_1: tmp_1 [1/1] 2.00ns
:130  %tmp_1 = icmp eq i8 %mA_read, %mC_read

ST_1: tmp_3 [1/1] 2.00ns
:131  %tmp_3 = icmp eq i8 %nB_read, %nC_read

ST_1: tmp1 [1/1] 1.37ns
:132  %tmp1 = and i1 %tmp_1, %tmp_3

ST_1: tmp_4 [1/1] 1.37ns
:133  %tmp_4 = and i1 %tmp1, %tmp

ST_1: stg_320 [1/1] 1.57ns
:134  br i1 %tmp_4, label %.preheader7, label %.loopexit8


 <State 2>: 2.00ns
ST_2: i [1/1] 0.00ns
.preheader7:0  %i = phi i7 [ %i_1, %8 ], [ 0, %0 ]

ST_2: i_cast [1/1] 0.00ns
.preheader7:1  %i_cast = zext i7 %i to i8

ST_2: exitcond4 [1/1] 1.97ns
.preheader7:2  %exitcond4 = icmp eq i7 %i, -28

ST_2: empty [1/1] 0.00ns
.preheader7:3  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind

ST_2: i_1 [1/1] 1.72ns
.preheader7:4  %i_1 = add i7 %i, 1

ST_2: stg_326 [1/1] 0.00ns
.preheader7:5  br i1 %exitcond4, label %.loopexit8, label %1

ST_2: stg_327 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str4) nounwind

ST_2: tmp_7 [1/1] 0.00ns
:1  %tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str4) nounwind

ST_2: tmp_5 [1/1] 2.00ns
:2  %tmp_5 = icmp ult i8 %i_cast, %mC_read

ST_2: tmp_6 [1/1] 1.97ns
:3  %tmp_6 = icmp eq i7 %i, 0

ST_2: stg_331 [1/1] 1.57ns
:4  br label %2

ST_2: stg_332 [1/1] 0.00ns
.loopexit8:0  ret void


 <State 3>: 3.54ns
ST_3: j [1/1] 0.00ns
:0  %j = phi i7 [ 0, %1 ], [ %j_1, %._crit_edge ]

ST_3: j_cast [1/1] 0.00ns
:1  %j_cast = zext i7 %j to i8

ST_3: exitcond3 [1/1] 1.97ns
:2  %exitcond3 = icmp eq i7 %j, -28

ST_3: empty_4 [1/1] 0.00ns
:3  %empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind

ST_3: j_1 [1/1] 1.72ns
:4  %j_1 = add i7 %j, 1

ST_3: stg_338 [1/1] 0.00ns
:5  br i1 %exitcond3, label %8, label %3

ST_3: stg_339 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str5) nounwind

ST_3: tmp_2 [1/1] 0.00ns
:1  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str5) nounwind

ST_3: tmp_9 [1/1] 2.00ns
:2  %tmp_9 = icmp ult i8 %j_cast, %nC_read

ST_3: tmp_s [1/1] 1.37ns
:3  %tmp_s = and i1 %tmp_5, %tmp_9

ST_3: stg_343 [1/1] 0.00ns
:4  br i1 %tmp_s, label %4, label %._crit_edge

ST_3: tmp_8 [1/1] 1.97ns
:0  %tmp_8 = icmp eq i7 %j, 0

ST_3: stg_345 [1/1] 1.57ns
:1  br i1 %tmp_8, label %.preheader5.0, label %.loopexit6

ST_3: empty_9 [1/1] 0.00ns
:0  %empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str4, i32 %tmp_7) nounwind

ST_3: stg_347 [1/1] 0.00ns
:1  br label %.preheader7


 <State 4>: 4.38ns
ST_4: indvars_iv2 [1/1] 0.00ns
.preheader5.0:0  %indvars_iv2 = phi i4 [ %indvars_iv_next, %.preheader5.1 ], [ 0, %4 ]

ST_4: indvars_iv [1/1] 0.00ns
.preheader5.0:1  %indvars_iv = phi i4 [ %indvars_iv_next9, %.preheader5.1 ], [ 1, %4 ]

ST_4: k [1/1] 0.00ns
.preheader5.0:2  %k = phi i7 [ %k_3_s, %.preheader5.1 ], [ 0, %4 ]

ST_4: empty_5 [1/1] 0.00ns
.preheader5.0:3  %empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind

ST_4: exitcond2 [1/1] 1.97ns
.preheader5.0:4  %exitcond2 = icmp eq i7 %k, -28

ST_4: stg_353 [1/1] 0.00ns
.preheader5.0:5  br i1 %exitcond2, label %.loopexit6, label %.preheader5.1

ST_4: A_read [1/1] 4.38ns
.preheader5.1:1  %A_read = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_4: k_3_s [1/1] 1.72ns
.preheader5.1:63  %k_3_s = add i7 %k, 20

ST_4: stg_356 [1/1] 0.00ns
.loopexit6:0  br i1 %tmp_6, label %.preheader.preheader, label %.loopexit

ST_4: tmp_10 [1/1] 0.00ns
.preheader.preheader:0  %tmp_10 = zext i7 %j to i64

ST_4: B_cached_0_addr [1/1] 0.00ns
.preheader.preheader:1  %B_cached_0_addr = getelementptr [100 x i32]* %B_cached_0, i64 0, i64 %tmp_10

ST_4: B_cached_20_addr [1/1] 0.00ns
.preheader.preheader:2  %B_cached_20_addr = getelementptr [100 x i32]* %B_cached_20, i64 0, i64 %tmp_10

ST_4: B_cached_40_addr [1/1] 0.00ns
.preheader.preheader:3  %B_cached_40_addr = getelementptr [100 x i32]* %B_cached_40, i64 0, i64 %tmp_10

ST_4: B_cached_60_addr [1/1] 0.00ns
.preheader.preheader:4  %B_cached_60_addr = getelementptr [100 x i32]* %B_cached_60, i64 0, i64 %tmp_10

ST_4: B_cached_80_addr [1/1] 0.00ns
.preheader.preheader:5  %B_cached_80_addr = getelementptr [100 x i32]* %B_cached_80, i64 0, i64 %tmp_10

ST_4: B_cached_1_addr [1/1] 0.00ns
.preheader.preheader:6  %B_cached_1_addr = getelementptr [100 x i32]* %B_cached_1, i64 0, i64 %tmp_10

ST_4: B_cached_21_addr [1/1] 0.00ns
.preheader.preheader:7  %B_cached_21_addr = getelementptr [100 x i32]* %B_cached_21, i64 0, i64 %tmp_10

ST_4: B_cached_41_addr [1/1] 0.00ns
.preheader.preheader:8  %B_cached_41_addr = getelementptr [100 x i32]* %B_cached_41, i64 0, i64 %tmp_10

ST_4: B_cached_61_addr [1/1] 0.00ns
.preheader.preheader:9  %B_cached_61_addr = getelementptr [100 x i32]* %B_cached_61, i64 0, i64 %tmp_10

ST_4: B_cached_81_addr [1/1] 0.00ns
.preheader.preheader:10  %B_cached_81_addr = getelementptr [100 x i32]* %B_cached_81, i64 0, i64 %tmp_10

ST_4: B_cached_2_addr [1/1] 0.00ns
.preheader.preheader:11  %B_cached_2_addr = getelementptr [100 x i32]* %B_cached_2, i64 0, i64 %tmp_10

ST_4: B_cached_22_addr [1/1] 0.00ns
.preheader.preheader:12  %B_cached_22_addr = getelementptr [100 x i32]* %B_cached_22, i64 0, i64 %tmp_10

ST_4: B_cached_42_addr [1/1] 0.00ns
.preheader.preheader:13  %B_cached_42_addr = getelementptr [100 x i32]* %B_cached_42, i64 0, i64 %tmp_10

ST_4: B_cached_62_addr [1/1] 0.00ns
.preheader.preheader:14  %B_cached_62_addr = getelementptr [100 x i32]* %B_cached_62, i64 0, i64 %tmp_10

ST_4: B_cached_82_addr [1/1] 0.00ns
.preheader.preheader:15  %B_cached_82_addr = getelementptr [100 x i32]* %B_cached_82, i64 0, i64 %tmp_10

ST_4: B_cached_3_addr [1/1] 0.00ns
.preheader.preheader:16  %B_cached_3_addr = getelementptr [100 x i32]* %B_cached_3, i64 0, i64 %tmp_10

ST_4: B_cached_23_addr [1/1] 0.00ns
.preheader.preheader:17  %B_cached_23_addr = getelementptr [100 x i32]* %B_cached_23, i64 0, i64 %tmp_10

ST_4: B_cached_43_addr [1/1] 0.00ns
.preheader.preheader:18  %B_cached_43_addr = getelementptr [100 x i32]* %B_cached_43, i64 0, i64 %tmp_10

ST_4: B_cached_63_addr [1/1] 0.00ns
.preheader.preheader:19  %B_cached_63_addr = getelementptr [100 x i32]* %B_cached_63, i64 0, i64 %tmp_10

ST_4: B_cached_83_addr [1/1] 0.00ns
.preheader.preheader:20  %B_cached_83_addr = getelementptr [100 x i32]* %B_cached_83, i64 0, i64 %tmp_10

ST_4: B_cached_4_addr [1/1] 0.00ns
.preheader.preheader:21  %B_cached_4_addr = getelementptr [100 x i32]* %B_cached_4, i64 0, i64 %tmp_10

ST_4: B_cached_24_addr [1/1] 0.00ns
.preheader.preheader:22  %B_cached_24_addr = getelementptr [100 x i32]* %B_cached_24, i64 0, i64 %tmp_10

ST_4: B_cached_44_addr [1/1] 0.00ns
.preheader.preheader:23  %B_cached_44_addr = getelementptr [100 x i32]* %B_cached_44, i64 0, i64 %tmp_10

ST_4: B_cached_64_addr [1/1] 0.00ns
.preheader.preheader:24  %B_cached_64_addr = getelementptr [100 x i32]* %B_cached_64, i64 0, i64 %tmp_10

ST_4: B_cached_84_addr [1/1] 0.00ns
.preheader.preheader:25  %B_cached_84_addr = getelementptr [100 x i32]* %B_cached_84, i64 0, i64 %tmp_10

ST_4: B_cached_5_addr [1/1] 0.00ns
.preheader.preheader:26  %B_cached_5_addr = getelementptr [100 x i32]* %B_cached_5, i64 0, i64 %tmp_10

ST_4: B_cached_25_addr [1/1] 0.00ns
.preheader.preheader:27  %B_cached_25_addr = getelementptr [100 x i32]* %B_cached_25, i64 0, i64 %tmp_10

ST_4: B_cached_45_addr [1/1] 0.00ns
.preheader.preheader:28  %B_cached_45_addr = getelementptr [100 x i32]* %B_cached_45, i64 0, i64 %tmp_10

ST_4: B_cached_65_addr [1/1] 0.00ns
.preheader.preheader:29  %B_cached_65_addr = getelementptr [100 x i32]* %B_cached_65, i64 0, i64 %tmp_10

ST_4: B_cached_85_addr [1/1] 0.00ns
.preheader.preheader:30  %B_cached_85_addr = getelementptr [100 x i32]* %B_cached_85, i64 0, i64 %tmp_10

ST_4: B_cached_6_addr [1/1] 0.00ns
.preheader.preheader:31  %B_cached_6_addr = getelementptr [100 x i32]* %B_cached_6, i64 0, i64 %tmp_10

ST_4: B_cached_26_addr [1/1] 0.00ns
.preheader.preheader:32  %B_cached_26_addr = getelementptr [100 x i32]* %B_cached_26, i64 0, i64 %tmp_10

ST_4: B_cached_46_addr [1/1] 0.00ns
.preheader.preheader:33  %B_cached_46_addr = getelementptr [100 x i32]* %B_cached_46, i64 0, i64 %tmp_10

ST_4: B_cached_66_addr [1/1] 0.00ns
.preheader.preheader:34  %B_cached_66_addr = getelementptr [100 x i32]* %B_cached_66, i64 0, i64 %tmp_10

ST_4: B_cached_86_addr [1/1] 0.00ns
.preheader.preheader:35  %B_cached_86_addr = getelementptr [100 x i32]* %B_cached_86, i64 0, i64 %tmp_10

ST_4: B_cached_7_addr [1/1] 0.00ns
.preheader.preheader:36  %B_cached_7_addr = getelementptr [100 x i32]* %B_cached_7, i64 0, i64 %tmp_10

ST_4: B_cached_27_addr [1/1] 0.00ns
.preheader.preheader:37  %B_cached_27_addr = getelementptr [100 x i32]* %B_cached_27, i64 0, i64 %tmp_10

ST_4: B_cached_47_addr [1/1] 0.00ns
.preheader.preheader:38  %B_cached_47_addr = getelementptr [100 x i32]* %B_cached_47, i64 0, i64 %tmp_10

ST_4: B_cached_67_addr [1/1] 0.00ns
.preheader.preheader:39  %B_cached_67_addr = getelementptr [100 x i32]* %B_cached_67, i64 0, i64 %tmp_10

ST_4: B_cached_87_addr [1/1] 0.00ns
.preheader.preheader:40  %B_cached_87_addr = getelementptr [100 x i32]* %B_cached_87, i64 0, i64 %tmp_10

ST_4: B_cached_8_addr [1/1] 0.00ns
.preheader.preheader:41  %B_cached_8_addr = getelementptr [100 x i32]* %B_cached_8, i64 0, i64 %tmp_10

ST_4: B_cached_28_addr [1/1] 0.00ns
.preheader.preheader:42  %B_cached_28_addr = getelementptr [100 x i32]* %B_cached_28, i64 0, i64 %tmp_10

ST_4: B_cached_48_addr [1/1] 0.00ns
.preheader.preheader:43  %B_cached_48_addr = getelementptr [100 x i32]* %B_cached_48, i64 0, i64 %tmp_10

ST_4: B_cached_68_addr [1/1] 0.00ns
.preheader.preheader:44  %B_cached_68_addr = getelementptr [100 x i32]* %B_cached_68, i64 0, i64 %tmp_10

ST_4: B_cached_88_addr [1/1] 0.00ns
.preheader.preheader:45  %B_cached_88_addr = getelementptr [100 x i32]* %B_cached_88, i64 0, i64 %tmp_10

ST_4: B_cached_9_addr [1/1] 0.00ns
.preheader.preheader:46  %B_cached_9_addr = getelementptr [100 x i32]* %B_cached_9, i64 0, i64 %tmp_10

ST_4: B_cached_29_addr [1/1] 0.00ns
.preheader.preheader:47  %B_cached_29_addr = getelementptr [100 x i32]* %B_cached_29, i64 0, i64 %tmp_10

ST_4: B_cached_49_addr [1/1] 0.00ns
.preheader.preheader:48  %B_cached_49_addr = getelementptr [100 x i32]* %B_cached_49, i64 0, i64 %tmp_10

ST_4: B_cached_69_addr [1/1] 0.00ns
.preheader.preheader:49  %B_cached_69_addr = getelementptr [100 x i32]* %B_cached_69, i64 0, i64 %tmp_10

ST_4: B_cached_89_addr [1/1] 0.00ns
.preheader.preheader:50  %B_cached_89_addr = getelementptr [100 x i32]* %B_cached_89, i64 0, i64 %tmp_10

ST_4: B_cached_10_addr [1/1] 0.00ns
.preheader.preheader:51  %B_cached_10_addr = getelementptr [100 x i32]* %B_cached_10, i64 0, i64 %tmp_10

ST_4: B_cached_30_addr [1/1] 0.00ns
.preheader.preheader:52  %B_cached_30_addr = getelementptr [100 x i32]* %B_cached_30, i64 0, i64 %tmp_10

ST_4: B_cached_50_addr [1/1] 0.00ns
.preheader.preheader:53  %B_cached_50_addr = getelementptr [100 x i32]* %B_cached_50, i64 0, i64 %tmp_10

ST_4: B_cached_70_addr [1/1] 0.00ns
.preheader.preheader:54  %B_cached_70_addr = getelementptr [100 x i32]* %B_cached_70, i64 0, i64 %tmp_10

ST_4: B_cached_90_addr [1/1] 0.00ns
.preheader.preheader:55  %B_cached_90_addr = getelementptr [100 x i32]* %B_cached_90, i64 0, i64 %tmp_10

ST_4: B_cached_11_addr [1/1] 0.00ns
.preheader.preheader:56  %B_cached_11_addr = getelementptr [100 x i32]* %B_cached_11, i64 0, i64 %tmp_10

ST_4: B_cached_31_addr [1/1] 0.00ns
.preheader.preheader:57  %B_cached_31_addr = getelementptr [100 x i32]* %B_cached_31, i64 0, i64 %tmp_10

ST_4: B_cached_51_addr [1/1] 0.00ns
.preheader.preheader:58  %B_cached_51_addr = getelementptr [100 x i32]* %B_cached_51, i64 0, i64 %tmp_10

ST_4: B_cached_71_addr [1/1] 0.00ns
.preheader.preheader:59  %B_cached_71_addr = getelementptr [100 x i32]* %B_cached_71, i64 0, i64 %tmp_10

ST_4: B_cached_91_addr [1/1] 0.00ns
.preheader.preheader:60  %B_cached_91_addr = getelementptr [100 x i32]* %B_cached_91, i64 0, i64 %tmp_10

ST_4: B_cached_12_addr [1/1] 0.00ns
.preheader.preheader:61  %B_cached_12_addr = getelementptr [100 x i32]* %B_cached_12, i64 0, i64 %tmp_10

ST_4: B_cached_32_addr [1/1] 0.00ns
.preheader.preheader:62  %B_cached_32_addr = getelementptr [100 x i32]* %B_cached_32, i64 0, i64 %tmp_10

ST_4: B_cached_52_addr [1/1] 0.00ns
.preheader.preheader:63  %B_cached_52_addr = getelementptr [100 x i32]* %B_cached_52, i64 0, i64 %tmp_10

ST_4: B_cached_72_addr [1/1] 0.00ns
.preheader.preheader:64  %B_cached_72_addr = getelementptr [100 x i32]* %B_cached_72, i64 0, i64 %tmp_10

ST_4: B_cached_92_addr [1/1] 0.00ns
.preheader.preheader:65  %B_cached_92_addr = getelementptr [100 x i32]* %B_cached_92, i64 0, i64 %tmp_10

ST_4: B_cached_13_addr [1/1] 0.00ns
.preheader.preheader:66  %B_cached_13_addr = getelementptr [100 x i32]* %B_cached_13, i64 0, i64 %tmp_10

ST_4: B_cached_33_addr [1/1] 0.00ns
.preheader.preheader:67  %B_cached_33_addr = getelementptr [100 x i32]* %B_cached_33, i64 0, i64 %tmp_10

ST_4: B_cached_53_addr [1/1] 0.00ns
.preheader.preheader:68  %B_cached_53_addr = getelementptr [100 x i32]* %B_cached_53, i64 0, i64 %tmp_10

ST_4: B_cached_73_addr [1/1] 0.00ns
.preheader.preheader:69  %B_cached_73_addr = getelementptr [100 x i32]* %B_cached_73, i64 0, i64 %tmp_10

ST_4: B_cached_93_addr [1/1] 0.00ns
.preheader.preheader:70  %B_cached_93_addr = getelementptr [100 x i32]* %B_cached_93, i64 0, i64 %tmp_10

ST_4: B_cached_14_addr [1/1] 0.00ns
.preheader.preheader:71  %B_cached_14_addr = getelementptr [100 x i32]* %B_cached_14, i64 0, i64 %tmp_10

ST_4: B_cached_34_addr [1/1] 0.00ns
.preheader.preheader:72  %B_cached_34_addr = getelementptr [100 x i32]* %B_cached_34, i64 0, i64 %tmp_10

ST_4: B_cached_54_addr [1/1] 0.00ns
.preheader.preheader:73  %B_cached_54_addr = getelementptr [100 x i32]* %B_cached_54, i64 0, i64 %tmp_10

ST_4: B_cached_74_addr [1/1] 0.00ns
.preheader.preheader:74  %B_cached_74_addr = getelementptr [100 x i32]* %B_cached_74, i64 0, i64 %tmp_10

ST_4: B_cached_94_addr [1/1] 0.00ns
.preheader.preheader:75  %B_cached_94_addr = getelementptr [100 x i32]* %B_cached_94, i64 0, i64 %tmp_10

ST_4: B_cached_15_addr [1/1] 0.00ns
.preheader.preheader:76  %B_cached_15_addr = getelementptr [100 x i32]* %B_cached_15, i64 0, i64 %tmp_10

ST_4: B_cached_35_addr [1/1] 0.00ns
.preheader.preheader:77  %B_cached_35_addr = getelementptr [100 x i32]* %B_cached_35, i64 0, i64 %tmp_10

ST_4: B_cached_55_addr [1/1] 0.00ns
.preheader.preheader:78  %B_cached_55_addr = getelementptr [100 x i32]* %B_cached_55, i64 0, i64 %tmp_10

ST_4: B_cached_75_addr [1/1] 0.00ns
.preheader.preheader:79  %B_cached_75_addr = getelementptr [100 x i32]* %B_cached_75, i64 0, i64 %tmp_10

ST_4: B_cached_95_addr [1/1] 0.00ns
.preheader.preheader:80  %B_cached_95_addr = getelementptr [100 x i32]* %B_cached_95, i64 0, i64 %tmp_10

ST_4: B_cached_16_addr [1/1] 0.00ns
.preheader.preheader:81  %B_cached_16_addr = getelementptr [100 x i32]* %B_cached_16, i64 0, i64 %tmp_10

ST_4: B_cached_36_addr [1/1] 0.00ns
.preheader.preheader:82  %B_cached_36_addr = getelementptr [100 x i32]* %B_cached_36, i64 0, i64 %tmp_10

ST_4: B_cached_56_addr [1/1] 0.00ns
.preheader.preheader:83  %B_cached_56_addr = getelementptr [100 x i32]* %B_cached_56, i64 0, i64 %tmp_10

ST_4: B_cached_76_addr [1/1] 0.00ns
.preheader.preheader:84  %B_cached_76_addr = getelementptr [100 x i32]* %B_cached_76, i64 0, i64 %tmp_10

ST_4: B_cached_96_addr [1/1] 0.00ns
.preheader.preheader:85  %B_cached_96_addr = getelementptr [100 x i32]* %B_cached_96, i64 0, i64 %tmp_10

ST_4: B_cached_17_addr [1/1] 0.00ns
.preheader.preheader:86  %B_cached_17_addr = getelementptr [100 x i32]* %B_cached_17, i64 0, i64 %tmp_10

ST_4: B_cached_37_addr [1/1] 0.00ns
.preheader.preheader:87  %B_cached_37_addr = getelementptr [100 x i32]* %B_cached_37, i64 0, i64 %tmp_10

ST_4: B_cached_57_addr [1/1] 0.00ns
.preheader.preheader:88  %B_cached_57_addr = getelementptr [100 x i32]* %B_cached_57, i64 0, i64 %tmp_10

ST_4: B_cached_77_addr [1/1] 0.00ns
.preheader.preheader:89  %B_cached_77_addr = getelementptr [100 x i32]* %B_cached_77, i64 0, i64 %tmp_10

ST_4: B_cached_97_addr [1/1] 0.00ns
.preheader.preheader:90  %B_cached_97_addr = getelementptr [100 x i32]* %B_cached_97, i64 0, i64 %tmp_10

ST_4: B_cached_18_addr [1/1] 0.00ns
.preheader.preheader:91  %B_cached_18_addr = getelementptr [100 x i32]* %B_cached_18, i64 0, i64 %tmp_10

ST_4: B_cached_38_addr [1/1] 0.00ns
.preheader.preheader:92  %B_cached_38_addr = getelementptr [100 x i32]* %B_cached_38, i64 0, i64 %tmp_10

ST_4: B_cached_58_addr [1/1] 0.00ns
.preheader.preheader:93  %B_cached_58_addr = getelementptr [100 x i32]* %B_cached_58, i64 0, i64 %tmp_10

ST_4: B_cached_78_addr [1/1] 0.00ns
.preheader.preheader:94  %B_cached_78_addr = getelementptr [100 x i32]* %B_cached_78, i64 0, i64 %tmp_10

ST_4: B_cached_98_addr [1/1] 0.00ns
.preheader.preheader:95  %B_cached_98_addr = getelementptr [100 x i32]* %B_cached_98, i64 0, i64 %tmp_10

ST_4: B_cached_19_addr [1/1] 0.00ns
.preheader.preheader:96  %B_cached_19_addr = getelementptr [100 x i32]* %B_cached_19, i64 0, i64 %tmp_10

ST_4: B_cached_39_addr [1/1] 0.00ns
.preheader.preheader:97  %B_cached_39_addr = getelementptr [100 x i32]* %B_cached_39, i64 0, i64 %tmp_10

ST_4: B_cached_59_addr [1/1] 0.00ns
.preheader.preheader:98  %B_cached_59_addr = getelementptr [100 x i32]* %B_cached_59, i64 0, i64 %tmp_10

ST_4: B_cached_79_addr [1/1] 0.00ns
.preheader.preheader:99  %B_cached_79_addr = getelementptr [100 x i32]* %B_cached_79, i64 0, i64 %tmp_10

ST_4: B_cached_99_addr [1/1] 0.00ns
.preheader.preheader:100  %B_cached_99_addr = getelementptr [100 x i32]* %B_cached_99, i64 0, i64 %tmp_10

ST_4: stg_458 [1/1] 1.57ns
.preheader.preheader:101  br label %.preheader.0


 <State 5>: 6.77ns
ST_5: newIndex2 [1/1] 0.00ns
.preheader5.1:2  %newIndex2 = zext i4 %indvars_iv2 to i64

ST_5: A_cached_row_0_addr [1/1] 0.00ns
.preheader5.1:3  %A_cached_row_0_addr = getelementptr [10 x i32]* %A_cached_row_0, i64 0, i64 %newIndex2

ST_5: stg_461 [1/1] 2.39ns
.preheader5.1:4  store i32 %A_read, i32* %A_cached_row_0_addr, align 16

ST_5: A_read_1 [1/1] 4.38ns
.preheader5.1:5  %A_read_1 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_5: A_cached_row_1_addr [1/1] 0.00ns
.preheader5.1:6  %A_cached_row_1_addr = getelementptr [10 x i32]* %A_cached_row_1, i64 0, i64 %newIndex2

ST_5: stg_464 [1/1] 2.39ns
.preheader5.1:7  store i32 %A_read_1, i32* %A_cached_row_1_addr, align 4

ST_5: indvars_iv_next [1/1] 0.80ns
.preheader5.1:65  %indvars_iv_next = add i4 %indvars_iv2, 2


 <State 6>: 6.77ns
ST_6: A_read_2 [1/1] 4.38ns
.preheader5.1:8  %A_read_2 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_6: A_cached_row_2_addr [1/1] 0.00ns
.preheader5.1:9  %A_cached_row_2_addr = getelementptr [10 x i32]* %A_cached_row_2, i64 0, i64 %newIndex2

ST_6: stg_468 [1/1] 2.39ns
.preheader5.1:10  store i32 %A_read_2, i32* %A_cached_row_2_addr, align 8


 <State 7>: 6.77ns
ST_7: A_read_3 [1/1] 4.38ns
.preheader5.1:11  %A_read_3 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_7: A_cached_row_3_addr [1/1] 0.00ns
.preheader5.1:12  %A_cached_row_3_addr = getelementptr [10 x i32]* %A_cached_row_3, i64 0, i64 %newIndex2

ST_7: stg_471 [1/1] 2.39ns
.preheader5.1:13  store i32 %A_read_3, i32* %A_cached_row_3_addr, align 4


 <State 8>: 6.77ns
ST_8: A_read_4 [1/1] 4.38ns
.preheader5.1:14  %A_read_4 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_8: A_cached_row_4_addr [1/1] 0.00ns
.preheader5.1:15  %A_cached_row_4_addr = getelementptr [10 x i32]* %A_cached_row_4, i64 0, i64 %newIndex2

ST_8: stg_474 [1/1] 2.39ns
.preheader5.1:16  store i32 %A_read_4, i32* %A_cached_row_4_addr, align 16


 <State 9>: 6.77ns
ST_9: A_read_5 [1/1] 4.38ns
.preheader5.1:17  %A_read_5 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_9: A_cached_row_5_addr [1/1] 0.00ns
.preheader5.1:18  %A_cached_row_5_addr = getelementptr [10 x i32]* %A_cached_row_5, i64 0, i64 %newIndex2

ST_9: stg_477 [1/1] 2.39ns
.preheader5.1:19  store i32 %A_read_5, i32* %A_cached_row_5_addr, align 4


 <State 10>: 6.77ns
ST_10: A_read_6 [1/1] 4.38ns
.preheader5.1:20  %A_read_6 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_10: A_cached_row_6_addr [1/1] 0.00ns
.preheader5.1:21  %A_cached_row_6_addr = getelementptr [10 x i32]* %A_cached_row_6, i64 0, i64 %newIndex2

ST_10: stg_480 [1/1] 2.39ns
.preheader5.1:22  store i32 %A_read_6, i32* %A_cached_row_6_addr, align 8


 <State 11>: 6.77ns
ST_11: A_read_7 [1/1] 4.38ns
.preheader5.1:23  %A_read_7 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_11: A_cached_row_7_addr [1/1] 0.00ns
.preheader5.1:24  %A_cached_row_7_addr = getelementptr [10 x i32]* %A_cached_row_7, i64 0, i64 %newIndex2

ST_11: stg_483 [1/1] 2.39ns
.preheader5.1:25  store i32 %A_read_7, i32* %A_cached_row_7_addr, align 4


 <State 12>: 6.77ns
ST_12: A_read_8 [1/1] 4.38ns
.preheader5.1:26  %A_read_8 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_12: A_cached_row_8_addr [1/1] 0.00ns
.preheader5.1:27  %A_cached_row_8_addr = getelementptr [10 x i32]* %A_cached_row_8, i64 0, i64 %newIndex2

ST_12: stg_486 [1/1] 2.39ns
.preheader5.1:28  store i32 %A_read_8, i32* %A_cached_row_8_addr, align 16


 <State 13>: 6.77ns
ST_13: A_read_9 [1/1] 4.38ns
.preheader5.1:29  %A_read_9 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_13: A_cached_row_9_addr [1/1] 0.00ns
.preheader5.1:30  %A_cached_row_9_addr = getelementptr [10 x i32]* %A_cached_row_9, i64 0, i64 %newIndex2

ST_13: stg_489 [1/1] 2.39ns
.preheader5.1:31  store i32 %A_read_9, i32* %A_cached_row_9_addr, align 4


 <State 14>: 4.38ns
ST_14: A_read_10 [1/1] 4.38ns
.preheader5.1:32  %A_read_10 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)


 <State 15>: 6.77ns
ST_15: newIndex [1/1] 0.00ns
.preheader5.1:33  %newIndex = zext i4 %indvars_iv to i64

ST_15: A_cached_row_0_addr_1 [1/1] 0.00ns
.preheader5.1:34  %A_cached_row_0_addr_1 = getelementptr [10 x i32]* %A_cached_row_0, i64 0, i64 %newIndex

ST_15: stg_493 [1/1] 2.39ns
.preheader5.1:35  store i32 %A_read_10, i32* %A_cached_row_0_addr_1, align 8

ST_15: A_read_11 [1/1] 4.38ns
.preheader5.1:36  %A_read_11 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_15: A_cached_row_1_addr_1 [1/1] 0.00ns
.preheader5.1:37  %A_cached_row_1_addr_1 = getelementptr [10 x i32]* %A_cached_row_1, i64 0, i64 %newIndex

ST_15: stg_496 [1/1] 2.39ns
.preheader5.1:38  store i32 %A_read_11, i32* %A_cached_row_1_addr_1, align 4

ST_15: indvars_iv_next9 [1/1] 0.80ns
.preheader5.1:64  %indvars_iv_next9 = add i4 %indvars_iv, 2


 <State 16>: 6.77ns
ST_16: A_read_12 [1/1] 4.38ns
.preheader5.1:39  %A_read_12 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_16: A_cached_row_2_addr_1 [1/1] 0.00ns
.preheader5.1:40  %A_cached_row_2_addr_1 = getelementptr [10 x i32]* %A_cached_row_2, i64 0, i64 %newIndex

ST_16: stg_500 [1/1] 2.39ns
.preheader5.1:41  store i32 %A_read_12, i32* %A_cached_row_2_addr_1, align 16


 <State 17>: 6.77ns
ST_17: A_read_13 [1/1] 4.38ns
.preheader5.1:42  %A_read_13 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_17: A_cached_row_3_addr_1 [1/1] 0.00ns
.preheader5.1:43  %A_cached_row_3_addr_1 = getelementptr [10 x i32]* %A_cached_row_3, i64 0, i64 %newIndex

ST_17: stg_503 [1/1] 2.39ns
.preheader5.1:44  store i32 %A_read_13, i32* %A_cached_row_3_addr_1, align 4


 <State 18>: 6.77ns
ST_18: A_read_14 [1/1] 4.38ns
.preheader5.1:45  %A_read_14 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_18: A_cached_row_4_addr_1 [1/1] 0.00ns
.preheader5.1:46  %A_cached_row_4_addr_1 = getelementptr [10 x i32]* %A_cached_row_4, i64 0, i64 %newIndex

ST_18: stg_506 [1/1] 2.39ns
.preheader5.1:47  store i32 %A_read_14, i32* %A_cached_row_4_addr_1, align 8


 <State 19>: 6.77ns
ST_19: A_read_15 [1/1] 4.38ns
.preheader5.1:48  %A_read_15 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_19: A_cached_row_5_addr_1 [1/1] 0.00ns
.preheader5.1:49  %A_cached_row_5_addr_1 = getelementptr [10 x i32]* %A_cached_row_5, i64 0, i64 %newIndex

ST_19: stg_509 [1/1] 2.39ns
.preheader5.1:50  store i32 %A_read_15, i32* %A_cached_row_5_addr_1, align 4


 <State 20>: 6.77ns
ST_20: A_read_16 [1/1] 4.38ns
.preheader5.1:51  %A_read_16 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_20: A_cached_row_6_addr_1 [1/1] 0.00ns
.preheader5.1:52  %A_cached_row_6_addr_1 = getelementptr [10 x i32]* %A_cached_row_6, i64 0, i64 %newIndex

ST_20: stg_512 [1/1] 2.39ns
.preheader5.1:53  store i32 %A_read_16, i32* %A_cached_row_6_addr_1, align 16


 <State 21>: 6.77ns
ST_21: A_read_17 [1/1] 4.38ns
.preheader5.1:54  %A_read_17 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_21: A_cached_row_7_addr_1 [1/1] 0.00ns
.preheader5.1:55  %A_cached_row_7_addr_1 = getelementptr [10 x i32]* %A_cached_row_7, i64 0, i64 %newIndex

ST_21: stg_515 [1/1] 2.39ns
.preheader5.1:56  store i32 %A_read_17, i32* %A_cached_row_7_addr_1, align 4


 <State 22>: 6.77ns
ST_22: A_read_18 [1/1] 4.38ns
.preheader5.1:57  %A_read_18 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_22: A_cached_row_8_addr_1 [1/1] 0.00ns
.preheader5.1:58  %A_cached_row_8_addr_1 = getelementptr [10 x i32]* %A_cached_row_8, i64 0, i64 %newIndex

ST_22: stg_518 [1/1] 2.39ns
.preheader5.1:59  store i32 %A_read_18, i32* %A_cached_row_8_addr_1, align 8


 <State 23>: 6.77ns
ST_23: stg_519 [1/1] 0.00ns
.preheader5.1:0  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str6) nounwind

ST_23: A_read_19 [1/1] 4.38ns
.preheader5.1:60  %A_read_19 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %A)

ST_23: A_cached_row_9_addr_1 [1/1] 0.00ns
.preheader5.1:61  %A_cached_row_9_addr_1 = getelementptr [10 x i32]* %A_cached_row_9, i64 0, i64 %newIndex

ST_23: stg_522 [1/1] 2.39ns
.preheader5.1:62  store i32 %A_read_19, i32* %A_cached_row_9_addr_1, align 4

ST_23: stg_523 [1/1] 0.00ns
.preheader5.1:66  br label %.preheader5.0


 <State 24>: 7.08ns
ST_24: k_1 [1/1] 0.00ns
.preheader.0:0  %k_1 = phi i7 [ %k_4_s, %.preheader.14643 ], [ 0, %.preheader.preheader ]

ST_24: empty_6 [1/1] 0.00ns
.preheader.0:1  %empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind

ST_24: exitcond1 [1/1] 1.97ns
.preheader.0:2  %exitcond1 = icmp eq i7 %k_1, -28

ST_24: stg_527 [1/1] 0.00ns
.preheader.0:3  br i1 %exitcond1, label %.loopexit, label %.preheader.1

ST_24: stg_528 [1/1] 0.00ns
.preheader.1:0  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str7) nounwind

ST_24: B_read [1/1] 4.38ns
.preheader.1:1  %B_read = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_24: stg_530 [1/1] 1.88ns
.preheader.1:2  switch i7 %k_1, label %branch3980 [
    i7 0, label %branch3900
    i7 20, label %branch3920
    i7 40, label %branch3940
    i7 60, label %branch3960
  ]

ST_24: stg_531 [1/1] 2.71ns
branch3960:0  store i32 %B_read, i32* %B_cached_60_addr, align 4

ST_24: stg_532 [1/1] 0.00ns
branch3960:1  br label %.preheader.16562

ST_24: stg_533 [1/1] 2.71ns
branch3940:0  store i32 %B_read, i32* %B_cached_40_addr, align 4

ST_24: stg_534 [1/1] 0.00ns
branch3940:1  br label %.preheader.16562

ST_24: stg_535 [1/1] 2.71ns
branch3920:0  store i32 %B_read, i32* %B_cached_20_addr, align 4

ST_24: stg_536 [1/1] 0.00ns
branch3920:1  br label %.preheader.16562

ST_24: stg_537 [1/1] 2.71ns
branch3900:0  store i32 %B_read, i32* %B_cached_0_addr, align 4

ST_24: stg_538 [1/1] 0.00ns
branch3900:1  br label %.preheader.16562

ST_24: stg_539 [1/1] 2.71ns
branch3980:0  store i32 %B_read, i32* %B_cached_80_addr, align 4

ST_24: stg_540 [1/1] 0.00ns
branch3980:1  br label %.preheader.16562

ST_24: tmp_11 [1/1] 0.00ns
.loopexit:0  %tmp_11 = zext i7 %j to i64

ST_24: B_cached_0_addr_1 [1/1] 0.00ns
.loopexit:1  %B_cached_0_addr_1 = getelementptr [100 x i32]* %B_cached_0, i64 0, i64 %tmp_11

ST_24: B_cached_20_addr_1 [1/1] 0.00ns
.loopexit:2  %B_cached_20_addr_1 = getelementptr [100 x i32]* %B_cached_20, i64 0, i64 %tmp_11

ST_24: B_cached_40_addr_1 [1/1] 0.00ns
.loopexit:3  %B_cached_40_addr_1 = getelementptr [100 x i32]* %B_cached_40, i64 0, i64 %tmp_11

ST_24: B_cached_60_addr_1 [1/1] 0.00ns
.loopexit:4  %B_cached_60_addr_1 = getelementptr [100 x i32]* %B_cached_60, i64 0, i64 %tmp_11

ST_24: B_cached_80_addr_1 [1/1] 0.00ns
.loopexit:5  %B_cached_80_addr_1 = getelementptr [100 x i32]* %B_cached_80, i64 0, i64 %tmp_11

ST_24: B_cached_80_load [2/2] 2.71ns
.loopexit:6  %B_cached_80_load = load i32* %B_cached_80_addr_1, align 4

ST_24: B_cached_0_load [2/2] 2.71ns
.loopexit:7  %B_cached_0_load = load i32* %B_cached_0_addr_1, align 4

ST_24: B_cached_20_load [2/2] 2.71ns
.loopexit:8  %B_cached_20_load = load i32* %B_cached_20_addr_1, align 4

ST_24: B_cached_40_load [2/2] 2.71ns
.loopexit:9  %B_cached_40_load = load i32* %B_cached_40_addr_1, align 4

ST_24: B_cached_60_load [2/2] 2.71ns
.loopexit:10  %B_cached_60_load = load i32* %B_cached_60_addr_1, align 4

ST_24: B_cached_1_addr_1 [1/1] 0.00ns
.loopexit:11  %B_cached_1_addr_1 = getelementptr [100 x i32]* %B_cached_1, i64 0, i64 %tmp_11

ST_24: B_cached_21_addr_1 [1/1] 0.00ns
.loopexit:12  %B_cached_21_addr_1 = getelementptr [100 x i32]* %B_cached_21, i64 0, i64 %tmp_11

ST_24: B_cached_41_addr_1 [1/1] 0.00ns
.loopexit:13  %B_cached_41_addr_1 = getelementptr [100 x i32]* %B_cached_41, i64 0, i64 %tmp_11

ST_24: B_cached_61_addr_1 [1/1] 0.00ns
.loopexit:14  %B_cached_61_addr_1 = getelementptr [100 x i32]* %B_cached_61, i64 0, i64 %tmp_11

ST_24: B_cached_81_addr_1 [1/1] 0.00ns
.loopexit:15  %B_cached_81_addr_1 = getelementptr [100 x i32]* %B_cached_81, i64 0, i64 %tmp_11

ST_24: B_cached_81_load [2/2] 2.71ns
.loopexit:16  %B_cached_81_load = load i32* %B_cached_81_addr_1, align 4

ST_24: B_cached_1_load [2/2] 2.71ns
.loopexit:17  %B_cached_1_load = load i32* %B_cached_1_addr_1, align 4

ST_24: B_cached_21_load [2/2] 2.71ns
.loopexit:18  %B_cached_21_load = load i32* %B_cached_21_addr_1, align 4

ST_24: B_cached_41_load [2/2] 2.71ns
.loopexit:19  %B_cached_41_load = load i32* %B_cached_41_addr_1, align 4

ST_24: B_cached_61_load [2/2] 2.71ns
.loopexit:20  %B_cached_61_load = load i32* %B_cached_61_addr_1, align 4

ST_24: B_cached_2_addr_1 [1/1] 0.00ns
.loopexit:21  %B_cached_2_addr_1 = getelementptr [100 x i32]* %B_cached_2, i64 0, i64 %tmp_11

ST_24: B_cached_22_addr_1 [1/1] 0.00ns
.loopexit:22  %B_cached_22_addr_1 = getelementptr [100 x i32]* %B_cached_22, i64 0, i64 %tmp_11

ST_24: B_cached_42_addr_1 [1/1] 0.00ns
.loopexit:23  %B_cached_42_addr_1 = getelementptr [100 x i32]* %B_cached_42, i64 0, i64 %tmp_11

ST_24: B_cached_62_addr_1 [1/1] 0.00ns
.loopexit:24  %B_cached_62_addr_1 = getelementptr [100 x i32]* %B_cached_62, i64 0, i64 %tmp_11

ST_24: B_cached_82_addr_1 [1/1] 0.00ns
.loopexit:25  %B_cached_82_addr_1 = getelementptr [100 x i32]* %B_cached_82, i64 0, i64 %tmp_11

ST_24: B_cached_82_load [2/2] 2.71ns
.loopexit:26  %B_cached_82_load = load i32* %B_cached_82_addr_1, align 4

ST_24: B_cached_2_load [2/2] 2.71ns
.loopexit:27  %B_cached_2_load = load i32* %B_cached_2_addr_1, align 4

ST_24: B_cached_22_load [2/2] 2.71ns
.loopexit:28  %B_cached_22_load = load i32* %B_cached_22_addr_1, align 4

ST_24: B_cached_42_load [2/2] 2.71ns
.loopexit:29  %B_cached_42_load = load i32* %B_cached_42_addr_1, align 4

ST_24: B_cached_62_load [2/2] 2.71ns
.loopexit:30  %B_cached_62_load = load i32* %B_cached_62_addr_1, align 4

ST_24: B_cached_3_addr_1 [1/1] 0.00ns
.loopexit:31  %B_cached_3_addr_1 = getelementptr [100 x i32]* %B_cached_3, i64 0, i64 %tmp_11

ST_24: B_cached_23_addr_1 [1/1] 0.00ns
.loopexit:32  %B_cached_23_addr_1 = getelementptr [100 x i32]* %B_cached_23, i64 0, i64 %tmp_11

ST_24: B_cached_43_addr_1 [1/1] 0.00ns
.loopexit:33  %B_cached_43_addr_1 = getelementptr [100 x i32]* %B_cached_43, i64 0, i64 %tmp_11

ST_24: B_cached_63_addr_1 [1/1] 0.00ns
.loopexit:34  %B_cached_63_addr_1 = getelementptr [100 x i32]* %B_cached_63, i64 0, i64 %tmp_11

ST_24: B_cached_83_addr_1 [1/1] 0.00ns
.loopexit:35  %B_cached_83_addr_1 = getelementptr [100 x i32]* %B_cached_83, i64 0, i64 %tmp_11

ST_24: B_cached_83_load [2/2] 2.71ns
.loopexit:36  %B_cached_83_load = load i32* %B_cached_83_addr_1, align 4

ST_24: B_cached_3_load [2/2] 2.71ns
.loopexit:37  %B_cached_3_load = load i32* %B_cached_3_addr_1, align 4

ST_24: B_cached_23_load [2/2] 2.71ns
.loopexit:38  %B_cached_23_load = load i32* %B_cached_23_addr_1, align 4

ST_24: B_cached_43_load [2/2] 2.71ns
.loopexit:39  %B_cached_43_load = load i32* %B_cached_43_addr_1, align 4

ST_24: B_cached_63_load [2/2] 2.71ns
.loopexit:40  %B_cached_63_load = load i32* %B_cached_63_addr_1, align 4

ST_24: B_cached_4_addr_1 [1/1] 0.00ns
.loopexit:41  %B_cached_4_addr_1 = getelementptr [100 x i32]* %B_cached_4, i64 0, i64 %tmp_11

ST_24: B_cached_24_addr_1 [1/1] 0.00ns
.loopexit:42  %B_cached_24_addr_1 = getelementptr [100 x i32]* %B_cached_24, i64 0, i64 %tmp_11

ST_24: B_cached_44_addr_1 [1/1] 0.00ns
.loopexit:43  %B_cached_44_addr_1 = getelementptr [100 x i32]* %B_cached_44, i64 0, i64 %tmp_11

ST_24: B_cached_64_addr_1 [1/1] 0.00ns
.loopexit:44  %B_cached_64_addr_1 = getelementptr [100 x i32]* %B_cached_64, i64 0, i64 %tmp_11

ST_24: B_cached_84_addr_1 [1/1] 0.00ns
.loopexit:45  %B_cached_84_addr_1 = getelementptr [100 x i32]* %B_cached_84, i64 0, i64 %tmp_11

ST_24: B_cached_84_load [2/2] 2.71ns
.loopexit:46  %B_cached_84_load = load i32* %B_cached_84_addr_1, align 4

ST_24: B_cached_4_load [2/2] 2.71ns
.loopexit:47  %B_cached_4_load = load i32* %B_cached_4_addr_1, align 4

ST_24: B_cached_24_load [2/2] 2.71ns
.loopexit:48  %B_cached_24_load = load i32* %B_cached_24_addr_1, align 4

ST_24: B_cached_44_load [2/2] 2.71ns
.loopexit:49  %B_cached_44_load = load i32* %B_cached_44_addr_1, align 4

ST_24: B_cached_64_load [2/2] 2.71ns
.loopexit:50  %B_cached_64_load = load i32* %B_cached_64_addr_1, align 4

ST_24: B_cached_5_addr_1 [1/1] 0.00ns
.loopexit:51  %B_cached_5_addr_1 = getelementptr [100 x i32]* %B_cached_5, i64 0, i64 %tmp_11

ST_24: B_cached_25_addr_1 [1/1] 0.00ns
.loopexit:52  %B_cached_25_addr_1 = getelementptr [100 x i32]* %B_cached_25, i64 0, i64 %tmp_11

ST_24: B_cached_45_addr_1 [1/1] 0.00ns
.loopexit:53  %B_cached_45_addr_1 = getelementptr [100 x i32]* %B_cached_45, i64 0, i64 %tmp_11

ST_24: B_cached_65_addr_1 [1/1] 0.00ns
.loopexit:54  %B_cached_65_addr_1 = getelementptr [100 x i32]* %B_cached_65, i64 0, i64 %tmp_11

ST_24: B_cached_85_addr_1 [1/1] 0.00ns
.loopexit:55  %B_cached_85_addr_1 = getelementptr [100 x i32]* %B_cached_85, i64 0, i64 %tmp_11

ST_24: B_cached_85_load [2/2] 2.71ns
.loopexit:56  %B_cached_85_load = load i32* %B_cached_85_addr_1, align 4

ST_24: B_cached_5_load [2/2] 2.71ns
.loopexit:57  %B_cached_5_load = load i32* %B_cached_5_addr_1, align 4

ST_24: B_cached_25_load [2/2] 2.71ns
.loopexit:58  %B_cached_25_load = load i32* %B_cached_25_addr_1, align 4

ST_24: B_cached_45_load [2/2] 2.71ns
.loopexit:59  %B_cached_45_load = load i32* %B_cached_45_addr_1, align 4

ST_24: B_cached_65_load [2/2] 2.71ns
.loopexit:60  %B_cached_65_load = load i32* %B_cached_65_addr_1, align 4

ST_24: B_cached_6_addr_1 [1/1] 0.00ns
.loopexit:61  %B_cached_6_addr_1 = getelementptr [100 x i32]* %B_cached_6, i64 0, i64 %tmp_11

ST_24: B_cached_26_addr_1 [1/1] 0.00ns
.loopexit:62  %B_cached_26_addr_1 = getelementptr [100 x i32]* %B_cached_26, i64 0, i64 %tmp_11

ST_24: B_cached_46_addr_1 [1/1] 0.00ns
.loopexit:63  %B_cached_46_addr_1 = getelementptr [100 x i32]* %B_cached_46, i64 0, i64 %tmp_11

ST_24: B_cached_66_addr_1 [1/1] 0.00ns
.loopexit:64  %B_cached_66_addr_1 = getelementptr [100 x i32]* %B_cached_66, i64 0, i64 %tmp_11

ST_24: B_cached_86_addr_1 [1/1] 0.00ns
.loopexit:65  %B_cached_86_addr_1 = getelementptr [100 x i32]* %B_cached_86, i64 0, i64 %tmp_11

ST_24: B_cached_86_load [2/2] 2.71ns
.loopexit:66  %B_cached_86_load = load i32* %B_cached_86_addr_1, align 4

ST_24: B_cached_6_load [2/2] 2.71ns
.loopexit:67  %B_cached_6_load = load i32* %B_cached_6_addr_1, align 4

ST_24: B_cached_26_load [2/2] 2.71ns
.loopexit:68  %B_cached_26_load = load i32* %B_cached_26_addr_1, align 4

ST_24: B_cached_46_load [2/2] 2.71ns
.loopexit:69  %B_cached_46_load = load i32* %B_cached_46_addr_1, align 4

ST_24: B_cached_66_load [2/2] 2.71ns
.loopexit:70  %B_cached_66_load = load i32* %B_cached_66_addr_1, align 4

ST_24: B_cached_7_addr_1 [1/1] 0.00ns
.loopexit:71  %B_cached_7_addr_1 = getelementptr [100 x i32]* %B_cached_7, i64 0, i64 %tmp_11

ST_24: B_cached_27_addr_1 [1/1] 0.00ns
.loopexit:72  %B_cached_27_addr_1 = getelementptr [100 x i32]* %B_cached_27, i64 0, i64 %tmp_11

ST_24: B_cached_47_addr_1 [1/1] 0.00ns
.loopexit:73  %B_cached_47_addr_1 = getelementptr [100 x i32]* %B_cached_47, i64 0, i64 %tmp_11

ST_24: B_cached_67_addr_1 [1/1] 0.00ns
.loopexit:74  %B_cached_67_addr_1 = getelementptr [100 x i32]* %B_cached_67, i64 0, i64 %tmp_11

ST_24: B_cached_87_addr_1 [1/1] 0.00ns
.loopexit:75  %B_cached_87_addr_1 = getelementptr [100 x i32]* %B_cached_87, i64 0, i64 %tmp_11

ST_24: B_cached_87_load [2/2] 2.71ns
.loopexit:76  %B_cached_87_load = load i32* %B_cached_87_addr_1, align 4

ST_24: B_cached_7_load [2/2] 2.71ns
.loopexit:77  %B_cached_7_load = load i32* %B_cached_7_addr_1, align 4

ST_24: B_cached_27_load [2/2] 2.71ns
.loopexit:78  %B_cached_27_load = load i32* %B_cached_27_addr_1, align 4

ST_24: B_cached_47_load [2/2] 2.71ns
.loopexit:79  %B_cached_47_load = load i32* %B_cached_47_addr_1, align 4

ST_24: B_cached_67_load [2/2] 2.71ns
.loopexit:80  %B_cached_67_load = load i32* %B_cached_67_addr_1, align 4

ST_24: B_cached_8_addr_1 [1/1] 0.00ns
.loopexit:81  %B_cached_8_addr_1 = getelementptr [100 x i32]* %B_cached_8, i64 0, i64 %tmp_11

ST_24: B_cached_28_addr_1 [1/1] 0.00ns
.loopexit:82  %B_cached_28_addr_1 = getelementptr [100 x i32]* %B_cached_28, i64 0, i64 %tmp_11

ST_24: B_cached_48_addr_1 [1/1] 0.00ns
.loopexit:83  %B_cached_48_addr_1 = getelementptr [100 x i32]* %B_cached_48, i64 0, i64 %tmp_11

ST_24: B_cached_68_addr_1 [1/1] 0.00ns
.loopexit:84  %B_cached_68_addr_1 = getelementptr [100 x i32]* %B_cached_68, i64 0, i64 %tmp_11

ST_24: B_cached_88_addr_1 [1/1] 0.00ns
.loopexit:85  %B_cached_88_addr_1 = getelementptr [100 x i32]* %B_cached_88, i64 0, i64 %tmp_11

ST_24: B_cached_88_load [2/2] 2.71ns
.loopexit:86  %B_cached_88_load = load i32* %B_cached_88_addr_1, align 4

ST_24: B_cached_8_load [2/2] 2.71ns
.loopexit:87  %B_cached_8_load = load i32* %B_cached_8_addr_1, align 4

ST_24: B_cached_28_load [2/2] 2.71ns
.loopexit:88  %B_cached_28_load = load i32* %B_cached_28_addr_1, align 4

ST_24: B_cached_48_load [2/2] 2.71ns
.loopexit:89  %B_cached_48_load = load i32* %B_cached_48_addr_1, align 4

ST_24: B_cached_68_load [2/2] 2.71ns
.loopexit:90  %B_cached_68_load = load i32* %B_cached_68_addr_1, align 4

ST_24: B_cached_9_addr_1 [1/1] 0.00ns
.loopexit:91  %B_cached_9_addr_1 = getelementptr [100 x i32]* %B_cached_9, i64 0, i64 %tmp_11

ST_24: B_cached_29_addr_1 [1/1] 0.00ns
.loopexit:92  %B_cached_29_addr_1 = getelementptr [100 x i32]* %B_cached_29, i64 0, i64 %tmp_11

ST_24: B_cached_49_addr_1 [1/1] 0.00ns
.loopexit:93  %B_cached_49_addr_1 = getelementptr [100 x i32]* %B_cached_49, i64 0, i64 %tmp_11

ST_24: B_cached_69_addr_1 [1/1] 0.00ns
.loopexit:94  %B_cached_69_addr_1 = getelementptr [100 x i32]* %B_cached_69, i64 0, i64 %tmp_11

ST_24: B_cached_89_addr_1 [1/1] 0.00ns
.loopexit:95  %B_cached_89_addr_1 = getelementptr [100 x i32]* %B_cached_89, i64 0, i64 %tmp_11

ST_24: B_cached_89_load [2/2] 2.71ns
.loopexit:96  %B_cached_89_load = load i32* %B_cached_89_addr_1, align 4

ST_24: B_cached_9_load [2/2] 2.71ns
.loopexit:97  %B_cached_9_load = load i32* %B_cached_9_addr_1, align 4

ST_24: B_cached_29_load [2/2] 2.71ns
.loopexit:98  %B_cached_29_load = load i32* %B_cached_29_addr_1, align 4

ST_24: B_cached_49_load [2/2] 2.71ns
.loopexit:99  %B_cached_49_load = load i32* %B_cached_49_addr_1, align 4

ST_24: B_cached_69_load [2/2] 2.71ns
.loopexit:100  %B_cached_69_load = load i32* %B_cached_69_addr_1, align 4

ST_24: B_cached_10_addr_1 [1/1] 0.00ns
.loopexit:101  %B_cached_10_addr_1 = getelementptr [100 x i32]* %B_cached_10, i64 0, i64 %tmp_11

ST_24: B_cached_30_addr_1 [1/1] 0.00ns
.loopexit:102  %B_cached_30_addr_1 = getelementptr [100 x i32]* %B_cached_30, i64 0, i64 %tmp_11

ST_24: B_cached_50_addr_1 [1/1] 0.00ns
.loopexit:103  %B_cached_50_addr_1 = getelementptr [100 x i32]* %B_cached_50, i64 0, i64 %tmp_11

ST_24: B_cached_70_addr_1 [1/1] 0.00ns
.loopexit:104  %B_cached_70_addr_1 = getelementptr [100 x i32]* %B_cached_70, i64 0, i64 %tmp_11

ST_24: B_cached_90_addr_1 [1/1] 0.00ns
.loopexit:105  %B_cached_90_addr_1 = getelementptr [100 x i32]* %B_cached_90, i64 0, i64 %tmp_11

ST_24: B_cached_90_load [2/2] 2.71ns
.loopexit:106  %B_cached_90_load = load i32* %B_cached_90_addr_1, align 4

ST_24: B_cached_10_load [2/2] 2.71ns
.loopexit:107  %B_cached_10_load = load i32* %B_cached_10_addr_1, align 4

ST_24: B_cached_30_load [2/2] 2.71ns
.loopexit:108  %B_cached_30_load = load i32* %B_cached_30_addr_1, align 4

ST_24: B_cached_50_load [2/2] 2.71ns
.loopexit:109  %B_cached_50_load = load i32* %B_cached_50_addr_1, align 4

ST_24: B_cached_70_load [2/2] 2.71ns
.loopexit:110  %B_cached_70_load = load i32* %B_cached_70_addr_1, align 4

ST_24: B_cached_11_addr_1 [1/1] 0.00ns
.loopexit:111  %B_cached_11_addr_1 = getelementptr [100 x i32]* %B_cached_11, i64 0, i64 %tmp_11

ST_24: B_cached_31_addr_1 [1/1] 0.00ns
.loopexit:112  %B_cached_31_addr_1 = getelementptr [100 x i32]* %B_cached_31, i64 0, i64 %tmp_11

ST_24: B_cached_51_addr_1 [1/1] 0.00ns
.loopexit:113  %B_cached_51_addr_1 = getelementptr [100 x i32]* %B_cached_51, i64 0, i64 %tmp_11

ST_24: B_cached_71_addr_1 [1/1] 0.00ns
.loopexit:114  %B_cached_71_addr_1 = getelementptr [100 x i32]* %B_cached_71, i64 0, i64 %tmp_11

ST_24: B_cached_91_addr_1 [1/1] 0.00ns
.loopexit:115  %B_cached_91_addr_1 = getelementptr [100 x i32]* %B_cached_91, i64 0, i64 %tmp_11

ST_24: B_cached_91_load [2/2] 2.71ns
.loopexit:116  %B_cached_91_load = load i32* %B_cached_91_addr_1, align 4

ST_24: B_cached_11_load [2/2] 2.71ns
.loopexit:117  %B_cached_11_load = load i32* %B_cached_11_addr_1, align 4

ST_24: B_cached_31_load [2/2] 2.71ns
.loopexit:118  %B_cached_31_load = load i32* %B_cached_31_addr_1, align 4

ST_24: B_cached_51_load [2/2] 2.71ns
.loopexit:119  %B_cached_51_load = load i32* %B_cached_51_addr_1, align 4

ST_24: B_cached_71_load [2/2] 2.71ns
.loopexit:120  %B_cached_71_load = load i32* %B_cached_71_addr_1, align 4

ST_24: B_cached_12_addr_1 [1/1] 0.00ns
.loopexit:121  %B_cached_12_addr_1 = getelementptr [100 x i32]* %B_cached_12, i64 0, i64 %tmp_11

ST_24: B_cached_32_addr_1 [1/1] 0.00ns
.loopexit:122  %B_cached_32_addr_1 = getelementptr [100 x i32]* %B_cached_32, i64 0, i64 %tmp_11

ST_24: B_cached_52_addr_1 [1/1] 0.00ns
.loopexit:123  %B_cached_52_addr_1 = getelementptr [100 x i32]* %B_cached_52, i64 0, i64 %tmp_11

ST_24: B_cached_72_addr_1 [1/1] 0.00ns
.loopexit:124  %B_cached_72_addr_1 = getelementptr [100 x i32]* %B_cached_72, i64 0, i64 %tmp_11

ST_24: B_cached_92_addr_1 [1/1] 0.00ns
.loopexit:125  %B_cached_92_addr_1 = getelementptr [100 x i32]* %B_cached_92, i64 0, i64 %tmp_11

ST_24: B_cached_92_load [2/2] 2.71ns
.loopexit:126  %B_cached_92_load = load i32* %B_cached_92_addr_1, align 4

ST_24: B_cached_12_load [2/2] 2.71ns
.loopexit:127  %B_cached_12_load = load i32* %B_cached_12_addr_1, align 4

ST_24: B_cached_32_load [2/2] 2.71ns
.loopexit:128  %B_cached_32_load = load i32* %B_cached_32_addr_1, align 4

ST_24: B_cached_52_load [2/2] 2.71ns
.loopexit:129  %B_cached_52_load = load i32* %B_cached_52_addr_1, align 4

ST_24: B_cached_72_load [2/2] 2.71ns
.loopexit:130  %B_cached_72_load = load i32* %B_cached_72_addr_1, align 4

ST_24: B_cached_13_addr_1 [1/1] 0.00ns
.loopexit:131  %B_cached_13_addr_1 = getelementptr [100 x i32]* %B_cached_13, i64 0, i64 %tmp_11

ST_24: B_cached_33_addr_1 [1/1] 0.00ns
.loopexit:132  %B_cached_33_addr_1 = getelementptr [100 x i32]* %B_cached_33, i64 0, i64 %tmp_11

ST_24: B_cached_53_addr_1 [1/1] 0.00ns
.loopexit:133  %B_cached_53_addr_1 = getelementptr [100 x i32]* %B_cached_53, i64 0, i64 %tmp_11

ST_24: B_cached_73_addr_1 [1/1] 0.00ns
.loopexit:134  %B_cached_73_addr_1 = getelementptr [100 x i32]* %B_cached_73, i64 0, i64 %tmp_11

ST_24: B_cached_93_addr_1 [1/1] 0.00ns
.loopexit:135  %B_cached_93_addr_1 = getelementptr [100 x i32]* %B_cached_93, i64 0, i64 %tmp_11

ST_24: B_cached_93_load [2/2] 2.71ns
.loopexit:136  %B_cached_93_load = load i32* %B_cached_93_addr_1, align 4

ST_24: B_cached_13_load [2/2] 2.71ns
.loopexit:137  %B_cached_13_load = load i32* %B_cached_13_addr_1, align 4

ST_24: B_cached_33_load [2/2] 2.71ns
.loopexit:138  %B_cached_33_load = load i32* %B_cached_33_addr_1, align 4

ST_24: B_cached_53_load [2/2] 2.71ns
.loopexit:139  %B_cached_53_load = load i32* %B_cached_53_addr_1, align 4

ST_24: B_cached_73_load [2/2] 2.71ns
.loopexit:140  %B_cached_73_load = load i32* %B_cached_73_addr_1, align 4

ST_24: B_cached_14_addr_1 [1/1] 0.00ns
.loopexit:141  %B_cached_14_addr_1 = getelementptr [100 x i32]* %B_cached_14, i64 0, i64 %tmp_11

ST_24: B_cached_34_addr_1 [1/1] 0.00ns
.loopexit:142  %B_cached_34_addr_1 = getelementptr [100 x i32]* %B_cached_34, i64 0, i64 %tmp_11

ST_24: B_cached_54_addr_1 [1/1] 0.00ns
.loopexit:143  %B_cached_54_addr_1 = getelementptr [100 x i32]* %B_cached_54, i64 0, i64 %tmp_11

ST_24: B_cached_74_addr_1 [1/1] 0.00ns
.loopexit:144  %B_cached_74_addr_1 = getelementptr [100 x i32]* %B_cached_74, i64 0, i64 %tmp_11

ST_24: B_cached_94_addr_1 [1/1] 0.00ns
.loopexit:145  %B_cached_94_addr_1 = getelementptr [100 x i32]* %B_cached_94, i64 0, i64 %tmp_11

ST_24: B_cached_94_load [2/2] 2.71ns
.loopexit:146  %B_cached_94_load = load i32* %B_cached_94_addr_1, align 4

ST_24: B_cached_14_load [2/2] 2.71ns
.loopexit:147  %B_cached_14_load = load i32* %B_cached_14_addr_1, align 4

ST_24: B_cached_34_load [2/2] 2.71ns
.loopexit:148  %B_cached_34_load = load i32* %B_cached_34_addr_1, align 4

ST_24: B_cached_54_load [2/2] 2.71ns
.loopexit:149  %B_cached_54_load = load i32* %B_cached_54_addr_1, align 4

ST_24: B_cached_74_load [2/2] 2.71ns
.loopexit:150  %B_cached_74_load = load i32* %B_cached_74_addr_1, align 4

ST_24: B_cached_15_addr_1 [1/1] 0.00ns
.loopexit:151  %B_cached_15_addr_1 = getelementptr [100 x i32]* %B_cached_15, i64 0, i64 %tmp_11

ST_24: B_cached_35_addr_1 [1/1] 0.00ns
.loopexit:152  %B_cached_35_addr_1 = getelementptr [100 x i32]* %B_cached_35, i64 0, i64 %tmp_11

ST_24: B_cached_55_addr_1 [1/1] 0.00ns
.loopexit:153  %B_cached_55_addr_1 = getelementptr [100 x i32]* %B_cached_55, i64 0, i64 %tmp_11

ST_24: B_cached_75_addr_1 [1/1] 0.00ns
.loopexit:154  %B_cached_75_addr_1 = getelementptr [100 x i32]* %B_cached_75, i64 0, i64 %tmp_11

ST_24: B_cached_95_addr_1 [1/1] 0.00ns
.loopexit:155  %B_cached_95_addr_1 = getelementptr [100 x i32]* %B_cached_95, i64 0, i64 %tmp_11

ST_24: B_cached_95_load [2/2] 2.71ns
.loopexit:156  %B_cached_95_load = load i32* %B_cached_95_addr_1, align 4

ST_24: B_cached_15_load [2/2] 2.71ns
.loopexit:157  %B_cached_15_load = load i32* %B_cached_15_addr_1, align 4

ST_24: B_cached_35_load [2/2] 2.71ns
.loopexit:158  %B_cached_35_load = load i32* %B_cached_35_addr_1, align 4

ST_24: B_cached_55_load [2/2] 2.71ns
.loopexit:159  %B_cached_55_load = load i32* %B_cached_55_addr_1, align 4

ST_24: B_cached_75_load [2/2] 2.71ns
.loopexit:160  %B_cached_75_load = load i32* %B_cached_75_addr_1, align 4

ST_24: B_cached_16_addr_1 [1/1] 0.00ns
.loopexit:161  %B_cached_16_addr_1 = getelementptr [100 x i32]* %B_cached_16, i64 0, i64 %tmp_11

ST_24: B_cached_36_addr_1 [1/1] 0.00ns
.loopexit:162  %B_cached_36_addr_1 = getelementptr [100 x i32]* %B_cached_36, i64 0, i64 %tmp_11

ST_24: B_cached_56_addr_1 [1/1] 0.00ns
.loopexit:163  %B_cached_56_addr_1 = getelementptr [100 x i32]* %B_cached_56, i64 0, i64 %tmp_11

ST_24: B_cached_76_addr_1 [1/1] 0.00ns
.loopexit:164  %B_cached_76_addr_1 = getelementptr [100 x i32]* %B_cached_76, i64 0, i64 %tmp_11

ST_24: B_cached_96_addr_1 [1/1] 0.00ns
.loopexit:165  %B_cached_96_addr_1 = getelementptr [100 x i32]* %B_cached_96, i64 0, i64 %tmp_11

ST_24: B_cached_96_load [2/2] 2.71ns
.loopexit:166  %B_cached_96_load = load i32* %B_cached_96_addr_1, align 4

ST_24: B_cached_16_load [2/2] 2.71ns
.loopexit:167  %B_cached_16_load = load i32* %B_cached_16_addr_1, align 4

ST_24: B_cached_36_load [2/2] 2.71ns
.loopexit:168  %B_cached_36_load = load i32* %B_cached_36_addr_1, align 4

ST_24: B_cached_56_load [2/2] 2.71ns
.loopexit:169  %B_cached_56_load = load i32* %B_cached_56_addr_1, align 4

ST_24: B_cached_76_load [2/2] 2.71ns
.loopexit:170  %B_cached_76_load = load i32* %B_cached_76_addr_1, align 4

ST_24: B_cached_17_addr_1 [1/1] 0.00ns
.loopexit:171  %B_cached_17_addr_1 = getelementptr [100 x i32]* %B_cached_17, i64 0, i64 %tmp_11

ST_24: B_cached_37_addr_1 [1/1] 0.00ns
.loopexit:172  %B_cached_37_addr_1 = getelementptr [100 x i32]* %B_cached_37, i64 0, i64 %tmp_11

ST_24: B_cached_57_addr_1 [1/1] 0.00ns
.loopexit:173  %B_cached_57_addr_1 = getelementptr [100 x i32]* %B_cached_57, i64 0, i64 %tmp_11

ST_24: B_cached_77_addr_1 [1/1] 0.00ns
.loopexit:174  %B_cached_77_addr_1 = getelementptr [100 x i32]* %B_cached_77, i64 0, i64 %tmp_11

ST_24: B_cached_97_addr_1 [1/1] 0.00ns
.loopexit:175  %B_cached_97_addr_1 = getelementptr [100 x i32]* %B_cached_97, i64 0, i64 %tmp_11

ST_24: B_cached_97_load [2/2] 2.71ns
.loopexit:176  %B_cached_97_load = load i32* %B_cached_97_addr_1, align 4

ST_24: B_cached_17_load [2/2] 2.71ns
.loopexit:177  %B_cached_17_load = load i32* %B_cached_17_addr_1, align 4

ST_24: B_cached_37_load [2/2] 2.71ns
.loopexit:178  %B_cached_37_load = load i32* %B_cached_37_addr_1, align 4

ST_24: B_cached_57_load [2/2] 2.71ns
.loopexit:179  %B_cached_57_load = load i32* %B_cached_57_addr_1, align 4

ST_24: B_cached_77_load [2/2] 2.71ns
.loopexit:180  %B_cached_77_load = load i32* %B_cached_77_addr_1, align 4

ST_24: B_cached_18_addr_1 [1/1] 0.00ns
.loopexit:181  %B_cached_18_addr_1 = getelementptr [100 x i32]* %B_cached_18, i64 0, i64 %tmp_11

ST_24: B_cached_38_addr_1 [1/1] 0.00ns
.loopexit:182  %B_cached_38_addr_1 = getelementptr [100 x i32]* %B_cached_38, i64 0, i64 %tmp_11

ST_24: B_cached_58_addr_1 [1/1] 0.00ns
.loopexit:183  %B_cached_58_addr_1 = getelementptr [100 x i32]* %B_cached_58, i64 0, i64 %tmp_11

ST_24: B_cached_78_addr_1 [1/1] 0.00ns
.loopexit:184  %B_cached_78_addr_1 = getelementptr [100 x i32]* %B_cached_78, i64 0, i64 %tmp_11

ST_24: B_cached_98_addr_1 [1/1] 0.00ns
.loopexit:185  %B_cached_98_addr_1 = getelementptr [100 x i32]* %B_cached_98, i64 0, i64 %tmp_11

ST_24: B_cached_98_load [2/2] 2.71ns
.loopexit:186  %B_cached_98_load = load i32* %B_cached_98_addr_1, align 4

ST_24: B_cached_18_load [2/2] 2.71ns
.loopexit:187  %B_cached_18_load = load i32* %B_cached_18_addr_1, align 4

ST_24: B_cached_38_load [2/2] 2.71ns
.loopexit:188  %B_cached_38_load = load i32* %B_cached_38_addr_1, align 4

ST_24: B_cached_58_load [2/2] 2.71ns
.loopexit:189  %B_cached_58_load = load i32* %B_cached_58_addr_1, align 4

ST_24: B_cached_78_load [2/2] 2.71ns
.loopexit:190  %B_cached_78_load = load i32* %B_cached_78_addr_1, align 4

ST_24: B_cached_19_addr_1 [1/1] 0.00ns
.loopexit:191  %B_cached_19_addr_1 = getelementptr [100 x i32]* %B_cached_19, i64 0, i64 %tmp_11

ST_24: B_cached_39_addr_1 [1/1] 0.00ns
.loopexit:192  %B_cached_39_addr_1 = getelementptr [100 x i32]* %B_cached_39, i64 0, i64 %tmp_11

ST_24: B_cached_59_addr_1 [1/1] 0.00ns
.loopexit:193  %B_cached_59_addr_1 = getelementptr [100 x i32]* %B_cached_59, i64 0, i64 %tmp_11

ST_24: B_cached_79_addr_1 [1/1] 0.00ns
.loopexit:194  %B_cached_79_addr_1 = getelementptr [100 x i32]* %B_cached_79, i64 0, i64 %tmp_11

ST_24: B_cached_99_addr_1 [1/1] 0.00ns
.loopexit:195  %B_cached_99_addr_1 = getelementptr [100 x i32]* %B_cached_99, i64 0, i64 %tmp_11

ST_24: B_cached_99_load [2/2] 2.71ns
.loopexit:196  %B_cached_99_load = load i32* %B_cached_99_addr_1, align 4

ST_24: B_cached_19_load [2/2] 2.71ns
.loopexit:197  %B_cached_19_load = load i32* %B_cached_19_addr_1, align 4

ST_24: B_cached_39_load [2/2] 2.71ns
.loopexit:198  %B_cached_39_load = load i32* %B_cached_39_addr_1, align 4

ST_24: B_cached_59_load [2/2] 2.71ns
.loopexit:199  %B_cached_59_load = load i32* %B_cached_59_addr_1, align 4

ST_24: B_cached_79_load [2/2] 2.71ns
.loopexit:200  %B_cached_79_load = load i32* %B_cached_79_addr_1, align 4


 <State 25>: 7.08ns
ST_25: B_read_1 [1/1] 4.38ns
.preheader.16562:0  %B_read_1 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_25: k_4_019_t [1/1] 0.00ns
.preheader.16562:1  %k_4_019_t = or i7 %k_1, 1

ST_25: stg_744 [1/1] 1.88ns
.preheader.16562:2  switch i7 %k_4_019_t, label %branch3881 [
    i7 1, label %branch3801
    i7 21, label %branch3821
    i7 41, label %branch3841
    i7 61, label %branch3861
  ]

ST_25: stg_745 [1/1] 2.71ns
branch3861:0  store i32 %B_read_1, i32* %B_cached_61_addr, align 4

ST_25: stg_746 [1/1] 0.00ns
branch3861:1  br label %.preheader.16461

ST_25: stg_747 [1/1] 2.71ns
branch3841:0  store i32 %B_read_1, i32* %B_cached_41_addr, align 4

ST_25: stg_748 [1/1] 0.00ns
branch3841:1  br label %.preheader.16461

ST_25: stg_749 [1/1] 2.71ns
branch3821:0  store i32 %B_read_1, i32* %B_cached_21_addr, align 4

ST_25: stg_750 [1/1] 0.00ns
branch3821:1  br label %.preheader.16461

ST_25: stg_751 [1/1] 2.71ns
branch3801:0  store i32 %B_read_1, i32* %B_cached_1_addr, align 4

ST_25: stg_752 [1/1] 0.00ns
branch3801:1  br label %.preheader.16461

ST_25: stg_753 [1/1] 2.71ns
branch3881:0  store i32 %B_read_1, i32* %B_cached_81_addr, align 4

ST_25: stg_754 [1/1] 0.00ns
branch3881:1  br label %.preheader.16461


 <State 26>: 7.08ns
ST_26: B_read_2 [1/1] 4.38ns
.preheader.16461:0  %B_read_2 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_26: k_4_120_t [1/1] 0.00ns
.preheader.16461:1  %k_4_120_t = or i7 %k_1, 2

ST_26: stg_757 [1/1] 1.88ns
.preheader.16461:2  switch i7 %k_4_120_t, label %branch3782 [
    i7 2, label %branch3702
    i7 22, label %branch3722
    i7 42, label %branch3742
    i7 62, label %branch3762
  ]

ST_26: stg_758 [1/1] 2.71ns
branch3762:0  store i32 %B_read_2, i32* %B_cached_62_addr, align 4

ST_26: stg_759 [1/1] 0.00ns
branch3762:1  br label %.preheader.16360

ST_26: stg_760 [1/1] 2.71ns
branch3742:0  store i32 %B_read_2, i32* %B_cached_42_addr, align 4

ST_26: stg_761 [1/1] 0.00ns
branch3742:1  br label %.preheader.16360

ST_26: stg_762 [1/1] 2.71ns
branch3722:0  store i32 %B_read_2, i32* %B_cached_22_addr, align 4

ST_26: stg_763 [1/1] 0.00ns
branch3722:1  br label %.preheader.16360

ST_26: stg_764 [1/1] 2.71ns
branch3702:0  store i32 %B_read_2, i32* %B_cached_2_addr, align 4

ST_26: stg_765 [1/1] 0.00ns
branch3702:1  br label %.preheader.16360

ST_26: stg_766 [1/1] 2.71ns
branch3782:0  store i32 %B_read_2, i32* %B_cached_82_addr, align 4

ST_26: stg_767 [1/1] 0.00ns
branch3782:1  br label %.preheader.16360


 <State 27>: 7.08ns
ST_27: B_read_3 [1/1] 4.38ns
.preheader.16360:0  %B_read_3 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_27: k_4_221_t [1/1] 0.00ns
.preheader.16360:1  %k_4_221_t = or i7 %k_1, 3

ST_27: stg_770 [1/1] 1.88ns
.preheader.16360:2  switch i7 %k_4_221_t, label %branch3683 [
    i7 3, label %branch3603
    i7 23, label %branch3623
    i7 43, label %branch3643
    i7 63, label %branch3663
  ]

ST_27: stg_771 [1/1] 2.71ns
branch3663:0  store i32 %B_read_3, i32* %B_cached_63_addr, align 4

ST_27: stg_772 [1/1] 0.00ns
branch3663:1  br label %.preheader.16259

ST_27: stg_773 [1/1] 2.71ns
branch3643:0  store i32 %B_read_3, i32* %B_cached_43_addr, align 4

ST_27: stg_774 [1/1] 0.00ns
branch3643:1  br label %.preheader.16259

ST_27: stg_775 [1/1] 2.71ns
branch3623:0  store i32 %B_read_3, i32* %B_cached_23_addr, align 4

ST_27: stg_776 [1/1] 0.00ns
branch3623:1  br label %.preheader.16259

ST_27: stg_777 [1/1] 2.71ns
branch3603:0  store i32 %B_read_3, i32* %B_cached_3_addr, align 4

ST_27: stg_778 [1/1] 0.00ns
branch3603:1  br label %.preheader.16259

ST_27: stg_779 [1/1] 2.71ns
branch3683:0  store i32 %B_read_3, i32* %B_cached_83_addr, align 4

ST_27: stg_780 [1/1] 0.00ns
branch3683:1  br label %.preheader.16259


 <State 28>: 7.08ns
ST_28: B_read_4 [1/1] 4.38ns
.preheader.16259:0  %B_read_4 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_28: stg_782 [1/1] 1.88ns
.preheader.16259:1  switch i7 %k_1, label %branch3584 [
    i7 0, label %branch3504
    i7 20, label %branch3524
    i7 40, label %branch3544
    i7 60, label %branch3564
  ]

ST_28: stg_783 [1/1] 2.71ns
branch3564:0  store i32 %B_read_4, i32* %B_cached_64_addr, align 4

ST_28: stg_784 [1/1] 0.00ns
branch3564:1  br label %.preheader.16158

ST_28: stg_785 [1/1] 2.71ns
branch3544:0  store i32 %B_read_4, i32* %B_cached_44_addr, align 4

ST_28: stg_786 [1/1] 0.00ns
branch3544:1  br label %.preheader.16158

ST_28: stg_787 [1/1] 2.71ns
branch3524:0  store i32 %B_read_4, i32* %B_cached_24_addr, align 4

ST_28: stg_788 [1/1] 0.00ns
branch3524:1  br label %.preheader.16158

ST_28: stg_789 [1/1] 2.71ns
branch3504:0  store i32 %B_read_4, i32* %B_cached_4_addr, align 4

ST_28: stg_790 [1/1] 0.00ns
branch3504:1  br label %.preheader.16158

ST_28: stg_791 [1/1] 2.71ns
branch3584:0  store i32 %B_read_4, i32* %B_cached_84_addr, align 4

ST_28: stg_792 [1/1] 0.00ns
branch3584:1  br label %.preheader.16158


 <State 29>: 7.08ns
ST_29: B_read_5 [1/1] 4.38ns
.preheader.16158:0  %B_read_5 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_29: stg_794 [1/1] 1.88ns
.preheader.16158:1  switch i7 %k_1, label %branch3485 [
    i7 0, label %branch3405
    i7 20, label %branch3425
    i7 40, label %branch3445
    i7 60, label %branch3465
  ]

ST_29: stg_795 [1/1] 2.71ns
branch3465:0  store i32 %B_read_5, i32* %B_cached_65_addr, align 4

ST_29: stg_796 [1/1] 0.00ns
branch3465:1  br label %.preheader.16057

ST_29: stg_797 [1/1] 2.71ns
branch3445:0  store i32 %B_read_5, i32* %B_cached_45_addr, align 4

ST_29: stg_798 [1/1] 0.00ns
branch3445:1  br label %.preheader.16057

ST_29: stg_799 [1/1] 2.71ns
branch3425:0  store i32 %B_read_5, i32* %B_cached_25_addr, align 4

ST_29: stg_800 [1/1] 0.00ns
branch3425:1  br label %.preheader.16057

ST_29: stg_801 [1/1] 2.71ns
branch3405:0  store i32 %B_read_5, i32* %B_cached_5_addr, align 4

ST_29: stg_802 [1/1] 0.00ns
branch3405:1  br label %.preheader.16057

ST_29: stg_803 [1/1] 2.71ns
branch3485:0  store i32 %B_read_5, i32* %B_cached_85_addr, align 4

ST_29: stg_804 [1/1] 0.00ns
branch3485:1  br label %.preheader.16057


 <State 30>: 7.08ns
ST_30: B_read_6 [1/1] 4.38ns
.preheader.16057:0  %B_read_6 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_30: stg_806 [1/1] 1.88ns
.preheader.16057:1  switch i7 %k_1, label %branch3386 [
    i7 0, label %branch3306
    i7 20, label %branch3326
    i7 40, label %branch3346
    i7 60, label %branch3366
  ]

ST_30: stg_807 [1/1] 2.71ns
branch3366:0  store i32 %B_read_6, i32* %B_cached_66_addr, align 4

ST_30: stg_808 [1/1] 0.00ns
branch3366:1  br label %.preheader.15956

ST_30: stg_809 [1/1] 2.71ns
branch3346:0  store i32 %B_read_6, i32* %B_cached_46_addr, align 4

ST_30: stg_810 [1/1] 0.00ns
branch3346:1  br label %.preheader.15956

ST_30: stg_811 [1/1] 2.71ns
branch3326:0  store i32 %B_read_6, i32* %B_cached_26_addr, align 4

ST_30: stg_812 [1/1] 0.00ns
branch3326:1  br label %.preheader.15956

ST_30: stg_813 [1/1] 2.71ns
branch3306:0  store i32 %B_read_6, i32* %B_cached_6_addr, align 4

ST_30: stg_814 [1/1] 0.00ns
branch3306:1  br label %.preheader.15956

ST_30: stg_815 [1/1] 2.71ns
branch3386:0  store i32 %B_read_6, i32* %B_cached_86_addr, align 4

ST_30: stg_816 [1/1] 0.00ns
branch3386:1  br label %.preheader.15956


 <State 31>: 7.08ns
ST_31: B_read_7 [1/1] 4.38ns
.preheader.15956:0  %B_read_7 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_31: stg_818 [1/1] 1.88ns
.preheader.15956:1  switch i7 %k_1, label %branch3287 [
    i7 0, label %branch3207
    i7 20, label %branch3227
    i7 40, label %branch3247
    i7 60, label %branch3267
  ]

ST_31: stg_819 [1/1] 2.71ns
branch3267:0  store i32 %B_read_7, i32* %B_cached_67_addr, align 4

ST_31: stg_820 [1/1] 0.00ns
branch3267:1  br label %.preheader.15855

ST_31: stg_821 [1/1] 2.71ns
branch3247:0  store i32 %B_read_7, i32* %B_cached_47_addr, align 4

ST_31: stg_822 [1/1] 0.00ns
branch3247:1  br label %.preheader.15855

ST_31: stg_823 [1/1] 2.71ns
branch3227:0  store i32 %B_read_7, i32* %B_cached_27_addr, align 4

ST_31: stg_824 [1/1] 0.00ns
branch3227:1  br label %.preheader.15855

ST_31: stg_825 [1/1] 2.71ns
branch3207:0  store i32 %B_read_7, i32* %B_cached_7_addr, align 4

ST_31: stg_826 [1/1] 0.00ns
branch3207:1  br label %.preheader.15855

ST_31: stg_827 [1/1] 2.71ns
branch3287:0  store i32 %B_read_7, i32* %B_cached_87_addr, align 4

ST_31: stg_828 [1/1] 0.00ns
branch3287:1  br label %.preheader.15855


 <State 32>: 7.08ns
ST_32: B_read_8 [1/1] 4.38ns
.preheader.15855:0  %B_read_8 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_32: stg_830 [1/1] 1.88ns
.preheader.15855:1  switch i7 %k_1, label %branch3188 [
    i7 0, label %branch3108
    i7 20, label %branch3128
    i7 40, label %branch3148
    i7 60, label %branch3168
  ]

ST_32: stg_831 [1/1] 2.71ns
branch3168:0  store i32 %B_read_8, i32* %B_cached_68_addr, align 4

ST_32: stg_832 [1/1] 0.00ns
branch3168:1  br label %.preheader.15754

ST_32: stg_833 [1/1] 2.71ns
branch3148:0  store i32 %B_read_8, i32* %B_cached_48_addr, align 4

ST_32: stg_834 [1/1] 0.00ns
branch3148:1  br label %.preheader.15754

ST_32: stg_835 [1/1] 2.71ns
branch3128:0  store i32 %B_read_8, i32* %B_cached_28_addr, align 4

ST_32: stg_836 [1/1] 0.00ns
branch3128:1  br label %.preheader.15754

ST_32: stg_837 [1/1] 2.71ns
branch3108:0  store i32 %B_read_8, i32* %B_cached_8_addr, align 4

ST_32: stg_838 [1/1] 0.00ns
branch3108:1  br label %.preheader.15754

ST_32: stg_839 [1/1] 2.71ns
branch3188:0  store i32 %B_read_8, i32* %B_cached_88_addr, align 4

ST_32: stg_840 [1/1] 0.00ns
branch3188:1  br label %.preheader.15754


 <State 33>: 7.08ns
ST_33: B_read_9 [1/1] 4.38ns
.preheader.15754:0  %B_read_9 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_33: stg_842 [1/1] 1.88ns
.preheader.15754:1  switch i7 %k_1, label %branch3089 [
    i7 0, label %branch3009
    i7 20, label %branch3029
    i7 40, label %branch3049
    i7 60, label %branch3069
  ]

ST_33: stg_843 [1/1] 2.71ns
branch3069:0  store i32 %B_read_9, i32* %B_cached_69_addr, align 4

ST_33: stg_844 [1/1] 0.00ns
branch3069:1  br label %.preheader.15653

ST_33: stg_845 [1/1] 2.71ns
branch3049:0  store i32 %B_read_9, i32* %B_cached_49_addr, align 4

ST_33: stg_846 [1/1] 0.00ns
branch3049:1  br label %.preheader.15653

ST_33: stg_847 [1/1] 2.71ns
branch3029:0  store i32 %B_read_9, i32* %B_cached_29_addr, align 4

ST_33: stg_848 [1/1] 0.00ns
branch3029:1  br label %.preheader.15653

ST_33: stg_849 [1/1] 2.71ns
branch3009:0  store i32 %B_read_9, i32* %B_cached_9_addr, align 4

ST_33: stg_850 [1/1] 0.00ns
branch3009:1  br label %.preheader.15653

ST_33: stg_851 [1/1] 2.71ns
branch3089:0  store i32 %B_read_9, i32* %B_cached_89_addr, align 4

ST_33: stg_852 [1/1] 0.00ns
branch3089:1  br label %.preheader.15653


 <State 34>: 7.08ns
ST_34: B_read_10 [1/1] 4.38ns
.preheader.15653:0  %B_read_10 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_34: stg_854 [1/1] 1.88ns
.preheader.15653:1  switch i7 %k_1, label %branch2990 [
    i7 0, label %branch2910
    i7 20, label %branch2930
    i7 40, label %branch2950
    i7 60, label %branch2970
  ]

ST_34: stg_855 [1/1] 2.71ns
branch2970:0  store i32 %B_read_10, i32* %B_cached_70_addr, align 4

ST_34: stg_856 [1/1] 0.00ns
branch2970:1  br label %.preheader.15552

ST_34: stg_857 [1/1] 2.71ns
branch2950:0  store i32 %B_read_10, i32* %B_cached_50_addr, align 4

ST_34: stg_858 [1/1] 0.00ns
branch2950:1  br label %.preheader.15552

ST_34: stg_859 [1/1] 2.71ns
branch2930:0  store i32 %B_read_10, i32* %B_cached_30_addr, align 4

ST_34: stg_860 [1/1] 0.00ns
branch2930:1  br label %.preheader.15552

ST_34: stg_861 [1/1] 2.71ns
branch2910:0  store i32 %B_read_10, i32* %B_cached_10_addr, align 4

ST_34: stg_862 [1/1] 0.00ns
branch2910:1  br label %.preheader.15552

ST_34: stg_863 [1/1] 2.71ns
branch2990:0  store i32 %B_read_10, i32* %B_cached_90_addr, align 4

ST_34: stg_864 [1/1] 0.00ns
branch2990:1  br label %.preheader.15552


 <State 35>: 7.08ns
ST_35: B_read_11 [1/1] 4.38ns
.preheader.15552:0  %B_read_11 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_35: stg_866 [1/1] 1.88ns
.preheader.15552:1  switch i7 %k_1, label %branch2891 [
    i7 0, label %branch2811
    i7 20, label %branch2831
    i7 40, label %branch2851
    i7 60, label %branch2871
  ]

ST_35: stg_867 [1/1] 2.71ns
branch2871:0  store i32 %B_read_11, i32* %B_cached_71_addr, align 4

ST_35: stg_868 [1/1] 0.00ns
branch2871:1  br label %.preheader.15451

ST_35: stg_869 [1/1] 2.71ns
branch2851:0  store i32 %B_read_11, i32* %B_cached_51_addr, align 4

ST_35: stg_870 [1/1] 0.00ns
branch2851:1  br label %.preheader.15451

ST_35: stg_871 [1/1] 2.71ns
branch2831:0  store i32 %B_read_11, i32* %B_cached_31_addr, align 4

ST_35: stg_872 [1/1] 0.00ns
branch2831:1  br label %.preheader.15451

ST_35: stg_873 [1/1] 2.71ns
branch2811:0  store i32 %B_read_11, i32* %B_cached_11_addr, align 4

ST_35: stg_874 [1/1] 0.00ns
branch2811:1  br label %.preheader.15451

ST_35: stg_875 [1/1] 2.71ns
branch2891:0  store i32 %B_read_11, i32* %B_cached_91_addr, align 4

ST_35: stg_876 [1/1] 0.00ns
branch2891:1  br label %.preheader.15451


 <State 36>: 7.08ns
ST_36: B_read_12 [1/1] 4.38ns
.preheader.15451:0  %B_read_12 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_36: stg_878 [1/1] 1.88ns
.preheader.15451:1  switch i7 %k_1, label %branch2792 [
    i7 0, label %branch2712
    i7 20, label %branch2732
    i7 40, label %branch2752
    i7 60, label %branch2772
  ]

ST_36: stg_879 [1/1] 2.71ns
branch2772:0  store i32 %B_read_12, i32* %B_cached_72_addr, align 4

ST_36: stg_880 [1/1] 0.00ns
branch2772:1  br label %.preheader.15350

ST_36: stg_881 [1/1] 2.71ns
branch2752:0  store i32 %B_read_12, i32* %B_cached_52_addr, align 4

ST_36: stg_882 [1/1] 0.00ns
branch2752:1  br label %.preheader.15350

ST_36: stg_883 [1/1] 2.71ns
branch2732:0  store i32 %B_read_12, i32* %B_cached_32_addr, align 4

ST_36: stg_884 [1/1] 0.00ns
branch2732:1  br label %.preheader.15350

ST_36: stg_885 [1/1] 2.71ns
branch2712:0  store i32 %B_read_12, i32* %B_cached_12_addr, align 4

ST_36: stg_886 [1/1] 0.00ns
branch2712:1  br label %.preheader.15350

ST_36: stg_887 [1/1] 2.71ns
branch2792:0  store i32 %B_read_12, i32* %B_cached_92_addr, align 4

ST_36: stg_888 [1/1] 0.00ns
branch2792:1  br label %.preheader.15350


 <State 37>: 7.08ns
ST_37: B_read_13 [1/1] 4.38ns
.preheader.15350:0  %B_read_13 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_37: stg_890 [1/1] 1.88ns
.preheader.15350:1  switch i7 %k_1, label %branch2693 [
    i7 0, label %branch2613
    i7 20, label %branch2633
    i7 40, label %branch2653
    i7 60, label %branch2673
  ]

ST_37: stg_891 [1/1] 2.71ns
branch2673:0  store i32 %B_read_13, i32* %B_cached_73_addr, align 4

ST_37: stg_892 [1/1] 0.00ns
branch2673:1  br label %.preheader.15249

ST_37: stg_893 [1/1] 2.71ns
branch2653:0  store i32 %B_read_13, i32* %B_cached_53_addr, align 4

ST_37: stg_894 [1/1] 0.00ns
branch2653:1  br label %.preheader.15249

ST_37: stg_895 [1/1] 2.71ns
branch2633:0  store i32 %B_read_13, i32* %B_cached_33_addr, align 4

ST_37: stg_896 [1/1] 0.00ns
branch2633:1  br label %.preheader.15249

ST_37: stg_897 [1/1] 2.71ns
branch2613:0  store i32 %B_read_13, i32* %B_cached_13_addr, align 4

ST_37: stg_898 [1/1] 0.00ns
branch2613:1  br label %.preheader.15249

ST_37: stg_899 [1/1] 2.71ns
branch2693:0  store i32 %B_read_13, i32* %B_cached_93_addr, align 4

ST_37: stg_900 [1/1] 0.00ns
branch2693:1  br label %.preheader.15249


 <State 38>: 7.08ns
ST_38: B_read_14 [1/1] 4.38ns
.preheader.15249:0  %B_read_14 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_38: stg_902 [1/1] 1.88ns
.preheader.15249:1  switch i7 %k_1, label %branch2594 [
    i7 0, label %branch2514
    i7 20, label %branch2534
    i7 40, label %branch2554
    i7 60, label %branch2574
  ]

ST_38: stg_903 [1/1] 2.71ns
branch2574:0  store i32 %B_read_14, i32* %B_cached_74_addr, align 4

ST_38: stg_904 [1/1] 0.00ns
branch2574:1  br label %.preheader.15148

ST_38: stg_905 [1/1] 2.71ns
branch2554:0  store i32 %B_read_14, i32* %B_cached_54_addr, align 4

ST_38: stg_906 [1/1] 0.00ns
branch2554:1  br label %.preheader.15148

ST_38: stg_907 [1/1] 2.71ns
branch2534:0  store i32 %B_read_14, i32* %B_cached_34_addr, align 4

ST_38: stg_908 [1/1] 0.00ns
branch2534:1  br label %.preheader.15148

ST_38: stg_909 [1/1] 2.71ns
branch2514:0  store i32 %B_read_14, i32* %B_cached_14_addr, align 4

ST_38: stg_910 [1/1] 0.00ns
branch2514:1  br label %.preheader.15148

ST_38: stg_911 [1/1] 2.71ns
branch2594:0  store i32 %B_read_14, i32* %B_cached_94_addr, align 4

ST_38: stg_912 [1/1] 0.00ns
branch2594:1  br label %.preheader.15148


 <State 39>: 7.08ns
ST_39: B_read_15 [1/1] 4.38ns
.preheader.15148:0  %B_read_15 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_39: stg_914 [1/1] 1.88ns
.preheader.15148:1  switch i7 %k_1, label %branch2495 [
    i7 0, label %branch2415
    i7 20, label %branch2435
    i7 40, label %branch2455
    i7 60, label %branch2475
  ]

ST_39: stg_915 [1/1] 2.71ns
branch2475:0  store i32 %B_read_15, i32* %B_cached_75_addr, align 4

ST_39: stg_916 [1/1] 0.00ns
branch2475:1  br label %.preheader.15047

ST_39: stg_917 [1/1] 2.71ns
branch2455:0  store i32 %B_read_15, i32* %B_cached_55_addr, align 4

ST_39: stg_918 [1/1] 0.00ns
branch2455:1  br label %.preheader.15047

ST_39: stg_919 [1/1] 2.71ns
branch2435:0  store i32 %B_read_15, i32* %B_cached_35_addr, align 4

ST_39: stg_920 [1/1] 0.00ns
branch2435:1  br label %.preheader.15047

ST_39: stg_921 [1/1] 2.71ns
branch2415:0  store i32 %B_read_15, i32* %B_cached_15_addr, align 4

ST_39: stg_922 [1/1] 0.00ns
branch2415:1  br label %.preheader.15047

ST_39: stg_923 [1/1] 2.71ns
branch2495:0  store i32 %B_read_15, i32* %B_cached_95_addr, align 4

ST_39: stg_924 [1/1] 0.00ns
branch2495:1  br label %.preheader.15047


 <State 40>: 7.08ns
ST_40: B_read_16 [1/1] 4.38ns
.preheader.15047:0  %B_read_16 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_40: stg_926 [1/1] 1.88ns
.preheader.15047:1  switch i7 %k_1, label %branch2396 [
    i7 0, label %branch2316
    i7 20, label %branch2336
    i7 40, label %branch2356
    i7 60, label %branch2376
  ]

ST_40: stg_927 [1/1] 2.71ns
branch2376:0  store i32 %B_read_16, i32* %B_cached_76_addr, align 4

ST_40: stg_928 [1/1] 0.00ns
branch2376:1  br label %.preheader.14946

ST_40: stg_929 [1/1] 2.71ns
branch2356:0  store i32 %B_read_16, i32* %B_cached_56_addr, align 4

ST_40: stg_930 [1/1] 0.00ns
branch2356:1  br label %.preheader.14946

ST_40: stg_931 [1/1] 2.71ns
branch2336:0  store i32 %B_read_16, i32* %B_cached_36_addr, align 4

ST_40: stg_932 [1/1] 0.00ns
branch2336:1  br label %.preheader.14946

ST_40: stg_933 [1/1] 2.71ns
branch2316:0  store i32 %B_read_16, i32* %B_cached_16_addr, align 4

ST_40: stg_934 [1/1] 0.00ns
branch2316:1  br label %.preheader.14946

ST_40: stg_935 [1/1] 2.71ns
branch2396:0  store i32 %B_read_16, i32* %B_cached_96_addr, align 4

ST_40: stg_936 [1/1] 0.00ns
branch2396:1  br label %.preheader.14946


 <State 41>: 7.08ns
ST_41: B_read_17 [1/1] 4.38ns
.preheader.14946:0  %B_read_17 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_41: stg_938 [1/1] 1.88ns
.preheader.14946:1  switch i7 %k_1, label %branch2297 [
    i7 0, label %branch2217
    i7 20, label %branch2237
    i7 40, label %branch2257
    i7 60, label %branch2277
  ]

ST_41: stg_939 [1/1] 2.71ns
branch2277:0  store i32 %B_read_17, i32* %B_cached_77_addr, align 4

ST_41: stg_940 [1/1] 0.00ns
branch2277:1  br label %.preheader.14845

ST_41: stg_941 [1/1] 2.71ns
branch2257:0  store i32 %B_read_17, i32* %B_cached_57_addr, align 4

ST_41: stg_942 [1/1] 0.00ns
branch2257:1  br label %.preheader.14845

ST_41: stg_943 [1/1] 2.71ns
branch2237:0  store i32 %B_read_17, i32* %B_cached_37_addr, align 4

ST_41: stg_944 [1/1] 0.00ns
branch2237:1  br label %.preheader.14845

ST_41: stg_945 [1/1] 2.71ns
branch2217:0  store i32 %B_read_17, i32* %B_cached_17_addr, align 4

ST_41: stg_946 [1/1] 0.00ns
branch2217:1  br label %.preheader.14845

ST_41: stg_947 [1/1] 2.71ns
branch2297:0  store i32 %B_read_17, i32* %B_cached_97_addr, align 4

ST_41: stg_948 [1/1] 0.00ns
branch2297:1  br label %.preheader.14845


 <State 42>: 7.08ns
ST_42: B_read_18 [1/1] 4.38ns
.preheader.14845:0  %B_read_18 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_42: stg_950 [1/1] 1.88ns
.preheader.14845:1  switch i7 %k_1, label %branch2198 [
    i7 0, label %branch2118
    i7 20, label %branch2138
    i7 40, label %branch2158
    i7 60, label %branch2178
  ]

ST_42: stg_951 [1/1] 2.71ns
branch2178:0  store i32 %B_read_18, i32* %B_cached_78_addr, align 4

ST_42: stg_952 [1/1] 0.00ns
branch2178:1  br label %.preheader.14744

ST_42: stg_953 [1/1] 2.71ns
branch2158:0  store i32 %B_read_18, i32* %B_cached_58_addr, align 4

ST_42: stg_954 [1/1] 0.00ns
branch2158:1  br label %.preheader.14744

ST_42: stg_955 [1/1] 2.71ns
branch2138:0  store i32 %B_read_18, i32* %B_cached_38_addr, align 4

ST_42: stg_956 [1/1] 0.00ns
branch2138:1  br label %.preheader.14744

ST_42: stg_957 [1/1] 2.71ns
branch2118:0  store i32 %B_read_18, i32* %B_cached_18_addr, align 4

ST_42: stg_958 [1/1] 0.00ns
branch2118:1  br label %.preheader.14744

ST_42: stg_959 [1/1] 2.71ns
branch2198:0  store i32 %B_read_18, i32* %B_cached_98_addr, align 4

ST_42: stg_960 [1/1] 0.00ns
branch2198:1  br label %.preheader.14744


 <State 43>: 7.08ns
ST_43: B_read_19 [1/1] 4.38ns
.preheader.14744:0  %B_read_19 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %B)

ST_43: stg_962 [1/1] 1.88ns
.preheader.14744:1  switch i7 %k_1, label %branch2099 [
    i7 0, label %branch2019
    i7 20, label %branch2039
    i7 40, label %branch2059
    i7 60, label %branch2079
  ]

ST_43: stg_963 [1/1] 2.71ns
branch2079:0  store i32 %B_read_19, i32* %B_cached_79_addr, align 4

ST_43: stg_964 [1/1] 0.00ns
branch2079:1  br label %.preheader.14643

ST_43: stg_965 [1/1] 2.71ns
branch2059:0  store i32 %B_read_19, i32* %B_cached_59_addr, align 4

ST_43: stg_966 [1/1] 0.00ns
branch2059:1  br label %.preheader.14643

ST_43: stg_967 [1/1] 2.71ns
branch2039:0  store i32 %B_read_19, i32* %B_cached_39_addr, align 4

ST_43: stg_968 [1/1] 0.00ns
branch2039:1  br label %.preheader.14643

ST_43: stg_969 [1/1] 2.71ns
branch2019:0  store i32 %B_read_19, i32* %B_cached_19_addr, align 4

ST_43: stg_970 [1/1] 0.00ns
branch2019:1  br label %.preheader.14643

ST_43: stg_971 [1/1] 2.71ns
branch2099:0  store i32 %B_read_19, i32* %B_cached_99_addr, align 4

ST_43: stg_972 [1/1] 0.00ns
branch2099:1  br label %.preheader.14643

ST_43: k_4_s [1/1] 1.72ns
.preheader.14643:0  %k_4_s = add i7 %k_1, 20

ST_43: stg_974 [1/1] 0.00ns
.preheader.14643:1  br label %.preheader.0


 <State 44>: 2.71ns
ST_44: B_cached_80_load [1/2] 2.71ns
.loopexit:6  %B_cached_80_load = load i32* %B_cached_80_addr_1, align 4

ST_44: B_cached_0_load [1/2] 2.71ns
.loopexit:7  %B_cached_0_load = load i32* %B_cached_0_addr_1, align 4

ST_44: B_cached_20_load [1/2] 2.71ns
.loopexit:8  %B_cached_20_load = load i32* %B_cached_20_addr_1, align 4

ST_44: B_cached_40_load [1/2] 2.71ns
.loopexit:9  %B_cached_40_load = load i32* %B_cached_40_addr_1, align 4

ST_44: B_cached_60_load [1/2] 2.71ns
.loopexit:10  %B_cached_60_load = load i32* %B_cached_60_addr_1, align 4

ST_44: B_cached_81_load [1/2] 2.71ns
.loopexit:16  %B_cached_81_load = load i32* %B_cached_81_addr_1, align 4

ST_44: B_cached_1_load [1/2] 2.71ns
.loopexit:17  %B_cached_1_load = load i32* %B_cached_1_addr_1, align 4

ST_44: B_cached_21_load [1/2] 2.71ns
.loopexit:18  %B_cached_21_load = load i32* %B_cached_21_addr_1, align 4

ST_44: B_cached_41_load [1/2] 2.71ns
.loopexit:19  %B_cached_41_load = load i32* %B_cached_41_addr_1, align 4

ST_44: B_cached_61_load [1/2] 2.71ns
.loopexit:20  %B_cached_61_load = load i32* %B_cached_61_addr_1, align 4

ST_44: B_cached_82_load [1/2] 2.71ns
.loopexit:26  %B_cached_82_load = load i32* %B_cached_82_addr_1, align 4

ST_44: B_cached_2_load [1/2] 2.71ns
.loopexit:27  %B_cached_2_load = load i32* %B_cached_2_addr_1, align 4

ST_44: B_cached_22_load [1/2] 2.71ns
.loopexit:28  %B_cached_22_load = load i32* %B_cached_22_addr_1, align 4

ST_44: B_cached_42_load [1/2] 2.71ns
.loopexit:29  %B_cached_42_load = load i32* %B_cached_42_addr_1, align 4

ST_44: B_cached_62_load [1/2] 2.71ns
.loopexit:30  %B_cached_62_load = load i32* %B_cached_62_addr_1, align 4

ST_44: B_cached_83_load [1/2] 2.71ns
.loopexit:36  %B_cached_83_load = load i32* %B_cached_83_addr_1, align 4

ST_44: B_cached_3_load [1/2] 2.71ns
.loopexit:37  %B_cached_3_load = load i32* %B_cached_3_addr_1, align 4

ST_44: B_cached_23_load [1/2] 2.71ns
.loopexit:38  %B_cached_23_load = load i32* %B_cached_23_addr_1, align 4

ST_44: B_cached_43_load [1/2] 2.71ns
.loopexit:39  %B_cached_43_load = load i32* %B_cached_43_addr_1, align 4

ST_44: B_cached_63_load [1/2] 2.71ns
.loopexit:40  %B_cached_63_load = load i32* %B_cached_63_addr_1, align 4

ST_44: B_cached_84_load [1/2] 2.71ns
.loopexit:46  %B_cached_84_load = load i32* %B_cached_84_addr_1, align 4

ST_44: B_cached_4_load [1/2] 2.71ns
.loopexit:47  %B_cached_4_load = load i32* %B_cached_4_addr_1, align 4

ST_44: B_cached_24_load [1/2] 2.71ns
.loopexit:48  %B_cached_24_load = load i32* %B_cached_24_addr_1, align 4

ST_44: B_cached_44_load [1/2] 2.71ns
.loopexit:49  %B_cached_44_load = load i32* %B_cached_44_addr_1, align 4

ST_44: B_cached_64_load [1/2] 2.71ns
.loopexit:50  %B_cached_64_load = load i32* %B_cached_64_addr_1, align 4

ST_44: B_cached_85_load [1/2] 2.71ns
.loopexit:56  %B_cached_85_load = load i32* %B_cached_85_addr_1, align 4

ST_44: B_cached_5_load [1/2] 2.71ns
.loopexit:57  %B_cached_5_load = load i32* %B_cached_5_addr_1, align 4

ST_44: B_cached_25_load [1/2] 2.71ns
.loopexit:58  %B_cached_25_load = load i32* %B_cached_25_addr_1, align 4

ST_44: B_cached_45_load [1/2] 2.71ns
.loopexit:59  %B_cached_45_load = load i32* %B_cached_45_addr_1, align 4

ST_44: B_cached_65_load [1/2] 2.71ns
.loopexit:60  %B_cached_65_load = load i32* %B_cached_65_addr_1, align 4

ST_44: B_cached_86_load [1/2] 2.71ns
.loopexit:66  %B_cached_86_load = load i32* %B_cached_86_addr_1, align 4

ST_44: B_cached_6_load [1/2] 2.71ns
.loopexit:67  %B_cached_6_load = load i32* %B_cached_6_addr_1, align 4

ST_44: B_cached_26_load [1/2] 2.71ns
.loopexit:68  %B_cached_26_load = load i32* %B_cached_26_addr_1, align 4

ST_44: B_cached_46_load [1/2] 2.71ns
.loopexit:69  %B_cached_46_load = load i32* %B_cached_46_addr_1, align 4

ST_44: B_cached_66_load [1/2] 2.71ns
.loopexit:70  %B_cached_66_load = load i32* %B_cached_66_addr_1, align 4

ST_44: B_cached_87_load [1/2] 2.71ns
.loopexit:76  %B_cached_87_load = load i32* %B_cached_87_addr_1, align 4

ST_44: B_cached_7_load [1/2] 2.71ns
.loopexit:77  %B_cached_7_load = load i32* %B_cached_7_addr_1, align 4

ST_44: B_cached_27_load [1/2] 2.71ns
.loopexit:78  %B_cached_27_load = load i32* %B_cached_27_addr_1, align 4

ST_44: B_cached_47_load [1/2] 2.71ns
.loopexit:79  %B_cached_47_load = load i32* %B_cached_47_addr_1, align 4

ST_44: B_cached_67_load [1/2] 2.71ns
.loopexit:80  %B_cached_67_load = load i32* %B_cached_67_addr_1, align 4

ST_44: B_cached_88_load [1/2] 2.71ns
.loopexit:86  %B_cached_88_load = load i32* %B_cached_88_addr_1, align 4

ST_44: B_cached_8_load [1/2] 2.71ns
.loopexit:87  %B_cached_8_load = load i32* %B_cached_8_addr_1, align 4

ST_44: B_cached_28_load [1/2] 2.71ns
.loopexit:88  %B_cached_28_load = load i32* %B_cached_28_addr_1, align 4

ST_44: B_cached_48_load [1/2] 2.71ns
.loopexit:89  %B_cached_48_load = load i32* %B_cached_48_addr_1, align 4

ST_44: B_cached_68_load [1/2] 2.71ns
.loopexit:90  %B_cached_68_load = load i32* %B_cached_68_addr_1, align 4

ST_44: B_cached_89_load [1/2] 2.71ns
.loopexit:96  %B_cached_89_load = load i32* %B_cached_89_addr_1, align 4

ST_44: B_cached_9_load [1/2] 2.71ns
.loopexit:97  %B_cached_9_load = load i32* %B_cached_9_addr_1, align 4

ST_44: B_cached_29_load [1/2] 2.71ns
.loopexit:98  %B_cached_29_load = load i32* %B_cached_29_addr_1, align 4

ST_44: B_cached_49_load [1/2] 2.71ns
.loopexit:99  %B_cached_49_load = load i32* %B_cached_49_addr_1, align 4

ST_44: B_cached_69_load [1/2] 2.71ns
.loopexit:100  %B_cached_69_load = load i32* %B_cached_69_addr_1, align 4

ST_44: B_cached_90_load [1/2] 2.71ns
.loopexit:106  %B_cached_90_load = load i32* %B_cached_90_addr_1, align 4

ST_44: B_cached_10_load [1/2] 2.71ns
.loopexit:107  %B_cached_10_load = load i32* %B_cached_10_addr_1, align 4

ST_44: B_cached_30_load [1/2] 2.71ns
.loopexit:108  %B_cached_30_load = load i32* %B_cached_30_addr_1, align 4

ST_44: B_cached_50_load [1/2] 2.71ns
.loopexit:109  %B_cached_50_load = load i32* %B_cached_50_addr_1, align 4

ST_44: B_cached_70_load [1/2] 2.71ns
.loopexit:110  %B_cached_70_load = load i32* %B_cached_70_addr_1, align 4

ST_44: B_cached_91_load [1/2] 2.71ns
.loopexit:116  %B_cached_91_load = load i32* %B_cached_91_addr_1, align 4

ST_44: B_cached_11_load [1/2] 2.71ns
.loopexit:117  %B_cached_11_load = load i32* %B_cached_11_addr_1, align 4

ST_44: B_cached_31_load [1/2] 2.71ns
.loopexit:118  %B_cached_31_load = load i32* %B_cached_31_addr_1, align 4

ST_44: B_cached_51_load [1/2] 2.71ns
.loopexit:119  %B_cached_51_load = load i32* %B_cached_51_addr_1, align 4

ST_44: B_cached_71_load [1/2] 2.71ns
.loopexit:120  %B_cached_71_load = load i32* %B_cached_71_addr_1, align 4

ST_44: B_cached_92_load [1/2] 2.71ns
.loopexit:126  %B_cached_92_load = load i32* %B_cached_92_addr_1, align 4

ST_44: B_cached_12_load [1/2] 2.71ns
.loopexit:127  %B_cached_12_load = load i32* %B_cached_12_addr_1, align 4

ST_44: B_cached_32_load [1/2] 2.71ns
.loopexit:128  %B_cached_32_load = load i32* %B_cached_32_addr_1, align 4

ST_44: B_cached_52_load [1/2] 2.71ns
.loopexit:129  %B_cached_52_load = load i32* %B_cached_52_addr_1, align 4

ST_44: B_cached_72_load [1/2] 2.71ns
.loopexit:130  %B_cached_72_load = load i32* %B_cached_72_addr_1, align 4

ST_44: B_cached_93_load [1/2] 2.71ns
.loopexit:136  %B_cached_93_load = load i32* %B_cached_93_addr_1, align 4

ST_44: B_cached_13_load [1/2] 2.71ns
.loopexit:137  %B_cached_13_load = load i32* %B_cached_13_addr_1, align 4

ST_44: B_cached_33_load [1/2] 2.71ns
.loopexit:138  %B_cached_33_load = load i32* %B_cached_33_addr_1, align 4

ST_44: B_cached_53_load [1/2] 2.71ns
.loopexit:139  %B_cached_53_load = load i32* %B_cached_53_addr_1, align 4

ST_44: B_cached_73_load [1/2] 2.71ns
.loopexit:140  %B_cached_73_load = load i32* %B_cached_73_addr_1, align 4

ST_44: B_cached_94_load [1/2] 2.71ns
.loopexit:146  %B_cached_94_load = load i32* %B_cached_94_addr_1, align 4

ST_44: B_cached_14_load [1/2] 2.71ns
.loopexit:147  %B_cached_14_load = load i32* %B_cached_14_addr_1, align 4

ST_44: B_cached_34_load [1/2] 2.71ns
.loopexit:148  %B_cached_34_load = load i32* %B_cached_34_addr_1, align 4

ST_44: B_cached_54_load [1/2] 2.71ns
.loopexit:149  %B_cached_54_load = load i32* %B_cached_54_addr_1, align 4

ST_44: B_cached_74_load [1/2] 2.71ns
.loopexit:150  %B_cached_74_load = load i32* %B_cached_74_addr_1, align 4

ST_44: B_cached_95_load [1/2] 2.71ns
.loopexit:156  %B_cached_95_load = load i32* %B_cached_95_addr_1, align 4

ST_44: B_cached_15_load [1/2] 2.71ns
.loopexit:157  %B_cached_15_load = load i32* %B_cached_15_addr_1, align 4

ST_44: B_cached_35_load [1/2] 2.71ns
.loopexit:158  %B_cached_35_load = load i32* %B_cached_35_addr_1, align 4

ST_44: B_cached_55_load [1/2] 2.71ns
.loopexit:159  %B_cached_55_load = load i32* %B_cached_55_addr_1, align 4

ST_44: B_cached_75_load [1/2] 2.71ns
.loopexit:160  %B_cached_75_load = load i32* %B_cached_75_addr_1, align 4

ST_44: B_cached_96_load [1/2] 2.71ns
.loopexit:166  %B_cached_96_load = load i32* %B_cached_96_addr_1, align 4

ST_44: B_cached_16_load [1/2] 2.71ns
.loopexit:167  %B_cached_16_load = load i32* %B_cached_16_addr_1, align 4

ST_44: B_cached_36_load [1/2] 2.71ns
.loopexit:168  %B_cached_36_load = load i32* %B_cached_36_addr_1, align 4

ST_44: B_cached_56_load [1/2] 2.71ns
.loopexit:169  %B_cached_56_load = load i32* %B_cached_56_addr_1, align 4

ST_44: B_cached_76_load [1/2] 2.71ns
.loopexit:170  %B_cached_76_load = load i32* %B_cached_76_addr_1, align 4

ST_44: B_cached_97_load [1/2] 2.71ns
.loopexit:176  %B_cached_97_load = load i32* %B_cached_97_addr_1, align 4

ST_44: B_cached_17_load [1/2] 2.71ns
.loopexit:177  %B_cached_17_load = load i32* %B_cached_17_addr_1, align 4

ST_44: B_cached_37_load [1/2] 2.71ns
.loopexit:178  %B_cached_37_load = load i32* %B_cached_37_addr_1, align 4

ST_44: B_cached_57_load [1/2] 2.71ns
.loopexit:179  %B_cached_57_load = load i32* %B_cached_57_addr_1, align 4

ST_44: B_cached_77_load [1/2] 2.71ns
.loopexit:180  %B_cached_77_load = load i32* %B_cached_77_addr_1, align 4

ST_44: B_cached_98_load [1/2] 2.71ns
.loopexit:186  %B_cached_98_load = load i32* %B_cached_98_addr_1, align 4

ST_44: B_cached_18_load [1/2] 2.71ns
.loopexit:187  %B_cached_18_load = load i32* %B_cached_18_addr_1, align 4

ST_44: B_cached_38_load [1/2] 2.71ns
.loopexit:188  %B_cached_38_load = load i32* %B_cached_38_addr_1, align 4

ST_44: B_cached_58_load [1/2] 2.71ns
.loopexit:189  %B_cached_58_load = load i32* %B_cached_58_addr_1, align 4

ST_44: B_cached_78_load [1/2] 2.71ns
.loopexit:190  %B_cached_78_load = load i32* %B_cached_78_addr_1, align 4

ST_44: B_cached_99_load [1/2] 2.71ns
.loopexit:196  %B_cached_99_load = load i32* %B_cached_99_addr_1, align 4

ST_44: B_cached_19_load [1/2] 2.71ns
.loopexit:197  %B_cached_19_load = load i32* %B_cached_19_addr_1, align 4

ST_44: B_cached_39_load [1/2] 2.71ns
.loopexit:198  %B_cached_39_load = load i32* %B_cached_39_addr_1, align 4

ST_44: B_cached_59_load [1/2] 2.71ns
.loopexit:199  %B_cached_59_load = load i32* %B_cached_59_addr_1, align 4

ST_44: B_cached_79_load [1/2] 2.71ns
.loopexit:200  %B_cached_79_load = load i32* %B_cached_79_addr_1, align 4

ST_44: stg_1075 [1/1] 1.57ns
.loopexit:201  br label %5


 <State 45>: 6.08ns
ST_45: indvars_iv1 [1/1] 0.00ns
:0  %indvars_iv1 = phi i4 [ %indvars_iv_next2, %._crit_edge9.19 ], [ 1, %.loopexit ]

ST_45: indvars_iv3 [1/1] 0.00ns
:1  %indvars_iv3 = phi i4 [ %indvars_iv_next1, %._crit_edge9.19 ], [ 0, %.loopexit ]

ST_45: k_2 [1/1] 0.00ns
:2  %k_2 = phi i7 [ %k_5_19, %._crit_edge9.19 ], [ 0, %.loopexit ]

ST_45: temp [1/1] 0.00ns
:3  %temp = phi i64 [ %temp_1_18, %._crit_edge9.19 ], [ 0, %.loopexit ]

ST_45: k_2_cast [1/1] 0.00ns
:4  %k_2_cast = zext i7 %k_2 to i8

ST_45: empty_7 [1/1] 0.00ns
:5  %empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5) nounwind

ST_45: exitcond [1/1] 1.97ns
:6  %exitcond = icmp eq i7 %k_2, -28

ST_45: tmp_15 [1/1] 1.97ns
:7  %tmp_15 = icmp eq i7 %k_2, 0

ST_45: stg_1084 [1/1] 0.00ns
:8  br i1 %exitcond, label %7, label %6

ST_45: stg_1085 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str8) nounwind

ST_45: tmp_12 [1/1] 2.00ns
:1  %tmp_12 = icmp ult i8 %k_2_cast, %mB_read

ST_45: stg_1087 [1/1] 1.57ns
:2  br i1 %tmp_12, label %_ifconv, label %._crit_edge9.0

ST_45: newIndex1 [1/1] 0.00ns
_ifconv:0  %newIndex1 = zext i4 %indvars_iv3 to i64

ST_45: A_cached_row_0_addr_2 [1/1] 0.00ns
_ifconv:1  %A_cached_row_0_addr_2 = getelementptr [10 x i32]* %A_cached_row_0, i64 0, i64 %newIndex1

ST_45: A_cached_row_0_load [2/2] 2.39ns
_ifconv:2  %A_cached_row_0_load = load i32* %A_cached_row_0_addr_2, align 16

ST_45: sel_tmp2 [1/1] 1.97ns
_ifconv:3  %sel_tmp2 = icmp eq i7 %k_2, 20

ST_45: sel_tmp4 [1/1] 1.97ns
_ifconv:4  %sel_tmp4 = icmp eq i7 %k_2, 40

ST_45: sel_tmp6 [1/1] 1.97ns
_ifconv:5  %sel_tmp6 = icmp eq i7 %k_2, 60

ST_45: newSel [1/1] 1.37ns
_ifconv:6  %newSel = select i1 %sel_tmp6, i32 %B_cached_60_load, i32 %B_cached_40_load

ST_45: or_cond [1/1] 1.37ns
_ifconv:7  %or_cond = or i1 %sel_tmp6, %sel_tmp4

ST_45: newSel1 [1/1] 1.37ns
_ifconv:8  %newSel1 = select i1 %sel_tmp2, i32 %B_cached_20_load, i32 %B_cached_0_load

ST_45: or_cond1 [1/1] 1.37ns
_ifconv:9  %or_cond1 = or i1 %sel_tmp2, %tmp_15

ST_45: newSel2 [1/1] 1.37ns
_ifconv:10  %newSel2 = select i1 %or_cond, i32 %newSel, i32 %newSel1

ST_45: or_cond2 [1/1] 1.37ns
_ifconv:11  %or_cond2 = or i1 %or_cond, %or_cond1

ST_45: newSel3 [1/1] 1.37ns
_ifconv:12  %newSel3 = select i1 %or_cond2, i32 %newSel2, i32 %B_cached_80_load

ST_45: stg_1101 [1/1] 4.38ns
:0  call void @_ssdm_op_Write.ap_fifo.volatile.i64P(i64* %C, i64 %temp)

ST_45: stg_1102 [1/1] 0.00ns
:1  br label %._crit_edge

ST_45: empty_8 [1/1] 0.00ns
._crit_edge:0  %empty_8 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str5, i32 %tmp_2) nounwind

ST_45: stg_1104 [1/1] 0.00ns
._crit_edge:1  br label %2


 <State 46>: 8.47ns
ST_46: A_cached_row_0_load [1/2] 2.39ns
_ifconv:2  %A_cached_row_0_load = load i32* %A_cached_row_0_addr_2, align 16

ST_46: tmp_13 [6/6] 6.08ns
_ifconv:13  %tmp_13 = mul nsw i32 %A_cached_row_0_load, %newSel3


 <State 47>: 6.08ns
ST_47: tmp_13 [5/6] 6.08ns
_ifconv:13  %tmp_13 = mul nsw i32 %A_cached_row_0_load, %newSel3


 <State 48>: 6.08ns
ST_48: tmp_13 [4/6] 6.08ns
_ifconv:13  %tmp_13 = mul nsw i32 %A_cached_row_0_load, %newSel3


 <State 49>: 6.08ns
ST_49: tmp_13 [3/6] 6.08ns
_ifconv:13  %tmp_13 = mul nsw i32 %A_cached_row_0_load, %newSel3


 <State 50>: 6.08ns
ST_50: tmp_13 [2/6] 6.08ns
_ifconv:13  %tmp_13 = mul nsw i32 %A_cached_row_0_load, %newSel3


 <State 51>: 6.08ns
ST_51: tmp_13 [1/6] 6.08ns
_ifconv:13  %tmp_13 = mul nsw i32 %A_cached_row_0_load, %newSel3


 <State 52>: 6.54ns
ST_52: tmp_14 [1/1] 0.00ns
_ifconv:14  %tmp_14 = sext i32 %tmp_13 to i64

ST_52: temp_2 [1/1] 3.40ns
_ifconv:15  %temp_2 = add nsw i64 %temp, %tmp_14

ST_52: stg_1114 [1/1] 1.57ns
_ifconv:16  br label %._crit_edge9.0

ST_52: temp_1 [1/1] 0.00ns
._crit_edge9.0:0  %temp_1 = phi i64 [ %temp_2, %_ifconv ], [ %temp, %6 ]

ST_52: k_5_s [1/1] 0.00ns
._crit_edge9.0:1  %k_5_s = or i7 %k_2, 1

ST_52: k_5_cast [1/1] 0.00ns
._crit_edge9.0:2  %k_5_cast = zext i7 %k_5_s to i8

ST_52: tmp_14_1 [1/1] 2.00ns
._crit_edge9.0:3  %tmp_14_1 = icmp ult i8 %k_5_cast, %mB_read

ST_52: stg_1119 [1/1] 1.57ns
._crit_edge9.0:4  br i1 %tmp_14_1, label %_ifconv8, label %._crit_edge9.1

ST_52: newIndex3 [1/1] 0.00ns
_ifconv8:0  %newIndex3 = zext i4 %indvars_iv3 to i64

ST_52: A_cached_row_1_addr_2 [1/1] 0.00ns
_ifconv8:1  %A_cached_row_1_addr_2 = getelementptr [10 x i32]* %A_cached_row_1, i64 0, i64 %newIndex3

ST_52: A_cached_row_1_load [2/2] 2.39ns
_ifconv8:2  %A_cached_row_1_load = load i32* %A_cached_row_1_addr_2, align 4

ST_52: sel_tmp9 [1/1] 1.97ns
_ifconv8:3  %sel_tmp9 = icmp eq i7 %k_5_s, 1

ST_52: sel_tmp1 [1/1] 1.97ns
_ifconv8:4  %sel_tmp1 = icmp eq i7 %k_5_s, 21

ST_52: sel_tmp3 [1/1] 1.97ns
_ifconv8:5  %sel_tmp3 = icmp eq i7 %k_5_s, 41

ST_52: sel_tmp5 [1/1] 1.97ns
_ifconv8:6  %sel_tmp5 = icmp eq i7 %k_5_s, 61

ST_52: newSel4 [1/1] 1.37ns
_ifconv8:7  %newSel4 = select i1 %sel_tmp5, i32 %B_cached_61_load, i32 %B_cached_41_load

ST_52: or_cond3 [1/1] 1.37ns
_ifconv8:8  %or_cond3 = or i1 %sel_tmp5, %sel_tmp3

ST_52: newSel5 [1/1] 1.37ns
_ifconv8:9  %newSel5 = select i1 %sel_tmp1, i32 %B_cached_21_load, i32 %B_cached_1_load

ST_52: or_cond4 [1/1] 1.37ns
_ifconv8:10  %or_cond4 = or i1 %sel_tmp1, %sel_tmp9

ST_52: newSel6 [1/1] 1.37ns
_ifconv8:11  %newSel6 = select i1 %or_cond3, i32 %newSel4, i32 %newSel5

ST_52: or_cond5 [1/1] 1.37ns
_ifconv8:12  %or_cond5 = or i1 %or_cond3, %or_cond4

ST_52: newSel7 [1/1] 1.37ns
_ifconv8:13  %newSel7 = select i1 %or_cond5, i32 %newSel6, i32 %B_cached_81_load


 <State 53>: 8.47ns
ST_53: A_cached_row_1_load [1/2] 2.39ns
_ifconv8:2  %A_cached_row_1_load = load i32* %A_cached_row_1_addr_2, align 4

ST_53: tmp_16_1 [6/6] 6.08ns
_ifconv8:14  %tmp_16_1 = mul nsw i32 %A_cached_row_1_load, %newSel7


 <State 54>: 6.08ns
ST_54: tmp_16_1 [5/6] 6.08ns
_ifconv8:14  %tmp_16_1 = mul nsw i32 %A_cached_row_1_load, %newSel7


 <State 55>: 6.08ns
ST_55: tmp_16_1 [4/6] 6.08ns
_ifconv8:14  %tmp_16_1 = mul nsw i32 %A_cached_row_1_load, %newSel7


 <State 56>: 6.08ns
ST_56: tmp_16_1 [3/6] 6.08ns
_ifconv8:14  %tmp_16_1 = mul nsw i32 %A_cached_row_1_load, %newSel7


 <State 57>: 6.08ns
ST_57: tmp_16_1 [2/6] 6.08ns
_ifconv8:14  %tmp_16_1 = mul nsw i32 %A_cached_row_1_load, %newSel7


 <State 58>: 6.08ns
ST_58: tmp_16_1 [1/6] 6.08ns
_ifconv8:14  %tmp_16_1 = mul nsw i32 %A_cached_row_1_load, %newSel7


 <State 59>: 6.54ns
ST_59: tmp_17_1 [1/1] 0.00ns
_ifconv8:15  %tmp_17_1 = sext i32 %tmp_16_1 to i64

ST_59: temp_2_1 [1/1] 3.40ns
_ifconv8:16  %temp_2_1 = add nsw i64 %temp_1, %tmp_17_1

ST_59: stg_1143 [1/1] 1.57ns
_ifconv8:17  br label %._crit_edge9.1

ST_59: temp_1_1 [1/1] 0.00ns
._crit_edge9.1:0  %temp_1_1 = phi i64 [ %temp_2_1, %_ifconv8 ], [ %temp_1, %._crit_edge9.0 ]

ST_59: k_5_1 [1/1] 0.00ns
._crit_edge9.1:1  %k_5_1 = or i7 %k_2, 2

ST_59: k_5_1_cast [1/1] 0.00ns
._crit_edge9.1:2  %k_5_1_cast = zext i7 %k_5_1 to i8

ST_59: tmp_14_2 [1/1] 2.00ns
._crit_edge9.1:3  %tmp_14_2 = icmp ult i8 %k_5_1_cast, %mB_read

ST_59: stg_1148 [1/1] 1.57ns
._crit_edge9.1:4  br i1 %tmp_14_2, label %_ifconv17, label %._crit_edge9.2

ST_59: newIndex4 [1/1] 0.00ns
_ifconv17:0  %newIndex4 = zext i4 %indvars_iv3 to i64

ST_59: A_cached_row_2_addr_2 [1/1] 0.00ns
_ifconv17:1  %A_cached_row_2_addr_2 = getelementptr [10 x i32]* %A_cached_row_2, i64 0, i64 %newIndex4

ST_59: A_cached_row_2_load [2/2] 2.39ns
_ifconv17:2  %A_cached_row_2_load = load i32* %A_cached_row_2_addr_2, align 8

ST_59: sel_tmp7 [1/1] 1.97ns
_ifconv17:3  %sel_tmp7 = icmp eq i7 %k_5_1, 2

ST_59: sel_tmp8 [1/1] 1.97ns
_ifconv17:4  %sel_tmp8 = icmp eq i7 %k_5_1, 22

ST_59: sel_tmp [1/1] 1.97ns
_ifconv17:5  %sel_tmp = icmp eq i7 %k_5_1, 42

ST_59: sel_tmp10 [1/1] 1.97ns
_ifconv17:6  %sel_tmp10 = icmp eq i7 %k_5_1, 62

ST_59: newSel8 [1/1] 1.37ns
_ifconv17:7  %newSel8 = select i1 %sel_tmp10, i32 %B_cached_62_load, i32 %B_cached_42_load

ST_59: or_cond6 [1/1] 1.37ns
_ifconv17:8  %or_cond6 = or i1 %sel_tmp10, %sel_tmp

ST_59: newSel9 [1/1] 1.37ns
_ifconv17:9  %newSel9 = select i1 %sel_tmp8, i32 %B_cached_22_load, i32 %B_cached_2_load

ST_59: or_cond7 [1/1] 1.37ns
_ifconv17:10  %or_cond7 = or i1 %sel_tmp8, %sel_tmp7

ST_59: newSel10 [1/1] 1.37ns
_ifconv17:11  %newSel10 = select i1 %or_cond6, i32 %newSel8, i32 %newSel9

ST_59: or_cond8 [1/1] 1.37ns
_ifconv17:12  %or_cond8 = or i1 %or_cond6, %or_cond7

ST_59: newSel11 [1/1] 1.37ns
_ifconv17:13  %newSel11 = select i1 %or_cond8, i32 %newSel10, i32 %B_cached_82_load


 <State 60>: 8.47ns
ST_60: A_cached_row_2_load [1/2] 2.39ns
_ifconv17:2  %A_cached_row_2_load = load i32* %A_cached_row_2_addr_2, align 8

ST_60: tmp_16_2 [6/6] 6.08ns
_ifconv17:14  %tmp_16_2 = mul nsw i32 %A_cached_row_2_load, %newSel11


 <State 61>: 6.08ns
ST_61: tmp_16_2 [5/6] 6.08ns
_ifconv17:14  %tmp_16_2 = mul nsw i32 %A_cached_row_2_load, %newSel11


 <State 62>: 6.08ns
ST_62: tmp_16_2 [4/6] 6.08ns
_ifconv17:14  %tmp_16_2 = mul nsw i32 %A_cached_row_2_load, %newSel11


 <State 63>: 6.08ns
ST_63: tmp_16_2 [3/6] 6.08ns
_ifconv17:14  %tmp_16_2 = mul nsw i32 %A_cached_row_2_load, %newSel11


 <State 64>: 6.08ns
ST_64: tmp_16_2 [2/6] 6.08ns
_ifconv17:14  %tmp_16_2 = mul nsw i32 %A_cached_row_2_load, %newSel11


 <State 65>: 6.08ns
ST_65: tmp_16_2 [1/6] 6.08ns
_ifconv17:14  %tmp_16_2 = mul nsw i32 %A_cached_row_2_load, %newSel11


 <State 66>: 6.54ns
ST_66: tmp_17_2 [1/1] 0.00ns
_ifconv17:15  %tmp_17_2 = sext i32 %tmp_16_2 to i64

ST_66: temp_2_2 [1/1] 3.40ns
_ifconv17:16  %temp_2_2 = add nsw i64 %temp_1_1, %tmp_17_2

ST_66: stg_1172 [1/1] 1.57ns
_ifconv17:17  br label %._crit_edge9.2

ST_66: temp_1_2 [1/1] 0.00ns
._crit_edge9.2:0  %temp_1_2 = phi i64 [ %temp_2_2, %_ifconv17 ], [ %temp_1_1, %._crit_edge9.1 ]

ST_66: k_5_2 [1/1] 0.00ns
._crit_edge9.2:1  %k_5_2 = or i7 %k_2, 3

ST_66: k_5_2_cast [1/1] 0.00ns
._crit_edge9.2:2  %k_5_2_cast = zext i7 %k_5_2 to i8

ST_66: tmp_14_3 [1/1] 2.00ns
._crit_edge9.2:3  %tmp_14_3 = icmp ult i8 %k_5_2_cast, %mB_read

ST_66: stg_1177 [1/1] 1.57ns
._crit_edge9.2:4  br i1 %tmp_14_3, label %_ifconv26, label %._crit_edge9.3

ST_66: newIndex5 [1/1] 0.00ns
_ifconv26:0  %newIndex5 = zext i4 %indvars_iv3 to i64

ST_66: A_cached_row_3_addr_2 [1/1] 0.00ns
_ifconv26:1  %A_cached_row_3_addr_2 = getelementptr [10 x i32]* %A_cached_row_3, i64 0, i64 %newIndex5

ST_66: A_cached_row_3_load [2/2] 2.39ns
_ifconv26:2  %A_cached_row_3_load = load i32* %A_cached_row_3_addr_2, align 4

ST_66: sel_tmp11 [1/1] 1.97ns
_ifconv26:3  %sel_tmp11 = icmp eq i7 %k_5_2, 3

ST_66: sel_tmp12 [1/1] 1.97ns
_ifconv26:4  %sel_tmp12 = icmp eq i7 %k_5_2, 23

ST_66: sel_tmp13 [1/1] 1.97ns
_ifconv26:5  %sel_tmp13 = icmp eq i7 %k_5_2, 43

ST_66: sel_tmp14 [1/1] 1.97ns
_ifconv26:6  %sel_tmp14 = icmp eq i7 %k_5_2, 63

ST_66: newSel12 [1/1] 1.37ns
_ifconv26:7  %newSel12 = select i1 %sel_tmp14, i32 %B_cached_63_load, i32 %B_cached_43_load

ST_66: or_cond9 [1/1] 1.37ns
_ifconv26:8  %or_cond9 = or i1 %sel_tmp14, %sel_tmp13

ST_66: newSel13 [1/1] 1.37ns
_ifconv26:9  %newSel13 = select i1 %sel_tmp12, i32 %B_cached_23_load, i32 %B_cached_3_load

ST_66: or_cond10 [1/1] 1.37ns
_ifconv26:10  %or_cond10 = or i1 %sel_tmp12, %sel_tmp11

ST_66: newSel14 [1/1] 1.37ns
_ifconv26:11  %newSel14 = select i1 %or_cond9, i32 %newSel12, i32 %newSel13

ST_66: or_cond11 [1/1] 1.37ns
_ifconv26:12  %or_cond11 = or i1 %or_cond9, %or_cond10

ST_66: newSel15 [1/1] 1.37ns
_ifconv26:13  %newSel15 = select i1 %or_cond11, i32 %newSel14, i32 %B_cached_83_load


 <State 67>: 8.47ns
ST_67: A_cached_row_3_load [1/2] 2.39ns
_ifconv26:2  %A_cached_row_3_load = load i32* %A_cached_row_3_addr_2, align 4

ST_67: tmp_16_3 [6/6] 6.08ns
_ifconv26:14  %tmp_16_3 = mul nsw i32 %A_cached_row_3_load, %newSel15


 <State 68>: 6.08ns
ST_68: tmp_16_3 [5/6] 6.08ns
_ifconv26:14  %tmp_16_3 = mul nsw i32 %A_cached_row_3_load, %newSel15


 <State 69>: 6.08ns
ST_69: tmp_16_3 [4/6] 6.08ns
_ifconv26:14  %tmp_16_3 = mul nsw i32 %A_cached_row_3_load, %newSel15


 <State 70>: 6.08ns
ST_70: tmp_16_3 [3/6] 6.08ns
_ifconv26:14  %tmp_16_3 = mul nsw i32 %A_cached_row_3_load, %newSel15


 <State 71>: 6.08ns
ST_71: tmp_16_3 [2/6] 6.08ns
_ifconv26:14  %tmp_16_3 = mul nsw i32 %A_cached_row_3_load, %newSel15


 <State 72>: 6.08ns
ST_72: tmp_16_3 [1/6] 6.08ns
_ifconv26:14  %tmp_16_3 = mul nsw i32 %A_cached_row_3_load, %newSel15


 <State 73>: 7.80ns
ST_73: tmp_17_3 [1/1] 0.00ns
_ifconv26:15  %tmp_17_3 = sext i32 %tmp_16_3 to i64

ST_73: temp_2_3 [1/1] 3.40ns
_ifconv26:16  %temp_2_3 = add nsw i64 %temp_1_2, %tmp_17_3

ST_73: stg_1201 [1/1] 1.57ns
_ifconv26:17  br label %._crit_edge9.3

ST_73: temp_1_3 [1/1] 0.00ns
._crit_edge9.3:0  %temp_1_3 = phi i64 [ %temp_2_3, %_ifconv26 ], [ %temp_1_2, %._crit_edge9.2 ]

ST_73: k_5_3 [1/1] 1.72ns
._crit_edge9.3:1  %k_5_3 = add i7 %k_2, 4

ST_73: k_5_3_cast [1/1] 0.00ns
._crit_edge9.3:2  %k_5_3_cast = zext i7 %k_5_3 to i8

ST_73: tmp_14_4 [1/1] 2.00ns
._crit_edge9.3:3  %tmp_14_4 = icmp ult i8 %k_5_3_cast, %mB_read

ST_73: stg_1206 [1/1] 1.57ns
._crit_edge9.3:4  br i1 %tmp_14_4, label %_ifconv35, label %._crit_edge9.4

ST_73: newIndex6 [1/1] 0.00ns
_ifconv35:0  %newIndex6 = zext i4 %indvars_iv3 to i64

ST_73: A_cached_row_4_addr_2 [1/1] 0.00ns
_ifconv35:1  %A_cached_row_4_addr_2 = getelementptr [10 x i32]* %A_cached_row_4, i64 0, i64 %newIndex6

ST_73: A_cached_row_4_load [2/2] 2.39ns
_ifconv35:2  %A_cached_row_4_load = load i32* %A_cached_row_4_addr_2, align 16

ST_73: sel_tmp15 [1/1] 1.97ns
_ifconv35:3  %sel_tmp15 = icmp eq i7 %k_5_3, 24

ST_73: sel_tmp16 [1/1] 1.97ns
_ifconv35:4  %sel_tmp16 = icmp eq i7 %k_5_3, 44

ST_73: sel_tmp17 [1/1] 1.97ns
_ifconv35:5  %sel_tmp17 = icmp eq i7 %k_5_3, -64

ST_73: newSel16 [1/1] 1.37ns
_ifconv35:6  %newSel16 = select i1 %sel_tmp17, i32 %B_cached_64_load, i32 %B_cached_44_load

ST_73: or_cond12 [1/1] 1.37ns
_ifconv35:7  %or_cond12 = or i1 %sel_tmp17, %sel_tmp16

ST_73: newSel17 [1/1] 1.37ns
_ifconv35:8  %newSel17 = select i1 %sel_tmp15, i32 %B_cached_24_load, i32 %B_cached_4_load

ST_73: or_cond13 [1/1] 1.37ns
_ifconv35:9  %or_cond13 = or i1 %sel_tmp15, %tmp_15

ST_73: newSel18 [1/1] 1.37ns
_ifconv35:10  %newSel18 = select i1 %or_cond12, i32 %newSel16, i32 %newSel17

ST_73: or_cond14 [1/1] 1.37ns
_ifconv35:11  %or_cond14 = or i1 %or_cond12, %or_cond13

ST_73: newSel19 [1/1] 1.37ns
_ifconv35:12  %newSel19 = select i1 %or_cond14, i32 %newSel18, i32 %B_cached_84_load


 <State 74>: 8.47ns
ST_74: A_cached_row_4_load [1/2] 2.39ns
_ifconv35:2  %A_cached_row_4_load = load i32* %A_cached_row_4_addr_2, align 16

ST_74: tmp_16_4 [6/6] 6.08ns
_ifconv35:13  %tmp_16_4 = mul nsw i32 %A_cached_row_4_load, %newSel19


 <State 75>: 6.08ns
ST_75: tmp_16_4 [5/6] 6.08ns
_ifconv35:13  %tmp_16_4 = mul nsw i32 %A_cached_row_4_load, %newSel19


 <State 76>: 6.08ns
ST_76: tmp_16_4 [4/6] 6.08ns
_ifconv35:13  %tmp_16_4 = mul nsw i32 %A_cached_row_4_load, %newSel19


 <State 77>: 6.08ns
ST_77: tmp_16_4 [3/6] 6.08ns
_ifconv35:13  %tmp_16_4 = mul nsw i32 %A_cached_row_4_load, %newSel19


 <State 78>: 6.08ns
ST_78: tmp_16_4 [2/6] 6.08ns
_ifconv35:13  %tmp_16_4 = mul nsw i32 %A_cached_row_4_load, %newSel19


 <State 79>: 6.08ns
ST_79: tmp_16_4 [1/6] 6.08ns
_ifconv35:13  %tmp_16_4 = mul nsw i32 %A_cached_row_4_load, %newSel19


 <State 80>: 7.80ns
ST_80: tmp_17_4 [1/1] 0.00ns
_ifconv35:14  %tmp_17_4 = sext i32 %tmp_16_4 to i64

ST_80: temp_2_4 [1/1] 3.40ns
_ifconv35:15  %temp_2_4 = add nsw i64 %temp_1_3, %tmp_17_4

ST_80: stg_1229 [1/1] 1.57ns
_ifconv35:16  br label %._crit_edge9.4

ST_80: temp_1_4 [1/1] 0.00ns
._crit_edge9.4:0  %temp_1_4 = phi i64 [ %temp_2_4, %_ifconv35 ], [ %temp_1_3, %._crit_edge9.3 ]

ST_80: k_5_4 [1/1] 1.72ns
._crit_edge9.4:1  %k_5_4 = add i7 %k_2, 5

ST_80: k_5_4_cast [1/1] 0.00ns
._crit_edge9.4:2  %k_5_4_cast = zext i7 %k_5_4 to i8

ST_80: tmp_14_5 [1/1] 2.00ns
._crit_edge9.4:3  %tmp_14_5 = icmp ult i8 %k_5_4_cast, %mB_read

ST_80: stg_1234 [1/1] 1.57ns
._crit_edge9.4:4  br i1 %tmp_14_5, label %_ifconv44, label %._crit_edge9.5

ST_80: newIndex7 [1/1] 0.00ns
_ifconv44:0  %newIndex7 = zext i4 %indvars_iv3 to i64

ST_80: A_cached_row_5_addr_2 [1/1] 0.00ns
_ifconv44:1  %A_cached_row_5_addr_2 = getelementptr [10 x i32]* %A_cached_row_5, i64 0, i64 %newIndex7

ST_80: A_cached_row_5_load [2/2] 2.39ns
_ifconv44:2  %A_cached_row_5_load = load i32* %A_cached_row_5_addr_2, align 4

ST_80: sel_tmp18 [1/1] 1.97ns
_ifconv44:3  %sel_tmp18 = icmp eq i7 %k_5_4, 25

ST_80: sel_tmp19 [1/1] 1.97ns
_ifconv44:4  %sel_tmp19 = icmp eq i7 %k_5_4, 45

ST_80: sel_tmp20 [1/1] 1.97ns
_ifconv44:5  %sel_tmp20 = icmp eq i7 %k_5_4, -63

ST_80: newSel20 [1/1] 1.37ns
_ifconv44:6  %newSel20 = select i1 %sel_tmp20, i32 %B_cached_65_load, i32 %B_cached_45_load

ST_80: or_cond15 [1/1] 1.37ns
_ifconv44:7  %or_cond15 = or i1 %sel_tmp20, %sel_tmp19

ST_80: newSel21 [1/1] 1.37ns
_ifconv44:8  %newSel21 = select i1 %sel_tmp18, i32 %B_cached_25_load, i32 %B_cached_5_load

ST_80: or_cond16 [1/1] 1.37ns
_ifconv44:9  %or_cond16 = or i1 %sel_tmp18, %tmp_15

ST_80: newSel22 [1/1] 1.37ns
_ifconv44:10  %newSel22 = select i1 %or_cond15, i32 %newSel20, i32 %newSel21

ST_80: or_cond17 [1/1] 1.37ns
_ifconv44:11  %or_cond17 = or i1 %or_cond15, %or_cond16

ST_80: newSel23 [1/1] 1.37ns
_ifconv44:12  %newSel23 = select i1 %or_cond17, i32 %newSel22, i32 %B_cached_85_load


 <State 81>: 8.47ns
ST_81: A_cached_row_5_load [1/2] 2.39ns
_ifconv44:2  %A_cached_row_5_load = load i32* %A_cached_row_5_addr_2, align 4

ST_81: tmp_16_5 [6/6] 6.08ns
_ifconv44:13  %tmp_16_5 = mul nsw i32 %A_cached_row_5_load, %newSel23


 <State 82>: 6.08ns
ST_82: tmp_16_5 [5/6] 6.08ns
_ifconv44:13  %tmp_16_5 = mul nsw i32 %A_cached_row_5_load, %newSel23


 <State 83>: 6.08ns
ST_83: tmp_16_5 [4/6] 6.08ns
_ifconv44:13  %tmp_16_5 = mul nsw i32 %A_cached_row_5_load, %newSel23


 <State 84>: 6.08ns
ST_84: tmp_16_5 [3/6] 6.08ns
_ifconv44:13  %tmp_16_5 = mul nsw i32 %A_cached_row_5_load, %newSel23


 <State 85>: 6.08ns
ST_85: tmp_16_5 [2/6] 6.08ns
_ifconv44:13  %tmp_16_5 = mul nsw i32 %A_cached_row_5_load, %newSel23


 <State 86>: 6.08ns
ST_86: tmp_16_5 [1/6] 6.08ns
_ifconv44:13  %tmp_16_5 = mul nsw i32 %A_cached_row_5_load, %newSel23


 <State 87>: 7.80ns
ST_87: tmp_17_5 [1/1] 0.00ns
_ifconv44:14  %tmp_17_5 = sext i32 %tmp_16_5 to i64

ST_87: temp_2_5 [1/1] 3.40ns
_ifconv44:15  %temp_2_5 = add nsw i64 %temp_1_4, %tmp_17_5

ST_87: stg_1257 [1/1] 1.57ns
_ifconv44:16  br label %._crit_edge9.5

ST_87: temp_1_5 [1/1] 0.00ns
._crit_edge9.5:0  %temp_1_5 = phi i64 [ %temp_2_5, %_ifconv44 ], [ %temp_1_4, %._crit_edge9.4 ]

ST_87: k_5_5 [1/1] 1.72ns
._crit_edge9.5:1  %k_5_5 = add i7 %k_2, 6

ST_87: k_5_5_cast [1/1] 0.00ns
._crit_edge9.5:2  %k_5_5_cast = zext i7 %k_5_5 to i8

ST_87: tmp_14_6 [1/1] 2.00ns
._crit_edge9.5:3  %tmp_14_6 = icmp ult i8 %k_5_5_cast, %mB_read

ST_87: stg_1262 [1/1] 1.57ns
._crit_edge9.5:4  br i1 %tmp_14_6, label %_ifconv53, label %._crit_edge9.6

ST_87: newIndex8 [1/1] 0.00ns
_ifconv53:0  %newIndex8 = zext i4 %indvars_iv3 to i64

ST_87: A_cached_row_6_addr_2 [1/1] 0.00ns
_ifconv53:1  %A_cached_row_6_addr_2 = getelementptr [10 x i32]* %A_cached_row_6, i64 0, i64 %newIndex8

ST_87: A_cached_row_6_load [2/2] 2.39ns
_ifconv53:2  %A_cached_row_6_load = load i32* %A_cached_row_6_addr_2, align 8

ST_87: sel_tmp21 [1/1] 1.97ns
_ifconv53:3  %sel_tmp21 = icmp eq i7 %k_5_5, 26

ST_87: sel_tmp22 [1/1] 1.97ns
_ifconv53:4  %sel_tmp22 = icmp eq i7 %k_5_5, 46

ST_87: sel_tmp23 [1/1] 1.97ns
_ifconv53:5  %sel_tmp23 = icmp eq i7 %k_5_5, -62

ST_87: newSel24 [1/1] 1.37ns
_ifconv53:6  %newSel24 = select i1 %sel_tmp23, i32 %B_cached_66_load, i32 %B_cached_46_load

ST_87: or_cond18 [1/1] 1.37ns
_ifconv53:7  %or_cond18 = or i1 %sel_tmp23, %sel_tmp22

ST_87: newSel25 [1/1] 1.37ns
_ifconv53:8  %newSel25 = select i1 %sel_tmp21, i32 %B_cached_26_load, i32 %B_cached_6_load

ST_87: or_cond19 [1/1] 1.37ns
_ifconv53:9  %or_cond19 = or i1 %sel_tmp21, %tmp_15

ST_87: newSel26 [1/1] 1.37ns
_ifconv53:10  %newSel26 = select i1 %or_cond18, i32 %newSel24, i32 %newSel25

ST_87: or_cond20 [1/1] 1.37ns
_ifconv53:11  %or_cond20 = or i1 %or_cond18, %or_cond19

ST_87: newSel27 [1/1] 1.37ns
_ifconv53:12  %newSel27 = select i1 %or_cond20, i32 %newSel26, i32 %B_cached_86_load


 <State 88>: 8.47ns
ST_88: A_cached_row_6_load [1/2] 2.39ns
_ifconv53:2  %A_cached_row_6_load = load i32* %A_cached_row_6_addr_2, align 8

ST_88: tmp_16_6 [6/6] 6.08ns
_ifconv53:13  %tmp_16_6 = mul nsw i32 %A_cached_row_6_load, %newSel27


 <State 89>: 6.08ns
ST_89: tmp_16_6 [5/6] 6.08ns
_ifconv53:13  %tmp_16_6 = mul nsw i32 %A_cached_row_6_load, %newSel27


 <State 90>: 6.08ns
ST_90: tmp_16_6 [4/6] 6.08ns
_ifconv53:13  %tmp_16_6 = mul nsw i32 %A_cached_row_6_load, %newSel27


 <State 91>: 6.08ns
ST_91: tmp_16_6 [3/6] 6.08ns
_ifconv53:13  %tmp_16_6 = mul nsw i32 %A_cached_row_6_load, %newSel27


 <State 92>: 6.08ns
ST_92: tmp_16_6 [2/6] 6.08ns
_ifconv53:13  %tmp_16_6 = mul nsw i32 %A_cached_row_6_load, %newSel27


 <State 93>: 6.08ns
ST_93: tmp_16_6 [1/6] 6.08ns
_ifconv53:13  %tmp_16_6 = mul nsw i32 %A_cached_row_6_load, %newSel27


 <State 94>: 7.80ns
ST_94: tmp_17_6 [1/1] 0.00ns
_ifconv53:14  %tmp_17_6 = sext i32 %tmp_16_6 to i64

ST_94: temp_2_6 [1/1] 3.40ns
_ifconv53:15  %temp_2_6 = add nsw i64 %temp_1_5, %tmp_17_6

ST_94: stg_1285 [1/1] 1.57ns
_ifconv53:16  br label %._crit_edge9.6

ST_94: temp_1_6 [1/1] 0.00ns
._crit_edge9.6:0  %temp_1_6 = phi i64 [ %temp_2_6, %_ifconv53 ], [ %temp_1_5, %._crit_edge9.5 ]

ST_94: k_5_6 [1/1] 1.72ns
._crit_edge9.6:1  %k_5_6 = add i7 %k_2, 7

ST_94: k_5_6_cast [1/1] 0.00ns
._crit_edge9.6:2  %k_5_6_cast = zext i7 %k_5_6 to i8

ST_94: tmp_14_7 [1/1] 2.00ns
._crit_edge9.6:3  %tmp_14_7 = icmp ult i8 %k_5_6_cast, %mB_read

ST_94: stg_1290 [1/1] 1.57ns
._crit_edge9.6:4  br i1 %tmp_14_7, label %_ifconv62, label %._crit_edge9.7

ST_94: newIndex9 [1/1] 0.00ns
_ifconv62:0  %newIndex9 = zext i4 %indvars_iv3 to i64

ST_94: A_cached_row_7_addr_2 [1/1] 0.00ns
_ifconv62:1  %A_cached_row_7_addr_2 = getelementptr [10 x i32]* %A_cached_row_7, i64 0, i64 %newIndex9

ST_94: A_cached_row_7_load [2/2] 2.39ns
_ifconv62:2  %A_cached_row_7_load = load i32* %A_cached_row_7_addr_2, align 4

ST_94: sel_tmp24 [1/1] 1.97ns
_ifconv62:3  %sel_tmp24 = icmp eq i7 %k_5_6, 27

ST_94: sel_tmp25 [1/1] 1.97ns
_ifconv62:4  %sel_tmp25 = icmp eq i7 %k_5_6, 47

ST_94: sel_tmp26 [1/1] 1.97ns
_ifconv62:5  %sel_tmp26 = icmp eq i7 %k_5_6, -61

ST_94: newSel28 [1/1] 1.37ns
_ifconv62:6  %newSel28 = select i1 %sel_tmp26, i32 %B_cached_67_load, i32 %B_cached_47_load

ST_94: or_cond21 [1/1] 1.37ns
_ifconv62:7  %or_cond21 = or i1 %sel_tmp26, %sel_tmp25

ST_94: newSel29 [1/1] 1.37ns
_ifconv62:8  %newSel29 = select i1 %sel_tmp24, i32 %B_cached_27_load, i32 %B_cached_7_load

ST_94: or_cond22 [1/1] 1.37ns
_ifconv62:9  %or_cond22 = or i1 %sel_tmp24, %tmp_15

ST_94: newSel30 [1/1] 1.37ns
_ifconv62:10  %newSel30 = select i1 %or_cond21, i32 %newSel28, i32 %newSel29

ST_94: or_cond23 [1/1] 1.37ns
_ifconv62:11  %or_cond23 = or i1 %or_cond21, %or_cond22

ST_94: newSel31 [1/1] 1.37ns
_ifconv62:12  %newSel31 = select i1 %or_cond23, i32 %newSel30, i32 %B_cached_87_load


 <State 95>: 8.47ns
ST_95: A_cached_row_7_load [1/2] 2.39ns
_ifconv62:2  %A_cached_row_7_load = load i32* %A_cached_row_7_addr_2, align 4

ST_95: tmp_16_7 [6/6] 6.08ns
_ifconv62:13  %tmp_16_7 = mul nsw i32 %A_cached_row_7_load, %newSel31


 <State 96>: 6.08ns
ST_96: tmp_16_7 [5/6] 6.08ns
_ifconv62:13  %tmp_16_7 = mul nsw i32 %A_cached_row_7_load, %newSel31


 <State 97>: 6.08ns
ST_97: tmp_16_7 [4/6] 6.08ns
_ifconv62:13  %tmp_16_7 = mul nsw i32 %A_cached_row_7_load, %newSel31


 <State 98>: 6.08ns
ST_98: tmp_16_7 [3/6] 6.08ns
_ifconv62:13  %tmp_16_7 = mul nsw i32 %A_cached_row_7_load, %newSel31


 <State 99>: 6.08ns
ST_99: tmp_16_7 [2/6] 6.08ns
_ifconv62:13  %tmp_16_7 = mul nsw i32 %A_cached_row_7_load, %newSel31


 <State 100>: 6.08ns
ST_100: tmp_16_7 [1/6] 6.08ns
_ifconv62:13  %tmp_16_7 = mul nsw i32 %A_cached_row_7_load, %newSel31


 <State 101>: 7.80ns
ST_101: tmp_17_7 [1/1] 0.00ns
_ifconv62:14  %tmp_17_7 = sext i32 %tmp_16_7 to i64

ST_101: temp_2_7 [1/1] 3.40ns
_ifconv62:15  %temp_2_7 = add nsw i64 %temp_1_6, %tmp_17_7

ST_101: stg_1313 [1/1] 1.57ns
_ifconv62:16  br label %._crit_edge9.7

ST_101: temp_1_7 [1/1] 0.00ns
._crit_edge9.7:0  %temp_1_7 = phi i64 [ %temp_2_7, %_ifconv62 ], [ %temp_1_6, %._crit_edge9.6 ]

ST_101: k_5_7 [1/1] 1.72ns
._crit_edge9.7:1  %k_5_7 = add i7 %k_2, 8

ST_101: k_5_7_cast [1/1] 0.00ns
._crit_edge9.7:2  %k_5_7_cast = zext i7 %k_5_7 to i8

ST_101: tmp_14_8 [1/1] 2.00ns
._crit_edge9.7:3  %tmp_14_8 = icmp ult i8 %k_5_7_cast, %mB_read

ST_101: stg_1318 [1/1] 1.57ns
._crit_edge9.7:4  br i1 %tmp_14_8, label %_ifconv71, label %._crit_edge9.8

ST_101: newIndex10 [1/1] 0.00ns
_ifconv71:0  %newIndex10 = zext i4 %indvars_iv3 to i64

ST_101: A_cached_row_8_addr_2 [1/1] 0.00ns
_ifconv71:1  %A_cached_row_8_addr_2 = getelementptr [10 x i32]* %A_cached_row_8, i64 0, i64 %newIndex10

ST_101: A_cached_row_8_load [2/2] 2.39ns
_ifconv71:2  %A_cached_row_8_load = load i32* %A_cached_row_8_addr_2, align 16

ST_101: sel_tmp27 [1/1] 1.97ns
_ifconv71:3  %sel_tmp27 = icmp eq i7 %k_5_7, 28

ST_101: sel_tmp28 [1/1] 1.97ns
_ifconv71:4  %sel_tmp28 = icmp eq i7 %k_5_7, 48

ST_101: sel_tmp29 [1/1] 1.97ns
_ifconv71:5  %sel_tmp29 = icmp eq i7 %k_5_7, -60

ST_101: newSel32 [1/1] 1.37ns
_ifconv71:6  %newSel32 = select i1 %sel_tmp29, i32 %B_cached_68_load, i32 %B_cached_48_load

ST_101: or_cond24 [1/1] 1.37ns
_ifconv71:7  %or_cond24 = or i1 %sel_tmp29, %sel_tmp28

ST_101: newSel33 [1/1] 1.37ns
_ifconv71:8  %newSel33 = select i1 %sel_tmp27, i32 %B_cached_28_load, i32 %B_cached_8_load

ST_101: or_cond25 [1/1] 1.37ns
_ifconv71:9  %or_cond25 = or i1 %sel_tmp27, %tmp_15

ST_101: newSel34 [1/1] 1.37ns
_ifconv71:10  %newSel34 = select i1 %or_cond24, i32 %newSel32, i32 %newSel33

ST_101: or_cond26 [1/1] 1.37ns
_ifconv71:11  %or_cond26 = or i1 %or_cond24, %or_cond25

ST_101: newSel35 [1/1] 1.37ns
_ifconv71:12  %newSel35 = select i1 %or_cond26, i32 %newSel34, i32 %B_cached_88_load


 <State 102>: 8.47ns
ST_102: A_cached_row_8_load [1/2] 2.39ns
_ifconv71:2  %A_cached_row_8_load = load i32* %A_cached_row_8_addr_2, align 16

ST_102: tmp_16_8 [6/6] 6.08ns
_ifconv71:13  %tmp_16_8 = mul nsw i32 %A_cached_row_8_load, %newSel35


 <State 103>: 6.08ns
ST_103: tmp_16_8 [5/6] 6.08ns
_ifconv71:13  %tmp_16_8 = mul nsw i32 %A_cached_row_8_load, %newSel35


 <State 104>: 6.08ns
ST_104: tmp_16_8 [4/6] 6.08ns
_ifconv71:13  %tmp_16_8 = mul nsw i32 %A_cached_row_8_load, %newSel35


 <State 105>: 6.08ns
ST_105: tmp_16_8 [3/6] 6.08ns
_ifconv71:13  %tmp_16_8 = mul nsw i32 %A_cached_row_8_load, %newSel35


 <State 106>: 6.08ns
ST_106: tmp_16_8 [2/6] 6.08ns
_ifconv71:13  %tmp_16_8 = mul nsw i32 %A_cached_row_8_load, %newSel35


 <State 107>: 6.08ns
ST_107: tmp_16_8 [1/6] 6.08ns
_ifconv71:13  %tmp_16_8 = mul nsw i32 %A_cached_row_8_load, %newSel35


 <State 108>: 7.80ns
ST_108: tmp_17_8 [1/1] 0.00ns
_ifconv71:14  %tmp_17_8 = sext i32 %tmp_16_8 to i64

ST_108: temp_2_8 [1/1] 3.40ns
_ifconv71:15  %temp_2_8 = add nsw i64 %temp_1_7, %tmp_17_8

ST_108: stg_1341 [1/1] 1.57ns
_ifconv71:16  br label %._crit_edge9.8

ST_108: temp_1_8 [1/1] 0.00ns
._crit_edge9.8:0  %temp_1_8 = phi i64 [ %temp_2_8, %_ifconv71 ], [ %temp_1_7, %._crit_edge9.7 ]

ST_108: k_5_8 [1/1] 1.72ns
._crit_edge9.8:1  %k_5_8 = add i7 %k_2, 9

ST_108: k_5_8_cast [1/1] 0.00ns
._crit_edge9.8:2  %k_5_8_cast = zext i7 %k_5_8 to i8

ST_108: tmp_14_9 [1/1] 2.00ns
._crit_edge9.8:3  %tmp_14_9 = icmp ult i8 %k_5_8_cast, %mB_read

ST_108: stg_1346 [1/1] 1.57ns
._crit_edge9.8:4  br i1 %tmp_14_9, label %_ifconv80, label %._crit_edge9.9

ST_108: newIndex11 [1/1] 0.00ns
_ifconv80:0  %newIndex11 = zext i4 %indvars_iv3 to i64

ST_108: A_cached_row_9_addr_2 [1/1] 0.00ns
_ifconv80:1  %A_cached_row_9_addr_2 = getelementptr [10 x i32]* %A_cached_row_9, i64 0, i64 %newIndex11

ST_108: A_cached_row_9_load [2/2] 2.39ns
_ifconv80:2  %A_cached_row_9_load = load i32* %A_cached_row_9_addr_2, align 4

ST_108: sel_tmp30 [1/1] 1.97ns
_ifconv80:3  %sel_tmp30 = icmp eq i7 %k_5_8, 29

ST_108: sel_tmp31 [1/1] 1.97ns
_ifconv80:4  %sel_tmp31 = icmp eq i7 %k_5_8, 49

ST_108: sel_tmp32 [1/1] 1.97ns
_ifconv80:5  %sel_tmp32 = icmp eq i7 %k_5_8, -59

ST_108: newSel36 [1/1] 1.37ns
_ifconv80:6  %newSel36 = select i1 %sel_tmp32, i32 %B_cached_69_load, i32 %B_cached_49_load

ST_108: or_cond27 [1/1] 1.37ns
_ifconv80:7  %or_cond27 = or i1 %sel_tmp32, %sel_tmp31

ST_108: newSel37 [1/1] 1.37ns
_ifconv80:8  %newSel37 = select i1 %sel_tmp30, i32 %B_cached_29_load, i32 %B_cached_9_load

ST_108: or_cond28 [1/1] 1.37ns
_ifconv80:9  %or_cond28 = or i1 %sel_tmp30, %tmp_15

ST_108: newSel38 [1/1] 1.37ns
_ifconv80:10  %newSel38 = select i1 %or_cond27, i32 %newSel36, i32 %newSel37

ST_108: or_cond29 [1/1] 1.37ns
_ifconv80:11  %or_cond29 = or i1 %or_cond27, %or_cond28

ST_108: newSel39 [1/1] 1.37ns
_ifconv80:12  %newSel39 = select i1 %or_cond29, i32 %newSel38, i32 %B_cached_89_load


 <State 109>: 8.47ns
ST_109: A_cached_row_9_load [1/2] 2.39ns
_ifconv80:2  %A_cached_row_9_load = load i32* %A_cached_row_9_addr_2, align 4

ST_109: tmp_16_9 [6/6] 6.08ns
_ifconv80:13  %tmp_16_9 = mul nsw i32 %A_cached_row_9_load, %newSel39


 <State 110>: 6.08ns
ST_110: tmp_16_9 [5/6] 6.08ns
_ifconv80:13  %tmp_16_9 = mul nsw i32 %A_cached_row_9_load, %newSel39


 <State 111>: 6.08ns
ST_111: tmp_16_9 [4/6] 6.08ns
_ifconv80:13  %tmp_16_9 = mul nsw i32 %A_cached_row_9_load, %newSel39


 <State 112>: 6.08ns
ST_112: tmp_16_9 [3/6] 6.08ns
_ifconv80:13  %tmp_16_9 = mul nsw i32 %A_cached_row_9_load, %newSel39


 <State 113>: 6.08ns
ST_113: tmp_16_9 [2/6] 6.08ns
_ifconv80:13  %tmp_16_9 = mul nsw i32 %A_cached_row_9_load, %newSel39


 <State 114>: 6.08ns
ST_114: tmp_16_9 [1/6] 6.08ns
_ifconv80:13  %tmp_16_9 = mul nsw i32 %A_cached_row_9_load, %newSel39


 <State 115>: 7.80ns
ST_115: tmp_17_9 [1/1] 0.00ns
_ifconv80:14  %tmp_17_9 = sext i32 %tmp_16_9 to i64

ST_115: temp_2_9 [1/1] 3.40ns
_ifconv80:15  %temp_2_9 = add nsw i64 %temp_1_8, %tmp_17_9

ST_115: stg_1369 [1/1] 1.57ns
_ifconv80:16  br label %._crit_edge9.9

ST_115: temp_1_9 [1/1] 0.00ns
._crit_edge9.9:0  %temp_1_9 = phi i64 [ %temp_2_9, %_ifconv80 ], [ %temp_1_8, %._crit_edge9.8 ]

ST_115: k_5_9 [1/1] 1.72ns
._crit_edge9.9:1  %k_5_9 = add i7 %k_2, 10

ST_115: k_5_9_cast [1/1] 0.00ns
._crit_edge9.9:2  %k_5_9_cast = zext i7 %k_5_9 to i8

ST_115: tmp_14_s [1/1] 2.00ns
._crit_edge9.9:3  %tmp_14_s = icmp ult i8 %k_5_9_cast, %mB_read

ST_115: stg_1374 [1/1] 1.57ns
._crit_edge9.9:4  br i1 %tmp_14_s, label %_ifconv89, label %._crit_edge9.10

ST_115: newIndex12 [1/1] 0.00ns
_ifconv89:0  %newIndex12 = zext i4 %indvars_iv1 to i64

ST_115: A_cached_row_0_addr_3 [1/1] 0.00ns
_ifconv89:1  %A_cached_row_0_addr_3 = getelementptr [10 x i32]* %A_cached_row_0, i64 0, i64 %newIndex12

ST_115: A_cached_row_0_load_1 [2/2] 2.39ns
_ifconv89:2  %A_cached_row_0_load_1 = load i32* %A_cached_row_0_addr_3, align 8

ST_115: sel_tmp33 [1/1] 1.97ns
_ifconv89:3  %sel_tmp33 = icmp eq i7 %k_5_9, 30

ST_115: sel_tmp34 [1/1] 1.97ns
_ifconv89:4  %sel_tmp34 = icmp eq i7 %k_5_9, 50

ST_115: sel_tmp35 [1/1] 1.97ns
_ifconv89:5  %sel_tmp35 = icmp eq i7 %k_5_9, -58

ST_115: newSel40 [1/1] 1.37ns
_ifconv89:6  %newSel40 = select i1 %sel_tmp35, i32 %B_cached_70_load, i32 %B_cached_50_load

ST_115: or_cond30 [1/1] 1.37ns
_ifconv89:7  %or_cond30 = or i1 %sel_tmp35, %sel_tmp34

ST_115: newSel41 [1/1] 1.37ns
_ifconv89:8  %newSel41 = select i1 %sel_tmp33, i32 %B_cached_30_load, i32 %B_cached_10_load

ST_115: or_cond31 [1/1] 1.37ns
_ifconv89:9  %or_cond31 = or i1 %sel_tmp33, %tmp_15

ST_115: newSel42 [1/1] 1.37ns
_ifconv89:10  %newSel42 = select i1 %or_cond30, i32 %newSel40, i32 %newSel41

ST_115: or_cond32 [1/1] 1.37ns
_ifconv89:11  %or_cond32 = or i1 %or_cond30, %or_cond31

ST_115: newSel43 [1/1] 1.37ns
_ifconv89:12  %newSel43 = select i1 %or_cond32, i32 %newSel42, i32 %B_cached_90_load


 <State 116>: 8.47ns
ST_116: A_cached_row_0_load_1 [1/2] 2.39ns
_ifconv89:2  %A_cached_row_0_load_1 = load i32* %A_cached_row_0_addr_3, align 8

ST_116: tmp_16_s [6/6] 6.08ns
_ifconv89:13  %tmp_16_s = mul nsw i32 %A_cached_row_0_load_1, %newSel43


 <State 117>: 6.08ns
ST_117: tmp_16_s [5/6] 6.08ns
_ifconv89:13  %tmp_16_s = mul nsw i32 %A_cached_row_0_load_1, %newSel43


 <State 118>: 6.08ns
ST_118: tmp_16_s [4/6] 6.08ns
_ifconv89:13  %tmp_16_s = mul nsw i32 %A_cached_row_0_load_1, %newSel43


 <State 119>: 6.08ns
ST_119: tmp_16_s [3/6] 6.08ns
_ifconv89:13  %tmp_16_s = mul nsw i32 %A_cached_row_0_load_1, %newSel43


 <State 120>: 6.08ns
ST_120: tmp_16_s [2/6] 6.08ns
_ifconv89:13  %tmp_16_s = mul nsw i32 %A_cached_row_0_load_1, %newSel43


 <State 121>: 6.08ns
ST_121: tmp_16_s [1/6] 6.08ns
_ifconv89:13  %tmp_16_s = mul nsw i32 %A_cached_row_0_load_1, %newSel43


 <State 122>: 7.80ns
ST_122: tmp_17_s [1/1] 0.00ns
_ifconv89:14  %tmp_17_s = sext i32 %tmp_16_s to i64

ST_122: temp_2_s [1/1] 3.40ns
_ifconv89:15  %temp_2_s = add nsw i64 %temp_1_9, %tmp_17_s

ST_122: stg_1397 [1/1] 1.57ns
_ifconv89:16  br label %._crit_edge9.10

ST_122: temp_1_s [1/1] 0.00ns
._crit_edge9.10:0  %temp_1_s = phi i64 [ %temp_2_s, %_ifconv89 ], [ %temp_1_9, %._crit_edge9.9 ]

ST_122: k_5_10 [1/1] 1.72ns
._crit_edge9.10:1  %k_5_10 = add i7 %k_2, 11

ST_122: k_5_10_cast [1/1] 0.00ns
._crit_edge9.10:2  %k_5_10_cast = zext i7 %k_5_10 to i8

ST_122: tmp_14_10 [1/1] 2.00ns
._crit_edge9.10:3  %tmp_14_10 = icmp ult i8 %k_5_10_cast, %mB_read

ST_122: stg_1402 [1/1] 1.57ns
._crit_edge9.10:4  br i1 %tmp_14_10, label %_ifconv98, label %._crit_edge9.11

ST_122: newIndex13 [1/1] 0.00ns
_ifconv98:0  %newIndex13 = zext i4 %indvars_iv1 to i64

ST_122: A_cached_row_1_addr_3 [1/1] 0.00ns
_ifconv98:1  %A_cached_row_1_addr_3 = getelementptr [10 x i32]* %A_cached_row_1, i64 0, i64 %newIndex13

ST_122: A_cached_row_1_load_1 [2/2] 2.39ns
_ifconv98:2  %A_cached_row_1_load_1 = load i32* %A_cached_row_1_addr_3, align 4

ST_122: sel_tmp36 [1/1] 1.97ns
_ifconv98:3  %sel_tmp36 = icmp eq i7 %k_5_10, 31

ST_122: sel_tmp37 [1/1] 1.97ns
_ifconv98:4  %sel_tmp37 = icmp eq i7 %k_5_10, 51

ST_122: sel_tmp38 [1/1] 1.97ns
_ifconv98:5  %sel_tmp38 = icmp eq i7 %k_5_10, -57

ST_122: newSel44 [1/1] 1.37ns
_ifconv98:6  %newSel44 = select i1 %sel_tmp38, i32 %B_cached_71_load, i32 %B_cached_51_load

ST_122: or_cond33 [1/1] 1.37ns
_ifconv98:7  %or_cond33 = or i1 %sel_tmp38, %sel_tmp37

ST_122: newSel45 [1/1] 1.37ns
_ifconv98:8  %newSel45 = select i1 %sel_tmp36, i32 %B_cached_31_load, i32 %B_cached_11_load

ST_122: or_cond34 [1/1] 1.37ns
_ifconv98:9  %or_cond34 = or i1 %sel_tmp36, %tmp_15

ST_122: newSel46 [1/1] 1.37ns
_ifconv98:10  %newSel46 = select i1 %or_cond33, i32 %newSel44, i32 %newSel45

ST_122: or_cond35 [1/1] 1.37ns
_ifconv98:11  %or_cond35 = or i1 %or_cond33, %or_cond34

ST_122: newSel47 [1/1] 1.37ns
_ifconv98:12  %newSel47 = select i1 %or_cond35, i32 %newSel46, i32 %B_cached_91_load


 <State 123>: 8.47ns
ST_123: A_cached_row_1_load_1 [1/2] 2.39ns
_ifconv98:2  %A_cached_row_1_load_1 = load i32* %A_cached_row_1_addr_3, align 4

ST_123: tmp_16_10 [6/6] 6.08ns
_ifconv98:13  %tmp_16_10 = mul nsw i32 %A_cached_row_1_load_1, %newSel47


 <State 124>: 6.08ns
ST_124: tmp_16_10 [5/6] 6.08ns
_ifconv98:13  %tmp_16_10 = mul nsw i32 %A_cached_row_1_load_1, %newSel47


 <State 125>: 6.08ns
ST_125: tmp_16_10 [4/6] 6.08ns
_ifconv98:13  %tmp_16_10 = mul nsw i32 %A_cached_row_1_load_1, %newSel47


 <State 126>: 6.08ns
ST_126: tmp_16_10 [3/6] 6.08ns
_ifconv98:13  %tmp_16_10 = mul nsw i32 %A_cached_row_1_load_1, %newSel47


 <State 127>: 6.08ns
ST_127: tmp_16_10 [2/6] 6.08ns
_ifconv98:13  %tmp_16_10 = mul nsw i32 %A_cached_row_1_load_1, %newSel47


 <State 128>: 6.08ns
ST_128: tmp_16_10 [1/6] 6.08ns
_ifconv98:13  %tmp_16_10 = mul nsw i32 %A_cached_row_1_load_1, %newSel47


 <State 129>: 7.80ns
ST_129: tmp_17_10 [1/1] 0.00ns
_ifconv98:14  %tmp_17_10 = sext i32 %tmp_16_10 to i64

ST_129: temp_2_10 [1/1] 3.40ns
_ifconv98:15  %temp_2_10 = add nsw i64 %temp_1_s, %tmp_17_10

ST_129: stg_1425 [1/1] 1.57ns
_ifconv98:16  br label %._crit_edge9.11

ST_129: temp_1_10 [1/1] 0.00ns
._crit_edge9.11:0  %temp_1_10 = phi i64 [ %temp_2_10, %_ifconv98 ], [ %temp_1_s, %._crit_edge9.10 ]

ST_129: k_5_11 [1/1] 1.72ns
._crit_edge9.11:1  %k_5_11 = add i7 %k_2, 12

ST_129: k_5_11_cast [1/1] 0.00ns
._crit_edge9.11:2  %k_5_11_cast = zext i7 %k_5_11 to i8

ST_129: tmp_14_11 [1/1] 2.00ns
._crit_edge9.11:3  %tmp_14_11 = icmp ult i8 %k_5_11_cast, %mB_read

ST_129: stg_1430 [1/1] 1.57ns
._crit_edge9.11:4  br i1 %tmp_14_11, label %_ifconv107, label %._crit_edge9.12

ST_129: newIndex14 [1/1] 0.00ns
_ifconv107:0  %newIndex14 = zext i4 %indvars_iv1 to i64

ST_129: A_cached_row_2_addr_3 [1/1] 0.00ns
_ifconv107:1  %A_cached_row_2_addr_3 = getelementptr [10 x i32]* %A_cached_row_2, i64 0, i64 %newIndex14

ST_129: A_cached_row_2_load_1 [2/2] 2.39ns
_ifconv107:2  %A_cached_row_2_load_1 = load i32* %A_cached_row_2_addr_3, align 16

ST_129: sel_tmp39 [1/1] 1.97ns
_ifconv107:3  %sel_tmp39 = icmp eq i7 %k_5_11, 32

ST_129: sel_tmp40 [1/1] 1.97ns
_ifconv107:4  %sel_tmp40 = icmp eq i7 %k_5_11, 52

ST_129: sel_tmp41 [1/1] 1.97ns
_ifconv107:5  %sel_tmp41 = icmp eq i7 %k_5_11, -56

ST_129: newSel48 [1/1] 1.37ns
_ifconv107:6  %newSel48 = select i1 %sel_tmp41, i32 %B_cached_72_load, i32 %B_cached_52_load

ST_129: or_cond36 [1/1] 1.37ns
_ifconv107:7  %or_cond36 = or i1 %sel_tmp41, %sel_tmp40

ST_129: newSel49 [1/1] 1.37ns
_ifconv107:8  %newSel49 = select i1 %sel_tmp39, i32 %B_cached_32_load, i32 %B_cached_12_load

ST_129: or_cond37 [1/1] 1.37ns
_ifconv107:9  %or_cond37 = or i1 %sel_tmp39, %tmp_15

ST_129: newSel50 [1/1] 1.37ns
_ifconv107:10  %newSel50 = select i1 %or_cond36, i32 %newSel48, i32 %newSel49

ST_129: or_cond38 [1/1] 1.37ns
_ifconv107:11  %or_cond38 = or i1 %or_cond36, %or_cond37

ST_129: newSel51 [1/1] 1.37ns
_ifconv107:12  %newSel51 = select i1 %or_cond38, i32 %newSel50, i32 %B_cached_92_load


 <State 130>: 8.47ns
ST_130: A_cached_row_2_load_1 [1/2] 2.39ns
_ifconv107:2  %A_cached_row_2_load_1 = load i32* %A_cached_row_2_addr_3, align 16

ST_130: tmp_16_11 [6/6] 6.08ns
_ifconv107:13  %tmp_16_11 = mul nsw i32 %A_cached_row_2_load_1, %newSel51


 <State 131>: 6.08ns
ST_131: tmp_16_11 [5/6] 6.08ns
_ifconv107:13  %tmp_16_11 = mul nsw i32 %A_cached_row_2_load_1, %newSel51


 <State 132>: 6.08ns
ST_132: tmp_16_11 [4/6] 6.08ns
_ifconv107:13  %tmp_16_11 = mul nsw i32 %A_cached_row_2_load_1, %newSel51


 <State 133>: 6.08ns
ST_133: tmp_16_11 [3/6] 6.08ns
_ifconv107:13  %tmp_16_11 = mul nsw i32 %A_cached_row_2_load_1, %newSel51


 <State 134>: 6.08ns
ST_134: tmp_16_11 [2/6] 6.08ns
_ifconv107:13  %tmp_16_11 = mul nsw i32 %A_cached_row_2_load_1, %newSel51


 <State 135>: 6.08ns
ST_135: tmp_16_11 [1/6] 6.08ns
_ifconv107:13  %tmp_16_11 = mul nsw i32 %A_cached_row_2_load_1, %newSel51


 <State 136>: 7.80ns
ST_136: tmp_17_11 [1/1] 0.00ns
_ifconv107:14  %tmp_17_11 = sext i32 %tmp_16_11 to i64

ST_136: temp_2_11 [1/1] 3.40ns
_ifconv107:15  %temp_2_11 = add nsw i64 %temp_1_10, %tmp_17_11

ST_136: stg_1453 [1/1] 1.57ns
_ifconv107:16  br label %._crit_edge9.12

ST_136: temp_1_11 [1/1] 0.00ns
._crit_edge9.12:0  %temp_1_11 = phi i64 [ %temp_2_11, %_ifconv107 ], [ %temp_1_10, %._crit_edge9.11 ]

ST_136: k_5_12 [1/1] 1.72ns
._crit_edge9.12:1  %k_5_12 = add i7 %k_2, 13

ST_136: k_5_12_cast [1/1] 0.00ns
._crit_edge9.12:2  %k_5_12_cast = zext i7 %k_5_12 to i8

ST_136: tmp_14_12 [1/1] 2.00ns
._crit_edge9.12:3  %tmp_14_12 = icmp ult i8 %k_5_12_cast, %mB_read

ST_136: stg_1458 [1/1] 1.57ns
._crit_edge9.12:4  br i1 %tmp_14_12, label %_ifconv116, label %._crit_edge9.13

ST_136: newIndex15 [1/1] 0.00ns
_ifconv116:0  %newIndex15 = zext i4 %indvars_iv1 to i64

ST_136: A_cached_row_3_addr_3 [1/1] 0.00ns
_ifconv116:1  %A_cached_row_3_addr_3 = getelementptr [10 x i32]* %A_cached_row_3, i64 0, i64 %newIndex15

ST_136: A_cached_row_3_load_1 [2/2] 2.39ns
_ifconv116:2  %A_cached_row_3_load_1 = load i32* %A_cached_row_3_addr_3, align 4

ST_136: sel_tmp42 [1/1] 1.97ns
_ifconv116:3  %sel_tmp42 = icmp eq i7 %k_5_12, 33

ST_136: sel_tmp43 [1/1] 1.97ns
_ifconv116:4  %sel_tmp43 = icmp eq i7 %k_5_12, 53

ST_136: sel_tmp44 [1/1] 1.97ns
_ifconv116:5  %sel_tmp44 = icmp eq i7 %k_5_12, -55

ST_136: newSel52 [1/1] 1.37ns
_ifconv116:6  %newSel52 = select i1 %sel_tmp44, i32 %B_cached_73_load, i32 %B_cached_53_load

ST_136: or_cond39 [1/1] 1.37ns
_ifconv116:7  %or_cond39 = or i1 %sel_tmp44, %sel_tmp43

ST_136: newSel53 [1/1] 1.37ns
_ifconv116:8  %newSel53 = select i1 %sel_tmp42, i32 %B_cached_33_load, i32 %B_cached_13_load

ST_136: or_cond40 [1/1] 1.37ns
_ifconv116:9  %or_cond40 = or i1 %sel_tmp42, %tmp_15

ST_136: newSel54 [1/1] 1.37ns
_ifconv116:10  %newSel54 = select i1 %or_cond39, i32 %newSel52, i32 %newSel53

ST_136: or_cond41 [1/1] 1.37ns
_ifconv116:11  %or_cond41 = or i1 %or_cond39, %or_cond40

ST_136: newSel55 [1/1] 1.37ns
_ifconv116:12  %newSel55 = select i1 %or_cond41, i32 %newSel54, i32 %B_cached_93_load


 <State 137>: 8.47ns
ST_137: A_cached_row_3_load_1 [1/2] 2.39ns
_ifconv116:2  %A_cached_row_3_load_1 = load i32* %A_cached_row_3_addr_3, align 4

ST_137: tmp_16_12 [6/6] 6.08ns
_ifconv116:13  %tmp_16_12 = mul nsw i32 %A_cached_row_3_load_1, %newSel55


 <State 138>: 6.08ns
ST_138: tmp_16_12 [5/6] 6.08ns
_ifconv116:13  %tmp_16_12 = mul nsw i32 %A_cached_row_3_load_1, %newSel55


 <State 139>: 6.08ns
ST_139: tmp_16_12 [4/6] 6.08ns
_ifconv116:13  %tmp_16_12 = mul nsw i32 %A_cached_row_3_load_1, %newSel55


 <State 140>: 6.08ns
ST_140: tmp_16_12 [3/6] 6.08ns
_ifconv116:13  %tmp_16_12 = mul nsw i32 %A_cached_row_3_load_1, %newSel55


 <State 141>: 6.08ns
ST_141: tmp_16_12 [2/6] 6.08ns
_ifconv116:13  %tmp_16_12 = mul nsw i32 %A_cached_row_3_load_1, %newSel55


 <State 142>: 6.08ns
ST_142: tmp_16_12 [1/6] 6.08ns
_ifconv116:13  %tmp_16_12 = mul nsw i32 %A_cached_row_3_load_1, %newSel55


 <State 143>: 7.80ns
ST_143: tmp_17_12 [1/1] 0.00ns
_ifconv116:14  %tmp_17_12 = sext i32 %tmp_16_12 to i64

ST_143: temp_2_12 [1/1] 3.40ns
_ifconv116:15  %temp_2_12 = add nsw i64 %temp_1_11, %tmp_17_12

ST_143: stg_1481 [1/1] 1.57ns
_ifconv116:16  br label %._crit_edge9.13

ST_143: temp_1_12 [1/1] 0.00ns
._crit_edge9.13:0  %temp_1_12 = phi i64 [ %temp_2_12, %_ifconv116 ], [ %temp_1_11, %._crit_edge9.12 ]

ST_143: k_5_13 [1/1] 1.72ns
._crit_edge9.13:1  %k_5_13 = add i7 %k_2, 14

ST_143: k_5_13_cast [1/1] 0.00ns
._crit_edge9.13:2  %k_5_13_cast = zext i7 %k_5_13 to i8

ST_143: tmp_14_13 [1/1] 2.00ns
._crit_edge9.13:3  %tmp_14_13 = icmp ult i8 %k_5_13_cast, %mB_read

ST_143: stg_1486 [1/1] 1.57ns
._crit_edge9.13:4  br i1 %tmp_14_13, label %_ifconv125, label %._crit_edge9.14

ST_143: newIndex16 [1/1] 0.00ns
_ifconv125:0  %newIndex16 = zext i4 %indvars_iv1 to i64

ST_143: A_cached_row_4_addr_3 [1/1] 0.00ns
_ifconv125:1  %A_cached_row_4_addr_3 = getelementptr [10 x i32]* %A_cached_row_4, i64 0, i64 %newIndex16

ST_143: A_cached_row_4_load_1 [2/2] 2.39ns
_ifconv125:2  %A_cached_row_4_load_1 = load i32* %A_cached_row_4_addr_3, align 8

ST_143: sel_tmp45 [1/1] 1.97ns
_ifconv125:3  %sel_tmp45 = icmp eq i7 %k_5_13, 34

ST_143: sel_tmp46 [1/1] 1.97ns
_ifconv125:4  %sel_tmp46 = icmp eq i7 %k_5_13, 54

ST_143: sel_tmp47 [1/1] 1.97ns
_ifconv125:5  %sel_tmp47 = icmp eq i7 %k_5_13, -54

ST_143: newSel56 [1/1] 1.37ns
_ifconv125:6  %newSel56 = select i1 %sel_tmp47, i32 %B_cached_74_load, i32 %B_cached_54_load

ST_143: or_cond42 [1/1] 1.37ns
_ifconv125:7  %or_cond42 = or i1 %sel_tmp47, %sel_tmp46

ST_143: newSel57 [1/1] 1.37ns
_ifconv125:8  %newSel57 = select i1 %sel_tmp45, i32 %B_cached_34_load, i32 %B_cached_14_load

ST_143: or_cond43 [1/1] 1.37ns
_ifconv125:9  %or_cond43 = or i1 %sel_tmp45, %tmp_15

ST_143: newSel58 [1/1] 1.37ns
_ifconv125:10  %newSel58 = select i1 %or_cond42, i32 %newSel56, i32 %newSel57

ST_143: or_cond44 [1/1] 1.37ns
_ifconv125:11  %or_cond44 = or i1 %or_cond42, %or_cond43

ST_143: newSel59 [1/1] 1.37ns
_ifconv125:12  %newSel59 = select i1 %or_cond44, i32 %newSel58, i32 %B_cached_94_load


 <State 144>: 8.47ns
ST_144: A_cached_row_4_load_1 [1/2] 2.39ns
_ifconv125:2  %A_cached_row_4_load_1 = load i32* %A_cached_row_4_addr_3, align 8

ST_144: tmp_16_13 [6/6] 6.08ns
_ifconv125:13  %tmp_16_13 = mul nsw i32 %A_cached_row_4_load_1, %newSel59


 <State 145>: 6.08ns
ST_145: tmp_16_13 [5/6] 6.08ns
_ifconv125:13  %tmp_16_13 = mul nsw i32 %A_cached_row_4_load_1, %newSel59


 <State 146>: 6.08ns
ST_146: tmp_16_13 [4/6] 6.08ns
_ifconv125:13  %tmp_16_13 = mul nsw i32 %A_cached_row_4_load_1, %newSel59


 <State 147>: 6.08ns
ST_147: tmp_16_13 [3/6] 6.08ns
_ifconv125:13  %tmp_16_13 = mul nsw i32 %A_cached_row_4_load_1, %newSel59


 <State 148>: 6.08ns
ST_148: tmp_16_13 [2/6] 6.08ns
_ifconv125:13  %tmp_16_13 = mul nsw i32 %A_cached_row_4_load_1, %newSel59


 <State 149>: 6.08ns
ST_149: tmp_16_13 [1/6] 6.08ns
_ifconv125:13  %tmp_16_13 = mul nsw i32 %A_cached_row_4_load_1, %newSel59


 <State 150>: 7.80ns
ST_150: tmp_17_13 [1/1] 0.00ns
_ifconv125:14  %tmp_17_13 = sext i32 %tmp_16_13 to i64

ST_150: temp_2_13 [1/1] 3.40ns
_ifconv125:15  %temp_2_13 = add nsw i64 %temp_1_12, %tmp_17_13

ST_150: stg_1509 [1/1] 1.57ns
_ifconv125:16  br label %._crit_edge9.14

ST_150: temp_1_13 [1/1] 0.00ns
._crit_edge9.14:0  %temp_1_13 = phi i64 [ %temp_2_13, %_ifconv125 ], [ %temp_1_12, %._crit_edge9.13 ]

ST_150: k_5_14 [1/1] 1.72ns
._crit_edge9.14:1  %k_5_14 = add i7 %k_2, 15

ST_150: k_5_14_cast [1/1] 0.00ns
._crit_edge9.14:2  %k_5_14_cast = zext i7 %k_5_14 to i8

ST_150: tmp_14_14 [1/1] 2.00ns
._crit_edge9.14:3  %tmp_14_14 = icmp ult i8 %k_5_14_cast, %mB_read

ST_150: stg_1514 [1/1] 1.57ns
._crit_edge9.14:4  br i1 %tmp_14_14, label %_ifconv134, label %._crit_edge9.15

ST_150: newIndex17 [1/1] 0.00ns
_ifconv134:0  %newIndex17 = zext i4 %indvars_iv1 to i64

ST_150: A_cached_row_5_addr_3 [1/1] 0.00ns
_ifconv134:1  %A_cached_row_5_addr_3 = getelementptr [10 x i32]* %A_cached_row_5, i64 0, i64 %newIndex17

ST_150: A_cached_row_5_load_1 [2/2] 2.39ns
_ifconv134:2  %A_cached_row_5_load_1 = load i32* %A_cached_row_5_addr_3, align 4

ST_150: sel_tmp48 [1/1] 1.97ns
_ifconv134:3  %sel_tmp48 = icmp eq i7 %k_5_14, 35

ST_150: sel_tmp49 [1/1] 1.97ns
_ifconv134:4  %sel_tmp49 = icmp eq i7 %k_5_14, 55

ST_150: sel_tmp50 [1/1] 1.97ns
_ifconv134:5  %sel_tmp50 = icmp eq i7 %k_5_14, -53

ST_150: newSel60 [1/1] 1.37ns
_ifconv134:6  %newSel60 = select i1 %sel_tmp50, i32 %B_cached_75_load, i32 %B_cached_55_load

ST_150: or_cond45 [1/1] 1.37ns
_ifconv134:7  %or_cond45 = or i1 %sel_tmp50, %sel_tmp49

ST_150: newSel61 [1/1] 1.37ns
_ifconv134:8  %newSel61 = select i1 %sel_tmp48, i32 %B_cached_35_load, i32 %B_cached_15_load

ST_150: or_cond46 [1/1] 1.37ns
_ifconv134:9  %or_cond46 = or i1 %sel_tmp48, %tmp_15

ST_150: newSel62 [1/1] 1.37ns
_ifconv134:10  %newSel62 = select i1 %or_cond45, i32 %newSel60, i32 %newSel61

ST_150: or_cond47 [1/1] 1.37ns
_ifconv134:11  %or_cond47 = or i1 %or_cond45, %or_cond46

ST_150: newSel63 [1/1] 1.37ns
_ifconv134:12  %newSel63 = select i1 %or_cond47, i32 %newSel62, i32 %B_cached_95_load


 <State 151>: 8.47ns
ST_151: A_cached_row_5_load_1 [1/2] 2.39ns
_ifconv134:2  %A_cached_row_5_load_1 = load i32* %A_cached_row_5_addr_3, align 4

ST_151: tmp_16_14 [6/6] 6.08ns
_ifconv134:13  %tmp_16_14 = mul nsw i32 %A_cached_row_5_load_1, %newSel63


 <State 152>: 6.08ns
ST_152: tmp_16_14 [5/6] 6.08ns
_ifconv134:13  %tmp_16_14 = mul nsw i32 %A_cached_row_5_load_1, %newSel63


 <State 153>: 6.08ns
ST_153: tmp_16_14 [4/6] 6.08ns
_ifconv134:13  %tmp_16_14 = mul nsw i32 %A_cached_row_5_load_1, %newSel63


 <State 154>: 6.08ns
ST_154: tmp_16_14 [3/6] 6.08ns
_ifconv134:13  %tmp_16_14 = mul nsw i32 %A_cached_row_5_load_1, %newSel63


 <State 155>: 6.08ns
ST_155: tmp_16_14 [2/6] 6.08ns
_ifconv134:13  %tmp_16_14 = mul nsw i32 %A_cached_row_5_load_1, %newSel63


 <State 156>: 6.08ns
ST_156: tmp_16_14 [1/6] 6.08ns
_ifconv134:13  %tmp_16_14 = mul nsw i32 %A_cached_row_5_load_1, %newSel63


 <State 157>: 7.80ns
ST_157: tmp_17_14 [1/1] 0.00ns
_ifconv134:14  %tmp_17_14 = sext i32 %tmp_16_14 to i64

ST_157: temp_2_14 [1/1] 3.40ns
_ifconv134:15  %temp_2_14 = add nsw i64 %temp_1_13, %tmp_17_14

ST_157: stg_1537 [1/1] 1.57ns
_ifconv134:16  br label %._crit_edge9.15

ST_157: temp_1_14 [1/1] 0.00ns
._crit_edge9.15:0  %temp_1_14 = phi i64 [ %temp_2_14, %_ifconv134 ], [ %temp_1_13, %._crit_edge9.14 ]

ST_157: k_5_15 [1/1] 1.72ns
._crit_edge9.15:1  %k_5_15 = add i7 %k_2, 16

ST_157: k_5_15_cast [1/1] 0.00ns
._crit_edge9.15:2  %k_5_15_cast = zext i7 %k_5_15 to i8

ST_157: tmp_14_15 [1/1] 2.00ns
._crit_edge9.15:3  %tmp_14_15 = icmp ult i8 %k_5_15_cast, %mB_read

ST_157: stg_1542 [1/1] 1.57ns
._crit_edge9.15:4  br i1 %tmp_14_15, label %_ifconv143, label %._crit_edge9.16

ST_157: newIndex18 [1/1] 0.00ns
_ifconv143:0  %newIndex18 = zext i4 %indvars_iv1 to i64

ST_157: A_cached_row_6_addr_3 [1/1] 0.00ns
_ifconv143:1  %A_cached_row_6_addr_3 = getelementptr [10 x i32]* %A_cached_row_6, i64 0, i64 %newIndex18

ST_157: A_cached_row_6_load_1 [2/2] 2.39ns
_ifconv143:2  %A_cached_row_6_load_1 = load i32* %A_cached_row_6_addr_3, align 16

ST_157: sel_tmp51 [1/1] 1.97ns
_ifconv143:3  %sel_tmp51 = icmp eq i7 %k_5_15, 36

ST_157: sel_tmp52 [1/1] 1.97ns
_ifconv143:4  %sel_tmp52 = icmp eq i7 %k_5_15, 56

ST_157: sel_tmp53 [1/1] 1.97ns
_ifconv143:5  %sel_tmp53 = icmp eq i7 %k_5_15, -52

ST_157: newSel64 [1/1] 1.37ns
_ifconv143:6  %newSel64 = select i1 %sel_tmp53, i32 %B_cached_76_load, i32 %B_cached_56_load

ST_157: or_cond48 [1/1] 1.37ns
_ifconv143:7  %or_cond48 = or i1 %sel_tmp53, %sel_tmp52

ST_157: newSel65 [1/1] 1.37ns
_ifconv143:8  %newSel65 = select i1 %sel_tmp51, i32 %B_cached_36_load, i32 %B_cached_16_load

ST_157: or_cond49 [1/1] 1.37ns
_ifconv143:9  %or_cond49 = or i1 %sel_tmp51, %tmp_15

ST_157: newSel66 [1/1] 1.37ns
_ifconv143:10  %newSel66 = select i1 %or_cond48, i32 %newSel64, i32 %newSel65

ST_157: or_cond50 [1/1] 1.37ns
_ifconv143:11  %or_cond50 = or i1 %or_cond48, %or_cond49

ST_157: newSel67 [1/1] 1.37ns
_ifconv143:12  %newSel67 = select i1 %or_cond50, i32 %newSel66, i32 %B_cached_96_load


 <State 158>: 8.47ns
ST_158: A_cached_row_6_load_1 [1/2] 2.39ns
_ifconv143:2  %A_cached_row_6_load_1 = load i32* %A_cached_row_6_addr_3, align 16

ST_158: tmp_16_15 [6/6] 6.08ns
_ifconv143:13  %tmp_16_15 = mul nsw i32 %A_cached_row_6_load_1, %newSel67


 <State 159>: 6.08ns
ST_159: tmp_16_15 [5/6] 6.08ns
_ifconv143:13  %tmp_16_15 = mul nsw i32 %A_cached_row_6_load_1, %newSel67


 <State 160>: 6.08ns
ST_160: tmp_16_15 [4/6] 6.08ns
_ifconv143:13  %tmp_16_15 = mul nsw i32 %A_cached_row_6_load_1, %newSel67


 <State 161>: 6.08ns
ST_161: tmp_16_15 [3/6] 6.08ns
_ifconv143:13  %tmp_16_15 = mul nsw i32 %A_cached_row_6_load_1, %newSel67


 <State 162>: 6.08ns
ST_162: tmp_16_15 [2/6] 6.08ns
_ifconv143:13  %tmp_16_15 = mul nsw i32 %A_cached_row_6_load_1, %newSel67


 <State 163>: 6.08ns
ST_163: tmp_16_15 [1/6] 6.08ns
_ifconv143:13  %tmp_16_15 = mul nsw i32 %A_cached_row_6_load_1, %newSel67


 <State 164>: 7.80ns
ST_164: tmp_17_15 [1/1] 0.00ns
_ifconv143:14  %tmp_17_15 = sext i32 %tmp_16_15 to i64

ST_164: temp_2_15 [1/1] 3.40ns
_ifconv143:15  %temp_2_15 = add nsw i64 %temp_1_14, %tmp_17_15

ST_164: stg_1565 [1/1] 1.57ns
_ifconv143:16  br label %._crit_edge9.16

ST_164: temp_1_15 [1/1] 0.00ns
._crit_edge9.16:0  %temp_1_15 = phi i64 [ %temp_2_15, %_ifconv143 ], [ %temp_1_14, %._crit_edge9.15 ]

ST_164: k_5_16 [1/1] 1.72ns
._crit_edge9.16:1  %k_5_16 = add i7 %k_2, 17

ST_164: k_5_16_cast [1/1] 0.00ns
._crit_edge9.16:2  %k_5_16_cast = zext i7 %k_5_16 to i8

ST_164: tmp_14_16 [1/1] 2.00ns
._crit_edge9.16:3  %tmp_14_16 = icmp ult i8 %k_5_16_cast, %mB_read

ST_164: stg_1570 [1/1] 1.57ns
._crit_edge9.16:4  br i1 %tmp_14_16, label %_ifconv152, label %._crit_edge9.17

ST_164: newIndex19 [1/1] 0.00ns
_ifconv152:0  %newIndex19 = zext i4 %indvars_iv1 to i64

ST_164: A_cached_row_7_addr_3 [1/1] 0.00ns
_ifconv152:1  %A_cached_row_7_addr_3 = getelementptr [10 x i32]* %A_cached_row_7, i64 0, i64 %newIndex19

ST_164: A_cached_row_7_load_1 [2/2] 2.39ns
_ifconv152:2  %A_cached_row_7_load_1 = load i32* %A_cached_row_7_addr_3, align 4

ST_164: sel_tmp54 [1/1] 1.97ns
_ifconv152:3  %sel_tmp54 = icmp eq i7 %k_5_16, 37

ST_164: sel_tmp55 [1/1] 1.97ns
_ifconv152:4  %sel_tmp55 = icmp eq i7 %k_5_16, 57

ST_164: sel_tmp56 [1/1] 1.97ns
_ifconv152:5  %sel_tmp56 = icmp eq i7 %k_5_16, -51

ST_164: newSel68 [1/1] 1.37ns
_ifconv152:6  %newSel68 = select i1 %sel_tmp56, i32 %B_cached_77_load, i32 %B_cached_57_load

ST_164: or_cond51 [1/1] 1.37ns
_ifconv152:7  %or_cond51 = or i1 %sel_tmp56, %sel_tmp55

ST_164: newSel69 [1/1] 1.37ns
_ifconv152:8  %newSel69 = select i1 %sel_tmp54, i32 %B_cached_37_load, i32 %B_cached_17_load

ST_164: or_cond52 [1/1] 1.37ns
_ifconv152:9  %or_cond52 = or i1 %sel_tmp54, %tmp_15

ST_164: newSel70 [1/1] 1.37ns
_ifconv152:10  %newSel70 = select i1 %or_cond51, i32 %newSel68, i32 %newSel69

ST_164: or_cond53 [1/1] 1.37ns
_ifconv152:11  %or_cond53 = or i1 %or_cond51, %or_cond52

ST_164: newSel71 [1/1] 1.37ns
_ifconv152:12  %newSel71 = select i1 %or_cond53, i32 %newSel70, i32 %B_cached_97_load


 <State 165>: 8.47ns
ST_165: A_cached_row_7_load_1 [1/2] 2.39ns
_ifconv152:2  %A_cached_row_7_load_1 = load i32* %A_cached_row_7_addr_3, align 4

ST_165: tmp_16_16 [6/6] 6.08ns
_ifconv152:13  %tmp_16_16 = mul nsw i32 %A_cached_row_7_load_1, %newSel71


 <State 166>: 6.08ns
ST_166: tmp_16_16 [5/6] 6.08ns
_ifconv152:13  %tmp_16_16 = mul nsw i32 %A_cached_row_7_load_1, %newSel71


 <State 167>: 6.08ns
ST_167: tmp_16_16 [4/6] 6.08ns
_ifconv152:13  %tmp_16_16 = mul nsw i32 %A_cached_row_7_load_1, %newSel71


 <State 168>: 6.08ns
ST_168: tmp_16_16 [3/6] 6.08ns
_ifconv152:13  %tmp_16_16 = mul nsw i32 %A_cached_row_7_load_1, %newSel71


 <State 169>: 6.08ns
ST_169: tmp_16_16 [2/6] 6.08ns
_ifconv152:13  %tmp_16_16 = mul nsw i32 %A_cached_row_7_load_1, %newSel71


 <State 170>: 6.08ns
ST_170: tmp_16_16 [1/6] 6.08ns
_ifconv152:13  %tmp_16_16 = mul nsw i32 %A_cached_row_7_load_1, %newSel71


 <State 171>: 7.80ns
ST_171: tmp_17_16 [1/1] 0.00ns
_ifconv152:14  %tmp_17_16 = sext i32 %tmp_16_16 to i64

ST_171: temp_2_16 [1/1] 3.40ns
_ifconv152:15  %temp_2_16 = add nsw i64 %temp_1_15, %tmp_17_16

ST_171: stg_1593 [1/1] 1.57ns
_ifconv152:16  br label %._crit_edge9.17

ST_171: temp_1_16 [1/1] 0.00ns
._crit_edge9.17:0  %temp_1_16 = phi i64 [ %temp_2_16, %_ifconv152 ], [ %temp_1_15, %._crit_edge9.16 ]

ST_171: k_5_17 [1/1] 1.72ns
._crit_edge9.17:1  %k_5_17 = add i7 %k_2, 18

ST_171: k_5_17_cast [1/1] 0.00ns
._crit_edge9.17:2  %k_5_17_cast = zext i7 %k_5_17 to i8

ST_171: tmp_14_17 [1/1] 2.00ns
._crit_edge9.17:3  %tmp_14_17 = icmp ult i8 %k_5_17_cast, %mB_read

ST_171: stg_1598 [1/1] 1.57ns
._crit_edge9.17:4  br i1 %tmp_14_17, label %_ifconv161, label %._crit_edge9.18

ST_171: newIndex20 [1/1] 0.00ns
_ifconv161:0  %newIndex20 = zext i4 %indvars_iv1 to i64

ST_171: A_cached_row_8_addr_3 [1/1] 0.00ns
_ifconv161:1  %A_cached_row_8_addr_3 = getelementptr [10 x i32]* %A_cached_row_8, i64 0, i64 %newIndex20

ST_171: A_cached_row_8_load_1 [2/2] 2.39ns
_ifconv161:2  %A_cached_row_8_load_1 = load i32* %A_cached_row_8_addr_3, align 8

ST_171: sel_tmp57 [1/1] 1.97ns
_ifconv161:3  %sel_tmp57 = icmp eq i7 %k_5_17, 38

ST_171: sel_tmp58 [1/1] 1.97ns
_ifconv161:4  %sel_tmp58 = icmp eq i7 %k_5_17, 58

ST_171: sel_tmp59 [1/1] 1.97ns
_ifconv161:5  %sel_tmp59 = icmp eq i7 %k_5_17, -50

ST_171: newSel72 [1/1] 1.37ns
_ifconv161:6  %newSel72 = select i1 %sel_tmp59, i32 %B_cached_78_load, i32 %B_cached_58_load

ST_171: or_cond54 [1/1] 1.37ns
_ifconv161:7  %or_cond54 = or i1 %sel_tmp59, %sel_tmp58

ST_171: newSel73 [1/1] 1.37ns
_ifconv161:8  %newSel73 = select i1 %sel_tmp57, i32 %B_cached_38_load, i32 %B_cached_18_load

ST_171: or_cond55 [1/1] 1.37ns
_ifconv161:9  %or_cond55 = or i1 %sel_tmp57, %tmp_15

ST_171: newSel74 [1/1] 1.37ns
_ifconv161:10  %newSel74 = select i1 %or_cond54, i32 %newSel72, i32 %newSel73

ST_171: or_cond56 [1/1] 1.37ns
_ifconv161:11  %or_cond56 = or i1 %or_cond54, %or_cond55

ST_171: newSel75 [1/1] 1.37ns
_ifconv161:12  %newSel75 = select i1 %or_cond56, i32 %newSel74, i32 %B_cached_98_load


 <State 172>: 8.47ns
ST_172: A_cached_row_8_load_1 [1/2] 2.39ns
_ifconv161:2  %A_cached_row_8_load_1 = load i32* %A_cached_row_8_addr_3, align 8

ST_172: tmp_16_17 [6/6] 6.08ns
_ifconv161:13  %tmp_16_17 = mul nsw i32 %A_cached_row_8_load_1, %newSel75


 <State 173>: 6.08ns
ST_173: tmp_16_17 [5/6] 6.08ns
_ifconv161:13  %tmp_16_17 = mul nsw i32 %A_cached_row_8_load_1, %newSel75


 <State 174>: 6.08ns
ST_174: tmp_16_17 [4/6] 6.08ns
_ifconv161:13  %tmp_16_17 = mul nsw i32 %A_cached_row_8_load_1, %newSel75


 <State 175>: 6.08ns
ST_175: tmp_16_17 [3/6] 6.08ns
_ifconv161:13  %tmp_16_17 = mul nsw i32 %A_cached_row_8_load_1, %newSel75


 <State 176>: 6.08ns
ST_176: tmp_16_17 [2/6] 6.08ns
_ifconv161:13  %tmp_16_17 = mul nsw i32 %A_cached_row_8_load_1, %newSel75


 <State 177>: 6.08ns
ST_177: tmp_16_17 [1/6] 6.08ns
_ifconv161:13  %tmp_16_17 = mul nsw i32 %A_cached_row_8_load_1, %newSel75


 <State 178>: 7.80ns
ST_178: tmp_17_17 [1/1] 0.00ns
_ifconv161:14  %tmp_17_17 = sext i32 %tmp_16_17 to i64

ST_178: temp_2_17 [1/1] 3.40ns
_ifconv161:15  %temp_2_17 = add nsw i64 %temp_1_16, %tmp_17_17

ST_178: stg_1621 [1/1] 1.57ns
_ifconv161:16  br label %._crit_edge9.18

ST_178: temp_1_17 [1/1] 0.00ns
._crit_edge9.18:0  %temp_1_17 = phi i64 [ %temp_2_17, %_ifconv161 ], [ %temp_1_16, %._crit_edge9.17 ]

ST_178: k_5_18 [1/1] 1.72ns
._crit_edge9.18:1  %k_5_18 = add i7 %k_2, 19

ST_178: k_5_18_cast [1/1] 0.00ns
._crit_edge9.18:2  %k_5_18_cast = zext i7 %k_5_18 to i8

ST_178: tmp_14_18 [1/1] 2.00ns
._crit_edge9.18:3  %tmp_14_18 = icmp ult i8 %k_5_18_cast, %mB_read

ST_178: stg_1626 [1/1] 1.57ns
._crit_edge9.18:4  br i1 %tmp_14_18, label %_ifconv170, label %._crit_edge9.19

ST_178: newIndex21 [1/1] 0.00ns
_ifconv170:0  %newIndex21 = zext i4 %indvars_iv1 to i64

ST_178: A_cached_row_9_addr_3 [1/1] 0.00ns
_ifconv170:1  %A_cached_row_9_addr_3 = getelementptr [10 x i32]* %A_cached_row_9, i64 0, i64 %newIndex21

ST_178: A_cached_row_9_load_1 [2/2] 2.39ns
_ifconv170:2  %A_cached_row_9_load_1 = load i32* %A_cached_row_9_addr_3, align 4

ST_178: sel_tmp60 [1/1] 1.97ns
_ifconv170:3  %sel_tmp60 = icmp eq i7 %k_5_18, 39

ST_178: sel_tmp61 [1/1] 1.97ns
_ifconv170:4  %sel_tmp61 = icmp eq i7 %k_5_18, 59

ST_178: sel_tmp62 [1/1] 1.97ns
_ifconv170:5  %sel_tmp62 = icmp eq i7 %k_5_18, -49

ST_178: newSel76 [1/1] 1.37ns
_ifconv170:6  %newSel76 = select i1 %sel_tmp62, i32 %B_cached_79_load, i32 %B_cached_59_load

ST_178: or_cond57 [1/1] 1.37ns
_ifconv170:7  %or_cond57 = or i1 %sel_tmp62, %sel_tmp61

ST_178: newSel77 [1/1] 1.37ns
_ifconv170:8  %newSel77 = select i1 %sel_tmp60, i32 %B_cached_39_load, i32 %B_cached_19_load

ST_178: or_cond58 [1/1] 1.37ns
_ifconv170:9  %or_cond58 = or i1 %sel_tmp60, %tmp_15

ST_178: newSel78 [1/1] 1.37ns
_ifconv170:10  %newSel78 = select i1 %or_cond57, i32 %newSel76, i32 %newSel77

ST_178: or_cond59 [1/1] 1.37ns
_ifconv170:11  %or_cond59 = or i1 %or_cond57, %or_cond58

ST_178: newSel79 [1/1] 1.37ns
_ifconv170:12  %newSel79 = select i1 %or_cond59, i32 %newSel78, i32 %B_cached_99_load


 <State 179>: 8.47ns
ST_179: A_cached_row_9_load_1 [1/2] 2.39ns
_ifconv170:2  %A_cached_row_9_load_1 = load i32* %A_cached_row_9_addr_3, align 4

ST_179: tmp_16_18 [6/6] 6.08ns
_ifconv170:13  %tmp_16_18 = mul nsw i32 %A_cached_row_9_load_1, %newSel79


 <State 180>: 6.08ns
ST_180: tmp_16_18 [5/6] 6.08ns
_ifconv170:13  %tmp_16_18 = mul nsw i32 %A_cached_row_9_load_1, %newSel79


 <State 181>: 6.08ns
ST_181: tmp_16_18 [4/6] 6.08ns
_ifconv170:13  %tmp_16_18 = mul nsw i32 %A_cached_row_9_load_1, %newSel79


 <State 182>: 6.08ns
ST_182: tmp_16_18 [3/6] 6.08ns
_ifconv170:13  %tmp_16_18 = mul nsw i32 %A_cached_row_9_load_1, %newSel79


 <State 183>: 6.08ns
ST_183: tmp_16_18 [2/6] 6.08ns
_ifconv170:13  %tmp_16_18 = mul nsw i32 %A_cached_row_9_load_1, %newSel79


 <State 184>: 6.08ns
ST_184: tmp_16_18 [1/6] 6.08ns
_ifconv170:13  %tmp_16_18 = mul nsw i32 %A_cached_row_9_load_1, %newSel79


 <State 185>: 4.97ns
ST_185: tmp_17_18 [1/1] 0.00ns
_ifconv170:14  %tmp_17_18 = sext i32 %tmp_16_18 to i64

ST_185: temp_2_18 [1/1] 3.40ns
_ifconv170:15  %temp_2_18 = add nsw i64 %temp_1_17, %tmp_17_18

ST_185: stg_1649 [1/1] 1.57ns
_ifconv170:16  br label %._crit_edge9.19

ST_185: temp_1_18 [1/1] 0.00ns
._crit_edge9.19:0  %temp_1_18 = phi i64 [ %temp_2_18, %_ifconv170 ], [ %temp_1_17, %._crit_edge9.18 ]

ST_185: k_5_19 [1/1] 1.72ns
._crit_edge9.19:1  %k_5_19 = add i7 %k_2, 20

ST_185: indvars_iv_next1 [1/1] 0.80ns
._crit_edge9.19:2  %indvars_iv_next1 = add i4 %indvars_iv3, 2

ST_185: indvars_iv_next2 [1/1] 0.80ns
._crit_edge9.19:3  %indvars_iv_next2 = add i4 %indvars_iv1, 2

ST_185: stg_1654 [1/1] 0.00ns
._crit_edge9.19:4  br label %5



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115
	State 116
	State 117
	State 118
	State 119
	State 120
	State 121
	State 122
	State 123
	State 124
	State 125
	State 126
	State 127
	State 128
	State 129
	State 130
	State 131
	State 132
	State 133
	State 134
	State 135
	State 136
	State 137
	State 138
	State 139
	State 140
	State 141
	State 142
	State 143
	State 144
	State 145
	State 146
	State 147
	State 148
	State 149
	State 150
	State 151
	State 152
	State 153
	State 154
	State 155
	State 156
	State 157
	State 158
	State 159
	State 160
	State 161
	State 162
	State 163
	State 164
	State 165
	State 166
	State 167
	State 168
	State 169
	State 170
	State 171
	State 172
	State 173
	State 174
	State 175
	State 176
	State 177
	State 178
	State 179
	State 180
	State 181
	State 182
	State 183
	State 184
	State 185


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
