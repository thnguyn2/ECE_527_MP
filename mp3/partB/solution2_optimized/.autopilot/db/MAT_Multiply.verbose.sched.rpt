

================================================================
== Vivado HLS Report for 'MAT_Multiply'
================================================================
* Date:           Thu Oct  1 11:04:55 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        partB
* Solution:       solution2_optimized
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|     10.07|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+------------+-----+------------+---------+
    |      Latency     |     Interval     | Pipeline|
    | min |     max    | min |     max    |   Type  |
    +-----+------------+-----+------------+---------+
    |    1|  4011500008|    2|  4011500009|   none  |
    +-----+------------+-----+------------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+------------+------------+----------+-----------+-----------+---------+----------+
        |                         |         Latency         | Iteration|  Initiation Interval  |   Trip  |          |
        |        Loop Name        |     min    |     max    |  Latency |  achieved |   target  |  Count  | Pipelined|
        +-------------------------+------------+------------+----------+-----------+-----------+---------+----------+
        |- Row_load_Col_load      |     1000001|     1000001|         3|          1|          1|  1000000|    yes   |
        |- Row_Col                |  4009500000|  4009500000|      8019|          -|          -|   500000|    no    |
        | + Product               |        4005|        4005|        10|          4|          1|     1000|    yes   |
        | + Product               |        4005|        4005|        10|          4|          1|     1000|    yes   |
        |- Row_Assign_Col_Assign  |     1000003|     1000003|         5|          1|          1|  1000000|    yes   |
        +-------------------------+------------+------------+----------+-----------+-----------+---------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3
  * Pipeline-1: initiation interval (II) = 4, depth = 10
  * Pipeline-2: initiation interval (II) = 4, depth = 10
  * Pipeline-3: initiation interval (II) = 1, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 38
* Pipeline: 4
  Pipeline-0: II = 1, D = 3, States = { 2 3 4 }
  Pipeline-1: II = 4, D = 10, States = { 10 11 12 13 14 15 16 17 18 19 }
  Pipeline-2: II = 4, D = 10, States = { 22 23 24 25 26 27 28 29 30 31 }
  Pipeline-3: II = 1, D = 5, States = { 33 34 35 36 37 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (tmp_4)
	38  / (!tmp_4)
2 --> 
	5  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	2  / true
5 --> 
	6  / (!exitcond_flatten9)
	33  / (exitcond_flatten9)
6 --> 
	7  / (!tmp_9)
	9  / (tmp_9)
7 --> 
	8  / true
8 --> 
	10  / true
9 --> 
	8  / true
10 --> 
	20  / (exitcond2)
	11  / (!exitcond2)
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	10  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	32  / (exitcond2_1)
	23  / (!exitcond2_1)
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	22  / true
32 --> 
	5  / true
33 --> 
	38  / (exitcond_flatten1)
	34  / (!exitcond_flatten1)
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	33  / true
38 --> 
* FSM state operations: 

 <State 1>: 6.83ns
ST_1: stg_39 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i32* %A) nounwind, !map !0

ST_1: stg_40 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32* %B) nounwind, !map !6

ST_1: stg_41 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i64* %C) nounwind, !map !10

ST_1: stg_42 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32 %mA) nounwind, !map !14

ST_1: stg_43 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i32 %nA) nounwind, !map !20

ST_1: stg_44 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i32 %mB) nounwind, !map !24

ST_1: stg_45 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i32 %nB) nounwind, !map !28

ST_1: stg_46 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i32 %mC) nounwind, !map !32

ST_1: stg_47 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i32 %nC) nounwind, !map !36

ST_1: stg_48 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecTopModule([13 x i8]* @str) nounwind

ST_1: nC_read [1/1] 0.00ns
:10  %nC_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %nC) nounwind

ST_1: mC_read [1/1] 0.00ns
:11  %mC_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %mC) nounwind

ST_1: nB_read [1/1] 0.00ns
:12  %nB_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %nB) nounwind

ST_1: mB_read [1/1] 0.00ns
:13  %mB_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %mB) nounwind

ST_1: nA_read [1/1] 0.00ns
:14  %nA_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %nA) nounwind

ST_1: mA_read [1/1] 0.00ns
:15  %mA_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %mA) nounwind

ST_1: arrayA_0 [1/1] 0.00ns
:16  %arrayA_0 = alloca [500000 x i32], align 4

ST_1: arrayA_1 [1/1] 0.00ns
:17  %arrayA_1 = alloca [500000 x i32], align 4

ST_1: arrayB_0 [1/1] 0.00ns
:18  %arrayB_0 = alloca [500000 x i32], align 4

ST_1: arrayB_1 [1/1] 0.00ns
:19  %arrayB_1 = alloca [500000 x i32], align 4

ST_1: arrayC_0 [1/1] 0.00ns
:20  %arrayC_0 = alloca [500000 x i64], align 8

ST_1: arrayC_1 [1/1] 0.00ns
:21  %arrayC_1 = alloca [500000 x i64], align 8

ST_1: stg_61 [1/1] 0.00ns
:22  call void (...)* @_ssdm_op_SpecInterface(i32* %A, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_62 [1/1] 0.00ns
:23  call void (...)* @_ssdm_op_SpecInterface(i32* %B, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_63 [1/1] 0.00ns
:24  call void (...)* @_ssdm_op_SpecInterface(i64* %C, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: tmp [1/1] 2.52ns
:25  %tmp = icmp eq i32 %nA_read, %mB_read

ST_1: tmp_1 [1/1] 2.52ns
:26  %tmp_1 = icmp eq i32 %mA_read, %mC_read

ST_1: tmp_3 [1/1] 2.52ns
:27  %tmp_3 = icmp eq i32 %nB_read, %nC_read

ST_1: tmp3 [1/1] 1.37ns
:28  %tmp3 = and i1 %tmp_1, %tmp_3

ST_1: tmp_4 [1/1] 1.37ns
:29  %tmp_4 = and i1 %tmp3, %tmp

ST_1: stg_69 [1/1] 1.57ns
:30  br i1 %tmp_4, label %.preheader10.preheader, label %.loopexit


 <State 2>: 7.33ns
ST_2: indvar_flatten [1/1] 0.00ns
.preheader10.preheader:0  %indvar_flatten = phi i20 [ %indvar_flatten_next, %._crit_edge12 ], [ 0, %0 ]

ST_2: i [1/1] 0.00ns
.preheader10.preheader:1  %i = phi i10 [ %i_mid2, %._crit_edge12 ], [ 0, %0 ]

ST_2: j [1/1] 0.00ns
.preheader10.preheader:2  %j = phi i10 [ %j_3, %._crit_edge12 ], [ 0, %0 ]

ST_2: exitcond_flatten [1/1] 2.34ns
.preheader10.preheader:3  %exitcond_flatten = icmp eq i20 %indvar_flatten, -48576

ST_2: indvar_flatten_next [1/1] 2.08ns
.preheader10.preheader:4  %indvar_flatten_next = add i20 %indvar_flatten, 1

ST_2: stg_75 [1/1] 1.57ns
.preheader10.preheader:5  br i1 %exitcond_flatten, label %.preheader9.preheader, label %.preheader10

ST_2: exitcond [1/1] 2.07ns
.preheader10:2  %exitcond = icmp eq i10 %j, -24

ST_2: j_mid2 [1/1] 1.37ns
.preheader10:3  %j_mid2 = select i1 %exitcond, i10 0, i10 %j

ST_2: i_s [1/1] 1.84ns
.preheader10:4  %i_s = add i10 1, %i

ST_2: i_mid2 [1/1] 1.37ns
.preheader10:5  %i_mid2 = select i1 %exitcond, i10 %i_s, i10 %i

ST_2: i_cast1 [1/1] 0.00ns
.preheader10:6  %i_cast1 = zext i10 %i_mid2 to i32

ST_2: tmp_5 [1/1] 2.52ns
.preheader10:7  %tmp_5 = icmp ult i32 %i_cast1, %mC_read

ST_2: tmp_8 [1/1] 2.52ns
.preheader10:8  %tmp_8 = icmp ult i32 %i_cast1, %mB_read

ST_2: tmp_6 [1/1] 0.00ns
.preheader10:9  %tmp_6 = trunc i10 %i_mid2 to i1

ST_2: j_cast1 [1/1] 0.00ns
.preheader10:10  %j_cast1 = zext i10 %j_mid2 to i32

ST_2: tmp_2 [1/1] 0.00ns
.preheader10:13  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str4) nounwind

ST_2: tmp_7 [1/1] 2.52ns
.preheader10:15  %tmp_7 = icmp ult i32 %j_cast1, %mB_read

ST_2: or_cond [1/1] 1.37ns
.preheader10:16  %or_cond = and i1 %tmp_5, %tmp_7

ST_2: stg_88 [1/1] 0.00ns
.preheader10:17  br i1 %or_cond, label %1, label %._crit_edge

ST_2: stg_89 [1/1] 0.00ns
:8  br i1 %tmp_6, label %branch5, label %branch4

ST_2: stg_90 [1/1] 0.00ns
:0  br label %._crit_edge

ST_2: tmp_14 [1/1] 2.52ns
._crit_edge:0  %tmp_14 = icmp ult i32 %j_cast1, %nC_read

ST_2: or_cond7 [1/1] 1.37ns
._crit_edge:1  %or_cond7 = and i1 %tmp_8, %tmp_14

ST_2: stg_93 [1/1] 0.00ns
._crit_edge:2  br i1 %or_cond7, label %3, label %._crit_edge11

ST_2: stg_94 [1/1] 0.00ns
:8  br i1 %tmp_6, label %branch11, label %branch10

ST_2: stg_95 [1/1] 0.00ns
:0  br label %._crit_edge11

ST_2: or_cond8 [1/1] 1.37ns
._crit_edge11:0  %or_cond8 = and i1 %tmp_5, %tmp_14

ST_2: stg_97 [1/1] 0.00ns
._crit_edge11:1  br i1 %or_cond8, label %5, label %._crit_edge12

ST_2: stg_98 [1/1] 0.00ns
:7  br i1 %tmp_6, label %branch27, label %branch26

ST_2: stg_99 [1/1] 0.00ns
:0  br label %._crit_edge12

ST_2: empty [1/1] 0.00ns
._crit_edge12:0  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str4, i32 %tmp_2) nounwind

ST_2: j_3 [1/1] 1.84ns
._crit_edge12:1  %j_3 = add i10 %j_mid2, 1

ST_2: stg_102 [1/1] 0.00ns
._crit_edge12:2  br label %.preheader10.preheader


 <State 3>: 9.09ns
ST_3: stg_103 [1/1] 0.00ns
.preheader10:0  call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @str1)

ST_3: empty_6 [1/1] 0.00ns
.preheader10:1  %empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1000000, i64 1000000, i64 1000000) nounwind

ST_3: j_cast1_cast [1/1] 0.00ns
.preheader10:11  %j_cast1_cast = zext i10 %j_mid2 to i19

ST_3: stg_106 [1/1] 0.00ns
.preheader10:12  call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str4) nounwind

ST_3: stg_107 [1/1] 0.00ns
.preheader10:14  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_3: A_read [1/1] 4.38ns
:0  %A_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %A) nounwind

ST_3: tmp_16 [1/1] 0.00ns
:1  %tmp_16 = call i9 @_ssdm_op_PartSelect.i9.i10.i32.i32(i10 %i_mid2, i32 1, i32 9)

ST_3: newIndex3_trn_cast [1/1] 0.00ns
:2  %newIndex3_trn_cast = zext i9 %tmp_16 to i19

ST_3: p_addr [1/1] 3.36ns
:3  %p_addr = mul i19 %newIndex3_trn_cast, 1000

ST_3: p_addr1 [1/1] 3.02ns
:4  %p_addr1 = add i19 %j_cast1_cast, %p_addr

ST_3: tmp_11 [1/1] 0.00ns
:5  %tmp_11 = zext i19 %p_addr1 to i64

ST_3: arrayA_0_addr [1/1] 0.00ns
:6  %arrayA_0_addr = getelementptr [500000 x i32]* %arrayA_0, i64 0, i64 %tmp_11

ST_3: arrayA_1_addr [1/1] 0.00ns
:7  %arrayA_1_addr = getelementptr [500000 x i32]* %arrayA_1, i64 0, i64 %tmp_11

ST_3: stg_116 [1/1] 2.71ns
branch4:0  store i32 %A_read, i32* %arrayA_0_addr, align 4

ST_3: stg_117 [1/1] 0.00ns
branch4:1  br label %2

ST_3: stg_118 [1/1] 2.71ns
branch5:0  store i32 %A_read, i32* %arrayA_1_addr, align 4

ST_3: stg_119 [1/1] 0.00ns
branch5:1  br label %2

ST_3: B_read [1/1] 4.38ns
:0  %B_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %B) nounwind

ST_3: tmp_29 [1/1] 0.00ns
:1  %tmp_29 = call i9 @_ssdm_op_PartSelect.i9.i10.i32.i32(i10 %i_mid2, i32 1, i32 9)

ST_3: newIndex7_trn_cast [1/1] 0.00ns
:2  %newIndex7_trn_cast = zext i9 %tmp_29 to i19

ST_3: p_addr6 [1/1] 3.36ns
:3  %p_addr6 = mul i19 %newIndex7_trn_cast, 1000

ST_3: p_addr7 [1/1] 3.02ns
:4  %p_addr7 = add i19 %j_cast1_cast, %p_addr6

ST_3: tmp_27 [1/1] 0.00ns
:5  %tmp_27 = zext i19 %p_addr7 to i64

ST_3: arrayB_0_addr [1/1] 0.00ns
:6  %arrayB_0_addr = getelementptr [500000 x i32]* %arrayB_0, i64 0, i64 %tmp_27

ST_3: arrayB_1_addr [1/1] 0.00ns
:7  %arrayB_1_addr = getelementptr [500000 x i32]* %arrayB_1, i64 0, i64 %tmp_27

ST_3: stg_128 [1/1] 2.71ns
branch10:0  store i32 %B_read, i32* %arrayB_0_addr, align 4

ST_3: stg_129 [1/1] 0.00ns
branch10:1  br label %4

ST_3: stg_130 [1/1] 2.71ns
branch11:0  store i32 %B_read, i32* %arrayB_1_addr, align 4

ST_3: stg_131 [1/1] 0.00ns
branch11:1  br label %4

ST_3: tmp_42 [1/1] 0.00ns
:0  %tmp_42 = call i9 @_ssdm_op_PartSelect.i9.i10.i32.i32(i10 %i_mid2, i32 1, i32 9)

ST_3: newIndex11_trn_cast [1/1] 0.00ns
:1  %newIndex11_trn_cast = zext i9 %tmp_42 to i19

ST_3: p_addr12 [1/1] 3.36ns
:2  %p_addr12 = mul i19 %newIndex11_trn_cast, 1000

ST_3: p_addr13 [1/1] 3.02ns
:3  %p_addr13 = add i19 %j_cast1_cast, %p_addr12

ST_3: tmp_38 [1/1] 0.00ns
:4  %tmp_38 = zext i19 %p_addr13 to i64

ST_3: arrayC_0_addr_3 [1/1] 0.00ns
:5  %arrayC_0_addr_3 = getelementptr [500000 x i64]* %arrayC_0, i64 0, i64 %tmp_38

ST_3: arrayC_1_addr_3 [1/1] 0.00ns
:6  %arrayC_1_addr_3 = getelementptr [500000 x i64]* %arrayC_1, i64 0, i64 %tmp_38

ST_3: stg_139 [2/2] 2.61ns
branch26:0  store i64 0, i64* %arrayC_0_addr_3, align 8

ST_3: stg_140 [2/2] 2.61ns
branch27:0  store i64 0, i64* %arrayC_1_addr_3, align 8


 <State 4>: 2.61ns
ST_4: stg_141 [1/2] 2.61ns
branch26:0  store i64 0, i64* %arrayC_0_addr_3, align 8

ST_4: stg_142 [1/1] 0.00ns
branch26:1  br label %6

ST_4: stg_143 [1/2] 2.61ns
branch27:0  store i64 0, i64* %arrayC_1_addr_3, align 8

ST_4: stg_144 [1/1] 0.00ns
branch27:1  br label %6


 <State 5>: 5.96ns
ST_5: indvar_flatten7 [1/1] 0.00ns
.preheader9.preheader:0  %indvar_flatten7 = phi i19 [ %indvar_flatten_next8, %14 ], [ 0, %.preheader10.preheader ]

ST_5: i_1 [1/1] 0.00ns
.preheader9.preheader:1  %i_1 = phi i10 [ %i_1_mid2, %14 ], [ 0, %.preheader10.preheader ]

ST_5: j_1 [1/1] 0.00ns
.preheader9.preheader:2  %j_1 = phi i10 [ %j_4_1, %14 ], [ 0, %.preheader10.preheader ]

ST_5: exitcond_flatten9 [1/1] 2.33ns
.preheader9.preheader:3  %exitcond_flatten9 = icmp eq i19 %indvar_flatten7, -24288

ST_5: indvar_flatten_next8 [1/1] 2.08ns
.preheader9.preheader:4  %indvar_flatten_next8 = add i19 %indvar_flatten7, 1

ST_5: stg_150 [1/1] 1.57ns
.preheader9.preheader:5  br i1 %exitcond_flatten9, label %.preheader.preheader, label %.preheader9

ST_5: exitcond1 [1/1] 2.07ns
.preheader9:2  %exitcond1 = icmp eq i10 %j_1, -24

ST_5: j_1_mid2 [1/1] 1.37ns
.preheader9:3  %j_1_mid2 = select i1 %exitcond1, i10 0, i10 %j_1

ST_5: i_3 [1/1] 1.84ns
.preheader9:4  %i_3 = add i10 1, %i_1

ST_5: i_1_mid2 [1/1] 1.37ns
.preheader9:5  %i_1_mid2 = select i1 %exitcond1, i10 %i_3, i10 %i_1

ST_5: i_1_cast [1/1] 0.00ns
.preheader9:6  %i_1_cast = zext i10 %i_1_mid2 to i32

ST_5: tmp_s [1/1] 2.52ns
.preheader9:7  %tmp_s = icmp ult i32 %i_1_cast, %mC_read

ST_5: tmp_9 [1/1] 0.00ns
.preheader9:8  %tmp_9 = trunc i10 %i_1_mid2 to i1

ST_5: tmp_12 [1/1] 0.00ns
.preheader9:13  %tmp_12 = call i9 @_ssdm_op_PartSelect.i9.i10.i32.i32(i10 %i_1_mid2, i32 1, i32 9)


 <State 6>: 8.46ns
ST_6: stg_159 [1/1] 0.00ns
.preheader9:0  call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @str2)

ST_6: empty_13 [1/1] 0.00ns
.preheader9:1  %empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 500000, i64 500000, i64 500000) nounwind

ST_6: j_1_cast [1/1] 0.00ns
.preheader9:9  %j_1_cast = zext i10 %j_1_mid2 to i32

ST_6: j_1_cast_cast [1/1] 0.00ns
.preheader9:10  %j_1_cast_cast = zext i10 %j_1_mid2 to i19

ST_6: stg_163 [1/1] 0.00ns
.preheader9:11  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str6) nounwind

ST_6: tmp_10 [1/1] 0.00ns
.preheader9:12  %tmp_10 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str6) nounwind

ST_6: newIndex1_trn_cast [1/1] 0.00ns
.preheader9:14  %newIndex1_trn_cast = zext i9 %tmp_12 to i19

ST_6: p_addr2 [1/1] 6.38ns
.preheader9:15  %p_addr2 = mul i19 1000, %newIndex1_trn_cast

ST_6: p_addr3 [1/1] 2.08ns
.preheader9:16  %p_addr3 = add i19 %p_addr2, %j_1_cast_cast

ST_6: tmp_13 [1/1] 0.00ns
.preheader9:17  %tmp_13 = zext i19 %p_addr3 to i64

ST_6: arrayC_0_addr [1/1] 0.00ns
.preheader9:18  %arrayC_0_addr = getelementptr [500000 x i64]* %arrayC_0, i64 0, i64 %tmp_13

ST_6: arrayC_1_addr [1/1] 0.00ns
.preheader9:19  %arrayC_1_addr = getelementptr [500000 x i64]* %arrayC_1, i64 0, i64 %tmp_13

ST_6: stg_171 [1/1] 0.00ns
.preheader9:20  br i1 %tmp_9, label %branch23, label %branch22


 <State 7>: 2.61ns
ST_7: stg_172 [2/2] 2.61ns
branch22:0  store i64 0, i64* %arrayC_0_addr, align 16


 <State 8>: 3.89ns
ST_8: stg_173 [1/2] 2.61ns
branch22:0  store i64 0, i64* %arrayC_0_addr, align 16

ST_8: stg_174 [1/1] 0.00ns
branch22:1  br label %10

ST_8: stg_175 [1/2] 2.61ns
branch23:0  store i64 0, i64* %arrayC_1_addr, align 16

ST_8: stg_176 [1/1] 0.00ns
branch23:1  br label %10

ST_8: tmp_20 [1/1] 2.52ns
:0  %tmp_20 = icmp ult i32 %j_1_cast, %nC_read

ST_8: tmp_23 [1/1] 1.37ns
:1  %tmp_23 = and i1 %tmp_s, %tmp_20

ST_8: stg_179 [1/1] 1.57ns
:2  br label %9


 <State 9>: 2.61ns
ST_9: stg_180 [2/2] 2.61ns
branch23:0  store i64 0, i64* %arrayC_1_addr, align 16


 <State 10>: 9.09ns
ST_10: k [1/1] 0.00ns
:0  %k = phi i10 [ 0, %10 ], [ %k_1, %._crit_edge13.0 ]

ST_10: exitcond2 [1/1] 2.07ns
:1  %exitcond2 = icmp eq i10 %k, -24

ST_10: k_1 [1/1] 1.84ns
:2  %k_1 = add i10 %k, 1

ST_10: stg_184 [1/1] 0.00ns
:3  br i1 %exitcond2, label %7, label %11

ST_10: k_cast9 [1/1] 0.00ns
:0  %k_cast9 = zext i10 %k to i32

ST_10: k_cast9_cast [1/1] 0.00ns
:1  %k_cast9_cast = zext i10 %k to i19

ST_10: empty_9 [1/1] 0.00ns
:2  %empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1000, i64 1000, i64 1000) nounwind

ST_10: stg_188 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str7) nounwind

ST_10: tmp_28 [1/1] 0.00ns
:4  %tmp_28 = call i32 (...)* @_ssdm_op_SpecRegionBegin([8 x i8]* @p_str7) nounwind

ST_10: stg_190 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_10: stg_191 [1/1] 0.00ns
:6  br i1 %tmp_23, label %12, label %._crit_edge13.0

ST_10: tmp_30 [1/1] 2.52ns
:0  %tmp_30 = icmp ult i32 %k_cast9, %mB_read

ST_10: stg_193 [1/1] 0.00ns
:1  br i1 %tmp_30, label %_ifconv, label %._crit_edge14.0

ST_10: p_addr9 [1/1] 2.08ns
_ifconv:0  %p_addr9 = add i19 %p_addr2, %k_cast9_cast

ST_10: tmp_31 [1/1] 0.00ns
_ifconv:1  %tmp_31 = zext i19 %p_addr9 to i64

ST_10: arrayA_0_addr_1 [1/1] 0.00ns
_ifconv:2  %arrayA_0_addr_1 = getelementptr [500000 x i32]* %arrayA_0, i64 0, i64 %tmp_31

ST_10: arrayA_1_addr_1 [1/1] 0.00ns
_ifconv:3  %arrayA_1_addr_1 = getelementptr [500000 x i32]* %arrayA_1, i64 0, i64 %tmp_31

ST_10: arrayA_1_load [2/2] 2.71ns
_ifconv:4  %arrayA_1_load = load i32* %arrayA_1_addr_1, align 4

ST_10: arrayA_0_load [2/2] 2.71ns
_ifconv:5  %arrayA_0_load = load i32* %arrayA_0_addr_1, align 4

ST_10: tmp_35 [1/1] 0.00ns
_ifconv:7  %tmp_35 = trunc i10 %k to i1

ST_10: tmp_41 [1/1] 0.00ns
_ifconv:8  %tmp_41 = call i9 @_ssdm_op_PartSelect.i9.i10.i32.i32(i10 %k, i32 1, i32 9)

ST_10: newIndex9_trn_cast [1/1] 0.00ns
_ifconv:9  %newIndex9_trn_cast = zext i9 %tmp_41 to i19

ST_10: p_addr10 [1/1] 3.36ns
_ifconv:10  %p_addr10 = mul i19 1000, %newIndex9_trn_cast

ST_10: p_addr11 [1/1] 3.02ns
_ifconv:11  %p_addr11 = add i19 %p_addr10, %j_1_cast_cast

ST_10: tmp_36 [1/1] 0.00ns
_ifconv:12  %tmp_36 = zext i19 %p_addr11 to i64

ST_10: arrayB_0_addr_1 [1/1] 0.00ns
_ifconv:13  %arrayB_0_addr_1 = getelementptr [500000 x i32]* %arrayB_0, i64 0, i64 %tmp_36

ST_10: arrayB_1_addr_1 [1/1] 0.00ns
_ifconv:14  %arrayB_1_addr_1 = getelementptr [500000 x i32]* %arrayB_1, i64 0, i64 %tmp_36

ST_10: arrayB_1_load [2/2] 2.71ns
_ifconv:15  %arrayB_1_load = load i32* %arrayB_1_addr_1, align 8

ST_10: arrayB_0_load [2/2] 2.71ns
_ifconv:16  %arrayB_0_load = load i32* %arrayB_0_addr_1, align 8

ST_10: stg_210 [1/1] 0.00ns
:0  br label %._crit_edge14.0

ST_10: stg_211 [1/1] 0.00ns
._crit_edge14.0:0  br label %._crit_edge13.0

ST_10: empty_8 [1/1] 0.00ns
._crit_edge13.0:0  %empty_8 = call i32 (...)* @_ssdm_op_SpecRegionEnd([8 x i8]* @p_str7, i32 %tmp_28) nounwind

ST_10: stg_213 [1/1] 0.00ns
._crit_edge13.0:1  br label %9


 <State 11>: 4.08ns
ST_11: arrayA_1_load [1/2] 2.71ns
_ifconv:4  %arrayA_1_load = load i32* %arrayA_1_addr_1, align 4

ST_11: arrayA_0_load [1/2] 2.71ns
_ifconv:5  %arrayA_0_load = load i32* %arrayA_0_addr_1, align 4

ST_11: arrayA_load_0_phi [1/1] 1.37ns
_ifconv:6  %arrayA_load_0_phi = select i1 %tmp_9, i32 %arrayA_1_load, i32 %arrayA_0_load

ST_11: arrayB_1_load [1/2] 2.71ns
_ifconv:15  %arrayB_1_load = load i32* %arrayB_1_addr_1, align 8

ST_11: arrayB_0_load [1/2] 2.71ns
_ifconv:16  %arrayB_0_load = load i32* %arrayB_0_addr_1, align 8

ST_11: arrayB_load_0_phi [1/1] 1.37ns
_ifconv:17  %arrayB_load_0_phi = select i1 %tmp_35, i32 %arrayB_1_load, i32 %arrayB_0_load


 <State 12>: 6.08ns
ST_12: tmp_37 [6/6] 6.08ns
_ifconv:18  %tmp_37 = mul nsw i32 %arrayA_load_0_phi, %arrayB_load_0_phi


 <State 13>: 6.08ns
ST_13: tmp_37 [5/6] 6.08ns
_ifconv:18  %tmp_37 = mul nsw i32 %arrayA_load_0_phi, %arrayB_load_0_phi


 <State 14>: 6.08ns
ST_14: tmp_37 [4/6] 6.08ns
_ifconv:18  %tmp_37 = mul nsw i32 %arrayA_load_0_phi, %arrayB_load_0_phi


 <State 15>: 6.08ns
ST_15: tmp_37 [3/6] 6.08ns
_ifconv:18  %tmp_37 = mul nsw i32 %arrayA_load_0_phi, %arrayB_load_0_phi

ST_15: arrayC_1_load_1 [4/4] 2.61ns
_ifconv:20  %arrayC_1_load_1 = load i64* %arrayC_1_addr, align 16

ST_15: arrayC_0_load_1 [4/4] 2.61ns
_ifconv:21  %arrayC_0_load_1 = load i64* %arrayC_0_addr, align 16


 <State 16>: 6.08ns
ST_16: tmp_37 [2/6] 6.08ns
_ifconv:18  %tmp_37 = mul nsw i32 %arrayA_load_0_phi, %arrayB_load_0_phi

ST_16: arrayC_1_load_1 [3/4] 2.61ns
_ifconv:20  %arrayC_1_load_1 = load i64* %arrayC_1_addr, align 16

ST_16: arrayC_0_load_1 [3/4] 2.61ns
_ifconv:21  %arrayC_0_load_1 = load i64* %arrayC_0_addr, align 16


 <State 17>: 6.08ns
ST_17: tmp_37 [1/6] 6.08ns
_ifconv:18  %tmp_37 = mul nsw i32 %arrayA_load_0_phi, %arrayB_load_0_phi

ST_17: arrayC_1_load_1 [2/4] 2.61ns
_ifconv:20  %arrayC_1_load_1 = load i64* %arrayC_1_addr, align 16

ST_17: arrayC_0_load_1 [2/4] 2.61ns
_ifconv:21  %arrayC_0_load_1 = load i64* %arrayC_0_addr, align 16


 <State 18>: 9.99ns
ST_18: tmp_33 [1/1] 0.00ns
_ifconv:19  %tmp_33 = sext i32 %tmp_37 to i64

ST_18: arrayC_1_load_1 [1/4] 2.61ns
_ifconv:20  %arrayC_1_load_1 = load i64* %arrayC_1_addr, align 16

ST_18: arrayC_0_load_1 [1/4] 2.61ns
_ifconv:21  %arrayC_0_load_1 = load i64* %arrayC_0_addr, align 16

ST_18: arrayC_load_1_0_phi [1/1] 1.37ns
_ifconv:22  %arrayC_load_1_0_phi = select i1 %tmp_9, i64 %arrayC_1_load_1, i64 %arrayC_0_load_1

ST_18: tmp_34 [1/1] 3.40ns
_ifconv:23  %tmp_34 = add nsw i64 %tmp_33, %arrayC_load_1_0_phi

ST_18: stg_237 [1/1] 0.00ns
_ifconv:24  br i1 %tmp_9, label %branch19, label %branch18

ST_18: stg_238 [2/2] 2.61ns
branch18:0  store i64 %tmp_34, i64* %arrayC_0_addr, align 16

ST_18: stg_239 [2/2] 2.61ns
branch19:0  store i64 %tmp_34, i64* %arrayC_1_addr, align 16


 <State 19>: 2.61ns
ST_19: stg_240 [1/2] 2.61ns
branch18:0  store i64 %tmp_34, i64* %arrayC_0_addr, align 16

ST_19: stg_241 [1/1] 0.00ns
branch18:1  br label %13

ST_19: stg_242 [1/2] 2.61ns
branch19:0  store i64 %tmp_34, i64* %arrayC_1_addr, align 16

ST_19: stg_243 [1/1] 0.00ns
branch19:1  br label %13


 <State 20>: 4.69ns
ST_20: empty_7 [1/1] 0.00ns
:0  %empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str6, i32 %tmp_10) nounwind

ST_20: j_4_s [1/1] 0.00ns
:1  %j_4_s = or i10 %j_1_mid2, 1

ST_20: j_4_cast [1/1] 0.00ns
:2  %j_4_cast = zext i10 %j_4_s to i32

ST_20: j_4_cast_cast [1/1] 0.00ns
:3  %j_4_cast_cast = zext i10 %j_4_s to i19

ST_20: tmp_25 [1/1] 0.00ns
:4  %tmp_25 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str6) nounwind

ST_20: p_addr8 [1/1] 2.08ns
:5  %p_addr8 = add i19 %j_4_cast_cast, %p_addr2

ST_20: tmp_26 [1/1] 0.00ns
:6  %tmp_26 = zext i19 %p_addr8 to i64

ST_20: arrayC_0_addr_2 [1/1] 0.00ns
:7  %arrayC_0_addr_2 = getelementptr [500000 x i64]* %arrayC_0, i64 0, i64 %tmp_26

ST_20: arrayC_1_addr_2 [1/1] 0.00ns
:8  %arrayC_1_addr_2 = getelementptr [500000 x i64]* %arrayC_1, i64 0, i64 %tmp_26

ST_20: stg_253 [1/1] 0.00ns
:9  br i1 %tmp_9, label %branch17, label %branch16

ST_20: stg_254 [2/2] 2.61ns
branch16:0  store i64 0, i64* %arrayC_0_addr_2, align 8

ST_20: stg_255 [2/2] 2.61ns
branch17:0  store i64 0, i64* %arrayC_1_addr_2, align 8


 <State 21>: 3.89ns
ST_21: stg_256 [1/2] 2.61ns
branch16:0  store i64 0, i64* %arrayC_0_addr_2, align 8

ST_21: stg_257 [1/1] 0.00ns
branch16:1  br label %8

ST_21: stg_258 [1/2] 2.61ns
branch17:0  store i64 0, i64* %arrayC_1_addr_2, align 8

ST_21: stg_259 [1/1] 0.00ns
branch17:1  br label %8

ST_21: tmp_19_1 [1/1] 2.52ns
:0  %tmp_19_1 = icmp ult i32 %j_4_cast, %nC_read

ST_21: tmp_20_1 [1/1] 1.37ns
:1  %tmp_20_1 = and i1 %tmp_s, %tmp_19_1

ST_21: stg_262 [1/1] 1.57ns
:2  br label %15


 <State 22>: 9.09ns
ST_22: k_s [1/1] 0.00ns
:0  %k_s = phi i10 [ 0, %8 ], [ %k_1_1, %._crit_edge13.1 ]

ST_22: exitcond2_1 [1/1] 2.07ns
:1  %exitcond2_1 = icmp eq i10 %k_s, -24

ST_22: k_1_1 [1/1] 1.84ns
:2  %k_1_1 = add i10 %k_s, 1

ST_22: stg_266 [1/1] 0.00ns
:3  br i1 %exitcond2_1, label %14, label %16

ST_22: k_cast8 [1/1] 0.00ns
:0  %k_cast8 = zext i10 %k_s to i32

ST_22: k_cast8_cast [1/1] 0.00ns
:1  %k_cast8_cast = zext i10 %k_s to i19

ST_22: empty_12 [1/1] 0.00ns
:2  %empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1000, i64 1000, i64 1000) nounwind

ST_22: stg_270 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str7) nounwind

ST_22: tmp_32 [1/1] 0.00ns
:4  %tmp_32 = call i32 (...)* @_ssdm_op_SpecRegionBegin([8 x i8]* @p_str7) nounwind

ST_22: stg_272 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_22: stg_273 [1/1] 0.00ns
:6  br i1 %tmp_20_1, label %17, label %._crit_edge13.1

ST_22: tmp_30_1 [1/1] 2.52ns
:0  %tmp_30_1 = icmp ult i32 %k_cast8, %mB_read

ST_22: stg_275 [1/1] 0.00ns
:1  br i1 %tmp_30_1, label %_ifconv1, label %._crit_edge14.1

ST_22: p_addr14 [1/1] 2.08ns
_ifconv1:0  %p_addr14 = add i19 %p_addr2, %k_cast8_cast

ST_22: tmp_39 [1/1] 0.00ns
_ifconv1:1  %tmp_39 = zext i19 %p_addr14 to i64

ST_22: arrayA_0_addr_2 [1/1] 0.00ns
_ifconv1:2  %arrayA_0_addr_2 = getelementptr [500000 x i32]* %arrayA_0, i64 0, i64 %tmp_39

ST_22: arrayA_1_addr_2 [1/1] 0.00ns
_ifconv1:3  %arrayA_1_addr_2 = getelementptr [500000 x i32]* %arrayA_1, i64 0, i64 %tmp_39

ST_22: arrayA_1_load_1 [2/2] 2.71ns
_ifconv1:4  %arrayA_1_load_1 = load i32* %arrayA_1_addr_2, align 4

ST_22: arrayA_0_load_1 [2/2] 2.71ns
_ifconv1:5  %arrayA_0_load_1 = load i32* %arrayA_0_addr_2, align 4

ST_22: tmp_43 [1/1] 0.00ns
_ifconv1:7  %tmp_43 = trunc i10 %k_s to i1

ST_22: tmp_44 [1/1] 0.00ns
_ifconv1:8  %tmp_44 = call i9 @_ssdm_op_PartSelect.i9.i10.i32.i32(i10 %k_s, i32 1, i32 9)

ST_22: newIndex13_trn_cast [1/1] 0.00ns
_ifconv1:9  %newIndex13_trn_cast = zext i9 %tmp_44 to i19

ST_22: p_addr15 [1/1] 3.36ns
_ifconv1:10  %p_addr15 = mul i19 1000, %newIndex13_trn_cast

ST_22: p_addr16 [1/1] 3.02ns
_ifconv1:11  %p_addr16 = add i19 %p_addr15, %j_4_cast_cast

ST_22: tmp_40 [1/1] 0.00ns
_ifconv1:12  %tmp_40 = zext i19 %p_addr16 to i64

ST_22: arrayB_0_addr_2 [1/1] 0.00ns
_ifconv1:13  %arrayB_0_addr_2 = getelementptr [500000 x i32]* %arrayB_0, i64 0, i64 %tmp_40

ST_22: arrayB_1_addr_2 [1/1] 0.00ns
_ifconv1:14  %arrayB_1_addr_2 = getelementptr [500000 x i32]* %arrayB_1, i64 0, i64 %tmp_40

ST_22: arrayB_1_load_1 [2/2] 2.71ns
_ifconv1:15  %arrayB_1_load_1 = load i32* %arrayB_1_addr_2, align 4

ST_22: arrayB_0_load_1 [2/2] 2.71ns
_ifconv1:16  %arrayB_0_load_1 = load i32* %arrayB_0_addr_2, align 4

ST_22: stg_292 [1/1] 0.00ns
:0  br label %._crit_edge14.1

ST_22: stg_293 [1/1] 0.00ns
._crit_edge14.1:0  br label %._crit_edge13.1

ST_22: empty_11 [1/1] 0.00ns
._crit_edge13.1:0  %empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([8 x i8]* @p_str7, i32 %tmp_32) nounwind

ST_22: stg_295 [1/1] 0.00ns
._crit_edge13.1:1  br label %15


 <State 23>: 4.08ns
ST_23: arrayA_1_load_1 [1/2] 2.71ns
_ifconv1:4  %arrayA_1_load_1 = load i32* %arrayA_1_addr_2, align 4

ST_23: arrayA_0_load_1 [1/2] 2.71ns
_ifconv1:5  %arrayA_0_load_1 = load i32* %arrayA_0_addr_2, align 4

ST_23: arrayA_load_1_phi [1/1] 1.37ns
_ifconv1:6  %arrayA_load_1_phi = select i1 %tmp_9, i32 %arrayA_1_load_1, i32 %arrayA_0_load_1

ST_23: arrayB_1_load_1 [1/2] 2.71ns
_ifconv1:15  %arrayB_1_load_1 = load i32* %arrayB_1_addr_2, align 4

ST_23: arrayB_0_load_1 [1/2] 2.71ns
_ifconv1:16  %arrayB_0_load_1 = load i32* %arrayB_0_addr_2, align 4

ST_23: arrayB_load_1_phi [1/1] 1.37ns
_ifconv1:17  %arrayB_load_1_phi = select i1 %tmp_43, i32 %arrayB_1_load_1, i32 %arrayB_0_load_1


 <State 24>: 6.08ns
ST_24: tmp_32_1 [6/6] 6.08ns
_ifconv1:18  %tmp_32_1 = mul nsw i32 %arrayA_load_1_phi, %arrayB_load_1_phi


 <State 25>: 6.08ns
ST_25: tmp_32_1 [5/6] 6.08ns
_ifconv1:18  %tmp_32_1 = mul nsw i32 %arrayA_load_1_phi, %arrayB_load_1_phi


 <State 26>: 6.08ns
ST_26: tmp_32_1 [4/6] 6.08ns
_ifconv1:18  %tmp_32_1 = mul nsw i32 %arrayA_load_1_phi, %arrayB_load_1_phi


 <State 27>: 6.08ns
ST_27: tmp_32_1 [3/6] 6.08ns
_ifconv1:18  %tmp_32_1 = mul nsw i32 %arrayA_load_1_phi, %arrayB_load_1_phi

ST_27: arrayC_1_load_2 [4/4] 2.61ns
_ifconv1:20  %arrayC_1_load_2 = load i64* %arrayC_1_addr_2, align 8

ST_27: arrayC_0_load_2 [4/4] 2.61ns
_ifconv1:21  %arrayC_0_load_2 = load i64* %arrayC_0_addr_2, align 8


 <State 28>: 6.08ns
ST_28: tmp_32_1 [2/6] 6.08ns
_ifconv1:18  %tmp_32_1 = mul nsw i32 %arrayA_load_1_phi, %arrayB_load_1_phi

ST_28: arrayC_1_load_2 [3/4] 2.61ns
_ifconv1:20  %arrayC_1_load_2 = load i64* %arrayC_1_addr_2, align 8

ST_28: arrayC_0_load_2 [3/4] 2.61ns
_ifconv1:21  %arrayC_0_load_2 = load i64* %arrayC_0_addr_2, align 8


 <State 29>: 6.08ns
ST_29: tmp_32_1 [1/6] 6.08ns
_ifconv1:18  %tmp_32_1 = mul nsw i32 %arrayA_load_1_phi, %arrayB_load_1_phi

ST_29: arrayC_1_load_2 [2/4] 2.61ns
_ifconv1:20  %arrayC_1_load_2 = load i64* %arrayC_1_addr_2, align 8

ST_29: arrayC_0_load_2 [2/4] 2.61ns
_ifconv1:21  %arrayC_0_load_2 = load i64* %arrayC_0_addr_2, align 8


 <State 30>: 9.99ns
ST_30: tmp_33_1 [1/1] 0.00ns
_ifconv1:19  %tmp_33_1 = sext i32 %tmp_32_1 to i64

ST_30: arrayC_1_load_2 [1/4] 2.61ns
_ifconv1:20  %arrayC_1_load_2 = load i64* %arrayC_1_addr_2, align 8

ST_30: arrayC_0_load_2 [1/4] 2.61ns
_ifconv1:21  %arrayC_0_load_2 = load i64* %arrayC_0_addr_2, align 8

ST_30: arrayC_load_1_1_phi [1/1] 1.37ns
_ifconv1:22  %arrayC_load_1_1_phi = select i1 %tmp_9, i64 %arrayC_1_load_2, i64 %arrayC_0_load_2

ST_30: tmp_34_1 [1/1] 3.40ns
_ifconv1:23  %tmp_34_1 = add nsw i64 %tmp_33_1, %arrayC_load_1_1_phi

ST_30: stg_319 [1/1] 0.00ns
_ifconv1:24  br i1 %tmp_9, label %branch13, label %branch12

ST_30: stg_320 [2/2] 2.61ns
branch12:0  store i64 %tmp_34_1, i64* %arrayC_0_addr_2, align 8

ST_30: stg_321 [2/2] 2.61ns
branch13:0  store i64 %tmp_34_1, i64* %arrayC_1_addr_2, align 8


 <State 31>: 2.61ns
ST_31: stg_322 [1/2] 2.61ns
branch12:0  store i64 %tmp_34_1, i64* %arrayC_0_addr_2, align 8

ST_31: stg_323 [1/1] 0.00ns
branch12:1  br label %18

ST_31: stg_324 [1/2] 2.61ns
branch13:0  store i64 %tmp_34_1, i64* %arrayC_1_addr_2, align 8

ST_31: stg_325 [1/1] 0.00ns
branch13:1  br label %18


 <State 32>: 1.84ns
ST_32: empty_10 [1/1] 0.00ns
:0  %empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str6, i32 %tmp_25) nounwind

ST_32: j_4_1 [1/1] 1.84ns
:1  %j_4_1 = add i10 %j_1_mid2, 2

ST_32: stg_328 [1/1] 0.00ns
:2  br label %.preheader9.preheader


 <State 33>: 10.07ns
ST_33: indvar_flatten1 [1/1] 0.00ns
.preheader.preheader:0  %indvar_flatten1 = phi i20 [ %indvar_flatten_next1, %._crit_edge15 ], [ 0, %.preheader9.preheader ]

ST_33: i_2 [1/1] 0.00ns
.preheader.preheader:1  %i_2 = phi i10 [ %i_2_mid2, %._crit_edge15 ], [ 0, %.preheader9.preheader ]

ST_33: j_2 [1/1] 0.00ns
.preheader.preheader:2  %j_2 = phi i10 [ %j_4, %._crit_edge15 ], [ 0, %.preheader9.preheader ]

ST_33: exitcond_flatten1 [1/1] 2.34ns
.preheader.preheader:3  %exitcond_flatten1 = icmp eq i20 %indvar_flatten1, -48576

ST_33: indvar_flatten_next1 [1/1] 2.08ns
.preheader.preheader:4  %indvar_flatten_next1 = add i20 %indvar_flatten1, 1

ST_33: stg_334 [1/1] 0.00ns
.preheader.preheader:5  br i1 %exitcond_flatten1, label %.loopexit, label %.preheader

ST_33: exitcond3 [1/1] 2.07ns
.preheader:2  %exitcond3 = icmp eq i10 %j_2, -24

ST_33: j_2_mid2 [1/1] 1.37ns
.preheader:3  %j_2_mid2 = select i1 %exitcond3, i10 0, i10 %j_2

ST_33: i_4 [1/1] 1.84ns
.preheader:4  %i_4 = add i10 1, %i_2

ST_33: i_2_mid2 [1/1] 1.37ns
.preheader:5  %i_2_mid2 = select i1 %exitcond3, i10 %i_4, i10 %i_2

ST_33: i_2_cast6 [1/1] 0.00ns
.preheader:6  %i_2_cast6 = zext i10 %i_2_mid2 to i32

ST_33: tmp_15 [1/1] 2.52ns
.preheader:7  %tmp_15 = icmp ult i32 %i_2_cast6, %mC_read

ST_33: tmp_21 [1/1] 0.00ns
.preheader:8  %tmp_21 = trunc i10 %i_2_mid2 to i1

ST_33: j_2_cast4 [1/1] 0.00ns
.preheader:9  %j_2_cast4 = zext i10 %j_2_mid2 to i32

ST_33: tmp_17 [1/1] 0.00ns
.preheader:12  %tmp_17 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str9) nounwind

ST_33: tmp_18 [1/1] 2.52ns
.preheader:14  %tmp_18 = icmp ult i32 %j_2_cast4, %nC_read

ST_33: tmp_19 [1/1] 1.37ns
.preheader:15  %tmp_19 = and i1 %tmp_15, %tmp_18

ST_33: stg_346 [1/1] 0.00ns
.preheader:16  br i1 %tmp_19, label %_ifconv2, label %._crit_edge15

ST_33: tmp_22 [1/1] 0.00ns
_ifconv2:0  %tmp_22 = call i9 @_ssdm_op_PartSelect.i9.i10.i32.i32(i10 %i_2_mid2, i32 1, i32 9)

ST_33: empty_14 [1/1] 0.00ns
._crit_edge15:0  %empty_14 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str9, i32 %tmp_17) nounwind

ST_33: j_4 [1/1] 1.84ns
._crit_edge15:1  %j_4 = add i10 %j_2_mid2, 1

ST_33: stg_350 [1/1] 0.00ns
._crit_edge15:2  br label %.preheader.preheader


 <State 34>: 8.99ns
ST_34: stg_351 [1/1] 0.00ns
.preheader:0  call void (...)* @_ssdm_op_SpecLoopName([22 x i8]* @str3)

ST_34: empty_15 [1/1] 0.00ns
.preheader:1  %empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1000000, i64 1000000, i64 1000000) nounwind

ST_34: j_2_cast4_cast [1/1] 0.00ns
.preheader:10  %j_2_cast4_cast = zext i10 %j_2_mid2 to i19

ST_34: stg_354 [1/1] 0.00ns
.preheader:11  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str9) nounwind

ST_34: stg_355 [1/1] 0.00ns
.preheader:13  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_34: newIndex5_trn_cast [1/1] 0.00ns
_ifconv2:1  %newIndex5_trn_cast = zext i9 %tmp_22 to i19

ST_34: p_addr4 [1/1] 3.36ns
_ifconv2:2  %p_addr4 = mul i19 %newIndex5_trn_cast, 1000

ST_34: p_addr5 [1/1] 3.02ns
_ifconv2:3  %p_addr5 = add i19 %j_2_cast4_cast, %p_addr4

ST_34: tmp_24 [1/1] 0.00ns
_ifconv2:4  %tmp_24 = zext i19 %p_addr5 to i64

ST_34: arrayC_0_addr_1 [1/1] 0.00ns
_ifconv2:5  %arrayC_0_addr_1 = getelementptr [500000 x i64]* %arrayC_0, i64 0, i64 %tmp_24

ST_34: arrayC_1_addr_1 [1/1] 0.00ns
_ifconv2:6  %arrayC_1_addr_1 = getelementptr [500000 x i64]* %arrayC_1, i64 0, i64 %tmp_24

ST_34: arrayC_1_load [4/4] 2.61ns
_ifconv2:7  %arrayC_1_load = load i64* %arrayC_1_addr_1, align 8

ST_34: arrayC_0_load [4/4] 2.61ns
_ifconv2:8  %arrayC_0_load = load i64* %arrayC_0_addr_1, align 8


 <State 35>: 2.61ns
ST_35: arrayC_1_load [3/4] 2.61ns
_ifconv2:7  %arrayC_1_load = load i64* %arrayC_1_addr_1, align 8

ST_35: arrayC_0_load [3/4] 2.61ns
_ifconv2:8  %arrayC_0_load = load i64* %arrayC_0_addr_1, align 8


 <State 36>: 2.61ns
ST_36: arrayC_1_load [2/4] 2.61ns
_ifconv2:7  %arrayC_1_load = load i64* %arrayC_1_addr_1, align 8

ST_36: arrayC_0_load [2/4] 2.61ns
_ifconv2:8  %arrayC_0_load = load i64* %arrayC_0_addr_1, align 8


 <State 37>: 8.36ns
ST_37: arrayC_1_load [1/4] 2.61ns
_ifconv2:7  %arrayC_1_load = load i64* %arrayC_1_addr_1, align 8

ST_37: arrayC_0_load [1/4] 2.61ns
_ifconv2:8  %arrayC_0_load = load i64* %arrayC_0_addr_1, align 8

ST_37: arrayC_load_phi [1/1] 1.37ns
_ifconv2:9  %arrayC_load_phi = select i1 %tmp_21, i64 %arrayC_1_load, i64 %arrayC_0_load

ST_37: stg_371 [1/1] 4.38ns
_ifconv2:10  call void @_ssdm_op_Write.ap_fifo.i64P(i64* %C, i64 %arrayC_load_phi) nounwind

ST_37: stg_372 [1/1] 0.00ns
_ifconv2:11  br label %._crit_edge15


 <State 38>: 0.00ns
ST_38: stg_373 [1/1] 0.00ns
.loopexit:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
