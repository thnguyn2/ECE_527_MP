// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _MAT_Multiply_HH_
#define _MAT_Multiply_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct MAT_Multiply : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > A_dout;
    sc_in< sc_logic > A_empty_n;
    sc_out< sc_logic > A_read;
    sc_in< sc_lv<32> > B_dout;
    sc_in< sc_logic > B_empty_n;
    sc_out< sc_logic > B_read;
    sc_in< sc_lv<64> > C_dout;
    sc_in< sc_logic > C_empty_n;
    sc_out< sc_logic > C_read;
    sc_in< sc_lv<8> > mA;
    sc_in< sc_lv<8> > nA;
    sc_in< sc_lv<8> > mB;
    sc_in< sc_lv<8> > nB;
    sc_in< sc_lv<8> > mC;
    sc_in< sc_lv<8> > nC;


    // Module declarations
    MAT_Multiply(sc_module_name name);
    SC_HAS_PROCESS(MAT_Multiply);

    ~MAT_Multiply();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_17;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_st1_fsm_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_read();
    void thread_B_read();
    void thread_C_read();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_17();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
