// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "MAT_Multiply.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic MAT_Multiply::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic MAT_Multiply::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> MAT_Multiply::ap_ST_st1_fsm_0 = "1";
const sc_lv<17> MAT_Multiply::ap_ST_st2_fsm_1 = "10";
const sc_lv<17> MAT_Multiply::ap_ST_st3_fsm_2 = "100";
const sc_lv<17> MAT_Multiply::ap_ST_st4_fsm_3 = "1000";
const sc_lv<17> MAT_Multiply::ap_ST_st5_fsm_4 = "10000";
const sc_lv<17> MAT_Multiply::ap_ST_st6_fsm_5 = "100000";
const sc_lv<17> MAT_Multiply::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<17> MAT_Multiply::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<17> MAT_Multiply::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<17> MAT_Multiply::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<17> MAT_Multiply::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<17> MAT_Multiply::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<17> MAT_Multiply::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<17> MAT_Multiply::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<17> MAT_Multiply::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<17> MAT_Multiply::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<17> MAT_Multiply::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<32> MAT_Multiply::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> MAT_Multiply::ap_const_lv1_1 = "1";
const sc_lv<32> MAT_Multiply::ap_const_lv32_1 = "1";
const sc_lv<1> MAT_Multiply::ap_const_lv1_0 = "0";
const sc_lv<32> MAT_Multiply::ap_const_lv32_2 = "10";
const sc_lv<32> MAT_Multiply::ap_const_lv32_3 = "11";
const sc_lv<32> MAT_Multiply::ap_const_lv32_4 = "100";
const sc_lv<32> MAT_Multiply::ap_const_lv32_5 = "101";
const sc_lv<32> MAT_Multiply::ap_const_lv32_6 = "110";
const sc_lv<32> MAT_Multiply::ap_const_lv32_C = "1100";
const sc_lv<32> MAT_Multiply::ap_const_lv32_E = "1110";
const sc_lv<32> MAT_Multiply::ap_const_lv32_F = "1111";
const sc_lv<7> MAT_Multiply::ap_const_lv7_0 = "0000000";
const sc_lv<14> MAT_Multiply::ap_const_lv14_0 = "00000000000000";
const sc_lv<32> MAT_Multiply::ap_const_lv32_D = "1101";
const sc_lv<32> MAT_Multiply::ap_const_lv32_10 = "10000";
const sc_lv<64> MAT_Multiply::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> MAT_Multiply::ap_const_lv32_B = "1011";
const sc_lv<14> MAT_Multiply::ap_const_lv14_64 = "1100100";
const sc_lv<7> MAT_Multiply::ap_const_lv7_64 = "1100100";
const sc_lv<7> MAT_Multiply::ap_const_lv7_1 = "1";
const sc_lv<32> MAT_Multiply::ap_const_lv32_7 = "111";

MAT_Multiply::MAT_Multiply(sc_module_name name) : sc_module(name), mVcdFile(0) {
    arrayA_U = new MAT_Multiply_arrayA("arrayA_U");
    arrayA_U->clk(ap_clk);
    arrayA_U->reset(ap_rst);
    arrayA_U->address0(arrayA_address0);
    arrayA_U->ce0(arrayA_ce0);
    arrayA_U->we0(arrayA_we0);
    arrayA_U->d0(arrayA_d0);
    arrayA_U->q0(arrayA_q0);
    arrayB_U = new MAT_Multiply_arrayA("arrayB_U");
    arrayB_U->clk(ap_clk);
    arrayB_U->reset(ap_rst);
    arrayB_U->address0(arrayB_address0);
    arrayB_U->ce0(arrayB_ce0);
    arrayB_U->we0(arrayB_we0);
    arrayB_U->d0(arrayB_d0);
    arrayB_U->q0(arrayB_q0);
    arrayC_U = new MAT_Multiply_arrayC("arrayC_U");
    arrayC_U->clk(ap_clk);
    arrayC_U->reset(ap_rst);
    arrayC_U->address0(arrayC_address0);
    arrayC_U->ce0(arrayC_ce0);
    arrayC_U->we0(arrayC_we0);
    arrayC_U->d0(arrayC_d0);
    arrayC_U->q0(arrayC_q0);
    MAT_Multiply_mul_32s_32s_32_6_U1 = new MAT_Multiply_mul_32s_32s_32_6<1,6,32,32,32>("MAT_Multiply_mul_32s_32s_32_6_U1");
    MAT_Multiply_mul_32s_32s_32_6_U1->clk(ap_clk);
    MAT_Multiply_mul_32s_32s_32_6_U1->reset(ap_rst);
    MAT_Multiply_mul_32s_32s_32_6_U1->din0(grp_fu_629_p0);
    MAT_Multiply_mul_32s_32s_32_6_U1->din1(grp_fu_629_p1);
    MAT_Multiply_mul_32s_32s_32_6_U1->ce(grp_fu_629_ce);
    MAT_Multiply_mul_32s_32s_32_6_U1->dout(grp_fu_629_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_read);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond5_fu_439_p2 );
    sensitive << ( or_cond_fu_456_p2 );
    sensitive << ( ap_sig_bdd_116 );

    SC_METHOD(thread_B_read);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond5_fu_439_p2 );
    sensitive << ( or_cond7_fu_477_p2 );
    sensitive << ( ap_sig_bdd_116 );

    SC_METHOD(thread_C_din);
    sensitive << ( arrayC_q0 );
    sensitive << ( tmp_17_reg_899 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_bdd_336 );

    SC_METHOD(thread_C_write);
    sensitive << ( tmp_17_reg_899 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( ap_sig_bdd_336 );

    SC_METHOD(thread_ap_done);
    sensitive << ( tmp_4_reg_731 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( exitcond1_fu_652_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( tmp_4_reg_731 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( exitcond1_fu_652_p2 );

    SC_METHOD(thread_ap_sig_bdd_116);
    sensitive << ( A_empty_n );
    sensitive << ( B_empty_n );
    sensitive << ( exitcond5_fu_439_p2 );
    sensitive << ( or_cond_fu_456_p2 );
    sensitive << ( or_cond7_fu_477_p2 );

    SC_METHOD(thread_ap_sig_bdd_126);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_142);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_164);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_192);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_203);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_214);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_234);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_311);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_330);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_336);
    sensitive << ( C_full_n );
    sensitive << ( tmp_17_reg_899 );

    SC_METHOD(thread_ap_sig_bdd_379);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_509);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_76);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_99);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_bdd_379 );

    SC_METHOD(thread_ap_sig_cseq_ST_st13_fsm_12);
    sensitive << ( ap_sig_bdd_203 );

    SC_METHOD(thread_ap_sig_cseq_ST_st14_fsm_13);
    sensitive << ( ap_sig_bdd_311 );

    SC_METHOD(thread_ap_sig_cseq_ST_st15_fsm_14);
    sensitive << ( ap_sig_bdd_214 );

    SC_METHOD(thread_ap_sig_cseq_ST_st16_fsm_15);
    sensitive << ( ap_sig_bdd_234 );

    SC_METHOD(thread_ap_sig_cseq_ST_st17_fsm_16);
    sensitive << ( ap_sig_bdd_330 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_33 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_76 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_99 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_126 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_bdd_142 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_bdd_164 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_bdd_192 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_bdd_509 );

    SC_METHOD(thread_arrayA_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp_12_fu_467_p1 );
    sensitive << ( tmp_23_fu_614_p1 );

    SC_METHOD(thread_arrayA_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_bdd_116 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_arrayA_d0);
    sensitive << ( A_dout );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_arrayA_we0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond5_fu_439_p2 );
    sensitive << ( or_cond_fu_456_p2 );
    sensitive << ( ap_sig_bdd_116 );

    SC_METHOD(thread_arrayB_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp_19_fu_488_p1 );
    sensitive << ( tmp_24_fu_624_p1 );

    SC_METHOD(thread_arrayB_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_bdd_116 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_arrayB_d0);
    sensitive << ( B_dout );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_arrayB_we0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond5_fu_439_p2 );
    sensitive << ( or_cond7_fu_477_p2 );
    sensitive << ( ap_sig_bdd_116 );

    SC_METHOD(thread_arrayC_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( arrayC_addr_reg_821 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( tmp_21_fu_504_p1 );
    sensitive << ( tmp_18_fu_572_p1 );
    sensitive << ( tmp_20_fu_705_p1 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );

    SC_METHOD(thread_arrayC_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_bdd_116 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );

    SC_METHOD(thread_arrayC_d0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( tmp_27_fu_636_p2 );

    SC_METHOD(thread_arrayC_we0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond5_fu_439_p2 );
    sensitive << ( ap_sig_bdd_116 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( tmp_15_fu_561_p2 );
    sensitive << ( exitcond3_fu_544_p2 );
    sensitive << ( tmp_22_reg_834 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( or_cond8_fu_493_p2 );

    SC_METHOD(thread_exitcond1_fu_652_p2);
    sensitive << ( tmp_4_reg_731 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( i_2_reg_322 );

    SC_METHOD(thread_exitcond2_fu_585_p2);
    sensitive << ( tmp_15_reg_817 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( k_reg_300 );

    SC_METHOD(thread_exitcond3_fu_544_p2);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( j_1_reg_289 );

    SC_METHOD(thread_exitcond4_fu_519_p2);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( i_1_reg_266 );

    SC_METHOD(thread_exitcond5_fu_439_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_bdd_116 );
    sensitive << ( j_reg_255 );

    SC_METHOD(thread_exitcond6_fu_409_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_reg_208 );

    SC_METHOD(thread_exitcond_fu_677_p2);
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( j_2_reg_345 );

    SC_METHOD(thread_grp_fu_629_ce);

    SC_METHOD(thread_grp_fu_629_p0);
    sensitive << ( arrayB_load_reg_858 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_grp_fu_629_p1);
    sensitive << ( arrayA_load_reg_853 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_i_1_cast8_fu_515_p1);
    sensitive << ( i_1_reg_266 );

    SC_METHOD(thread_i_2_cast4_fu_648_p1);
    sensitive << ( i_2_reg_322 );

    SC_METHOD(thread_i_3_fu_415_p2);
    sensitive << ( i_reg_208 );

    SC_METHOD(thread_i_4_fu_525_p2);
    sensitive << ( i_1_reg_266 );

    SC_METHOD(thread_i_5_fu_658_p2);
    sensitive << ( i_2_reg_322 );

    SC_METHOD(thread_i_cast1_fu_405_p1);
    sensitive << ( i_reg_208 );

    SC_METHOD(thread_j_1_cast7_cast_fu_540_p1);
    sensitive << ( j_1_reg_289 );

    SC_METHOD(thread_j_1_cast7_fu_536_p1);
    sensitive << ( j_1_reg_289 );

    SC_METHOD(thread_j_2_cast2_cast_fu_673_p1);
    sensitive << ( j_2_reg_345 );

    SC_METHOD(thread_j_2_cast2_fu_669_p1);
    sensitive << ( j_2_reg_345 );

    SC_METHOD(thread_j_3_fu_445_p2);
    sensitive << ( j_reg_255 );

    SC_METHOD(thread_j_4_fu_683_p2);
    sensitive << ( j_2_reg_345 );

    SC_METHOD(thread_j_5_fu_550_p2);
    sensitive << ( j_1_reg_289 );

    SC_METHOD(thread_j_cast9_cast_fu_435_p1);
    sensitive << ( j_reg_255 );

    SC_METHOD(thread_j_cast9_fu_431_p1);
    sensitive << ( j_reg_255 );

    SC_METHOD(thread_k_1_fu_591_p2);
    sensitive << ( k_reg_300 );

    SC_METHOD(thread_k_cast6_cast_fu_581_p1);
    sensitive << ( k_reg_300 );

    SC_METHOD(thread_k_cast6_fu_577_p1);
    sensitive << ( k_reg_300 );

    SC_METHOD(thread_next_mul1_fu_393_p2);
    sensitive << ( phi_mul1_reg_231 );

    SC_METHOD(thread_next_mul2_fu_399_p2);
    sensitive << ( phi_mul_reg_219 );

    SC_METHOD(thread_next_mul3_fu_509_p2);
    sensitive << ( phi_mul3_reg_277 );

    SC_METHOD(thread_next_mul4_fu_642_p2);
    sensitive << ( phi_mul4_reg_333 );

    SC_METHOD(thread_next_mul5_fu_602_p2);
    sensitive << ( phi_mul5_reg_311 );

    SC_METHOD(thread_next_mul_fu_387_p2);
    sensitive << ( phi_mul2_reg_243 );

    SC_METHOD(thread_or_cond7_fu_477_p2);
    sensitive << ( tmp_8_reg_764 );
    sensitive << ( tmp_13_fu_472_p2 );

    SC_METHOD(thread_or_cond8_fu_493_p2);
    sensitive << ( tmp_5_reg_758 );
    sensitive << ( tmp_13_fu_472_p2 );

    SC_METHOD(thread_or_cond_fu_456_p2);
    sensitive << ( tmp_5_reg_758 );
    sensitive << ( tmp_7_fu_451_p2 );

    SC_METHOD(thread_p_addr1_fu_608_p2);
    sensitive << ( phi_mul3_reg_277 );
    sensitive << ( k_cast6_cast_fu_581_p1 );

    SC_METHOD(thread_p_addr2_fu_699_p2);
    sensitive << ( phi_mul4_reg_333 );
    sensitive << ( j_2_cast2_cast_fu_673_p1 );

    SC_METHOD(thread_p_addr3_fu_461_p2);
    sensitive << ( phi_mul_reg_219 );
    sensitive << ( j_cast9_cast_fu_435_p1 );

    SC_METHOD(thread_p_addr4_fu_498_p2);
    sensitive << ( phi_mul2_reg_243 );
    sensitive << ( j_cast9_cast_fu_435_p1 );

    SC_METHOD(thread_p_addr6_fu_619_p2);
    sensitive << ( j_1_cast7_cast_reg_804 );
    sensitive << ( phi_mul5_reg_311 );

    SC_METHOD(thread_p_addr9_fu_482_p2);
    sensitive << ( phi_mul1_reg_231 );
    sensitive << ( j_cast9_cast_fu_435_p1 );

    SC_METHOD(thread_p_addr_fu_566_p2);
    sensitive << ( j_1_cast7_cast_fu_540_p1 );
    sensitive << ( phi_mul3_reg_277 );

    SC_METHOD(thread_tmp1_fu_375_p2);
    sensitive << ( tmp_1_fu_363_p2 );
    sensitive << ( tmp_3_fu_369_p2 );

    SC_METHOD(thread_tmp_10_fu_664_p2);
    sensitive << ( mC );
    sensitive << ( tmp_4_reg_731 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( exitcond1_fu_652_p2 );
    sensitive << ( i_2_cast4_fu_648_p1 );

    SC_METHOD(thread_tmp_12_fu_467_p1);
    sensitive << ( p_addr3_fu_461_p2 );

    SC_METHOD(thread_tmp_13_fu_472_p2);
    sensitive << ( nC );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond5_fu_439_p2 );
    sensitive << ( ap_sig_bdd_116 );
    sensitive << ( j_cast9_fu_431_p1 );

    SC_METHOD(thread_tmp_14_fu_556_p2);
    sensitive << ( nC );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( exitcond3_fu_544_p2 );
    sensitive << ( j_1_cast7_fu_536_p1 );

    SC_METHOD(thread_tmp_15_fu_561_p2);
    sensitive << ( tmp_9_reg_799 );
    sensitive << ( tmp_14_fu_556_p2 );

    SC_METHOD(thread_tmp_16_fu_689_p2);
    sensitive << ( nC );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( exitcond_fu_677_p2 );
    sensitive << ( j_2_cast2_fu_669_p1 );

    SC_METHOD(thread_tmp_17_fu_694_p2);
    sensitive << ( tmp_10_reg_886 );
    sensitive << ( tmp_16_fu_689_p2 );

    SC_METHOD(thread_tmp_18_fu_572_p1);
    sensitive << ( p_addr_fu_566_p2 );

    SC_METHOD(thread_tmp_19_fu_488_p1);
    sensitive << ( p_addr9_fu_482_p2 );

    SC_METHOD(thread_tmp_1_fu_363_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( mA );
    sensitive << ( mC );

    SC_METHOD(thread_tmp_20_fu_705_p1);
    sensitive << ( p_addr2_fu_699_p2 );

    SC_METHOD(thread_tmp_21_fu_504_p1);
    sensitive << ( p_addr4_fu_498_p2 );

    SC_METHOD(thread_tmp_22_fu_597_p2);
    sensitive << ( mB );
    sensitive << ( tmp_15_reg_817 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( exitcond2_fu_585_p2 );
    sensitive << ( k_cast6_fu_577_p1 );

    SC_METHOD(thread_tmp_23_fu_614_p1);
    sensitive << ( p_addr1_fu_608_p2 );

    SC_METHOD(thread_tmp_24_fu_624_p1);
    sensitive << ( p_addr6_fu_619_p2 );

    SC_METHOD(thread_tmp_26_fu_633_p1);
    sensitive << ( tmp_25_reg_863 );

    SC_METHOD(thread_tmp_27_fu_636_p2);
    sensitive << ( arrayC_load_1_reg_868 );
    sensitive << ( tmp_26_fu_633_p1 );

    SC_METHOD(thread_tmp_3_fu_369_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( nB );
    sensitive << ( nC );

    SC_METHOD(thread_tmp_4_fu_381_p2);
    sensitive << ( tmp1_fu_375_p2 );
    sensitive << ( tmp_fu_357_p2 );

    SC_METHOD(thread_tmp_5_fu_421_p2);
    sensitive << ( mC );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond6_fu_409_p2 );
    sensitive << ( i_cast1_fu_405_p1 );

    SC_METHOD(thread_tmp_7_fu_451_p2);
    sensitive << ( mB );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond5_fu_439_p2 );
    sensitive << ( ap_sig_bdd_116 );
    sensitive << ( j_cast9_fu_431_p1 );

    SC_METHOD(thread_tmp_8_fu_426_p2);
    sensitive << ( mB );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond6_fu_409_p2 );
    sensitive << ( i_cast1_fu_405_p1 );

    SC_METHOD(thread_tmp_9_fu_531_p2);
    sensitive << ( mC );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( exitcond4_fu_519_p2 );
    sensitive << ( i_1_cast8_fu_515_p1 );

    SC_METHOD(thread_tmp_fu_357_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( nA );
    sensitive << ( mB );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_4_fu_381_p2 );
    sensitive << ( tmp_4_reg_731 );
    sensitive << ( exitcond6_fu_409_p2 );
    sensitive << ( exitcond5_fu_439_p2 );
    sensitive << ( ap_sig_bdd_116 );
    sensitive << ( exitcond4_fu_519_p2 );
    sensitive << ( tmp_15_reg_817 );
    sensitive << ( exitcond3_fu_544_p2 );
    sensitive << ( tmp_22_fu_597_p2 );
    sensitive << ( exitcond2_fu_585_p2 );
    sensitive << ( exitcond1_fu_652_p2 );
    sensitive << ( exitcond_fu_677_p2 );
    sensitive << ( ap_sig_bdd_336 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "MAT_Multiply_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_dout, "(port)A_dout");
    sc_trace(mVcdFile, A_empty_n, "(port)A_empty_n");
    sc_trace(mVcdFile, A_read, "(port)A_read");
    sc_trace(mVcdFile, B_dout, "(port)B_dout");
    sc_trace(mVcdFile, B_empty_n, "(port)B_empty_n");
    sc_trace(mVcdFile, B_read, "(port)B_read");
    sc_trace(mVcdFile, C_din, "(port)C_din");
    sc_trace(mVcdFile, C_full_n, "(port)C_full_n");
    sc_trace(mVcdFile, C_write, "(port)C_write");
    sc_trace(mVcdFile, mA, "(port)mA");
    sc_trace(mVcdFile, nA, "(port)nA");
    sc_trace(mVcdFile, mB, "(port)mB");
    sc_trace(mVcdFile, nB, "(port)nB");
    sc_trace(mVcdFile, mC, "(port)mC");
    sc_trace(mVcdFile, nC, "(port)nC");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_33, "ap_sig_bdd_33");
    sc_trace(mVcdFile, tmp_4_fu_381_p2, "tmp_4_fu_381_p2");
    sc_trace(mVcdFile, tmp_4_reg_731, "tmp_4_reg_731");
    sc_trace(mVcdFile, next_mul_fu_387_p2, "next_mul_fu_387_p2");
    sc_trace(mVcdFile, next_mul_reg_735, "next_mul_reg_735");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_76, "ap_sig_bdd_76");
    sc_trace(mVcdFile, next_mul1_fu_393_p2, "next_mul1_fu_393_p2");
    sc_trace(mVcdFile, next_mul1_reg_740, "next_mul1_reg_740");
    sc_trace(mVcdFile, next_mul2_fu_399_p2, "next_mul2_fu_399_p2");
    sc_trace(mVcdFile, next_mul2_reg_745, "next_mul2_reg_745");
    sc_trace(mVcdFile, i_3_fu_415_p2, "i_3_fu_415_p2");
    sc_trace(mVcdFile, i_3_reg_753, "i_3_reg_753");
    sc_trace(mVcdFile, tmp_5_fu_421_p2, "tmp_5_fu_421_p2");
    sc_trace(mVcdFile, tmp_5_reg_758, "tmp_5_reg_758");
    sc_trace(mVcdFile, exitcond6_fu_409_p2, "exitcond6_fu_409_p2");
    sc_trace(mVcdFile, tmp_8_fu_426_p2, "tmp_8_fu_426_p2");
    sc_trace(mVcdFile, tmp_8_reg_764, "tmp_8_reg_764");
    sc_trace(mVcdFile, j_3_fu_445_p2, "j_3_fu_445_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_99, "ap_sig_bdd_99");
    sc_trace(mVcdFile, exitcond5_fu_439_p2, "exitcond5_fu_439_p2");
    sc_trace(mVcdFile, or_cond_fu_456_p2, "or_cond_fu_456_p2");
    sc_trace(mVcdFile, or_cond7_fu_477_p2, "or_cond7_fu_477_p2");
    sc_trace(mVcdFile, ap_sig_bdd_116, "ap_sig_bdd_116");
    sc_trace(mVcdFile, next_mul3_fu_509_p2, "next_mul3_fu_509_p2");
    sc_trace(mVcdFile, next_mul3_reg_786, "next_mul3_reg_786");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_126, "ap_sig_bdd_126");
    sc_trace(mVcdFile, i_4_fu_525_p2, "i_4_fu_525_p2");
    sc_trace(mVcdFile, i_4_reg_794, "i_4_reg_794");
    sc_trace(mVcdFile, tmp_9_fu_531_p2, "tmp_9_fu_531_p2");
    sc_trace(mVcdFile, tmp_9_reg_799, "tmp_9_reg_799");
    sc_trace(mVcdFile, exitcond4_fu_519_p2, "exitcond4_fu_519_p2");
    sc_trace(mVcdFile, j_1_cast7_cast_fu_540_p1, "j_1_cast7_cast_fu_540_p1");
    sc_trace(mVcdFile, j_1_cast7_cast_reg_804, "j_1_cast7_cast_reg_804");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_142, "ap_sig_bdd_142");
    sc_trace(mVcdFile, j_5_fu_550_p2, "j_5_fu_550_p2");
    sc_trace(mVcdFile, j_5_reg_812, "j_5_reg_812");
    sc_trace(mVcdFile, tmp_15_fu_561_p2, "tmp_15_fu_561_p2");
    sc_trace(mVcdFile, tmp_15_reg_817, "tmp_15_reg_817");
    sc_trace(mVcdFile, exitcond3_fu_544_p2, "exitcond3_fu_544_p2");
    sc_trace(mVcdFile, arrayC_addr_reg_821, "arrayC_addr_reg_821");
    sc_trace(mVcdFile, k_1_fu_591_p2, "k_1_fu_591_p2");
    sc_trace(mVcdFile, k_1_reg_829, "k_1_reg_829");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_164, "ap_sig_bdd_164");
    sc_trace(mVcdFile, tmp_22_fu_597_p2, "tmp_22_fu_597_p2");
    sc_trace(mVcdFile, tmp_22_reg_834, "tmp_22_reg_834");
    sc_trace(mVcdFile, exitcond2_fu_585_p2, "exitcond2_fu_585_p2");
    sc_trace(mVcdFile, next_mul5_fu_602_p2, "next_mul5_fu_602_p2");
    sc_trace(mVcdFile, next_mul5_reg_838, "next_mul5_reg_838");
    sc_trace(mVcdFile, arrayA_q0, "arrayA_q0");
    sc_trace(mVcdFile, arrayA_load_reg_853, "arrayA_load_reg_853");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_192, "ap_sig_bdd_192");
    sc_trace(mVcdFile, arrayB_q0, "arrayB_q0");
    sc_trace(mVcdFile, arrayB_load_reg_858, "arrayB_load_reg_858");
    sc_trace(mVcdFile, grp_fu_629_p2, "grp_fu_629_p2");
    sc_trace(mVcdFile, tmp_25_reg_863, "tmp_25_reg_863");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st13_fsm_12, "ap_sig_cseq_ST_st13_fsm_12");
    sc_trace(mVcdFile, ap_sig_bdd_203, "ap_sig_bdd_203");
    sc_trace(mVcdFile, arrayC_q0, "arrayC_q0");
    sc_trace(mVcdFile, arrayC_load_1_reg_868, "arrayC_load_1_reg_868");
    sc_trace(mVcdFile, next_mul4_fu_642_p2, "next_mul4_fu_642_p2");
    sc_trace(mVcdFile, next_mul4_reg_873, "next_mul4_reg_873");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st15_fsm_14, "ap_sig_cseq_ST_st15_fsm_14");
    sc_trace(mVcdFile, ap_sig_bdd_214, "ap_sig_bdd_214");
    sc_trace(mVcdFile, i_5_fu_658_p2, "i_5_fu_658_p2");
    sc_trace(mVcdFile, i_5_reg_881, "i_5_reg_881");
    sc_trace(mVcdFile, tmp_10_fu_664_p2, "tmp_10_fu_664_p2");
    sc_trace(mVcdFile, tmp_10_reg_886, "tmp_10_reg_886");
    sc_trace(mVcdFile, exitcond1_fu_652_p2, "exitcond1_fu_652_p2");
    sc_trace(mVcdFile, j_4_fu_683_p2, "j_4_fu_683_p2");
    sc_trace(mVcdFile, j_4_reg_894, "j_4_reg_894");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st16_fsm_15, "ap_sig_cseq_ST_st16_fsm_15");
    sc_trace(mVcdFile, ap_sig_bdd_234, "ap_sig_bdd_234");
    sc_trace(mVcdFile, tmp_17_fu_694_p2, "tmp_17_fu_694_p2");
    sc_trace(mVcdFile, tmp_17_reg_899, "tmp_17_reg_899");
    sc_trace(mVcdFile, exitcond_fu_677_p2, "exitcond_fu_677_p2");
    sc_trace(mVcdFile, arrayA_address0, "arrayA_address0");
    sc_trace(mVcdFile, arrayA_ce0, "arrayA_ce0");
    sc_trace(mVcdFile, arrayA_we0, "arrayA_we0");
    sc_trace(mVcdFile, arrayA_d0, "arrayA_d0");
    sc_trace(mVcdFile, arrayB_address0, "arrayB_address0");
    sc_trace(mVcdFile, arrayB_ce0, "arrayB_ce0");
    sc_trace(mVcdFile, arrayB_we0, "arrayB_we0");
    sc_trace(mVcdFile, arrayB_d0, "arrayB_d0");
    sc_trace(mVcdFile, arrayC_address0, "arrayC_address0");
    sc_trace(mVcdFile, arrayC_ce0, "arrayC_ce0");
    sc_trace(mVcdFile, arrayC_we0, "arrayC_we0");
    sc_trace(mVcdFile, arrayC_d0, "arrayC_d0");
    sc_trace(mVcdFile, i_reg_208, "i_reg_208");
    sc_trace(mVcdFile, phi_mul_reg_219, "phi_mul_reg_219");
    sc_trace(mVcdFile, phi_mul1_reg_231, "phi_mul1_reg_231");
    sc_trace(mVcdFile, phi_mul2_reg_243, "phi_mul2_reg_243");
    sc_trace(mVcdFile, j_reg_255, "j_reg_255");
    sc_trace(mVcdFile, i_1_reg_266, "i_1_reg_266");
    sc_trace(mVcdFile, phi_mul3_reg_277, "phi_mul3_reg_277");
    sc_trace(mVcdFile, j_1_reg_289, "j_1_reg_289");
    sc_trace(mVcdFile, k_reg_300, "k_reg_300");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st14_fsm_13, "ap_sig_cseq_ST_st14_fsm_13");
    sc_trace(mVcdFile, ap_sig_bdd_311, "ap_sig_bdd_311");
    sc_trace(mVcdFile, phi_mul5_reg_311, "phi_mul5_reg_311");
    sc_trace(mVcdFile, i_2_reg_322, "i_2_reg_322");
    sc_trace(mVcdFile, phi_mul4_reg_333, "phi_mul4_reg_333");
    sc_trace(mVcdFile, j_2_reg_345, "j_2_reg_345");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st17_fsm_16, "ap_sig_cseq_ST_st17_fsm_16");
    sc_trace(mVcdFile, ap_sig_bdd_330, "ap_sig_bdd_330");
    sc_trace(mVcdFile, ap_sig_bdd_336, "ap_sig_bdd_336");
    sc_trace(mVcdFile, tmp_12_fu_467_p1, "tmp_12_fu_467_p1");
    sc_trace(mVcdFile, tmp_19_fu_488_p1, "tmp_19_fu_488_p1");
    sc_trace(mVcdFile, tmp_21_fu_504_p1, "tmp_21_fu_504_p1");
    sc_trace(mVcdFile, or_cond8_fu_493_p2, "or_cond8_fu_493_p2");
    sc_trace(mVcdFile, tmp_18_fu_572_p1, "tmp_18_fu_572_p1");
    sc_trace(mVcdFile, tmp_23_fu_614_p1, "tmp_23_fu_614_p1");
    sc_trace(mVcdFile, tmp_24_fu_624_p1, "tmp_24_fu_624_p1");
    sc_trace(mVcdFile, tmp_20_fu_705_p1, "tmp_20_fu_705_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_bdd_379, "ap_sig_bdd_379");
    sc_trace(mVcdFile, tmp_27_fu_636_p2, "tmp_27_fu_636_p2");
    sc_trace(mVcdFile, tmp_1_fu_363_p2, "tmp_1_fu_363_p2");
    sc_trace(mVcdFile, tmp_3_fu_369_p2, "tmp_3_fu_369_p2");
    sc_trace(mVcdFile, tmp1_fu_375_p2, "tmp1_fu_375_p2");
    sc_trace(mVcdFile, tmp_fu_357_p2, "tmp_fu_357_p2");
    sc_trace(mVcdFile, i_cast1_fu_405_p1, "i_cast1_fu_405_p1");
    sc_trace(mVcdFile, j_cast9_fu_431_p1, "j_cast9_fu_431_p1");
    sc_trace(mVcdFile, tmp_7_fu_451_p2, "tmp_7_fu_451_p2");
    sc_trace(mVcdFile, j_cast9_cast_fu_435_p1, "j_cast9_cast_fu_435_p1");
    sc_trace(mVcdFile, p_addr3_fu_461_p2, "p_addr3_fu_461_p2");
    sc_trace(mVcdFile, tmp_13_fu_472_p2, "tmp_13_fu_472_p2");
    sc_trace(mVcdFile, p_addr9_fu_482_p2, "p_addr9_fu_482_p2");
    sc_trace(mVcdFile, p_addr4_fu_498_p2, "p_addr4_fu_498_p2");
    sc_trace(mVcdFile, i_1_cast8_fu_515_p1, "i_1_cast8_fu_515_p1");
    sc_trace(mVcdFile, j_1_cast7_fu_536_p1, "j_1_cast7_fu_536_p1");
    sc_trace(mVcdFile, tmp_14_fu_556_p2, "tmp_14_fu_556_p2");
    sc_trace(mVcdFile, p_addr_fu_566_p2, "p_addr_fu_566_p2");
    sc_trace(mVcdFile, k_cast6_fu_577_p1, "k_cast6_fu_577_p1");
    sc_trace(mVcdFile, k_cast6_cast_fu_581_p1, "k_cast6_cast_fu_581_p1");
    sc_trace(mVcdFile, p_addr1_fu_608_p2, "p_addr1_fu_608_p2");
    sc_trace(mVcdFile, p_addr6_fu_619_p2, "p_addr6_fu_619_p2");
    sc_trace(mVcdFile, grp_fu_629_p0, "grp_fu_629_p0");
    sc_trace(mVcdFile, grp_fu_629_p1, "grp_fu_629_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_bdd_509, "ap_sig_bdd_509");
    sc_trace(mVcdFile, tmp_26_fu_633_p1, "tmp_26_fu_633_p1");
    sc_trace(mVcdFile, i_2_cast4_fu_648_p1, "i_2_cast4_fu_648_p1");
    sc_trace(mVcdFile, j_2_cast2_fu_669_p1, "j_2_cast2_fu_669_p1");
    sc_trace(mVcdFile, tmp_16_fu_689_p2, "tmp_16_fu_689_p2");
    sc_trace(mVcdFile, j_2_cast2_cast_fu_673_p1, "j_2_cast2_cast_fu_673_p1");
    sc_trace(mVcdFile, p_addr2_fu_699_p2, "p_addr2_fu_699_p2");
    sc_trace(mVcdFile, grp_fu_629_ce, "grp_fu_629_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("MAT_Multiply.hdltvin.dat");
    mHdltvoutHandle.open("MAT_Multiply.hdltvout.dat");
}

MAT_Multiply::~MAT_Multiply() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete arrayA_U;
    delete arrayB_U;
    delete arrayC_U;
    delete MAT_Multiply_mul_32s_32s_32_6_U1;
}

void MAT_Multiply::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond6_fu_409_p2.read(), ap_const_lv1_0))) {
        i_1_reg_266 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_544_p2.read()))) {
        i_1_reg_266 = i_4_reg_794.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_519_p2.read()))) {
        i_2_reg_322 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_677_p2.read()))) {
        i_2_reg_322 = i_5_reg_881.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         !esl_seteq<1,1,1>(tmp_4_fu_381_p2.read(), ap_const_lv1_0))) {
        i_reg_208 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                !ap_sig_bdd_116.read() && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_439_p2.read()))) {
        i_reg_208 = i_3_reg_753.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_reg_817.read()) || 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_585_p2.read())))) {
        j_1_reg_289 = j_5_reg_812.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_519_p2.read()))) {
        j_1_reg_289 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()) && 
         !ap_sig_bdd_336.read())) {
        j_2_reg_345 = j_4_reg_894.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) && 
                !esl_seteq<1,1,1>(tmp_4_reg_731.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_652_p2.read()))) {
        j_2_reg_345 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_439_p2.read()) && 
         !ap_sig_bdd_116.read())) {
        j_reg_255 = j_3_fu_445_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(exitcond6_fu_409_p2.read(), ap_const_lv1_0))) {
        j_reg_255 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        k_reg_300 = k_1_reg_829.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_544_p2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_fu_561_p2.read()))) {
        k_reg_300 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         !esl_seteq<1,1,1>(tmp_4_fu_381_p2.read(), ap_const_lv1_0))) {
        phi_mul1_reg_231 = ap_const_lv14_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                !ap_sig_bdd_116.read() && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_439_p2.read()))) {
        phi_mul1_reg_231 = next_mul1_reg_740.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         !esl_seteq<1,1,1>(tmp_4_fu_381_p2.read(), ap_const_lv1_0))) {
        phi_mul2_reg_243 = ap_const_lv14_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                !ap_sig_bdd_116.read() && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_439_p2.read()))) {
        phi_mul2_reg_243 = next_mul_reg_735.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond6_fu_409_p2.read(), ap_const_lv1_0))) {
        phi_mul3_reg_277 = ap_const_lv14_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_544_p2.read()))) {
        phi_mul3_reg_277 = next_mul3_reg_786.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_519_p2.read()))) {
        phi_mul4_reg_333 = ap_const_lv14_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_677_p2.read()))) {
        phi_mul4_reg_333 = next_mul4_reg_873.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        phi_mul5_reg_311 = next_mul5_reg_838.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_544_p2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_fu_561_p2.read()))) {
        phi_mul5_reg_311 = ap_const_lv14_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         !esl_seteq<1,1,1>(tmp_4_fu_381_p2.read(), ap_const_lv1_0))) {
        phi_mul_reg_219 = ap_const_lv14_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                !ap_sig_bdd_116.read() && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_439_p2.read()))) {
        phi_mul_reg_219 = next_mul2_reg_745.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        arrayA_load_reg_853 = arrayA_q0.read();
        arrayB_load_reg_858 = arrayB_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_544_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_fu_561_p2.read()))) {
        arrayC_addr_reg_821 =  (sc_lv<14>) (tmp_18_fu_572_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read())) {
        arrayC_load_1_reg_868 = arrayC_q0.read();
        tmp_25_reg_863 = grp_fu_629_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        i_3_reg_753 = i_3_fu_415_p2.read();
        next_mul1_reg_740 = next_mul1_fu_393_p2.read();
        next_mul2_reg_745 = next_mul2_fu_399_p2.read();
        next_mul_reg_735 = next_mul_fu_387_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        i_4_reg_794 = i_4_fu_525_p2.read();
        next_mul3_reg_786 = next_mul3_fu_509_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) && !esl_seteq<1,1,1>(tmp_4_reg_731.read(), ap_const_lv1_0))) {
        i_5_reg_881 = i_5_fu_658_p2.read();
        next_mul4_reg_873 = next_mul4_fu_642_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        j_1_cast7_cast_reg_804 = j_1_cast7_cast_fu_540_p1.read();
        j_5_reg_812 = j_5_fu_550_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        j_4_reg_894 = j_4_fu_683_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_reg_817.read()))) {
        k_1_reg_829 = k_1_fu_591_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_reg_817.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_585_p2.read()))) {
        next_mul5_reg_838 = next_mul5_fu_602_p2.read();
        tmp_22_reg_834 = tmp_22_fu_597_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) && !esl_seteq<1,1,1>(tmp_4_reg_731.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_652_p2.read()))) {
        tmp_10_reg_886 = tmp_10_fu_664_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_544_p2.read()))) {
        tmp_15_reg_817 = tmp_15_fu_561_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_677_p2.read()))) {
        tmp_17_reg_899 = tmp_17_fu_694_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tmp_4_reg_731 = tmp_4_fu_381_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(exitcond6_fu_409_p2.read(), ap_const_lv1_0))) {
        tmp_5_reg_758 = tmp_5_fu_421_p2.read();
        tmp_8_reg_764 = tmp_8_fu_426_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_519_p2.read()))) {
        tmp_9_reg_799 = tmp_9_fu_531_p2.read();
    }
}

void MAT_Multiply::thread_A_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_439_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_456_p2.read()) && 
         !ap_sig_bdd_116.read())) {
        A_read = ap_const_logic_1;
    } else {
        A_read = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_B_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_439_p2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_477_p2.read()) && 
         !ap_sig_bdd_116.read())) {
        B_read = ap_const_logic_1;
    } else {
        B_read = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_C_din() {
    C_din = arrayC_q0.read();
}

void MAT_Multiply::thread_C_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_reg_899.read()) && 
         !ap_sig_bdd_336.read())) {
        C_write = ap_const_logic_1;
    } else {
        C_write = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) && 
         (esl_seteq<1,1,1>(tmp_4_reg_731.read(), ap_const_lv1_0) || 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_652_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) && 
         (esl_seteq<1,1,1>(tmp_4_reg_731.read(), ap_const_lv1_0) || 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_652_p2.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_bdd_116() {
    ap_sig_bdd_116 = ((esl_seteq<1,1,1>(A_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_439_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_456_p2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_439_p2.read()) && 
  esl_seteq<1,1,1>(B_empty_n.read(), ap_const_logic_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_477_p2.read())));
}

void MAT_Multiply::thread_ap_sig_bdd_126() {
    ap_sig_bdd_126 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void MAT_Multiply::thread_ap_sig_bdd_142() {
    ap_sig_bdd_142 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void MAT_Multiply::thread_ap_sig_bdd_164() {
    ap_sig_bdd_164 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void MAT_Multiply::thread_ap_sig_bdd_192() {
    ap_sig_bdd_192 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void MAT_Multiply::thread_ap_sig_bdd_203() {
    ap_sig_bdd_203 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void MAT_Multiply::thread_ap_sig_bdd_214() {
    ap_sig_bdd_214 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(14, 14));
}

void MAT_Multiply::thread_ap_sig_bdd_234() {
    ap_sig_bdd_234 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(15, 15));
}

void MAT_Multiply::thread_ap_sig_bdd_311() {
    ap_sig_bdd_311 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(13, 13));
}

void MAT_Multiply::thread_ap_sig_bdd_33() {
    ap_sig_bdd_33 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void MAT_Multiply::thread_ap_sig_bdd_330() {
    ap_sig_bdd_330 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(16, 16));
}

void MAT_Multiply::thread_ap_sig_bdd_336() {
    ap_sig_bdd_336 = (esl_seteq<1,1,1>(C_full_n.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_reg_899.read()));
}

void MAT_Multiply::thread_ap_sig_bdd_379() {
    ap_sig_bdd_379 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void MAT_Multiply::thread_ap_sig_bdd_509() {
    ap_sig_bdd_509 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void MAT_Multiply::thread_ap_sig_bdd_76() {
    ap_sig_bdd_76 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void MAT_Multiply::thread_ap_sig_bdd_99() {
    ap_sig_bdd_99 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_bdd_379.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st13_fsm_12() {
    if (ap_sig_bdd_203.read()) {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st14_fsm_13() {
    if (ap_sig_bdd_311.read()) {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st15_fsm_14() {
    if (ap_sig_bdd_214.read()) {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st16_fsm_15() {
    if (ap_sig_bdd_234.read()) {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st17_fsm_16() {
    if (ap_sig_bdd_330.read()) {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_33.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_76.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_99.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_126.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_bdd_142.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_bdd_164.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_bdd_192.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_bdd_509.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_arrayA_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        arrayA_address0 =  (sc_lv<14>) (tmp_12_fu_467_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        arrayA_address0 =  (sc_lv<14>) (tmp_23_fu_614_p1.read());
    } else {
        arrayA_address0 = "XXXXXXXXXXXXXX";
    }
}

void MAT_Multiply::thread_arrayA_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
          !ap_sig_bdd_116.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()))) {
        arrayA_ce0 = ap_const_logic_1;
    } else {
        arrayA_ce0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_arrayA_d0() {
    arrayA_d0 = A_dout.read();
}

void MAT_Multiply::thread_arrayA_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_439_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_456_p2.read()) && 
          !ap_sig_bdd_116.read()))) {
        arrayA_we0 = ap_const_logic_1;
    } else {
        arrayA_we0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_arrayB_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        arrayB_address0 =  (sc_lv<14>) (tmp_19_fu_488_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        arrayB_address0 =  (sc_lv<14>) (tmp_24_fu_624_p1.read());
    } else {
        arrayB_address0 = "XXXXXXXXXXXXXX";
    }
}

void MAT_Multiply::thread_arrayB_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
          !ap_sig_bdd_116.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()))) {
        arrayB_ce0 = ap_const_logic_1;
    } else {
        arrayB_ce0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_arrayB_d0() {
    arrayB_d0 = B_dout.read();
}

void MAT_Multiply::thread_arrayB_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_439_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond7_fu_477_p2.read()) && 
          !ap_sig_bdd_116.read()))) {
        arrayB_we0 = ap_const_logic_1;
    } else {
        arrayB_we0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_arrayC_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        arrayC_address0 =  (sc_lv<14>) (tmp_18_fu_572_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        arrayC_address0 =  (sc_lv<14>) (tmp_21_fu_504_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        arrayC_address0 =  (sc_lv<14>) (tmp_20_fu_705_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()))) {
        arrayC_address0 = arrayC_addr_reg_821.read();
    } else {
        arrayC_address0 = "XXXXXXXXXXXXXX";
    }
}

void MAT_Multiply::thread_arrayC_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
          !ap_sig_bdd_116.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()))) {
        arrayC_ce0 = ap_const_logic_1;
    } else {
        arrayC_ce0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_arrayC_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        arrayC_d0 = tmp_27_fu_636_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()))) {
        arrayC_d0 = ap_const_lv64_0;
    } else {
        arrayC_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void MAT_Multiply::thread_arrayC_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_544_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_fu_561_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_439_p2.read()) && 
          !ap_sig_bdd_116.read() && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond8_fu_493_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_22_reg_834.read())))) {
        arrayC_we0 = ap_const_logic_1;
    } else {
        arrayC_we0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_exitcond1_fu_652_p2() {
    exitcond1_fu_652_p2 = (!i_2_reg_322.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_322.read() == ap_const_lv7_64);
}

void MAT_Multiply::thread_exitcond2_fu_585_p2() {
    exitcond2_fu_585_p2 = (!k_reg_300.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_300.read() == ap_const_lv7_64);
}

void MAT_Multiply::thread_exitcond3_fu_544_p2() {
    exitcond3_fu_544_p2 = (!j_1_reg_289.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_289.read() == ap_const_lv7_64);
}

void MAT_Multiply::thread_exitcond4_fu_519_p2() {
    exitcond4_fu_519_p2 = (!i_1_reg_266.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_266.read() == ap_const_lv7_64);
}

void MAT_Multiply::thread_exitcond5_fu_439_p2() {
    exitcond5_fu_439_p2 = (!j_reg_255.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_255.read() == ap_const_lv7_64);
}

void MAT_Multiply::thread_exitcond6_fu_409_p2() {
    exitcond6_fu_409_p2 = (!i_reg_208.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_208.read() == ap_const_lv7_64);
}

void MAT_Multiply::thread_exitcond_fu_677_p2() {
    exitcond_fu_677_p2 = (!j_2_reg_345.read().is_01() || !ap_const_lv7_64.is_01())? sc_lv<1>(): sc_lv<1>(j_2_reg_345.read() == ap_const_lv7_64);
}

void MAT_Multiply::thread_grp_fu_629_ce() {
    grp_fu_629_ce = ap_const_logic_1;
}

void MAT_Multiply::thread_grp_fu_629_p0() {
    grp_fu_629_p0 = arrayB_load_reg_858.read();
}

void MAT_Multiply::thread_grp_fu_629_p1() {
    grp_fu_629_p1 = arrayA_load_reg_853.read();
}

void MAT_Multiply::thread_i_1_cast8_fu_515_p1() {
    i_1_cast8_fu_515_p1 = esl_zext<32,7>(i_1_reg_266.read());
}

void MAT_Multiply::thread_i_2_cast4_fu_648_p1() {
    i_2_cast4_fu_648_p1 = esl_zext<32,7>(i_2_reg_322.read());
}

void MAT_Multiply::thread_i_3_fu_415_p2() {
    i_3_fu_415_p2 = (!i_reg_208.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_reg_208.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void MAT_Multiply::thread_i_4_fu_525_p2() {
    i_4_fu_525_p2 = (!i_1_reg_266.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_1_reg_266.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void MAT_Multiply::thread_i_5_fu_658_p2() {
    i_5_fu_658_p2 = (!i_2_reg_322.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_2_reg_322.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void MAT_Multiply::thread_i_cast1_fu_405_p1() {
    i_cast1_fu_405_p1 = esl_zext<32,7>(i_reg_208.read());
}

void MAT_Multiply::thread_j_1_cast7_cast_fu_540_p1() {
    j_1_cast7_cast_fu_540_p1 = esl_zext<14,7>(j_1_reg_289.read());
}

void MAT_Multiply::thread_j_1_cast7_fu_536_p1() {
    j_1_cast7_fu_536_p1 = esl_zext<32,7>(j_1_reg_289.read());
}

void MAT_Multiply::thread_j_2_cast2_cast_fu_673_p1() {
    j_2_cast2_cast_fu_673_p1 = esl_zext<14,7>(j_2_reg_345.read());
}

void MAT_Multiply::thread_j_2_cast2_fu_669_p1() {
    j_2_cast2_fu_669_p1 = esl_zext<32,7>(j_2_reg_345.read());
}

void MAT_Multiply::thread_j_3_fu_445_p2() {
    j_3_fu_445_p2 = (!j_reg_255.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_reg_255.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void MAT_Multiply::thread_j_4_fu_683_p2() {
    j_4_fu_683_p2 = (!j_2_reg_345.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_2_reg_345.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void MAT_Multiply::thread_j_5_fu_550_p2() {
    j_5_fu_550_p2 = (!j_1_reg_289.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_1_reg_289.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void MAT_Multiply::thread_j_cast9_cast_fu_435_p1() {
    j_cast9_cast_fu_435_p1 = esl_zext<14,7>(j_reg_255.read());
}

void MAT_Multiply::thread_j_cast9_fu_431_p1() {
    j_cast9_fu_431_p1 = esl_zext<32,7>(j_reg_255.read());
}

void MAT_Multiply::thread_k_1_fu_591_p2() {
    k_1_fu_591_p2 = (!k_reg_300.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(k_reg_300.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void MAT_Multiply::thread_k_cast6_cast_fu_581_p1() {
    k_cast6_cast_fu_581_p1 = esl_zext<14,7>(k_reg_300.read());
}

void MAT_Multiply::thread_k_cast6_fu_577_p1() {
    k_cast6_fu_577_p1 = esl_zext<32,7>(k_reg_300.read());
}

void MAT_Multiply::thread_next_mul1_fu_393_p2() {
    next_mul1_fu_393_p2 = (!phi_mul1_reg_231.read().is_01() || !ap_const_lv14_64.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul1_reg_231.read()) + sc_biguint<14>(ap_const_lv14_64));
}

void MAT_Multiply::thread_next_mul2_fu_399_p2() {
    next_mul2_fu_399_p2 = (!phi_mul_reg_219.read().is_01() || !ap_const_lv14_64.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul_reg_219.read()) + sc_biguint<14>(ap_const_lv14_64));
}

void MAT_Multiply::thread_next_mul3_fu_509_p2() {
    next_mul3_fu_509_p2 = (!phi_mul3_reg_277.read().is_01() || !ap_const_lv14_64.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul3_reg_277.read()) + sc_biguint<14>(ap_const_lv14_64));
}

void MAT_Multiply::thread_next_mul4_fu_642_p2() {
    next_mul4_fu_642_p2 = (!phi_mul4_reg_333.read().is_01() || !ap_const_lv14_64.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul4_reg_333.read()) + sc_biguint<14>(ap_const_lv14_64));
}

void MAT_Multiply::thread_next_mul5_fu_602_p2() {
    next_mul5_fu_602_p2 = (!phi_mul5_reg_311.read().is_01() || !ap_const_lv14_64.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul5_reg_311.read()) + sc_biguint<14>(ap_const_lv14_64));
}

void MAT_Multiply::thread_next_mul_fu_387_p2() {
    next_mul_fu_387_p2 = (!phi_mul2_reg_243.read().is_01() || !ap_const_lv14_64.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul2_reg_243.read()) + sc_biguint<14>(ap_const_lv14_64));
}

void MAT_Multiply::thread_or_cond7_fu_477_p2() {
    or_cond7_fu_477_p2 = (tmp_8_reg_764.read() & tmp_13_fu_472_p2.read());
}

void MAT_Multiply::thread_or_cond8_fu_493_p2() {
    or_cond8_fu_493_p2 = (tmp_5_reg_758.read() & tmp_13_fu_472_p2.read());
}

void MAT_Multiply::thread_or_cond_fu_456_p2() {
    or_cond_fu_456_p2 = (tmp_5_reg_758.read() & tmp_7_fu_451_p2.read());
}

void MAT_Multiply::thread_p_addr1_fu_608_p2() {
    p_addr1_fu_608_p2 = (!k_cast6_cast_fu_581_p1.read().is_01() || !phi_mul3_reg_277.read().is_01())? sc_lv<14>(): (sc_biguint<14>(k_cast6_cast_fu_581_p1.read()) + sc_biguint<14>(phi_mul3_reg_277.read()));
}

void MAT_Multiply::thread_p_addr2_fu_699_p2() {
    p_addr2_fu_699_p2 = (!j_2_cast2_cast_fu_673_p1.read().is_01() || !phi_mul4_reg_333.read().is_01())? sc_lv<14>(): (sc_biguint<14>(j_2_cast2_cast_fu_673_p1.read()) + sc_biguint<14>(phi_mul4_reg_333.read()));
}

void MAT_Multiply::thread_p_addr3_fu_461_p2() {
    p_addr3_fu_461_p2 = (!j_cast9_cast_fu_435_p1.read().is_01() || !phi_mul_reg_219.read().is_01())? sc_lv<14>(): (sc_biguint<14>(j_cast9_cast_fu_435_p1.read()) + sc_biguint<14>(phi_mul_reg_219.read()));
}

void MAT_Multiply::thread_p_addr4_fu_498_p2() {
    p_addr4_fu_498_p2 = (!j_cast9_cast_fu_435_p1.read().is_01() || !phi_mul2_reg_243.read().is_01())? sc_lv<14>(): (sc_biguint<14>(j_cast9_cast_fu_435_p1.read()) + sc_biguint<14>(phi_mul2_reg_243.read()));
}

void MAT_Multiply::thread_p_addr6_fu_619_p2() {
    p_addr6_fu_619_p2 = (!j_1_cast7_cast_reg_804.read().is_01() || !phi_mul5_reg_311.read().is_01())? sc_lv<14>(): (sc_biguint<14>(j_1_cast7_cast_reg_804.read()) + sc_biguint<14>(phi_mul5_reg_311.read()));
}

void MAT_Multiply::thread_p_addr9_fu_482_p2() {
    p_addr9_fu_482_p2 = (!j_cast9_cast_fu_435_p1.read().is_01() || !phi_mul1_reg_231.read().is_01())? sc_lv<14>(): (sc_biguint<14>(j_cast9_cast_fu_435_p1.read()) + sc_biguint<14>(phi_mul1_reg_231.read()));
}

void MAT_Multiply::thread_p_addr_fu_566_p2() {
    p_addr_fu_566_p2 = (!j_1_cast7_cast_fu_540_p1.read().is_01() || !phi_mul3_reg_277.read().is_01())? sc_lv<14>(): (sc_biguint<14>(j_1_cast7_cast_fu_540_p1.read()) + sc_biguint<14>(phi_mul3_reg_277.read()));
}

void MAT_Multiply::thread_tmp1_fu_375_p2() {
    tmp1_fu_375_p2 = (tmp_1_fu_363_p2.read() & tmp_3_fu_369_p2.read());
}

void MAT_Multiply::thread_tmp_10_fu_664_p2() {
    tmp_10_fu_664_p2 = (!i_2_cast4_fu_648_p1.read().is_01() || !mC.read().is_01())? sc_lv<1>(): (sc_biguint<32>(i_2_cast4_fu_648_p1.read()) < sc_biguint<32>(mC.read()));
}

void MAT_Multiply::thread_tmp_12_fu_467_p1() {
    tmp_12_fu_467_p1 = esl_zext<64,14>(p_addr3_fu_461_p2.read());
}

void MAT_Multiply::thread_tmp_13_fu_472_p2() {
    tmp_13_fu_472_p2 = (!j_cast9_fu_431_p1.read().is_01() || !nC.read().is_01())? sc_lv<1>(): (sc_biguint<32>(j_cast9_fu_431_p1.read()) < sc_biguint<32>(nC.read()));
}

void MAT_Multiply::thread_tmp_14_fu_556_p2() {
    tmp_14_fu_556_p2 = (!j_1_cast7_fu_536_p1.read().is_01() || !nC.read().is_01())? sc_lv<1>(): (sc_biguint<32>(j_1_cast7_fu_536_p1.read()) < sc_biguint<32>(nC.read()));
}

void MAT_Multiply::thread_tmp_15_fu_561_p2() {
    tmp_15_fu_561_p2 = (tmp_9_reg_799.read() & tmp_14_fu_556_p2.read());
}

void MAT_Multiply::thread_tmp_16_fu_689_p2() {
    tmp_16_fu_689_p2 = (!j_2_cast2_fu_669_p1.read().is_01() || !nC.read().is_01())? sc_lv<1>(): (sc_biguint<32>(j_2_cast2_fu_669_p1.read()) < sc_biguint<32>(nC.read()));
}

void MAT_Multiply::thread_tmp_17_fu_694_p2() {
    tmp_17_fu_694_p2 = (tmp_10_reg_886.read() & tmp_16_fu_689_p2.read());
}

void MAT_Multiply::thread_tmp_18_fu_572_p1() {
    tmp_18_fu_572_p1 = esl_zext<64,14>(p_addr_fu_566_p2.read());
}

void MAT_Multiply::thread_tmp_19_fu_488_p1() {
    tmp_19_fu_488_p1 = esl_zext<64,14>(p_addr9_fu_482_p2.read());
}

void MAT_Multiply::thread_tmp_1_fu_363_p2() {
    tmp_1_fu_363_p2 = (!mA.read().is_01() || !mC.read().is_01())? sc_lv<1>(): sc_lv<1>(mA.read() == mC.read());
}

void MAT_Multiply::thread_tmp_20_fu_705_p1() {
    tmp_20_fu_705_p1 = esl_zext<64,14>(p_addr2_fu_699_p2.read());
}

void MAT_Multiply::thread_tmp_21_fu_504_p1() {
    tmp_21_fu_504_p1 = esl_zext<64,14>(p_addr4_fu_498_p2.read());
}

void MAT_Multiply::thread_tmp_22_fu_597_p2() {
    tmp_22_fu_597_p2 = (!k_cast6_fu_577_p1.read().is_01() || !mB.read().is_01())? sc_lv<1>(): (sc_biguint<32>(k_cast6_fu_577_p1.read()) < sc_biguint<32>(mB.read()));
}

void MAT_Multiply::thread_tmp_23_fu_614_p1() {
    tmp_23_fu_614_p1 = esl_zext<64,14>(p_addr1_fu_608_p2.read());
}

void MAT_Multiply::thread_tmp_24_fu_624_p1() {
    tmp_24_fu_624_p1 = esl_zext<64,14>(p_addr6_fu_619_p2.read());
}

void MAT_Multiply::thread_tmp_26_fu_633_p1() {
    tmp_26_fu_633_p1 = esl_sext<64,32>(tmp_25_reg_863.read());
}

void MAT_Multiply::thread_tmp_27_fu_636_p2() {
    tmp_27_fu_636_p2 = (!arrayC_load_1_reg_868.read().is_01() || !tmp_26_fu_633_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(arrayC_load_1_reg_868.read()) + sc_bigint<64>(tmp_26_fu_633_p1.read()));
}

void MAT_Multiply::thread_tmp_3_fu_369_p2() {
    tmp_3_fu_369_p2 = (!nB.read().is_01() || !nC.read().is_01())? sc_lv<1>(): sc_lv<1>(nB.read() == nC.read());
}

void MAT_Multiply::thread_tmp_4_fu_381_p2() {
    tmp_4_fu_381_p2 = (tmp1_fu_375_p2.read() & tmp_fu_357_p2.read());
}

void MAT_Multiply::thread_tmp_5_fu_421_p2() {
    tmp_5_fu_421_p2 = (!i_cast1_fu_405_p1.read().is_01() || !mC.read().is_01())? sc_lv<1>(): (sc_biguint<32>(i_cast1_fu_405_p1.read()) < sc_biguint<32>(mC.read()));
}

void MAT_Multiply::thread_tmp_7_fu_451_p2() {
    tmp_7_fu_451_p2 = (!j_cast9_fu_431_p1.read().is_01() || !mB.read().is_01())? sc_lv<1>(): (sc_biguint<32>(j_cast9_fu_431_p1.read()) < sc_biguint<32>(mB.read()));
}

void MAT_Multiply::thread_tmp_8_fu_426_p2() {
    tmp_8_fu_426_p2 = (!i_cast1_fu_405_p1.read().is_01() || !mB.read().is_01())? sc_lv<1>(): (sc_biguint<32>(i_cast1_fu_405_p1.read()) < sc_biguint<32>(mB.read()));
}

void MAT_Multiply::thread_tmp_9_fu_531_p2() {
    tmp_9_fu_531_p2 = (!i_1_cast8_fu_515_p1.read().is_01() || !mC.read().is_01())? sc_lv<1>(): (sc_biguint<32>(i_1_cast8_fu_515_p1.read()) < sc_biguint<32>(mC.read()));
}

void MAT_Multiply::thread_tmp_fu_357_p2() {
    tmp_fu_357_p2 = (!nA.read().is_01() || !mB.read().is_01())? sc_lv<1>(): sc_lv<1>(nA.read() == mB.read());
}

void MAT_Multiply::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(tmp_4_fu_381_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st15_fsm_14;
            } else if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(tmp_4_fu_381_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(exitcond6_fu_409_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 4 : 
            if ((!ap_sig_bdd_116.read() && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_439_p2.read()))) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_439_p2.read()) && !ap_sig_bdd_116.read())) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_519_p2.read())) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st15_fsm_14;
            }
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_544_p2.read())) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_reg_817.read()) || !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_585_p2.read()))) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else if ((!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_reg_817.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_585_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_22_fu_597_p2.read()))) {
                ap_NS_fsm = ap_ST_st14_fsm_13;
            } else {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(tmp_4_reg_731.read(), ap_const_lv1_0) || !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_652_p2.read()))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st16_fsm_15;
            }
            break;
        case 32768 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_677_p2.read())) {
                ap_NS_fsm = ap_ST_st15_fsm_14;
            } else {
                ap_NS_fsm = ap_ST_st17_fsm_16;
            }
            break;
        case 65536 : 
            if (!ap_sig_bdd_336.read()) {
                ap_NS_fsm = ap_ST_st16_fsm_15;
            } else {
                ap_NS_fsm = ap_ST_st17_fsm_16;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

void MAT_Multiply::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_dout\" :  \"" << A_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_empty_n\" :  \"" << A_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_read\" :  \"" << A_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_dout\" :  \"" << B_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_empty_n\" :  \"" << B_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_read\" :  \"" << B_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_din\" :  \"" << C_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_full_n\" :  \"" << C_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_write\" :  \"" << C_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mA\" :  \"" << mA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nA\" :  \"" << nA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mB\" :  \"" << mB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nB\" :  \"" << nB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mC\" :  \"" << mC.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nC\" :  \"" << nC.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

