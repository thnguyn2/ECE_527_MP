// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="MAT_Multiply,hls_ip_2015_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.085000,HLS_SYN_LAT=1525302,HLS_SYN_TPT=none,HLS_SYN_MEM=128,HLS_SYN_DSP=4,HLS_SYN_FF=465,HLS_SYN_LUT=711}" *)

module MAT_Multiply (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_dout,
        A_empty_n,
        A_read,
        B_dout,
        B_empty_n,
        B_read,
        C_din,
        C_full_n,
        C_write,
        mA,
        nA,
        mB,
        nB,
        mC,
        nC
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 17'b1;
parameter    ap_ST_st2_fsm_1 = 17'b10;
parameter    ap_ST_st3_fsm_2 = 17'b100;
parameter    ap_ST_st4_fsm_3 = 17'b1000;
parameter    ap_ST_st5_fsm_4 = 17'b10000;
parameter    ap_ST_st6_fsm_5 = 17'b100000;
parameter    ap_ST_st7_fsm_6 = 17'b1000000;
parameter    ap_ST_st8_fsm_7 = 17'b10000000;
parameter    ap_ST_st9_fsm_8 = 17'b100000000;
parameter    ap_ST_st10_fsm_9 = 17'b1000000000;
parameter    ap_ST_st11_fsm_10 = 17'b10000000000;
parameter    ap_ST_st12_fsm_11 = 17'b100000000000;
parameter    ap_ST_st13_fsm_12 = 17'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 17'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 17'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 17'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 17'b10000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv14_0 = 14'b00000000000000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv14_64 = 14'b1100100;
parameter    ap_const_lv7_64 = 7'b1100100;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] A_dout;
input   A_empty_n;
output   A_read;
input  [31:0] B_dout;
input   B_empty_n;
output   B_read;
output  [63:0] C_din;
input   C_full_n;
output   C_write;
input  [31:0] mA;
input  [31:0] nA;
input  [31:0] mB;
input  [31:0] nB;
input  [31:0] mC;
input  [31:0] nC;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_read;
reg B_read;
reg C_write;
(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm = 17'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_33;
wire   [0:0] tmp_4_fu_381_p2;
reg   [0:0] tmp_4_reg_731;
wire   [13:0] next_mul_fu_387_p2;
reg   [13:0] next_mul_reg_735;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_76;
wire   [13:0] next_mul1_fu_393_p2;
reg   [13:0] next_mul1_reg_740;
wire   [13:0] next_mul2_fu_399_p2;
reg   [13:0] next_mul2_reg_745;
wire   [6:0] i_3_fu_415_p2;
reg   [6:0] i_3_reg_753;
wire   [0:0] tmp_5_fu_421_p2;
reg   [0:0] tmp_5_reg_758;
wire   [0:0] exitcond6_fu_409_p2;
wire   [0:0] tmp_8_fu_426_p2;
reg   [0:0] tmp_8_reg_764;
wire   [6:0] j_3_fu_445_p2;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_99;
wire   [0:0] exitcond5_fu_439_p2;
wire   [0:0] or_cond_fu_456_p2;
wire   [0:0] or_cond7_fu_477_p2;
reg    ap_sig_bdd_116;
wire   [13:0] next_mul3_fu_509_p2;
reg   [13:0] next_mul3_reg_786;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_126;
wire   [6:0] i_4_fu_525_p2;
reg   [6:0] i_4_reg_794;
wire   [0:0] tmp_9_fu_531_p2;
reg   [0:0] tmp_9_reg_799;
wire   [0:0] exitcond4_fu_519_p2;
wire   [13:0] j_1_cast7_cast_fu_540_p1;
reg   [13:0] j_1_cast7_cast_reg_804;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_142;
wire   [6:0] j_5_fu_550_p2;
reg   [6:0] j_5_reg_812;
wire   [0:0] tmp_15_fu_561_p2;
reg   [0:0] tmp_15_reg_817;
wire   [0:0] exitcond3_fu_544_p2;
reg   [13:0] arrayC_addr_reg_821;
wire   [6:0] k_1_fu_591_p2;
reg   [6:0] k_1_reg_829;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_164;
wire   [0:0] tmp_22_fu_597_p2;
reg   [0:0] tmp_22_reg_834;
wire   [0:0] exitcond2_fu_585_p2;
wire   [13:0] next_mul5_fu_602_p2;
reg   [13:0] next_mul5_reg_838;
wire   [31:0] arrayA_q0;
reg  signed [31:0] arrayA_load_reg_853;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_192;
wire   [31:0] arrayB_q0;
reg  signed [31:0] arrayB_load_reg_858;
wire  signed [31:0] grp_fu_629_p2;
reg  signed [31:0] tmp_25_reg_863;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_203;
wire   [63:0] arrayC_q0;
reg   [63:0] arrayC_load_1_reg_868;
wire   [13:0] next_mul4_fu_642_p2;
reg   [13:0] next_mul4_reg_873;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_214;
wire   [6:0] i_5_fu_658_p2;
reg   [6:0] i_5_reg_881;
wire   [0:0] tmp_10_fu_664_p2;
reg   [0:0] tmp_10_reg_886;
wire   [0:0] exitcond1_fu_652_p2;
wire   [6:0] j_4_fu_683_p2;
reg   [6:0] j_4_reg_894;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_234;
wire   [0:0] tmp_17_fu_694_p2;
reg   [0:0] tmp_17_reg_899;
wire   [0:0] exitcond_fu_677_p2;
reg   [13:0] arrayA_address0;
reg    arrayA_ce0;
reg    arrayA_we0;
wire   [31:0] arrayA_d0;
reg   [13:0] arrayB_address0;
reg    arrayB_ce0;
reg    arrayB_we0;
wire   [31:0] arrayB_d0;
reg   [13:0] arrayC_address0;
reg    arrayC_ce0;
reg    arrayC_we0;
reg   [63:0] arrayC_d0;
reg   [6:0] i_reg_208;
reg   [13:0] phi_mul_reg_219;
reg   [13:0] phi_mul1_reg_231;
reg   [13:0] phi_mul2_reg_243;
reg   [6:0] j_reg_255;
reg   [6:0] i_1_reg_266;
reg   [13:0] phi_mul3_reg_277;
reg   [6:0] j_1_reg_289;
reg   [6:0] k_reg_300;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_311;
reg   [13:0] phi_mul5_reg_311;
reg   [6:0] i_2_reg_322;
reg   [13:0] phi_mul4_reg_333;
reg   [6:0] j_2_reg_345;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_330;
reg    ap_sig_bdd_336;
wire   [63:0] tmp_12_fu_467_p1;
wire   [63:0] tmp_19_fu_488_p1;
wire   [63:0] tmp_21_fu_504_p1;
wire   [0:0] or_cond8_fu_493_p2;
wire   [63:0] tmp_18_fu_572_p1;
wire   [63:0] tmp_23_fu_614_p1;
wire   [63:0] tmp_24_fu_624_p1;
wire   [63:0] tmp_20_fu_705_p1;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_379;
wire  signed [63:0] tmp_27_fu_636_p2;
wire   [0:0] tmp_1_fu_363_p2;
wire   [0:0] tmp_3_fu_369_p2;
wire   [0:0] tmp1_fu_375_p2;
wire   [0:0] tmp_fu_357_p2;
wire   [31:0] i_cast1_fu_405_p1;
wire   [31:0] j_cast9_fu_431_p1;
wire   [0:0] tmp_7_fu_451_p2;
wire   [13:0] j_cast9_cast_fu_435_p1;
wire   [13:0] p_addr3_fu_461_p2;
wire   [0:0] tmp_13_fu_472_p2;
wire   [13:0] p_addr9_fu_482_p2;
wire   [13:0] p_addr4_fu_498_p2;
wire   [31:0] i_1_cast8_fu_515_p1;
wire   [31:0] j_1_cast7_fu_536_p1;
wire   [0:0] tmp_14_fu_556_p2;
wire   [13:0] p_addr_fu_566_p2;
wire   [31:0] k_cast6_fu_577_p1;
wire   [13:0] k_cast6_cast_fu_581_p1;
wire   [13:0] p_addr1_fu_608_p2;
wire   [13:0] p_addr6_fu_619_p2;
wire  signed [31:0] grp_fu_629_p0;
wire  signed [31:0] grp_fu_629_p1;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_509;
wire  signed [63:0] tmp_26_fu_633_p1;
wire   [31:0] i_2_cast4_fu_648_p1;
wire   [31:0] j_2_cast2_fu_669_p1;
wire   [0:0] tmp_16_fu_689_p2;
wire   [13:0] j_2_cast2_cast_fu_673_p1;
wire   [13:0] p_addr2_fu_699_p2;
wire    grp_fu_629_ce;
reg   [16:0] ap_NS_fsm;


MAT_Multiply_arrayA #(
    .DataWidth( 32 ),
    .AddressRange( 10000 ),
    .AddressWidth( 14 ))
arrayA_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( arrayA_address0 ),
    .ce0( arrayA_ce0 ),
    .we0( arrayA_we0 ),
    .d0( arrayA_d0 ),
    .q0( arrayA_q0 )
);

MAT_Multiply_arrayA #(
    .DataWidth( 32 ),
    .AddressRange( 10000 ),
    .AddressWidth( 14 ))
arrayB_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( arrayB_address0 ),
    .ce0( arrayB_ce0 ),
    .we0( arrayB_we0 ),
    .d0( arrayB_d0 ),
    .q0( arrayB_q0 )
);

MAT_Multiply_arrayC #(
    .DataWidth( 64 ),
    .AddressRange( 10000 ),
    .AddressWidth( 14 ))
arrayC_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( arrayC_address0 ),
    .ce0( arrayC_ce0 ),
    .we0( arrayC_we0 ),
    .d0( arrayC_d0 ),
    .q0( arrayC_q0 )
);

MAT_Multiply_mul_32s_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
MAT_Multiply_mul_32s_32s_32_6_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_629_p0 ),
    .din1( grp_fu_629_p1 ),
    .ce( grp_fu_629_ce ),
    .dout( grp_fu_629_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond6_fu_409_p2 == ap_const_lv1_0))) begin
        i_1_reg_266 <= ap_const_lv7_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(ap_const_lv1_0 == exitcond3_fu_544_p2))) begin
        i_1_reg_266 <= i_4_reg_794;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == exitcond4_fu_519_p2))) begin
        i_2_reg_322 <= ap_const_lv7_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & ~(ap_const_lv1_0 == exitcond_fu_677_p2))) begin
        i_2_reg_322 <= i_5_reg_881;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0) & ~(tmp_4_fu_381_p2 == ap_const_lv1_0))) begin
        i_reg_208 <= ap_const_lv7_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_116 & ~(ap_const_lv1_0 == exitcond5_fu_439_p2))) begin
        i_reg_208 <= i_3_reg_753;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ((ap_const_lv1_0 == tmp_15_reg_817) | ~(ap_const_lv1_0 == exitcond2_fu_585_p2)))) begin
        j_1_reg_289 <= j_5_reg_812;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond4_fu_519_p2))) begin
        j_1_reg_289 <= ap_const_lv7_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) & ~ap_sig_bdd_336)) begin
        j_2_reg_345 <= j_4_reg_894;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) & ~(tmp_4_reg_731 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond1_fu_652_p2))) begin
        j_2_reg_345 <= ap_const_lv7_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond5_fu_439_p2) & ~ap_sig_bdd_116)) begin
        j_reg_255 <= j_3_fu_445_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond6_fu_409_p2 == ap_const_lv1_0))) begin
        j_reg_255 <= ap_const_lv7_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        k_reg_300 <= k_1_reg_829;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond3_fu_544_p2) & ~(ap_const_lv1_0 == tmp_15_fu_561_p2))) begin
        k_reg_300 <= ap_const_lv7_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0) & ~(tmp_4_fu_381_p2 == ap_const_lv1_0))) begin
        phi_mul1_reg_231 <= ap_const_lv14_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_116 & ~(ap_const_lv1_0 == exitcond5_fu_439_p2))) begin
        phi_mul1_reg_231 <= next_mul1_reg_740;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0) & ~(tmp_4_fu_381_p2 == ap_const_lv1_0))) begin
        phi_mul2_reg_243 <= ap_const_lv14_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_116 & ~(ap_const_lv1_0 == exitcond5_fu_439_p2))) begin
        phi_mul2_reg_243 <= next_mul_reg_735;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond6_fu_409_p2 == ap_const_lv1_0))) begin
        phi_mul3_reg_277 <= ap_const_lv14_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(ap_const_lv1_0 == exitcond3_fu_544_p2))) begin
        phi_mul3_reg_277 <= next_mul3_reg_786;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == exitcond4_fu_519_p2))) begin
        phi_mul4_reg_333 <= ap_const_lv14_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & ~(ap_const_lv1_0 == exitcond_fu_677_p2))) begin
        phi_mul4_reg_333 <= next_mul4_reg_873;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        phi_mul5_reg_311 <= next_mul5_reg_838;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond3_fu_544_p2) & ~(ap_const_lv1_0 == tmp_15_fu_561_p2))) begin
        phi_mul5_reg_311 <= ap_const_lv14_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0) & ~(tmp_4_fu_381_p2 == ap_const_lv1_0))) begin
        phi_mul_reg_219 <= ap_const_lv14_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_116 & ~(ap_const_lv1_0 == exitcond5_fu_439_p2))) begin
        phi_mul_reg_219 <= next_mul2_reg_745;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        arrayA_load_reg_853 <= arrayA_q0;
        arrayB_load_reg_858 <= arrayB_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond3_fu_544_p2) & ~(ap_const_lv1_0 == tmp_15_fu_561_p2))) begin
        arrayC_addr_reg_821 <= tmp_18_fu_572_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        arrayC_load_1_reg_868 <= arrayC_q0;
        tmp_25_reg_863 <= grp_fu_629_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_3_reg_753 <= i_3_fu_415_p2;
        next_mul1_reg_740 <= next_mul1_fu_393_p2;
        next_mul2_reg_745 <= next_mul2_fu_399_p2;
        next_mul_reg_735 <= next_mul_fu_387_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        i_4_reg_794 <= i_4_fu_525_p2;
        next_mul3_reg_786 <= next_mul3_fu_509_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) & ~(tmp_4_reg_731 == ap_const_lv1_0))) begin
        i_5_reg_881 <= i_5_fu_658_p2;
        next_mul4_reg_873 <= next_mul4_fu_642_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        j_1_cast7_cast_reg_804[6 : 0] <= j_1_cast7_cast_fu_540_p1[6 : 0];
        j_5_reg_812 <= j_5_fu_550_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        j_4_reg_894 <= j_4_fu_683_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == tmp_15_reg_817))) begin
        k_1_reg_829 <= k_1_fu_591_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == tmp_15_reg_817) & (ap_const_lv1_0 == exitcond2_fu_585_p2))) begin
        next_mul5_reg_838 <= next_mul5_fu_602_p2;
        tmp_22_reg_834 <= tmp_22_fu_597_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) & ~(tmp_4_reg_731 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond1_fu_652_p2))) begin
        tmp_10_reg_886 <= tmp_10_fu_664_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond3_fu_544_p2))) begin
        tmp_15_reg_817 <= tmp_15_fu_561_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & (ap_const_lv1_0 == exitcond_fu_677_p2))) begin
        tmp_17_reg_899 <= tmp_17_fu_694_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        tmp_4_reg_731 <= tmp_4_fu_381_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond6_fu_409_p2 == ap_const_lv1_0))) begin
        tmp_5_reg_758 <= tmp_5_fu_421_p2;
        tmp_8_reg_764 <= tmp_8_fu_426_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond4_fu_519_p2))) begin
        tmp_9_reg_799 <= tmp_9_fu_531_p2;
    end
end

/// A_read assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or exitcond5_fu_439_p2 or or_cond_fu_456_p2 or ap_sig_bdd_116)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond5_fu_439_p2) & ~(ap_const_lv1_0 == or_cond_fu_456_p2) & ~ap_sig_bdd_116)) begin
        A_read = ap_const_logic_1;
    end else begin
        A_read = ap_const_logic_0;
    end
end

/// B_read assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or exitcond5_fu_439_p2 or or_cond7_fu_477_p2 or ap_sig_bdd_116)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond5_fu_439_p2) & ~(ap_const_lv1_0 == or_cond7_fu_477_p2) & ~ap_sig_bdd_116)) begin
        B_read = ap_const_logic_1;
    end else begin
        B_read = ap_const_logic_0;
    end
end

/// C_write assign process. ///
always @ (tmp_17_reg_899 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_bdd_336)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) & ~(ap_const_lv1_0 == tmp_17_reg_899) & ~ap_sig_bdd_336)) begin
        C_write = ap_const_logic_1;
    end else begin
        C_write = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (tmp_4_reg_731 or ap_sig_cseq_ST_st15_fsm_14 or exitcond1_fu_652_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) & ((tmp_4_reg_731 == ap_const_lv1_0) | ~(ap_const_lv1_0 == exitcond1_fu_652_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (tmp_4_reg_731 or ap_sig_cseq_ST_st15_fsm_14 or exitcond1_fu_652_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) & ((tmp_4_reg_731 == ap_const_lv1_0) | ~(ap_const_lv1_0 == exitcond1_fu_652_p2)))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_379)
begin
    if (ap_sig_bdd_379) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_203)
begin
    if (ap_sig_bdd_203) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_311)
begin
    if (ap_sig_bdd_311) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_214)
begin
    if (ap_sig_bdd_214) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_15 assign process. ///
always @ (ap_sig_bdd_234)
begin
    if (ap_sig_bdd_234) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_16 assign process. ///
always @ (ap_sig_bdd_330)
begin
    if (ap_sig_bdd_330) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_33)
begin
    if (ap_sig_bdd_33) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_76)
begin
    if (ap_sig_bdd_76) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_99)
begin
    if (ap_sig_bdd_99) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_126)
begin
    if (ap_sig_bdd_126) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_142)
begin
    if (ap_sig_bdd_142) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_164)
begin
    if (ap_sig_bdd_164) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_192)
begin
    if (ap_sig_bdd_192) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_509)
begin
    if (ap_sig_bdd_509) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// arrayA_address0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st6_fsm_5 or tmp_12_fu_467_p1 or tmp_23_fu_614_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        arrayA_address0 = tmp_12_fu_467_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        arrayA_address0 = tmp_23_fu_614_p1;
    end else begin
        arrayA_address0 = 'bx;
    end
end

/// arrayA_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_bdd_116 or ap_sig_cseq_ST_st6_fsm_5)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_116) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        arrayA_ce0 = ap_const_logic_1;
    end else begin
        arrayA_ce0 = ap_const_logic_0;
    end
end

/// arrayA_we0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or exitcond5_fu_439_p2 or or_cond_fu_456_p2 or ap_sig_bdd_116)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond5_fu_439_p2) & ~(ap_const_lv1_0 == or_cond_fu_456_p2) & ~ap_sig_bdd_116)) begin
        arrayA_we0 = ap_const_logic_1;
    end else begin
        arrayA_we0 = ap_const_logic_0;
    end
end

/// arrayB_address0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st6_fsm_5 or tmp_19_fu_488_p1 or tmp_24_fu_624_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        arrayB_address0 = tmp_19_fu_488_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        arrayB_address0 = tmp_24_fu_624_p1;
    end else begin
        arrayB_address0 = 'bx;
    end
end

/// arrayB_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_bdd_116 or ap_sig_cseq_ST_st6_fsm_5)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_116) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        arrayB_ce0 = ap_const_logic_1;
    end else begin
        arrayB_ce0 = ap_const_logic_0;
    end
end

/// arrayB_we0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or exitcond5_fu_439_p2 or or_cond7_fu_477_p2 or ap_sig_bdd_116)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond5_fu_439_p2) & ~(ap_const_lv1_0 == or_cond7_fu_477_p2) & ~ap_sig_bdd_116)) begin
        arrayB_we0 = ap_const_logic_1;
    end else begin
        arrayB_we0 = ap_const_logic_0;
    end
end

/// arrayC_address0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st5_fsm_4 or arrayC_addr_reg_821 or ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st14_fsm_13 or tmp_21_fu_504_p1 or tmp_18_fu_572_p1 or tmp_20_fu_705_p1 or ap_sig_cseq_ST_st12_fsm_11)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        arrayC_address0 = tmp_18_fu_572_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        arrayC_address0 = tmp_21_fu_504_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        arrayC_address0 = tmp_20_fu_705_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        arrayC_address0 = arrayC_addr_reg_821;
    end else begin
        arrayC_address0 = 'bx;
    end
end

/// arrayC_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_bdd_116 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st12_fsm_11)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_116) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        arrayC_ce0 = ap_const_logic_1;
    end else begin
        arrayC_ce0 = ap_const_logic_0;
    end
end

/// arrayC_d0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st14_fsm_13 or tmp_27_fu_636_p2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        arrayC_d0 = tmp_27_fu_636_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        arrayC_d0 = ap_const_lv64_0;
    end else begin
        arrayC_d0 = 'bx;
    end
end

/// arrayC_we0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or exitcond5_fu_439_p2 or ap_sig_bdd_116 or ap_sig_cseq_ST_st5_fsm_4 or tmp_15_fu_561_p2 or exitcond3_fu_544_p2 or tmp_22_reg_834 or ap_sig_cseq_ST_st14_fsm_13 or or_cond8_fu_493_p2)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & (ap_const_lv1_0 == exitcond3_fu_544_p2) & ~(ap_const_lv1_0 == tmp_15_fu_561_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond5_fu_439_p2) & ~ap_sig_bdd_116 & ~(ap_const_lv1_0 == or_cond8_fu_493_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) & ~(ap_const_lv1_0 == tmp_22_reg_834)))) begin
        arrayC_we0 = ap_const_logic_1;
    end else begin
        arrayC_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or tmp_4_fu_381_p2 or tmp_4_reg_731 or exitcond6_fu_409_p2 or exitcond5_fu_439_p2 or ap_sig_bdd_116 or exitcond4_fu_519_p2 or tmp_15_reg_817 or exitcond3_fu_544_p2 or tmp_22_fu_597_p2 or exitcond2_fu_585_p2 or exitcond1_fu_652_p2 or exitcond_fu_677_p2 or ap_sig_bdd_336)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if ((~(ap_start == ap_const_logic_0) & (tmp_4_fu_381_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end else if ((~(ap_start == ap_const_logic_0) & ~(tmp_4_fu_381_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((exitcond6_fu_409_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((~ap_sig_bdd_116 & ~(ap_const_lv1_0 == exitcond5_fu_439_p2))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if (((ap_const_lv1_0 == exitcond5_fu_439_p2) & ~ap_sig_bdd_116)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((ap_const_lv1_0 == exitcond4_fu_519_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            if (~(ap_const_lv1_0 == exitcond3_fu_544_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            if (((ap_const_lv1_0 == tmp_15_reg_817) | ~(ap_const_lv1_0 == exitcond2_fu_585_p2))) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else if ((~(ap_const_lv1_0 == tmp_15_reg_817) & (ap_const_lv1_0 == exitcond2_fu_585_p2) & (ap_const_lv1_0 == tmp_22_fu_597_p2))) begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st15_fsm_14 : 
        begin
            if (((tmp_4_reg_731 == ap_const_lv1_0) | ~(ap_const_lv1_0 == exitcond1_fu_652_p2))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end
        end
        ap_ST_st16_fsm_15 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_677_p2)) begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end
        end
        ap_ST_st17_fsm_16 : 
        begin
            if (~ap_sig_bdd_336) begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_din = arrayC_q0;

/// ap_sig_bdd_116 assign process. ///
always @ (A_empty_n or B_empty_n or exitcond5_fu_439_p2 or or_cond_fu_456_p2 or or_cond7_fu_477_p2)
begin
    ap_sig_bdd_116 = (((A_empty_n == ap_const_logic_0) & (ap_const_lv1_0 == exitcond5_fu_439_p2) & ~(ap_const_lv1_0 == or_cond_fu_456_p2)) | ((ap_const_lv1_0 == exitcond5_fu_439_p2) & (B_empty_n == ap_const_logic_0) & ~(ap_const_lv1_0 == or_cond7_fu_477_p2)));
end

/// ap_sig_bdd_126 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_126 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_142 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_142 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_164 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_164 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_192 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_192 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_203 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_203 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_214 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_214 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_234 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_234 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_311 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_311 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_33 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_33 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_330 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_330 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_336 assign process. ///
always @ (C_full_n or tmp_17_reg_899)
begin
    ap_sig_bdd_336 = ((C_full_n == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_17_reg_899));
end

/// ap_sig_bdd_379 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_379 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_509 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_509 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_76 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_76 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_99 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_99 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end
assign arrayA_d0 = A_dout;
assign arrayB_d0 = B_dout;
assign exitcond1_fu_652_p2 = (i_2_reg_322 == ap_const_lv7_64? 1'b1: 1'b0);
assign exitcond2_fu_585_p2 = (k_reg_300 == ap_const_lv7_64? 1'b1: 1'b0);
assign exitcond3_fu_544_p2 = (j_1_reg_289 == ap_const_lv7_64? 1'b1: 1'b0);
assign exitcond4_fu_519_p2 = (i_1_reg_266 == ap_const_lv7_64? 1'b1: 1'b0);
assign exitcond5_fu_439_p2 = (j_reg_255 == ap_const_lv7_64? 1'b1: 1'b0);
assign exitcond6_fu_409_p2 = (i_reg_208 == ap_const_lv7_64? 1'b1: 1'b0);
assign exitcond_fu_677_p2 = (j_2_reg_345 == ap_const_lv7_64? 1'b1: 1'b0);
assign grp_fu_629_ce = ap_const_logic_1;
assign grp_fu_629_p0 = arrayB_load_reg_858;
assign grp_fu_629_p1 = arrayA_load_reg_853;
assign i_1_cast8_fu_515_p1 = i_1_reg_266;
assign i_2_cast4_fu_648_p1 = i_2_reg_322;
assign i_3_fu_415_p2 = (i_reg_208 + ap_const_lv7_1);
assign i_4_fu_525_p2 = (i_1_reg_266 + ap_const_lv7_1);
assign i_5_fu_658_p2 = (i_2_reg_322 + ap_const_lv7_1);
assign i_cast1_fu_405_p1 = i_reg_208;
assign j_1_cast7_cast_fu_540_p1 = j_1_reg_289;
assign j_1_cast7_fu_536_p1 = j_1_reg_289;
assign j_2_cast2_cast_fu_673_p1 = j_2_reg_345;
assign j_2_cast2_fu_669_p1 = j_2_reg_345;
assign j_3_fu_445_p2 = (j_reg_255 + ap_const_lv7_1);
assign j_4_fu_683_p2 = (j_2_reg_345 + ap_const_lv7_1);
assign j_5_fu_550_p2 = (j_1_reg_289 + ap_const_lv7_1);
assign j_cast9_cast_fu_435_p1 = j_reg_255;
assign j_cast9_fu_431_p1 = j_reg_255;
assign k_1_fu_591_p2 = (k_reg_300 + ap_const_lv7_1);
assign k_cast6_cast_fu_581_p1 = k_reg_300;
assign k_cast6_fu_577_p1 = k_reg_300;
assign next_mul1_fu_393_p2 = (phi_mul1_reg_231 + ap_const_lv14_64);
assign next_mul2_fu_399_p2 = (phi_mul_reg_219 + ap_const_lv14_64);
assign next_mul3_fu_509_p2 = (phi_mul3_reg_277 + ap_const_lv14_64);
assign next_mul4_fu_642_p2 = (phi_mul4_reg_333 + ap_const_lv14_64);
assign next_mul5_fu_602_p2 = (phi_mul5_reg_311 + ap_const_lv14_64);
assign next_mul_fu_387_p2 = (phi_mul2_reg_243 + ap_const_lv14_64);
assign or_cond7_fu_477_p2 = (tmp_8_reg_764 & tmp_13_fu_472_p2);
assign or_cond8_fu_493_p2 = (tmp_5_reg_758 & tmp_13_fu_472_p2);
assign or_cond_fu_456_p2 = (tmp_5_reg_758 & tmp_7_fu_451_p2);
assign p_addr1_fu_608_p2 = (k_cast6_cast_fu_581_p1 + phi_mul3_reg_277);
assign p_addr2_fu_699_p2 = (j_2_cast2_cast_fu_673_p1 + phi_mul4_reg_333);
assign p_addr3_fu_461_p2 = (j_cast9_cast_fu_435_p1 + phi_mul_reg_219);
assign p_addr4_fu_498_p2 = (j_cast9_cast_fu_435_p1 + phi_mul2_reg_243);
assign p_addr6_fu_619_p2 = (j_1_cast7_cast_reg_804 + phi_mul5_reg_311);
assign p_addr9_fu_482_p2 = (j_cast9_cast_fu_435_p1 + phi_mul1_reg_231);
assign p_addr_fu_566_p2 = (j_1_cast7_cast_fu_540_p1 + phi_mul3_reg_277);
assign tmp1_fu_375_p2 = (tmp_1_fu_363_p2 & tmp_3_fu_369_p2);
assign tmp_10_fu_664_p2 = (i_2_cast4_fu_648_p1 < mC? 1'b1: 1'b0);
assign tmp_12_fu_467_p1 = p_addr3_fu_461_p2;
assign tmp_13_fu_472_p2 = (j_cast9_fu_431_p1 < nC? 1'b1: 1'b0);
assign tmp_14_fu_556_p2 = (j_1_cast7_fu_536_p1 < nC? 1'b1: 1'b0);
assign tmp_15_fu_561_p2 = (tmp_9_reg_799 & tmp_14_fu_556_p2);
assign tmp_16_fu_689_p2 = (j_2_cast2_fu_669_p1 < nC? 1'b1: 1'b0);
assign tmp_17_fu_694_p2 = (tmp_10_reg_886 & tmp_16_fu_689_p2);
assign tmp_18_fu_572_p1 = p_addr_fu_566_p2;
assign tmp_19_fu_488_p1 = p_addr9_fu_482_p2;
assign tmp_1_fu_363_p2 = (mA == mC? 1'b1: 1'b0);
assign tmp_20_fu_705_p1 = p_addr2_fu_699_p2;
assign tmp_21_fu_504_p1 = p_addr4_fu_498_p2;
assign tmp_22_fu_597_p2 = (k_cast6_fu_577_p1 < mB? 1'b1: 1'b0);
assign tmp_23_fu_614_p1 = p_addr1_fu_608_p2;
assign tmp_24_fu_624_p1 = p_addr6_fu_619_p2;
assign tmp_26_fu_633_p1 = tmp_25_reg_863;
assign tmp_27_fu_636_p2 = ($signed(arrayC_load_1_reg_868) + $signed(tmp_26_fu_633_p1));
assign tmp_3_fu_369_p2 = (nB == nC? 1'b1: 1'b0);
assign tmp_4_fu_381_p2 = (tmp1_fu_375_p2 & tmp_fu_357_p2);
assign tmp_5_fu_421_p2 = (i_cast1_fu_405_p1 < mC? 1'b1: 1'b0);
assign tmp_7_fu_451_p2 = (j_cast9_fu_431_p1 < mB? 1'b1: 1'b0);
assign tmp_8_fu_426_p2 = (i_cast1_fu_405_p1 < mB? 1'b1: 1'b0);
assign tmp_9_fu_531_p2 = (i_1_cast8_fu_515_p1 < mC? 1'b1: 1'b0);
assign tmp_fu_357_p2 = (nA == mB? 1'b1: 1'b0);
always @ (posedge ap_clk)
begin
    j_1_cast7_cast_reg_804[13:7] <= 7'b0000000;
end



endmodule //MAT_Multiply

