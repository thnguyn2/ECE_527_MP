// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "MAT_Multiply.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic MAT_Multiply::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic MAT_Multiply::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<21> MAT_Multiply::ap_ST_st1_fsm_0 = "1";
const sc_lv<21> MAT_Multiply::ap_ST_st2_fsm_1 = "10";
const sc_lv<21> MAT_Multiply::ap_ST_st3_fsm_2 = "100";
const sc_lv<21> MAT_Multiply::ap_ST_st4_fsm_3 = "1000";
const sc_lv<21> MAT_Multiply::ap_ST_st5_fsm_4 = "10000";
const sc_lv<21> MAT_Multiply::ap_ST_st6_fsm_5 = "100000";
const sc_lv<21> MAT_Multiply::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<21> MAT_Multiply::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<21> MAT_Multiply::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<21> MAT_Multiply::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<21> MAT_Multiply::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<21> MAT_Multiply::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<21> MAT_Multiply::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<21> MAT_Multiply::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<21> MAT_Multiply::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<21> MAT_Multiply::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<21> MAT_Multiply::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<21> MAT_Multiply::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<21> MAT_Multiply::ap_ST_st19_fsm_18 = "1000000000000000000";
const sc_lv<21> MAT_Multiply::ap_ST_st20_fsm_19 = "10000000000000000000";
const sc_lv<21> MAT_Multiply::ap_ST_st21_fsm_20 = "100000000000000000000";
const sc_lv<32> MAT_Multiply::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> MAT_Multiply::ap_const_lv1_1 = "1";
const sc_lv<32> MAT_Multiply::ap_const_lv32_2 = "10";
const sc_lv<1> MAT_Multiply::ap_const_lv1_0 = "0";
const sc_lv<32> MAT_Multiply::ap_const_lv32_3 = "11";
const sc_lv<32> MAT_Multiply::ap_const_lv32_5 = "101";
const sc_lv<32> MAT_Multiply::ap_const_lv32_8 = "1000";
const sc_lv<32> MAT_Multiply::ap_const_lv32_D = "1101";
const sc_lv<32> MAT_Multiply::ap_const_lv32_E = "1110";
const sc_lv<32> MAT_Multiply::ap_const_lv32_10 = "10000";
const sc_lv<32> MAT_Multiply::ap_const_lv32_11 = "10001";
const sc_lv<10> MAT_Multiply::ap_const_lv10_0 = "0000000000";
const sc_lv<32> MAT_Multiply::ap_const_lv32_1 = "1";
const sc_lv<20> MAT_Multiply::ap_const_lv20_0 = "00000000000000000000";
const sc_lv<32> MAT_Multiply::ap_const_lv32_4 = "100";
const sc_lv<32> MAT_Multiply::ap_const_lv32_F = "1111";
const sc_lv<32> MAT_Multiply::ap_const_lv32_14 = "10100";
const sc_lv<64> MAT_Multiply::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> MAT_Multiply::ap_const_lv32_B = "1011";
const sc_lv<32> MAT_Multiply::ap_const_lv32_C = "1100";
const sc_lv<32> MAT_Multiply::ap_const_lv32_12 = "10010";
const sc_lv<32> MAT_Multiply::ap_const_lv32_13 = "10011";
const sc_lv<32> MAT_Multiply::ap_const_lv32_6 = "110";
const sc_lv<32> MAT_Multiply::ap_const_lv32_7 = "111";
const sc_lv<20> MAT_Multiply::ap_const_lv20_3E8 = "1111101000";
const sc_lv<10> MAT_Multiply::ap_const_lv10_3E8 = "1111101000";
const sc_lv<10> MAT_Multiply::ap_const_lv10_1 = "1";

MAT_Multiply::MAT_Multiply(sc_module_name name) : sc_module(name), mVcdFile(0) {
    arrayA_U = new MAT_Multiply_arrayA("arrayA_U");
    arrayA_U->clk(ap_clk);
    arrayA_U->reset(ap_rst);
    arrayA_U->address0(arrayA_address0);
    arrayA_U->ce0(arrayA_ce0);
    arrayA_U->we0(arrayA_we0);
    arrayA_U->d0(arrayA_d0);
    arrayA_U->q0(arrayA_q0);
    arrayB_U = new MAT_Multiply_arrayA("arrayB_U");
    arrayB_U->clk(ap_clk);
    arrayB_U->reset(ap_rst);
    arrayB_U->address0(arrayB_address0);
    arrayB_U->ce0(arrayB_ce0);
    arrayB_U->we0(arrayB_we0);
    arrayB_U->d0(arrayB_d0);
    arrayB_U->q0(arrayB_q0);
    arrayC_U = new MAT_Multiply_arrayC("arrayC_U");
    arrayC_U->clk(ap_clk);
    arrayC_U->reset(ap_rst);
    arrayC_U->address0(arrayC_address0);
    arrayC_U->ce0(arrayC_ce0);
    arrayC_U->we0(arrayC_we0);
    arrayC_U->d0(arrayC_d0);
    arrayC_U->q0(arrayC_q0);
    grp_MAT_Multiply_load_mat_fu_262 = new MAT_Multiply_load_mat("grp_MAT_Multiply_load_mat_fu_262");
    grp_MAT_Multiply_load_mat_fu_262->ap_clk(ap_clk);
    grp_MAT_Multiply_load_mat_fu_262->ap_rst(ap_rst);
    grp_MAT_Multiply_load_mat_fu_262->ap_start(grp_MAT_Multiply_load_mat_fu_262_ap_start);
    grp_MAT_Multiply_load_mat_fu_262->ap_done(grp_MAT_Multiply_load_mat_fu_262_ap_done);
    grp_MAT_Multiply_load_mat_fu_262->ap_idle(grp_MAT_Multiply_load_mat_fu_262_ap_idle);
    grp_MAT_Multiply_load_mat_fu_262->ap_ready(grp_MAT_Multiply_load_mat_fu_262_ap_ready);
    grp_MAT_Multiply_load_mat_fu_262->X_dout(grp_MAT_Multiply_load_mat_fu_262_X_dout);
    grp_MAT_Multiply_load_mat_fu_262->X_empty_n(grp_MAT_Multiply_load_mat_fu_262_X_empty_n);
    grp_MAT_Multiply_load_mat_fu_262->X_read(grp_MAT_Multiply_load_mat_fu_262_X_read);
    grp_MAT_Multiply_load_mat_fu_262->arrayX_address0(grp_MAT_Multiply_load_mat_fu_262_arrayX_address0);
    grp_MAT_Multiply_load_mat_fu_262->arrayX_ce0(grp_MAT_Multiply_load_mat_fu_262_arrayX_ce0);
    grp_MAT_Multiply_load_mat_fu_262->arrayX_we0(grp_MAT_Multiply_load_mat_fu_262_arrayX_we0);
    grp_MAT_Multiply_load_mat_fu_262->arrayX_d0(grp_MAT_Multiply_load_mat_fu_262_arrayX_d0);
    grp_MAT_Multiply_load_mat_fu_262->m(grp_MAT_Multiply_load_mat_fu_262_m);
    grp_MAT_Multiply_load_mat_fu_262->n(grp_MAT_Multiply_load_mat_fu_262_n);
    grp_MAT_Multiply_load_mat_fu_274 = new MAT_Multiply_load_mat("grp_MAT_Multiply_load_mat_fu_274");
    grp_MAT_Multiply_load_mat_fu_274->ap_clk(ap_clk);
    grp_MAT_Multiply_load_mat_fu_274->ap_rst(ap_rst);
    grp_MAT_Multiply_load_mat_fu_274->ap_start(grp_MAT_Multiply_load_mat_fu_274_ap_start);
    grp_MAT_Multiply_load_mat_fu_274->ap_done(grp_MAT_Multiply_load_mat_fu_274_ap_done);
    grp_MAT_Multiply_load_mat_fu_274->ap_idle(grp_MAT_Multiply_load_mat_fu_274_ap_idle);
    grp_MAT_Multiply_load_mat_fu_274->ap_ready(grp_MAT_Multiply_load_mat_fu_274_ap_ready);
    grp_MAT_Multiply_load_mat_fu_274->X_dout(grp_MAT_Multiply_load_mat_fu_274_X_dout);
    grp_MAT_Multiply_load_mat_fu_274->X_empty_n(grp_MAT_Multiply_load_mat_fu_274_X_empty_n);
    grp_MAT_Multiply_load_mat_fu_274->X_read(grp_MAT_Multiply_load_mat_fu_274_X_read);
    grp_MAT_Multiply_load_mat_fu_274->arrayX_address0(grp_MAT_Multiply_load_mat_fu_274_arrayX_address0);
    grp_MAT_Multiply_load_mat_fu_274->arrayX_ce0(grp_MAT_Multiply_load_mat_fu_274_arrayX_ce0);
    grp_MAT_Multiply_load_mat_fu_274->arrayX_we0(grp_MAT_Multiply_load_mat_fu_274_arrayX_we0);
    grp_MAT_Multiply_load_mat_fu_274->arrayX_d0(grp_MAT_Multiply_load_mat_fu_274_arrayX_d0);
    grp_MAT_Multiply_load_mat_fu_274->m(grp_MAT_Multiply_load_mat_fu_274_m);
    grp_MAT_Multiply_load_mat_fu_274->n(grp_MAT_Multiply_load_mat_fu_274_n);
    MAT_Multiply_mul_32s_32s_32_6_U5 = new MAT_Multiply_mul_32s_32s_32_6<1,6,32,32,32>("MAT_Multiply_mul_32s_32s_32_6_U5");
    MAT_Multiply_mul_32s_32s_32_6_U5->clk(ap_clk);
    MAT_Multiply_mul_32s_32s_32_6_U5->reset(ap_rst);
    MAT_Multiply_mul_32s_32s_32_6_U5->din0(grp_fu_436_p0);
    MAT_Multiply_mul_32s_32s_32_6_U5->din1(grp_fu_436_p1);
    MAT_Multiply_mul_32s_32s_32_6_U5->ce(grp_fu_436_ce);
    MAT_Multiply_mul_32s_32s_32_6_U5->dout(grp_fu_436_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_read);
    sensitive << ( grp_MAT_Multiply_load_mat_fu_262_X_read );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_B_read);
    sensitive << ( grp_MAT_Multiply_load_mat_fu_274_X_read );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_C_din);
    sensitive << ( tmp_12_reg_658 );
    sensitive << ( arrayC_q0 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_bdd_324 );

    SC_METHOD(thread_C_write);
    sensitive << ( tmp_12_reg_658 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_bdd_324 );

    SC_METHOD(thread_ap_done);
    sensitive << ( tmp_s_reg_541 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( exitcond1_fu_462_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( tmp_s_reg_541 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( exitcond1_fu_462_p2 );

    SC_METHOD(thread_ap_sig_bdd_115);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_143);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_154);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_163);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_172);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_192);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_269);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_292);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_299);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_318);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_324);
    sensitive << ( C_full_n );
    sensitive << ( tmp_12_reg_658 );

    SC_METHOD(thread_ap_sig_bdd_349);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_356);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_368);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_376);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_389);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_397);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_80);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_97);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_bdd_349 );

    SC_METHOD(thread_ap_sig_cseq_ST_st13_fsm_12);
    sensitive << ( ap_sig_bdd_356 );

    SC_METHOD(thread_ap_sig_cseq_ST_st14_fsm_13);
    sensitive << ( ap_sig_bdd_154 );

    SC_METHOD(thread_ap_sig_cseq_ST_st15_fsm_14);
    sensitive << ( ap_sig_bdd_163 );

    SC_METHOD(thread_ap_sig_cseq_ST_st16_fsm_15);
    sensitive << ( ap_sig_bdd_299 );

    SC_METHOD(thread_ap_sig_cseq_ST_st17_fsm_16);
    sensitive << ( ap_sig_bdd_172 );

    SC_METHOD(thread_ap_sig_cseq_ST_st18_fsm_17);
    sensitive << ( ap_sig_bdd_192 );

    SC_METHOD(thread_ap_sig_cseq_ST_st19_fsm_18);
    sensitive << ( ap_sig_bdd_368 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_37 );

    SC_METHOD(thread_ap_sig_cseq_ST_st20_fsm_19);
    sensitive << ( ap_sig_bdd_376 );

    SC_METHOD(thread_ap_sig_cseq_ST_st21_fsm_20);
    sensitive << ( ap_sig_bdd_318 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_269 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_80 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_97 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_bdd_292 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_bdd_115 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_bdd_389 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_bdd_397 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_bdd_143 );

    SC_METHOD(thread_arrayA_address0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( grp_MAT_Multiply_load_mat_fu_262_arrayX_address0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( tmp_15_fu_421_p1 );

    SC_METHOD(thread_arrayA_ce0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( grp_MAT_Multiply_load_mat_fu_262_arrayX_ce0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_arrayA_d0);
    sensitive << ( grp_MAT_Multiply_load_mat_fu_262_arrayX_d0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_arrayA_we0);
    sensitive << ( grp_MAT_Multiply_load_mat_fu_262_arrayX_we0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_arrayB_address0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( grp_MAT_Multiply_load_mat_fu_274_arrayX_address0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( tmp_16_fu_431_p1 );

    SC_METHOD(thread_arrayB_ce0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( grp_MAT_Multiply_load_mat_fu_274_arrayX_ce0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_arrayB_d0);
    sensitive << ( grp_MAT_Multiply_load_mat_fu_274_arrayX_d0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_arrayB_we0);
    sensitive << ( grp_MAT_Multiply_load_mat_fu_274_arrayX_we0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_arrayC_address0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( arrayC_addr_reg_576 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( tmp_6_fu_369_p1 );
    sensitive << ( tmp_13_fu_515_p1 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );

    SC_METHOD(thread_arrayC_ce0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st14_fsm_13 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st16_fsm_15 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_bdd_324 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );
    sensitive << ( ap_sig_cseq_ST_st13_fsm_12 );
    sensitive << ( ap_sig_cseq_ST_st19_fsm_18 );
    sensitive << ( ap_sig_cseq_ST_st20_fsm_19 );

    SC_METHOD(thread_arrayC_d0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_19_fu_445_p2 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );

    SC_METHOD(thread_arrayC_we0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( exitcond3_fu_351_p2 );
    sensitive << ( ap_sig_cseq_ST_st15_fsm_14 );

    SC_METHOD(thread_exitcond1_fu_462_p2);
    sensitive << ( tmp_s_reg_541 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( i_1_reg_227 );

    SC_METHOD(thread_exitcond2_fu_392_p2);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( k_reg_205 );

    SC_METHOD(thread_exitcond3_fu_351_p2);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( j_reg_194 );

    SC_METHOD(thread_exitcond4_fu_326_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( i_reg_171 );

    SC_METHOD(thread_exitcond_fu_487_p2);
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( j_1_reg_250 );

    SC_METHOD(thread_grp_MAT_Multiply_load_mat_fu_262_X_dout);
    sensitive << ( A_dout );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_grp_MAT_Multiply_load_mat_fu_262_X_empty_n);
    sensitive << ( A_empty_n );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_grp_MAT_Multiply_load_mat_fu_262_ap_start);
    sensitive << ( grp_MAT_Multiply_load_mat_fu_262_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_MAT_Multiply_load_mat_fu_262_m);
    sensitive << ( mC );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_grp_MAT_Multiply_load_mat_fu_262_n);
    sensitive << ( mB );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_grp_MAT_Multiply_load_mat_fu_274_X_dout);
    sensitive << ( B_dout );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_grp_MAT_Multiply_load_mat_fu_274_X_empty_n);
    sensitive << ( B_empty_n );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_grp_MAT_Multiply_load_mat_fu_274_ap_start);
    sensitive << ( grp_MAT_Multiply_load_mat_fu_274_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_MAT_Multiply_load_mat_fu_274_m);
    sensitive << ( mB );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_grp_MAT_Multiply_load_mat_fu_274_n);
    sensitive << ( nC );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_grp_fu_436_ce);

    SC_METHOD(thread_grp_fu_436_p0);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( arrayB_q0 );

    SC_METHOD(thread_grp_fu_436_p1);
    sensitive << ( arrayA_q0 );
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );

    SC_METHOD(thread_i_1_cast4_fu_458_p1);
    sensitive << ( i_1_reg_227 );

    SC_METHOD(thread_i_2_fu_332_p2);
    sensitive << ( i_reg_171 );

    SC_METHOD(thread_i_3_fu_468_p2);
    sensitive << ( i_1_reg_227 );

    SC_METHOD(thread_i_cast8_fu_322_p1);
    sensitive << ( i_reg_171 );

    SC_METHOD(thread_j_1_cast2_cast_fu_483_p1);
    sensitive << ( j_1_reg_250 );

    SC_METHOD(thread_j_1_cast2_fu_479_p1);
    sensitive << ( j_1_reg_250 );

    SC_METHOD(thread_j_2_fu_357_p2);
    sensitive << ( j_reg_194 );

    SC_METHOD(thread_j_3_fu_493_p2);
    sensitive << ( j_1_reg_250 );

    SC_METHOD(thread_j_cast7_cast_fu_347_p1);
    sensitive << ( j_reg_194 );

    SC_METHOD(thread_j_cast7_fu_343_p1);
    sensitive << ( j_reg_194 );

    SC_METHOD(thread_k_1_fu_398_p2);
    sensitive << ( k_reg_205 );

    SC_METHOD(thread_k_cast6_cast_fu_388_p1);
    sensitive << ( k_reg_205 );

    SC_METHOD(thread_k_cast6_fu_384_p1);
    sensitive << ( k_reg_205 );

    SC_METHOD(thread_next_mul1_fu_316_p2);
    sensitive << ( phi_mul1_reg_182 );

    SC_METHOD(thread_next_mul2_fu_452_p2);
    sensitive << ( phi_mul2_reg_238 );

    SC_METHOD(thread_next_mul_fu_404_p2);
    sensitive << ( phi_mul_reg_216 );

    SC_METHOD(thread_p_addr1_fu_415_p2);
    sensitive << ( phi_mul1_reg_182 );
    sensitive << ( k_cast6_cast_fu_388_p1 );

    SC_METHOD(thread_p_addr4_fu_426_p2);
    sensitive << ( j_cast7_cast_reg_563 );
    sensitive << ( phi_mul_reg_216 );

    SC_METHOD(thread_p_addr6_fu_509_p2);
    sensitive << ( phi_mul2_reg_238 );
    sensitive << ( j_1_cast2_cast_fu_483_p1 );

    SC_METHOD(thread_p_addr_fu_363_p2);
    sensitive << ( j_cast7_cast_fu_347_p1 );
    sensitive << ( phi_mul1_reg_182 );

    SC_METHOD(thread_tmp1_fu_304_p2);
    sensitive << ( tmp_7_fu_292_p2 );
    sensitive << ( tmp_9_fu_298_p2 );

    SC_METHOD(thread_tmp_10_fu_379_p2);
    sensitive << ( tmp_2_reg_558 );
    sensitive << ( tmp_5_fu_374_p2 );

    SC_METHOD(thread_tmp_11_fu_499_p2);
    sensitive << ( nC );
    sensitive << ( ap_sig_cseq_ST_st18_fsm_17 );
    sensitive << ( exitcond_fu_487_p2 );
    sensitive << ( j_1_cast2_fu_479_p1 );

    SC_METHOD(thread_tmp_12_fu_504_p2);
    sensitive << ( tmp_3_reg_645 );
    sensitive << ( tmp_11_fu_499_p2 );

    SC_METHOD(thread_tmp_13_fu_515_p1);
    sensitive << ( p_addr6_fu_509_p2 );

    SC_METHOD(thread_tmp_14_fu_410_p2);
    sensitive << ( mB );
    sensitive << ( tmp_10_reg_581 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( exitcond2_fu_392_p2 );
    sensitive << ( k_cast6_fu_384_p1 );

    SC_METHOD(thread_tmp_15_fu_421_p1);
    sensitive << ( p_addr1_fu_415_p2 );

    SC_METHOD(thread_tmp_16_fu_431_p1);
    sensitive << ( p_addr4_fu_426_p2 );

    SC_METHOD(thread_tmp_18_fu_442_p1);
    sensitive << ( tmp_17_reg_622 );

    SC_METHOD(thread_tmp_19_fu_445_p2);
    sensitive << ( arrayC_q0 );
    sensitive << ( tmp_18_fu_442_p1 );

    SC_METHOD(thread_tmp_2_fu_338_p2);
    sensitive << ( mC );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond4_fu_326_p2 );
    sensitive << ( i_cast8_fu_322_p1 );

    SC_METHOD(thread_tmp_3_fu_474_p2);
    sensitive << ( mC );
    sensitive << ( tmp_s_reg_541 );
    sensitive << ( ap_sig_cseq_ST_st17_fsm_16 );
    sensitive << ( exitcond1_fu_462_p2 );
    sensitive << ( i_1_cast4_fu_458_p1 );

    SC_METHOD(thread_tmp_5_fu_374_p2);
    sensitive << ( nC );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( exitcond3_fu_351_p2 );
    sensitive << ( j_cast7_fu_343_p1 );

    SC_METHOD(thread_tmp_6_fu_369_p1);
    sensitive << ( p_addr_fu_363_p2 );

    SC_METHOD(thread_tmp_7_fu_292_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( mA );
    sensitive << ( mC );

    SC_METHOD(thread_tmp_9_fu_298_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( nB );
    sensitive << ( nC );

    SC_METHOD(thread_tmp_fu_286_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( nA );
    sensitive << ( mB );

    SC_METHOD(thread_tmp_s_fu_310_p2);
    sensitive << ( tmp1_fu_304_p2 );
    sensitive << ( tmp_fu_286_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_fu_310_p2 );
    sensitive << ( tmp_s_reg_541 );
    sensitive << ( exitcond4_fu_326_p2 );
    sensitive << ( exitcond3_fu_351_p2 );
    sensitive << ( tmp_10_reg_581 );
    sensitive << ( exitcond2_fu_392_p2 );
    sensitive << ( tmp_14_fu_410_p2 );
    sensitive << ( exitcond1_fu_462_p2 );
    sensitive << ( tmp_12_fu_504_p2 );
    sensitive << ( exitcond_fu_487_p2 );
    sensitive << ( grp_MAT_Multiply_load_mat_fu_262_ap_done );
    sensitive << ( grp_MAT_Multiply_load_mat_fu_274_ap_done );
    sensitive << ( ap_sig_bdd_324 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000000000000000001";
    grp_MAT_Multiply_load_mat_fu_262_ap_start_ap_start_reg = SC_LOGIC_0;
    grp_MAT_Multiply_load_mat_fu_274_ap_start_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "MAT_Multiply_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_dout, "(port)A_dout");
    sc_trace(mVcdFile, A_empty_n, "(port)A_empty_n");
    sc_trace(mVcdFile, A_read, "(port)A_read");
    sc_trace(mVcdFile, B_dout, "(port)B_dout");
    sc_trace(mVcdFile, B_empty_n, "(port)B_empty_n");
    sc_trace(mVcdFile, B_read, "(port)B_read");
    sc_trace(mVcdFile, C_din, "(port)C_din");
    sc_trace(mVcdFile, C_full_n, "(port)C_full_n");
    sc_trace(mVcdFile, C_write, "(port)C_write");
    sc_trace(mVcdFile, mA, "(port)mA");
    sc_trace(mVcdFile, nA, "(port)nA");
    sc_trace(mVcdFile, mB, "(port)mB");
    sc_trace(mVcdFile, nB, "(port)nB");
    sc_trace(mVcdFile, mC, "(port)mC");
    sc_trace(mVcdFile, nC, "(port)nC");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_37, "ap_sig_bdd_37");
    sc_trace(mVcdFile, tmp_s_fu_310_p2, "tmp_s_fu_310_p2");
    sc_trace(mVcdFile, tmp_s_reg_541, "tmp_s_reg_541");
    sc_trace(mVcdFile, next_mul1_fu_316_p2, "next_mul1_fu_316_p2");
    sc_trace(mVcdFile, next_mul1_reg_545, "next_mul1_reg_545");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_80, "ap_sig_bdd_80");
    sc_trace(mVcdFile, i_2_fu_332_p2, "i_2_fu_332_p2");
    sc_trace(mVcdFile, i_2_reg_553, "i_2_reg_553");
    sc_trace(mVcdFile, tmp_2_fu_338_p2, "tmp_2_fu_338_p2");
    sc_trace(mVcdFile, tmp_2_reg_558, "tmp_2_reg_558");
    sc_trace(mVcdFile, exitcond4_fu_326_p2, "exitcond4_fu_326_p2");
    sc_trace(mVcdFile, j_cast7_cast_fu_347_p1, "j_cast7_cast_fu_347_p1");
    sc_trace(mVcdFile, j_cast7_cast_reg_563, "j_cast7_cast_reg_563");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_97, "ap_sig_bdd_97");
    sc_trace(mVcdFile, j_2_fu_357_p2, "j_2_fu_357_p2");
    sc_trace(mVcdFile, j_2_reg_571, "j_2_reg_571");
    sc_trace(mVcdFile, arrayC_addr_reg_576, "arrayC_addr_reg_576");
    sc_trace(mVcdFile, exitcond3_fu_351_p2, "exitcond3_fu_351_p2");
    sc_trace(mVcdFile, tmp_10_fu_379_p2, "tmp_10_fu_379_p2");
    sc_trace(mVcdFile, tmp_10_reg_581, "tmp_10_reg_581");
    sc_trace(mVcdFile, k_1_fu_398_p2, "k_1_fu_398_p2");
    sc_trace(mVcdFile, k_1_reg_588, "k_1_reg_588");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_115, "ap_sig_bdd_115");
    sc_trace(mVcdFile, next_mul_fu_404_p2, "next_mul_fu_404_p2");
    sc_trace(mVcdFile, next_mul_reg_593, "next_mul_reg_593");
    sc_trace(mVcdFile, exitcond2_fu_392_p2, "exitcond2_fu_392_p2");
    sc_trace(mVcdFile, tmp_14_fu_410_p2, "tmp_14_fu_410_p2");
    sc_trace(mVcdFile, arrayA_q0, "arrayA_q0");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_bdd_143, "ap_sig_bdd_143");
    sc_trace(mVcdFile, arrayB_q0, "arrayB_q0");
    sc_trace(mVcdFile, grp_fu_436_p2, "grp_fu_436_p2");
    sc_trace(mVcdFile, tmp_17_reg_622, "tmp_17_reg_622");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st14_fsm_13, "ap_sig_cseq_ST_st14_fsm_13");
    sc_trace(mVcdFile, ap_sig_bdd_154, "ap_sig_bdd_154");
    sc_trace(mVcdFile, tmp_19_fu_445_p2, "tmp_19_fu_445_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st15_fsm_14, "ap_sig_cseq_ST_st15_fsm_14");
    sc_trace(mVcdFile, ap_sig_bdd_163, "ap_sig_bdd_163");
    sc_trace(mVcdFile, next_mul2_fu_452_p2, "next_mul2_fu_452_p2");
    sc_trace(mVcdFile, next_mul2_reg_632, "next_mul2_reg_632");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st17_fsm_16, "ap_sig_cseq_ST_st17_fsm_16");
    sc_trace(mVcdFile, ap_sig_bdd_172, "ap_sig_bdd_172");
    sc_trace(mVcdFile, i_3_fu_468_p2, "i_3_fu_468_p2");
    sc_trace(mVcdFile, i_3_reg_640, "i_3_reg_640");
    sc_trace(mVcdFile, tmp_3_fu_474_p2, "tmp_3_fu_474_p2");
    sc_trace(mVcdFile, tmp_3_reg_645, "tmp_3_reg_645");
    sc_trace(mVcdFile, exitcond1_fu_462_p2, "exitcond1_fu_462_p2");
    sc_trace(mVcdFile, j_3_fu_493_p2, "j_3_fu_493_p2");
    sc_trace(mVcdFile, j_3_reg_653, "j_3_reg_653");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st18_fsm_17, "ap_sig_cseq_ST_st18_fsm_17");
    sc_trace(mVcdFile, ap_sig_bdd_192, "ap_sig_bdd_192");
    sc_trace(mVcdFile, tmp_12_fu_504_p2, "tmp_12_fu_504_p2");
    sc_trace(mVcdFile, tmp_12_reg_658, "tmp_12_reg_658");
    sc_trace(mVcdFile, exitcond_fu_487_p2, "exitcond_fu_487_p2");
    sc_trace(mVcdFile, arrayA_address0, "arrayA_address0");
    sc_trace(mVcdFile, arrayA_ce0, "arrayA_ce0");
    sc_trace(mVcdFile, arrayA_we0, "arrayA_we0");
    sc_trace(mVcdFile, arrayA_d0, "arrayA_d0");
    sc_trace(mVcdFile, arrayB_address0, "arrayB_address0");
    sc_trace(mVcdFile, arrayB_ce0, "arrayB_ce0");
    sc_trace(mVcdFile, arrayB_we0, "arrayB_we0");
    sc_trace(mVcdFile, arrayB_d0, "arrayB_d0");
    sc_trace(mVcdFile, arrayC_address0, "arrayC_address0");
    sc_trace(mVcdFile, arrayC_ce0, "arrayC_ce0");
    sc_trace(mVcdFile, arrayC_we0, "arrayC_we0");
    sc_trace(mVcdFile, arrayC_d0, "arrayC_d0");
    sc_trace(mVcdFile, arrayC_q0, "arrayC_q0");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_262_ap_start, "grp_MAT_Multiply_load_mat_fu_262_ap_start");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_262_ap_done, "grp_MAT_Multiply_load_mat_fu_262_ap_done");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_262_ap_idle, "grp_MAT_Multiply_load_mat_fu_262_ap_idle");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_262_ap_ready, "grp_MAT_Multiply_load_mat_fu_262_ap_ready");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_262_X_dout, "grp_MAT_Multiply_load_mat_fu_262_X_dout");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_262_X_empty_n, "grp_MAT_Multiply_load_mat_fu_262_X_empty_n");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_262_X_read, "grp_MAT_Multiply_load_mat_fu_262_X_read");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_262_arrayX_address0, "grp_MAT_Multiply_load_mat_fu_262_arrayX_address0");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_262_arrayX_ce0, "grp_MAT_Multiply_load_mat_fu_262_arrayX_ce0");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_262_arrayX_we0, "grp_MAT_Multiply_load_mat_fu_262_arrayX_we0");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_262_arrayX_d0, "grp_MAT_Multiply_load_mat_fu_262_arrayX_d0");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_262_m, "grp_MAT_Multiply_load_mat_fu_262_m");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_262_n, "grp_MAT_Multiply_load_mat_fu_262_n");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_274_ap_start, "grp_MAT_Multiply_load_mat_fu_274_ap_start");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_274_ap_done, "grp_MAT_Multiply_load_mat_fu_274_ap_done");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_274_ap_idle, "grp_MAT_Multiply_load_mat_fu_274_ap_idle");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_274_ap_ready, "grp_MAT_Multiply_load_mat_fu_274_ap_ready");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_274_X_dout, "grp_MAT_Multiply_load_mat_fu_274_X_dout");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_274_X_empty_n, "grp_MAT_Multiply_load_mat_fu_274_X_empty_n");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_274_X_read, "grp_MAT_Multiply_load_mat_fu_274_X_read");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_274_arrayX_address0, "grp_MAT_Multiply_load_mat_fu_274_arrayX_address0");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_274_arrayX_ce0, "grp_MAT_Multiply_load_mat_fu_274_arrayX_ce0");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_274_arrayX_we0, "grp_MAT_Multiply_load_mat_fu_274_arrayX_we0");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_274_arrayX_d0, "grp_MAT_Multiply_load_mat_fu_274_arrayX_d0");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_274_m, "grp_MAT_Multiply_load_mat_fu_274_m");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_274_n, "grp_MAT_Multiply_load_mat_fu_274_n");
    sc_trace(mVcdFile, i_reg_171, "i_reg_171");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_269, "ap_sig_bdd_269");
    sc_trace(mVcdFile, phi_mul1_reg_182, "phi_mul1_reg_182");
    sc_trace(mVcdFile, j_reg_194, "j_reg_194");
    sc_trace(mVcdFile, k_reg_205, "k_reg_205");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_292, "ap_sig_bdd_292");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st16_fsm_15, "ap_sig_cseq_ST_st16_fsm_15");
    sc_trace(mVcdFile, ap_sig_bdd_299, "ap_sig_bdd_299");
    sc_trace(mVcdFile, phi_mul_reg_216, "phi_mul_reg_216");
    sc_trace(mVcdFile, i_1_reg_227, "i_1_reg_227");
    sc_trace(mVcdFile, phi_mul2_reg_238, "phi_mul2_reg_238");
    sc_trace(mVcdFile, j_1_reg_250, "j_1_reg_250");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st21_fsm_20, "ap_sig_cseq_ST_st21_fsm_20");
    sc_trace(mVcdFile, ap_sig_bdd_318, "ap_sig_bdd_318");
    sc_trace(mVcdFile, ap_sig_bdd_324, "ap_sig_bdd_324");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_262_ap_start_ap_start_reg, "grp_MAT_Multiply_load_mat_fu_262_ap_start_ap_start_reg");
    sc_trace(mVcdFile, grp_MAT_Multiply_load_mat_fu_274_ap_start_ap_start_reg, "grp_MAT_Multiply_load_mat_fu_274_ap_start_ap_start_reg");
    sc_trace(mVcdFile, tmp_6_fu_369_p1, "tmp_6_fu_369_p1");
    sc_trace(mVcdFile, tmp_15_fu_421_p1, "tmp_15_fu_421_p1");
    sc_trace(mVcdFile, tmp_16_fu_431_p1, "tmp_16_fu_431_p1");
    sc_trace(mVcdFile, tmp_13_fu_515_p1, "tmp_13_fu_515_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_bdd_349, "ap_sig_bdd_349");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st13_fsm_12, "ap_sig_cseq_ST_st13_fsm_12");
    sc_trace(mVcdFile, ap_sig_bdd_356, "ap_sig_bdd_356");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st19_fsm_18, "ap_sig_cseq_ST_st19_fsm_18");
    sc_trace(mVcdFile, ap_sig_bdd_368, "ap_sig_bdd_368");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st20_fsm_19, "ap_sig_cseq_ST_st20_fsm_19");
    sc_trace(mVcdFile, ap_sig_bdd_376, "ap_sig_bdd_376");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_389, "ap_sig_bdd_389");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_bdd_397, "ap_sig_bdd_397");
    sc_trace(mVcdFile, tmp_7_fu_292_p2, "tmp_7_fu_292_p2");
    sc_trace(mVcdFile, tmp_9_fu_298_p2, "tmp_9_fu_298_p2");
    sc_trace(mVcdFile, tmp1_fu_304_p2, "tmp1_fu_304_p2");
    sc_trace(mVcdFile, tmp_fu_286_p2, "tmp_fu_286_p2");
    sc_trace(mVcdFile, i_cast8_fu_322_p1, "i_cast8_fu_322_p1");
    sc_trace(mVcdFile, p_addr_fu_363_p2, "p_addr_fu_363_p2");
    sc_trace(mVcdFile, j_cast7_fu_343_p1, "j_cast7_fu_343_p1");
    sc_trace(mVcdFile, tmp_5_fu_374_p2, "tmp_5_fu_374_p2");
    sc_trace(mVcdFile, k_cast6_fu_384_p1, "k_cast6_fu_384_p1");
    sc_trace(mVcdFile, k_cast6_cast_fu_388_p1, "k_cast6_cast_fu_388_p1");
    sc_trace(mVcdFile, p_addr1_fu_415_p2, "p_addr1_fu_415_p2");
    sc_trace(mVcdFile, p_addr4_fu_426_p2, "p_addr4_fu_426_p2");
    sc_trace(mVcdFile, grp_fu_436_p0, "grp_fu_436_p0");
    sc_trace(mVcdFile, grp_fu_436_p1, "grp_fu_436_p1");
    sc_trace(mVcdFile, tmp_18_fu_442_p1, "tmp_18_fu_442_p1");
    sc_trace(mVcdFile, i_1_cast4_fu_458_p1, "i_1_cast4_fu_458_p1");
    sc_trace(mVcdFile, j_1_cast2_fu_479_p1, "j_1_cast2_fu_479_p1");
    sc_trace(mVcdFile, tmp_11_fu_499_p2, "tmp_11_fu_499_p2");
    sc_trace(mVcdFile, j_1_cast2_cast_fu_483_p1, "j_1_cast2_cast_fu_483_p1");
    sc_trace(mVcdFile, p_addr6_fu_509_p2, "p_addr6_fu_509_p2");
    sc_trace(mVcdFile, grp_fu_436_ce, "grp_fu_436_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("MAT_Multiply.hdltvin.dat");
    mHdltvoutHandle.open("MAT_Multiply.hdltvout.dat");
}

MAT_Multiply::~MAT_Multiply() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete arrayA_U;
    delete arrayB_U;
    delete arrayC_U;
    delete grp_MAT_Multiply_load_mat_fu_262;
    delete grp_MAT_Multiply_load_mat_fu_274;
    delete MAT_Multiply_mul_32s_32s_32_6_U5;
}

void MAT_Multiply::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_MAT_Multiply_load_mat_fu_262_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
             !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
             !esl_seteq<1,1,1>(tmp_s_fu_310_p2.read(), ap_const_lv1_0))) {
            grp_MAT_Multiply_load_mat_fu_262_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_MAT_Multiply_load_mat_fu_262_ap_ready.read())) {
            grp_MAT_Multiply_load_mat_fu_262_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_MAT_Multiply_load_mat_fu_274_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
             !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
             !esl_seteq<1,1,1>(tmp_s_fu_310_p2.read(), ap_const_lv1_0))) {
            grp_MAT_Multiply_load_mat_fu_274_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_MAT_Multiply_load_mat_fu_274_ap_ready.read())) {
            grp_MAT_Multiply_load_mat_fu_274_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(exitcond4_fu_326_p2.read(), ap_const_lv1_0))) {
        i_1_reg_227 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_487_p2.read()))) {
        i_1_reg_227 = i_3_reg_640.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_351_p2.read()))) {
        i_reg_171 = i_2_reg_553.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, grp_MAT_Multiply_load_mat_fu_262_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_MAT_Multiply_load_mat_fu_274_ap_done.read())))) {
        i_reg_171 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) && 
         !ap_sig_bdd_324.read())) {
        j_1_reg_250 = j_3_reg_653.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()) && 
                !esl_seteq<1,1,1>(tmp_s_reg_541.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_462_p2.read()))) {
        j_1_reg_250 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_392_p2.read()))) {
        j_reg_194 = j_2_reg_571.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                esl_seteq<1,1,1>(exitcond4_fu_326_p2.read(), ap_const_lv1_0))) {
        j_reg_194 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        k_reg_205 = k_1_reg_588.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        k_reg_205 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_351_p2.read()))) {
        phi_mul1_reg_182 = next_mul1_reg_545.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, grp_MAT_Multiply_load_mat_fu_262_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_MAT_Multiply_load_mat_fu_274_ap_done.read())))) {
        phi_mul1_reg_182 = ap_const_lv20_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(exitcond4_fu_326_p2.read(), ap_const_lv1_0))) {
        phi_mul2_reg_238 = ap_const_lv20_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_487_p2.read()))) {
        phi_mul2_reg_238 = next_mul2_reg_632.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        phi_mul_reg_216 = next_mul_reg_593.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        phi_mul_reg_216 = ap_const_lv20_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_351_p2.read()))) {
        arrayC_addr_reg_576 =  (sc_lv<20>) (tmp_6_fu_369_p1.read());
        tmp_10_reg_581 = tmp_10_fu_379_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        i_2_reg_553 = i_2_fu_332_p2.read();
        next_mul1_reg_545 = next_mul1_fu_316_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()) && !esl_seteq<1,1,1>(tmp_s_reg_541.read(), ap_const_lv1_0))) {
        i_3_reg_640 = i_3_fu_468_p2.read();
        next_mul2_reg_632 = next_mul2_fu_452_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        j_2_reg_571 = j_2_fu_357_p2.read();
        j_cast7_cast_reg_563 = j_cast7_cast_fu_347_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        j_3_reg_653 = j_3_fu_493_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        k_1_reg_588 = k_1_fu_398_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_392_p2.read()))) {
        next_mul_reg_593 = next_mul_fu_404_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_487_p2.read()))) {
        tmp_12_reg_658 = tmp_12_fu_504_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read())) {
        tmp_17_reg_622 = grp_fu_436_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && esl_seteq<1,1,1>(exitcond4_fu_326_p2.read(), ap_const_lv1_0))) {
        tmp_2_reg_558 = tmp_2_fu_338_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()) && !esl_seteq<1,1,1>(tmp_s_reg_541.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_462_p2.read()))) {
        tmp_3_reg_645 = tmp_3_fu_474_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tmp_s_reg_541 = tmp_s_fu_310_p2.read();
    }
}

void MAT_Multiply::thread_A_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        A_read = grp_MAT_Multiply_load_mat_fu_262_X_read.read();
    } else {
        A_read = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_B_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        B_read = grp_MAT_Multiply_load_mat_fu_274_X_read.read();
    } else {
        B_read = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_C_din() {
    C_din = arrayC_q0.read();
}

void MAT_Multiply::thread_C_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_658.read()) && 
         !ap_sig_bdd_324.read())) {
        C_write = ap_const_logic_1;
    } else {
        C_write = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()) && 
         (esl_seteq<1,1,1>(tmp_s_reg_541.read(), ap_const_lv1_0) || 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_462_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st17_fsm_16.read()) && 
         (esl_seteq<1,1,1>(tmp_s_reg_541.read(), ap_const_lv1_0) || 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_462_p2.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_bdd_115() {
    ap_sig_bdd_115 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void MAT_Multiply::thread_ap_sig_bdd_143() {
    ap_sig_bdd_143 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void MAT_Multiply::thread_ap_sig_bdd_154() {
    ap_sig_bdd_154 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(13, 13));
}

void MAT_Multiply::thread_ap_sig_bdd_163() {
    ap_sig_bdd_163 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(14, 14));
}

void MAT_Multiply::thread_ap_sig_bdd_172() {
    ap_sig_bdd_172 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(16, 16));
}

void MAT_Multiply::thread_ap_sig_bdd_192() {
    ap_sig_bdd_192 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(17, 17));
}

void MAT_Multiply::thread_ap_sig_bdd_269() {
    ap_sig_bdd_269 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void MAT_Multiply::thread_ap_sig_bdd_292() {
    ap_sig_bdd_292 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void MAT_Multiply::thread_ap_sig_bdd_299() {
    ap_sig_bdd_299 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(15, 15));
}

void MAT_Multiply::thread_ap_sig_bdd_318() {
    ap_sig_bdd_318 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(20, 20));
}

void MAT_Multiply::thread_ap_sig_bdd_324() {
    ap_sig_bdd_324 = (esl_seteq<1,1,1>(C_full_n.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_reg_658.read()));
}

void MAT_Multiply::thread_ap_sig_bdd_349() {
    ap_sig_bdd_349 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void MAT_Multiply::thread_ap_sig_bdd_356() {
    ap_sig_bdd_356 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(12, 12));
}

void MAT_Multiply::thread_ap_sig_bdd_368() {
    ap_sig_bdd_368 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(18, 18));
}

void MAT_Multiply::thread_ap_sig_bdd_37() {
    ap_sig_bdd_37 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void MAT_Multiply::thread_ap_sig_bdd_376() {
    ap_sig_bdd_376 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(19, 19));
}

void MAT_Multiply::thread_ap_sig_bdd_389() {
    ap_sig_bdd_389 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void MAT_Multiply::thread_ap_sig_bdd_397() {
    ap_sig_bdd_397 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void MAT_Multiply::thread_ap_sig_bdd_80() {
    ap_sig_bdd_80 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void MAT_Multiply::thread_ap_sig_bdd_97() {
    ap_sig_bdd_97 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_bdd_349.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st13_fsm_12() {
    if (ap_sig_bdd_356.read()) {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st14_fsm_13() {
    if (ap_sig_bdd_154.read()) {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st15_fsm_14() {
    if (ap_sig_bdd_163.read()) {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st16_fsm_15() {
    if (ap_sig_bdd_299.read()) {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st17_fsm_16() {
    if (ap_sig_bdd_172.read()) {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st18_fsm_17() {
    if (ap_sig_bdd_192.read()) {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st19_fsm_18() {
    if (ap_sig_bdd_368.read()) {
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_37.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st20_fsm_19() {
    if (ap_sig_bdd_376.read()) {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st21_fsm_20() {
    if (ap_sig_bdd_318.read()) {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_269.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_80.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_97.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_bdd_292.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_bdd_115.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_bdd_389.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_bdd_397.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_bdd_143.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_arrayA_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        arrayA_address0 =  (sc_lv<20>) (tmp_15_fu_421_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        arrayA_address0 = grp_MAT_Multiply_load_mat_fu_262_arrayX_address0.read();
    } else {
        arrayA_address0 = "XXXXXXXXXXXXXXXXXXXX";
    }
}

void MAT_Multiply::thread_arrayA_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()))) {
        arrayA_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        arrayA_ce0 = grp_MAT_Multiply_load_mat_fu_262_arrayX_ce0.read();
    } else {
        arrayA_ce0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_arrayA_d0() {
    arrayA_d0 = grp_MAT_Multiply_load_mat_fu_262_arrayX_d0.read();
}

void MAT_Multiply::thread_arrayA_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        arrayA_we0 = grp_MAT_Multiply_load_mat_fu_262_arrayX_we0.read();
    } else {
        arrayA_we0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_arrayB_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        arrayB_address0 =  (sc_lv<20>) (tmp_16_fu_431_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        arrayB_address0 = grp_MAT_Multiply_load_mat_fu_274_arrayX_address0.read();
    } else {
        arrayB_address0 = "XXXXXXXXXXXXXXXXXXXX";
    }
}

void MAT_Multiply::thread_arrayB_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()))) {
        arrayB_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        arrayB_ce0 = grp_MAT_Multiply_load_mat_fu_274_arrayX_ce0.read();
    } else {
        arrayB_ce0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_arrayB_d0() {
    arrayB_d0 = grp_MAT_Multiply_load_mat_fu_274_arrayX_d0.read();
}

void MAT_Multiply::thread_arrayB_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        arrayB_we0 = grp_MAT_Multiply_load_mat_fu_274_arrayX_we0.read();
    } else {
        arrayB_we0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_arrayC_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        arrayC_address0 =  (sc_lv<20>) (tmp_6_fu_369_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read())) {
        arrayC_address0 =  (sc_lv<20>) (tmp_13_fu_515_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()))) {
        arrayC_address0 = arrayC_addr_reg_576.read();
    } else {
        arrayC_address0 = "XXXXXXXXXXXXXXXXXXXX";
    }
}

void MAT_Multiply::thread_arrayC_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st14_fsm_13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st18_fsm_17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) && 
          !ap_sig_bdd_324.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st13_fsm_12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st19_fsm_18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read()))) {
        arrayC_ce0 = ap_const_logic_1;
    } else {
        arrayC_ce0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_arrayC_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read())) {
        arrayC_d0 = tmp_19_fu_445_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        arrayC_d0 = ap_const_lv64_0;
    } else {
        arrayC_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void MAT_Multiply::thread_arrayC_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_351_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read()))) {
        arrayC_we0 = ap_const_logic_1;
    } else {
        arrayC_we0 = ap_const_logic_0;
    }
}

void MAT_Multiply::thread_exitcond1_fu_462_p2() {
    exitcond1_fu_462_p2 = (!i_1_reg_227.read().is_01() || !ap_const_lv10_3E8.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_227.read() == ap_const_lv10_3E8);
}

void MAT_Multiply::thread_exitcond2_fu_392_p2() {
    exitcond2_fu_392_p2 = (!k_reg_205.read().is_01() || !ap_const_lv10_3E8.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_205.read() == ap_const_lv10_3E8);
}

void MAT_Multiply::thread_exitcond3_fu_351_p2() {
    exitcond3_fu_351_p2 = (!j_reg_194.read().is_01() || !ap_const_lv10_3E8.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_194.read() == ap_const_lv10_3E8);
}

void MAT_Multiply::thread_exitcond4_fu_326_p2() {
    exitcond4_fu_326_p2 = (!i_reg_171.read().is_01() || !ap_const_lv10_3E8.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_171.read() == ap_const_lv10_3E8);
}

void MAT_Multiply::thread_exitcond_fu_487_p2() {
    exitcond_fu_487_p2 = (!j_1_reg_250.read().is_01() || !ap_const_lv10_3E8.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_250.read() == ap_const_lv10_3E8);
}

void MAT_Multiply::thread_grp_MAT_Multiply_load_mat_fu_262_X_dout() {
    grp_MAT_Multiply_load_mat_fu_262_X_dout = A_dout.read();
}

void MAT_Multiply::thread_grp_MAT_Multiply_load_mat_fu_262_X_empty_n() {
    grp_MAT_Multiply_load_mat_fu_262_X_empty_n = A_empty_n.read();
}

void MAT_Multiply::thread_grp_MAT_Multiply_load_mat_fu_262_ap_start() {
    grp_MAT_Multiply_load_mat_fu_262_ap_start = grp_MAT_Multiply_load_mat_fu_262_ap_start_ap_start_reg.read();
}

void MAT_Multiply::thread_grp_MAT_Multiply_load_mat_fu_262_m() {
    grp_MAT_Multiply_load_mat_fu_262_m = mC.read();
}

void MAT_Multiply::thread_grp_MAT_Multiply_load_mat_fu_262_n() {
    grp_MAT_Multiply_load_mat_fu_262_n = mB.read();
}

void MAT_Multiply::thread_grp_MAT_Multiply_load_mat_fu_274_X_dout() {
    grp_MAT_Multiply_load_mat_fu_274_X_dout = B_dout.read();
}

void MAT_Multiply::thread_grp_MAT_Multiply_load_mat_fu_274_X_empty_n() {
    grp_MAT_Multiply_load_mat_fu_274_X_empty_n = B_empty_n.read();
}

void MAT_Multiply::thread_grp_MAT_Multiply_load_mat_fu_274_ap_start() {
    grp_MAT_Multiply_load_mat_fu_274_ap_start = grp_MAT_Multiply_load_mat_fu_274_ap_start_ap_start_reg.read();
}

void MAT_Multiply::thread_grp_MAT_Multiply_load_mat_fu_274_m() {
    grp_MAT_Multiply_load_mat_fu_274_m = mB.read();
}

void MAT_Multiply::thread_grp_MAT_Multiply_load_mat_fu_274_n() {
    grp_MAT_Multiply_load_mat_fu_274_n = nC.read();
}

void MAT_Multiply::thread_grp_fu_436_ce() {
    grp_fu_436_ce = ap_const_logic_1;
}

void MAT_Multiply::thread_grp_fu_436_p0() {
    grp_fu_436_p0 = arrayB_q0.read();
}

void MAT_Multiply::thread_grp_fu_436_p1() {
    grp_fu_436_p1 = arrayA_q0.read();
}

void MAT_Multiply::thread_i_1_cast4_fu_458_p1() {
    i_1_cast4_fu_458_p1 = esl_zext<32,10>(i_1_reg_227.read());
}

void MAT_Multiply::thread_i_2_fu_332_p2() {
    i_2_fu_332_p2 = (!i_reg_171.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_reg_171.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void MAT_Multiply::thread_i_3_fu_468_p2() {
    i_3_fu_468_p2 = (!i_1_reg_227.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_1_reg_227.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void MAT_Multiply::thread_i_cast8_fu_322_p1() {
    i_cast8_fu_322_p1 = esl_zext<32,10>(i_reg_171.read());
}

void MAT_Multiply::thread_j_1_cast2_cast_fu_483_p1() {
    j_1_cast2_cast_fu_483_p1 = esl_zext<20,10>(j_1_reg_250.read());
}

void MAT_Multiply::thread_j_1_cast2_fu_479_p1() {
    j_1_cast2_fu_479_p1 = esl_zext<32,10>(j_1_reg_250.read());
}

void MAT_Multiply::thread_j_2_fu_357_p2() {
    j_2_fu_357_p2 = (!j_reg_194.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_reg_194.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void MAT_Multiply::thread_j_3_fu_493_p2() {
    j_3_fu_493_p2 = (!j_1_reg_250.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_1_reg_250.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void MAT_Multiply::thread_j_cast7_cast_fu_347_p1() {
    j_cast7_cast_fu_347_p1 = esl_zext<20,10>(j_reg_194.read());
}

void MAT_Multiply::thread_j_cast7_fu_343_p1() {
    j_cast7_fu_343_p1 = esl_zext<32,10>(j_reg_194.read());
}

void MAT_Multiply::thread_k_1_fu_398_p2() {
    k_1_fu_398_p2 = (!k_reg_205.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(k_reg_205.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void MAT_Multiply::thread_k_cast6_cast_fu_388_p1() {
    k_cast6_cast_fu_388_p1 = esl_zext<20,10>(k_reg_205.read());
}

void MAT_Multiply::thread_k_cast6_fu_384_p1() {
    k_cast6_fu_384_p1 = esl_zext<32,10>(k_reg_205.read());
}

void MAT_Multiply::thread_next_mul1_fu_316_p2() {
    next_mul1_fu_316_p2 = (!phi_mul1_reg_182.read().is_01() || !ap_const_lv20_3E8.is_01())? sc_lv<20>(): (sc_biguint<20>(phi_mul1_reg_182.read()) + sc_biguint<20>(ap_const_lv20_3E8));
}

void MAT_Multiply::thread_next_mul2_fu_452_p2() {
    next_mul2_fu_452_p2 = (!phi_mul2_reg_238.read().is_01() || !ap_const_lv20_3E8.is_01())? sc_lv<20>(): (sc_biguint<20>(phi_mul2_reg_238.read()) + sc_biguint<20>(ap_const_lv20_3E8));
}

void MAT_Multiply::thread_next_mul_fu_404_p2() {
    next_mul_fu_404_p2 = (!phi_mul_reg_216.read().is_01() || !ap_const_lv20_3E8.is_01())? sc_lv<20>(): (sc_biguint<20>(phi_mul_reg_216.read()) + sc_biguint<20>(ap_const_lv20_3E8));
}

void MAT_Multiply::thread_p_addr1_fu_415_p2() {
    p_addr1_fu_415_p2 = (!k_cast6_cast_fu_388_p1.read().is_01() || !phi_mul1_reg_182.read().is_01())? sc_lv<20>(): (sc_biguint<20>(k_cast6_cast_fu_388_p1.read()) + sc_biguint<20>(phi_mul1_reg_182.read()));
}

void MAT_Multiply::thread_p_addr4_fu_426_p2() {
    p_addr4_fu_426_p2 = (!j_cast7_cast_reg_563.read().is_01() || !phi_mul_reg_216.read().is_01())? sc_lv<20>(): (sc_biguint<20>(j_cast7_cast_reg_563.read()) + sc_biguint<20>(phi_mul_reg_216.read()));
}

void MAT_Multiply::thread_p_addr6_fu_509_p2() {
    p_addr6_fu_509_p2 = (!j_1_cast2_cast_fu_483_p1.read().is_01() || !phi_mul2_reg_238.read().is_01())? sc_lv<20>(): (sc_biguint<20>(j_1_cast2_cast_fu_483_p1.read()) + sc_biguint<20>(phi_mul2_reg_238.read()));
}

void MAT_Multiply::thread_p_addr_fu_363_p2() {
    p_addr_fu_363_p2 = (!j_cast7_cast_fu_347_p1.read().is_01() || !phi_mul1_reg_182.read().is_01())? sc_lv<20>(): (sc_biguint<20>(j_cast7_cast_fu_347_p1.read()) + sc_biguint<20>(phi_mul1_reg_182.read()));
}

void MAT_Multiply::thread_tmp1_fu_304_p2() {
    tmp1_fu_304_p2 = (tmp_7_fu_292_p2.read() & tmp_9_fu_298_p2.read());
}

void MAT_Multiply::thread_tmp_10_fu_379_p2() {
    tmp_10_fu_379_p2 = (tmp_2_reg_558.read() & tmp_5_fu_374_p2.read());
}

void MAT_Multiply::thread_tmp_11_fu_499_p2() {
    tmp_11_fu_499_p2 = (!j_1_cast2_fu_479_p1.read().is_01() || !nC.read().is_01())? sc_lv<1>(): (sc_biguint<32>(j_1_cast2_fu_479_p1.read()) < sc_biguint<32>(nC.read()));
}

void MAT_Multiply::thread_tmp_12_fu_504_p2() {
    tmp_12_fu_504_p2 = (tmp_3_reg_645.read() & tmp_11_fu_499_p2.read());
}

void MAT_Multiply::thread_tmp_13_fu_515_p1() {
    tmp_13_fu_515_p1 = esl_zext<64,20>(p_addr6_fu_509_p2.read());
}

void MAT_Multiply::thread_tmp_14_fu_410_p2() {
    tmp_14_fu_410_p2 = (!k_cast6_fu_384_p1.read().is_01() || !mB.read().is_01())? sc_lv<1>(): (sc_biguint<32>(k_cast6_fu_384_p1.read()) < sc_biguint<32>(mB.read()));
}

void MAT_Multiply::thread_tmp_15_fu_421_p1() {
    tmp_15_fu_421_p1 = esl_zext<64,20>(p_addr1_fu_415_p2.read());
}

void MAT_Multiply::thread_tmp_16_fu_431_p1() {
    tmp_16_fu_431_p1 = esl_zext<64,20>(p_addr4_fu_426_p2.read());
}

void MAT_Multiply::thread_tmp_18_fu_442_p1() {
    tmp_18_fu_442_p1 = esl_sext<64,32>(tmp_17_reg_622.read());
}

void MAT_Multiply::thread_tmp_19_fu_445_p2() {
    tmp_19_fu_445_p2 = (!arrayC_q0.read().is_01() || !tmp_18_fu_442_p1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(arrayC_q0.read()) + sc_bigint<64>(tmp_18_fu_442_p1.read()));
}

void MAT_Multiply::thread_tmp_2_fu_338_p2() {
    tmp_2_fu_338_p2 = (!i_cast8_fu_322_p1.read().is_01() || !mC.read().is_01())? sc_lv<1>(): (sc_biguint<32>(i_cast8_fu_322_p1.read()) < sc_biguint<32>(mC.read()));
}

void MAT_Multiply::thread_tmp_3_fu_474_p2() {
    tmp_3_fu_474_p2 = (!i_1_cast4_fu_458_p1.read().is_01() || !mC.read().is_01())? sc_lv<1>(): (sc_biguint<32>(i_1_cast4_fu_458_p1.read()) < sc_biguint<32>(mC.read()));
}

void MAT_Multiply::thread_tmp_5_fu_374_p2() {
    tmp_5_fu_374_p2 = (!j_cast7_fu_343_p1.read().is_01() || !nC.read().is_01())? sc_lv<1>(): (sc_biguint<32>(j_cast7_fu_343_p1.read()) < sc_biguint<32>(nC.read()));
}

void MAT_Multiply::thread_tmp_6_fu_369_p1() {
    tmp_6_fu_369_p1 = esl_zext<64,20>(p_addr_fu_363_p2.read());
}

void MAT_Multiply::thread_tmp_7_fu_292_p2() {
    tmp_7_fu_292_p2 = (!mA.read().is_01() || !mC.read().is_01())? sc_lv<1>(): sc_lv<1>(mA.read() == mC.read());
}

void MAT_Multiply::thread_tmp_9_fu_298_p2() {
    tmp_9_fu_298_p2 = (!nB.read().is_01() || !nC.read().is_01())? sc_lv<1>(): sc_lv<1>(nB.read() == nC.read());
}

void MAT_Multiply::thread_tmp_fu_286_p2() {
    tmp_fu_286_p2 = (!nA.read().is_01() || !mB.read().is_01())? sc_lv<1>(): sc_lv<1>(nA.read() == mB.read());
}

void MAT_Multiply::thread_tmp_s_fu_310_p2() {
    tmp_s_fu_310_p2 = (tmp1_fu_304_p2.read() & tmp_fu_286_p2.read());
}

void MAT_Multiply::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(tmp_s_fu_310_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st17_fsm_16;
            } else if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(tmp_s_fu_310_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_0, grp_MAT_Multiply_load_mat_fu_262_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_MAT_Multiply_load_mat_fu_274_ap_done.read()))) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(exitcond4_fu_326_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st17_fsm_16;
            }
            break;
        case 8 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_351_p2.read())) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_392_p2.read())) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_392_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_reg_581.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_fu_410_p2.read()))) {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            } else {
                ap_NS_fsm = ap_ST_st16_fsm_15;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(tmp_s_reg_541.read(), ap_const_lv1_0) || !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_462_p2.read()))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st18_fsm_17;
            }
            break;
        case 131072 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_487_p2.read())) {
                ap_NS_fsm = ap_ST_st17_fsm_16;
            } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_487_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_504_p2.read()))) {
                ap_NS_fsm = ap_ST_st21_fsm_20;
            } else {
                ap_NS_fsm = ap_ST_st19_fsm_18;
            }
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 1048576 : 
            if (!ap_sig_bdd_324.read()) {
                ap_NS_fsm = ap_ST_st18_fsm_17;
            } else {
                ap_NS_fsm = ap_ST_st21_fsm_20;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<21>) ("XXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void MAT_Multiply::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_dout\" :  \"" << A_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_empty_n\" :  \"" << A_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_read\" :  \"" << A_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_dout\" :  \"" << B_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_empty_n\" :  \"" << B_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_read\" :  \"" << B_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_din\" :  \"" << C_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_full_n\" :  \"" << C_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_write\" :  \"" << C_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mA\" :  \"" << mA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nA\" :  \"" << nA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mB\" :  \"" << mB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nB\" :  \"" << nB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mC\" :  \"" << mC.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"nC\" :  \"" << nC.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

