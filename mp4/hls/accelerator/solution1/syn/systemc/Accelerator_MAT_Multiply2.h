// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _Accelerator_MAT_Multiply2_HH_
#define _Accelerator_MAT_Multiply2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Accelerator_fadd_32ns_32ns_32_5_full_dsp.h"
#include "Accelerator_fmul_32ns_32ns_32_4_max_dsp.h"
#include "Accelerator_MAT_Multiply2_A_cached_row.h"

namespace ap_rtl {

struct Accelerator_MAT_Multiply2 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > A_address0;
    sc_out< sc_logic > A_ce0;
    sc_in< sc_lv<32> > A_q0;
    sc_out< sc_lv<6> > B_address0;
    sc_out< sc_logic > B_ce0;
    sc_in< sc_lv<32> > B_q0;
    sc_out< sc_lv<6> > C_address0;
    sc_out< sc_logic > C_ce0;
    sc_out< sc_logic > C_we0;
    sc_out< sc_lv<32> > C_d0;


    // Module declarations
    Accelerator_MAT_Multiply2(sc_module_name name);
    SC_HAS_PROCESS(Accelerator_MAT_Multiply2);

    ~Accelerator_MAT_Multiply2();

    sc_trace_file* mVcdFile;

    Accelerator_MAT_Multiply2_A_cached_row* A_cached_row_U;
    Accelerator_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>* Accelerator_fadd_32ns_32ns_32_5_full_dsp_U6;
    Accelerator_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>* Accelerator_fmul_32ns_32ns_32_4_max_dsp_U7;
    sc_signal< sc_lv<15> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_33;
    sc_signal< sc_lv<4> > tmp_1_fu_180_p2;
    sc_signal< sc_lv<4> > tmp_1_reg_300;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_64;
    sc_signal< sc_lv<8> > p_addr_cast_fu_194_p1;
    sc_signal< sc_lv<8> > p_addr_cast_reg_305;
    sc_signal< sc_lv<1> > exitcond3_fu_174_p2;
    sc_signal< sc_lv<4> > k_2_fu_204_p2;
    sc_signal< sc_lv<4> > k_2_reg_313;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_79;
    sc_signal< sc_lv<1> > exitcond2_fu_198_p2;
    sc_signal< sc_lv<4> > j_1_fu_235_p2;
    sc_signal< sc_lv<4> > j_1_reg_326;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_bdd_93;
    sc_signal< sc_lv<8> > tmp_trn_cast_fu_241_p1;
    sc_signal< sc_lv<8> > tmp_trn_cast_reg_331;
    sc_signal< sc_lv<1> > exitcond1_fu_229_p2;
    sc_signal< sc_lv<4> > k_3_fu_251_p2;
    sc_signal< sc_lv<4> > k_3_reg_339;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_bdd_107;
    sc_signal< sc_lv<1> > exitcond_fu_245_p2;
    sc_signal< sc_lv<32> > A_cached_row_q0;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_bdd_123;
    sc_signal< sc_lv<32> > grp_fu_168_p2;
    sc_signal< sc_lv<32> > tmp_4_reg_364;
    sc_signal< sc_logic > ap_sig_cseq_ST_st10_fsm_9;
    sc_signal< bool > ap_sig_bdd_133;
    sc_signal< sc_lv<32> > grp_fu_163_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st15_fsm_14;
    sc_signal< bool > ap_sig_bdd_142;
    sc_signal< sc_lv<3> > A_cached_row_address0;
    sc_signal< sc_logic > A_cached_row_ce0;
    sc_signal< sc_logic > A_cached_row_we0;
    sc_signal< sc_lv<32> > A_cached_row_d0;
    sc_signal< sc_lv<4> > i_reg_103;
    sc_signal< sc_lv<4> > k_reg_114;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_168;
    sc_signal< sc_lv<4> > j_reg_126;
    sc_signal< sc_lv<4> > k_1_reg_138;
    sc_signal< sc_lv<32> > temp_reg_149;
    sc_signal< sc_lv<64> > tmp_7_fu_219_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_224_p1;
    sc_signal< sc_lv<64> > tmp_3_fu_257_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_279_p1;
    sc_signal< sc_lv<64> > tmp_8_fu_292_p1;
    sc_signal< sc_lv<32> > grp_fu_163_p0;
    sc_signal< sc_lv<32> > grp_fu_163_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_10;
    sc_signal< bool > ap_sig_bdd_197;
    sc_signal< sc_lv<32> > grp_fu_168_p0;
    sc_signal< sc_lv<32> > grp_fu_168_p1;
    sc_signal< sc_lv<7> > tmp_fu_186_p3;
    sc_signal< sc_lv<8> > tmp_2_trn_cast_fu_210_p1;
    sc_signal< sc_lv<8> > p_addr1_fu_214_p2;
    sc_signal< sc_lv<7> > tmp_9_fu_262_p3;
    sc_signal< sc_lv<8> > p_addr2_cast_fu_270_p1;
    sc_signal< sc_lv<8> > p_addr3_fu_274_p2;
    sc_signal< sc_lv<32> > p_addr4_fu_284_p3;
    sc_signal< sc_logic > grp_fu_163_ce;
    sc_signal< sc_logic > grp_fu_168_ce;
    sc_signal< sc_lv<15> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<15> ap_ST_st1_fsm_0;
    static const sc_lv<15> ap_ST_st2_fsm_1;
    static const sc_lv<15> ap_ST_st3_fsm_2;
    static const sc_lv<15> ap_ST_st4_fsm_3;
    static const sc_lv<15> ap_ST_st5_fsm_4;
    static const sc_lv<15> ap_ST_st6_fsm_5;
    static const sc_lv<15> ap_ST_st7_fsm_6;
    static const sc_lv<15> ap_ST_st8_fsm_7;
    static const sc_lv<15> ap_ST_st9_fsm_8;
    static const sc_lv<15> ap_ST_st10_fsm_9;
    static const sc_lv<15> ap_ST_st11_fsm_10;
    static const sc_lv<15> ap_ST_st12_fsm_11;
    static const sc_lv<15> ap_ST_st13_fsm_12;
    static const sc_lv<15> ap_ST_st14_fsm_13;
    static const sc_lv<15> ap_ST_st15_fsm_14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<28> ap_const_lv28_4;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_cached_row_address0();
    void thread_A_cached_row_ce0();
    void thread_A_cached_row_d0();
    void thread_A_cached_row_we0();
    void thread_A_ce0();
    void thread_B_address0();
    void thread_B_ce0();
    void thread_C_address0();
    void thread_C_ce0();
    void thread_C_d0();
    void thread_C_we0();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_107();
    void thread_ap_sig_bdd_123();
    void thread_ap_sig_bdd_133();
    void thread_ap_sig_bdd_142();
    void thread_ap_sig_bdd_168();
    void thread_ap_sig_bdd_197();
    void thread_ap_sig_bdd_33();
    void thread_ap_sig_bdd_64();
    void thread_ap_sig_bdd_79();
    void thread_ap_sig_bdd_93();
    void thread_ap_sig_cseq_ST_st10_fsm_9();
    void thread_ap_sig_cseq_ST_st11_fsm_10();
    void thread_ap_sig_cseq_ST_st15_fsm_14();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_exitcond1_fu_229_p2();
    void thread_exitcond2_fu_198_p2();
    void thread_exitcond3_fu_174_p2();
    void thread_exitcond_fu_245_p2();
    void thread_grp_fu_163_ce();
    void thread_grp_fu_163_p0();
    void thread_grp_fu_163_p1();
    void thread_grp_fu_168_ce();
    void thread_grp_fu_168_p0();
    void thread_grp_fu_168_p1();
    void thread_j_1_fu_235_p2();
    void thread_k_2_fu_204_p2();
    void thread_k_3_fu_251_p2();
    void thread_p_addr1_fu_214_p2();
    void thread_p_addr2_cast_fu_270_p1();
    void thread_p_addr3_fu_274_p2();
    void thread_p_addr4_fu_284_p3();
    void thread_p_addr_cast_fu_194_p1();
    void thread_tmp_1_fu_180_p2();
    void thread_tmp_2_fu_224_p1();
    void thread_tmp_2_trn_cast_fu_210_p1();
    void thread_tmp_3_fu_257_p1();
    void thread_tmp_7_fu_219_p1();
    void thread_tmp_8_fu_292_p1();
    void thread_tmp_9_fu_262_p3();
    void thread_tmp_fu_186_p3();
    void thread_tmp_s_fu_279_p1();
    void thread_tmp_trn_cast_fu_241_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
