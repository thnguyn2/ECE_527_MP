// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "Accelerator_MAT_Multiply.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Accelerator_MAT_Multiply::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Accelerator_MAT_Multiply::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<16> Accelerator_MAT_Multiply::ap_ST_st1_fsm_0 = "1";
const sc_lv<16> Accelerator_MAT_Multiply::ap_ST_st2_fsm_1 = "10";
const sc_lv<16> Accelerator_MAT_Multiply::ap_ST_st3_fsm_2 = "100";
const sc_lv<16> Accelerator_MAT_Multiply::ap_ST_st4_fsm_3 = "1000";
const sc_lv<16> Accelerator_MAT_Multiply::ap_ST_st5_fsm_4 = "10000";
const sc_lv<16> Accelerator_MAT_Multiply::ap_ST_st6_fsm_5 = "100000";
const sc_lv<16> Accelerator_MAT_Multiply::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<16> Accelerator_MAT_Multiply::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<16> Accelerator_MAT_Multiply::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<16> Accelerator_MAT_Multiply::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<16> Accelerator_MAT_Multiply::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<16> Accelerator_MAT_Multiply::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<16> Accelerator_MAT_Multiply::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<16> Accelerator_MAT_Multiply::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<16> Accelerator_MAT_Multiply::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<16> Accelerator_MAT_Multiply::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<32> Accelerator_MAT_Multiply::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Accelerator_MAT_Multiply::ap_const_lv1_1 = "1";
const sc_lv<32> Accelerator_MAT_Multiply::ap_const_lv32_1 = "1";
const sc_lv<1> Accelerator_MAT_Multiply::ap_const_lv1_0 = "0";
const sc_lv<32> Accelerator_MAT_Multiply::ap_const_lv32_2 = "10";
const sc_lv<32> Accelerator_MAT_Multiply::ap_const_lv32_4 = "100";
const sc_lv<32> Accelerator_MAT_Multiply::ap_const_lv32_5 = "101";
const sc_lv<32> Accelerator_MAT_Multiply::ap_const_lv32_6 = "110";
const sc_lv<32> Accelerator_MAT_Multiply::ap_const_lv32_7 = "111";
const sc_lv<32> Accelerator_MAT_Multiply::ap_const_lv32_A = "1010";
const sc_lv<32> Accelerator_MAT_Multiply::ap_const_lv32_F = "1111";
const sc_lv<4> Accelerator_MAT_Multiply::ap_const_lv4_0 = "0000";
const sc_lv<32> Accelerator_MAT_Multiply::ap_const_lv32_3 = "11";
const sc_lv<32> Accelerator_MAT_Multiply::ap_const_lv32_B = "1011";
const sc_lv<4> Accelerator_MAT_Multiply::ap_const_lv4_8 = "1000";
const sc_lv<4> Accelerator_MAT_Multiply::ap_const_lv4_1 = "1";
const sc_lv<3> Accelerator_MAT_Multiply::ap_const_lv3_0 = "000";

Accelerator_MAT_Multiply::Accelerator_MAT_Multiply(sc_module_name name) : sc_module(name), mVcdFile(0) {
    B_cached_U = new Accelerator_MAT_Multiply_B_cached("B_cached_U");
    B_cached_U->clk(ap_clk);
    B_cached_U->reset(ap_rst);
    B_cached_U->address0(B_cached_address0);
    B_cached_U->ce0(B_cached_ce0);
    B_cached_U->we0(B_cached_we0);
    B_cached_U->d0(B_cached_d0);
    B_cached_U->q0(B_cached_q0);
    Accelerator_fadd_32ns_32ns_32_5_full_dsp_U0 = new Accelerator_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>("Accelerator_fadd_32ns_32ns_32_5_full_dsp_U0");
    Accelerator_fadd_32ns_32ns_32_5_full_dsp_U0->clk(ap_clk);
    Accelerator_fadd_32ns_32ns_32_5_full_dsp_U0->reset(ap_rst);
    Accelerator_fadd_32ns_32ns_32_5_full_dsp_U0->din0(grp_fu_170_p0);
    Accelerator_fadd_32ns_32ns_32_5_full_dsp_U0->din1(grp_fu_170_p1);
    Accelerator_fadd_32ns_32ns_32_5_full_dsp_U0->ce(grp_fu_170_ce);
    Accelerator_fadd_32ns_32ns_32_5_full_dsp_U0->dout(grp_fu_170_p2);
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U1 = new Accelerator_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>("Accelerator_fmul_32ns_32ns_32_4_max_dsp_U1");
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U1->clk(ap_clk);
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U1->reset(ap_rst);
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U1->din0(grp_fu_175_p0);
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U1->din1(grp_fu_175_p1);
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U1->ce(grp_fu_175_ce);
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U1->dout(grp_fu_175_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( tmp_6_fu_292_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_B_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_3_fu_226_p1 );

    SC_METHOD(thread_B_cached_address0);
    sensitive << ( tmp_3_reg_349 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_8_fu_314_p1 );

    SC_METHOD(thread_B_cached_ce0);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_B_cached_d0);
    sensitive << ( B_q0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_B_cached_we0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_B_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_C_address0);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( tmp_4_fu_323_p1 );

    SC_METHOD(thread_C_ce0);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_C_d0);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( temp_reg_156 );

    SC_METHOD(thread_C_we0);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( exitcond_fu_271_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( exitcond2_fu_231_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( exitcond2_fu_231_p2 );

    SC_METHOD(thread_ap_sig_bdd_110);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_124);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_139);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_150);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_159);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_185);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_216);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_65);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_80);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_96);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_bdd_150 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_bdd_216 );

    SC_METHOD(thread_ap_sig_cseq_ST_st16_fsm_15);
    sensitive << ( ap_sig_bdd_159 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_34 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_65 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_80 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_185 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_bdd_96 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_bdd_110 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_bdd_124 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_bdd_139 );

    SC_METHOD(thread_exitcond1_fu_255_p2);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( j_1_reg_134 );

    SC_METHOD(thread_exitcond2_fu_231_p2);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( i_1_reg_123 );

    SC_METHOD(thread_exitcond3_fu_205_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( j_reg_112 );

    SC_METHOD(thread_exitcond4_fu_181_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_reg_101 );

    SC_METHOD(thread_exitcond_fu_271_p2);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( k_reg_145 );

    SC_METHOD(thread_grp_fu_170_ce);

    SC_METHOD(thread_grp_fu_170_p0);
    sensitive << ( temp_reg_156 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );

    SC_METHOD(thread_grp_fu_170_p1);
    sensitive << ( tmp_9_reg_415 );
    sensitive << ( ap_sig_cseq_ST_st12_fsm_11 );

    SC_METHOD(thread_grp_fu_175_ce);

    SC_METHOD(thread_grp_fu_175_p0);
    sensitive << ( A_q0 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_grp_fu_175_p1);
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( B_cached_q0 );

    SC_METHOD(thread_i_2_fu_187_p2);
    sensitive << ( i_reg_101 );

    SC_METHOD(thread_i_3_fu_237_p2);
    sensitive << ( i_1_reg_123 );

    SC_METHOD(thread_j_2_fu_211_p2);
    sensitive << ( j_reg_112 );

    SC_METHOD(thread_j_3_fu_261_p2);
    sensitive << ( j_1_reg_134 );

    SC_METHOD(thread_k_1_fu_277_p2);
    sensitive << ( k_reg_145 );

    SC_METHOD(thread_p_addr1_fu_309_p2);
    sensitive << ( tmp_6_trn_cast_reg_381 );
    sensitive << ( p_addr_cast_fu_305_p1 );

    SC_METHOD(thread_p_addr4_cast_fu_251_p1);
    sensitive << ( tmp_1_fu_243_p3 );

    SC_METHOD(thread_p_addr5_fu_287_p2);
    sensitive << ( p_addr4_cast_reg_367 );
    sensitive << ( tmp_8_trn1_cast_fu_283_p1 );

    SC_METHOD(thread_p_addr7_fu_319_p2);
    sensitive << ( p_addr4_cast_reg_367 );
    sensitive << ( tmp_6_trn_cast_reg_381 );

    SC_METHOD(thread_p_addr8_cast_fu_201_p1);
    sensitive << ( tmp_fu_193_p3 );

    SC_METHOD(thread_p_addr9_fu_221_p2);
    sensitive << ( p_addr8_cast_reg_336 );
    sensitive << ( tmp_3_trn7_cast_fu_217_p1 );

    SC_METHOD(thread_p_addr_cast_fu_305_p1);
    sensitive << ( tmp_7_fu_297_p3 );

    SC_METHOD(thread_tmp_1_fu_243_p3);
    sensitive << ( i_1_reg_123 );

    SC_METHOD(thread_tmp_3_fu_226_p1);
    sensitive << ( p_addr9_fu_221_p2 );

    SC_METHOD(thread_tmp_3_trn7_cast_fu_217_p1);
    sensitive << ( j_reg_112 );

    SC_METHOD(thread_tmp_4_fu_323_p1);
    sensitive << ( p_addr7_fu_319_p2 );

    SC_METHOD(thread_tmp_6_fu_292_p1);
    sensitive << ( p_addr5_fu_287_p2 );

    SC_METHOD(thread_tmp_6_trn_cast_fu_267_p1);
    sensitive << ( j_1_reg_134 );

    SC_METHOD(thread_tmp_7_fu_297_p3);
    sensitive << ( k_reg_145 );

    SC_METHOD(thread_tmp_8_fu_314_p1);
    sensitive << ( p_addr1_fu_309_p2 );

    SC_METHOD(thread_tmp_8_trn1_cast_fu_283_p1);
    sensitive << ( k_reg_145 );

    SC_METHOD(thread_tmp_fu_193_p3);
    sensitive << ( i_reg_101 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond4_fu_181_p2 );
    sensitive << ( exitcond3_fu_205_p2 );
    sensitive << ( exitcond2_fu_231_p2 );
    sensitive << ( exitcond1_fu_255_p2 );
    sensitive << ( exitcond_fu_271_p2 );

    ap_CS_fsm = "0000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Accelerator_MAT_Multiply_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, B_address0, "(port)B_address0");
    sc_trace(mVcdFile, B_ce0, "(port)B_ce0");
    sc_trace(mVcdFile, B_q0, "(port)B_q0");
    sc_trace(mVcdFile, C_address0, "(port)C_address0");
    sc_trace(mVcdFile, C_ce0, "(port)C_ce0");
    sc_trace(mVcdFile, C_we0, "(port)C_we0");
    sc_trace(mVcdFile, C_d0, "(port)C_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_34, "ap_sig_bdd_34");
    sc_trace(mVcdFile, i_2_fu_187_p2, "i_2_fu_187_p2");
    sc_trace(mVcdFile, i_2_reg_331, "i_2_reg_331");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_65, "ap_sig_bdd_65");
    sc_trace(mVcdFile, p_addr8_cast_fu_201_p1, "p_addr8_cast_fu_201_p1");
    sc_trace(mVcdFile, p_addr8_cast_reg_336, "p_addr8_cast_reg_336");
    sc_trace(mVcdFile, exitcond4_fu_181_p2, "exitcond4_fu_181_p2");
    sc_trace(mVcdFile, j_2_fu_211_p2, "j_2_fu_211_p2");
    sc_trace(mVcdFile, j_2_reg_344, "j_2_reg_344");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_80, "ap_sig_bdd_80");
    sc_trace(mVcdFile, tmp_3_fu_226_p1, "tmp_3_fu_226_p1");
    sc_trace(mVcdFile, tmp_3_reg_349, "tmp_3_reg_349");
    sc_trace(mVcdFile, exitcond3_fu_205_p2, "exitcond3_fu_205_p2");
    sc_trace(mVcdFile, i_3_fu_237_p2, "i_3_fu_237_p2");
    sc_trace(mVcdFile, i_3_reg_362, "i_3_reg_362");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_96, "ap_sig_bdd_96");
    sc_trace(mVcdFile, p_addr4_cast_fu_251_p1, "p_addr4_cast_fu_251_p1");
    sc_trace(mVcdFile, p_addr4_cast_reg_367, "p_addr4_cast_reg_367");
    sc_trace(mVcdFile, exitcond2_fu_231_p2, "exitcond2_fu_231_p2");
    sc_trace(mVcdFile, j_3_fu_261_p2, "j_3_fu_261_p2");
    sc_trace(mVcdFile, j_3_reg_376, "j_3_reg_376");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_110, "ap_sig_bdd_110");
    sc_trace(mVcdFile, tmp_6_trn_cast_fu_267_p1, "tmp_6_trn_cast_fu_267_p1");
    sc_trace(mVcdFile, tmp_6_trn_cast_reg_381, "tmp_6_trn_cast_reg_381");
    sc_trace(mVcdFile, exitcond1_fu_255_p2, "exitcond1_fu_255_p2");
    sc_trace(mVcdFile, k_1_fu_277_p2, "k_1_fu_277_p2");
    sc_trace(mVcdFile, k_1_reg_390, "k_1_reg_390");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_124, "ap_sig_bdd_124");
    sc_trace(mVcdFile, exitcond_fu_271_p2, "exitcond_fu_271_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_bdd_139, "ap_sig_bdd_139");
    sc_trace(mVcdFile, B_cached_q0, "B_cached_q0");
    sc_trace(mVcdFile, grp_fu_175_p2, "grp_fu_175_p2");
    sc_trace(mVcdFile, tmp_9_reg_415, "tmp_9_reg_415");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_bdd_150, "ap_sig_bdd_150");
    sc_trace(mVcdFile, grp_fu_170_p2, "grp_fu_170_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st16_fsm_15, "ap_sig_cseq_ST_st16_fsm_15");
    sc_trace(mVcdFile, ap_sig_bdd_159, "ap_sig_bdd_159");
    sc_trace(mVcdFile, B_cached_address0, "B_cached_address0");
    sc_trace(mVcdFile, B_cached_ce0, "B_cached_ce0");
    sc_trace(mVcdFile, B_cached_we0, "B_cached_we0");
    sc_trace(mVcdFile, B_cached_d0, "B_cached_d0");
    sc_trace(mVcdFile, i_reg_101, "i_reg_101");
    sc_trace(mVcdFile, j_reg_112, "j_reg_112");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_185, "ap_sig_bdd_185");
    sc_trace(mVcdFile, i_1_reg_123, "i_1_reg_123");
    sc_trace(mVcdFile, j_1_reg_134, "j_1_reg_134");
    sc_trace(mVcdFile, k_reg_145, "k_reg_145");
    sc_trace(mVcdFile, temp_reg_156, "temp_reg_156");
    sc_trace(mVcdFile, tmp_6_fu_292_p1, "tmp_6_fu_292_p1");
    sc_trace(mVcdFile, tmp_8_fu_314_p1, "tmp_8_fu_314_p1");
    sc_trace(mVcdFile, tmp_4_fu_323_p1, "tmp_4_fu_323_p1");
    sc_trace(mVcdFile, grp_fu_170_p0, "grp_fu_170_p0");
    sc_trace(mVcdFile, grp_fu_170_p1, "grp_fu_170_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_bdd_216, "ap_sig_bdd_216");
    sc_trace(mVcdFile, grp_fu_175_p0, "grp_fu_175_p0");
    sc_trace(mVcdFile, grp_fu_175_p1, "grp_fu_175_p1");
    sc_trace(mVcdFile, tmp_fu_193_p3, "tmp_fu_193_p3");
    sc_trace(mVcdFile, tmp_3_trn7_cast_fu_217_p1, "tmp_3_trn7_cast_fu_217_p1");
    sc_trace(mVcdFile, p_addr9_fu_221_p2, "p_addr9_fu_221_p2");
    sc_trace(mVcdFile, tmp_1_fu_243_p3, "tmp_1_fu_243_p3");
    sc_trace(mVcdFile, tmp_8_trn1_cast_fu_283_p1, "tmp_8_trn1_cast_fu_283_p1");
    sc_trace(mVcdFile, p_addr5_fu_287_p2, "p_addr5_fu_287_p2");
    sc_trace(mVcdFile, tmp_7_fu_297_p3, "tmp_7_fu_297_p3");
    sc_trace(mVcdFile, p_addr_cast_fu_305_p1, "p_addr_cast_fu_305_p1");
    sc_trace(mVcdFile, p_addr1_fu_309_p2, "p_addr1_fu_309_p2");
    sc_trace(mVcdFile, p_addr7_fu_319_p2, "p_addr7_fu_319_p2");
    sc_trace(mVcdFile, grp_fu_170_ce, "grp_fu_170_ce");
    sc_trace(mVcdFile, grp_fu_175_ce, "grp_fu_175_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Accelerator_MAT_Multiply::~Accelerator_MAT_Multiply() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete B_cached_U;
    delete Accelerator_fadd_32ns_32ns_32_5_full_dsp_U0;
    delete Accelerator_fmul_32ns_32ns_32_4_max_dsp_U1;
}

void Accelerator_MAT_Multiply::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond4_fu_181_p2.read(), ap_const_lv1_0))) {
        i_1_reg_123 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_255_p2.read()))) {
        i_1_reg_123 = i_3_reg_362.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_205_p2.read()))) {
        i_reg_101 = i_2_reg_331.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_101 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_271_p2.read()))) {
        j_1_reg_134 = j_3_reg_376.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_231_p2.read()))) {
        j_1_reg_134 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        j_reg_112 = j_2_reg_344.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(exitcond4_fu_181_p2.read(), ap_const_lv1_0))) {
        j_reg_112 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        k_reg_145 = k_1_reg_390.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_255_p2.read()))) {
        k_reg_145 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st16_fsm_15.read())) {
        temp_reg_156 = grp_fu_170_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_255_p2.read()))) {
        temp_reg_156 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        i_2_reg_331 = i_2_fu_187_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        i_3_reg_362 = i_3_fu_237_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        j_2_reg_344 = j_2_fu_211_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        j_3_reg_376 = j_3_fu_261_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        k_1_reg_390 = k_1_fu_277_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_231_p2.read()))) {
        p_addr4_cast_reg_367 = p_addr4_cast_fu_251_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(exitcond4_fu_181_p2.read(), ap_const_lv1_0))) {
        p_addr8_cast_reg_336 = p_addr8_cast_fu_201_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_205_p2.read()))) {
        tmp_3_reg_349 = tmp_3_fu_226_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_255_p2.read()))) {
        tmp_6_trn_cast_reg_381 = tmp_6_trn_cast_fu_267_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        tmp_9_reg_415 = grp_fu_175_p2.read();
    }
}

void Accelerator_MAT_Multiply::thread_A_address0() {
    A_address0 =  (sc_lv<6>) (tmp_6_fu_292_p1.read());
}

void Accelerator_MAT_Multiply::thread_A_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_B_address0() {
    B_address0 =  (sc_lv<6>) (tmp_3_fu_226_p1.read());
}

void Accelerator_MAT_Multiply::thread_B_cached_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        B_cached_address0 =  (sc_lv<6>) (tmp_3_reg_349.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        B_cached_address0 =  (sc_lv<6>) (tmp_8_fu_314_p1.read());
    } else {
        B_cached_address0 = "XXXXXX";
    }
}

void Accelerator_MAT_Multiply::thread_B_cached_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        B_cached_ce0 = ap_const_logic_1;
    } else {
        B_cached_ce0 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_B_cached_d0() {
    B_cached_d0 = B_q0.read();
}

void Accelerator_MAT_Multiply::thread_B_cached_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        B_cached_we0 = ap_const_logic_1;
    } else {
        B_cached_we0 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_B_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        B_ce0 = ap_const_logic_1;
    } else {
        B_ce0 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_C_address0() {
    C_address0 =  (sc_lv<6>) (tmp_4_fu_323_p1.read());
}

void Accelerator_MAT_Multiply::thread_C_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        C_ce0 = ap_const_logic_1;
    } else {
        C_ce0 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_C_d0() {
    C_d0 = temp_reg_156.read();
}

void Accelerator_MAT_Multiply::thread_C_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_271_p2.read())))) {
        C_we0 = ap_const_logic_1;
    } else {
        C_we0 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_231_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_231_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_ap_sig_bdd_110() {
    ap_sig_bdd_110 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void Accelerator_MAT_Multiply::thread_ap_sig_bdd_124() {
    ap_sig_bdd_124 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void Accelerator_MAT_Multiply::thread_ap_sig_bdd_139() {
    ap_sig_bdd_139 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void Accelerator_MAT_Multiply::thread_ap_sig_bdd_150() {
    ap_sig_bdd_150 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void Accelerator_MAT_Multiply::thread_ap_sig_bdd_159() {
    ap_sig_bdd_159 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(15, 15));
}

void Accelerator_MAT_Multiply::thread_ap_sig_bdd_185() {
    ap_sig_bdd_185 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void Accelerator_MAT_Multiply::thread_ap_sig_bdd_216() {
    ap_sig_bdd_216 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void Accelerator_MAT_Multiply::thread_ap_sig_bdd_34() {
    ap_sig_bdd_34 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void Accelerator_MAT_Multiply::thread_ap_sig_bdd_65() {
    ap_sig_bdd_65 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void Accelerator_MAT_Multiply::thread_ap_sig_bdd_80() {
    ap_sig_bdd_80 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void Accelerator_MAT_Multiply::thread_ap_sig_bdd_96() {
    ap_sig_bdd_96 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void Accelerator_MAT_Multiply::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_bdd_150.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_bdd_216.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_ap_sig_cseq_ST_st16_fsm_15() {
    if (ap_sig_bdd_159.read()) {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_34.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_65.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_80.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_185.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_bdd_96.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_bdd_110.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_bdd_124.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_bdd_139.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply::thread_exitcond1_fu_255_p2() {
    exitcond1_fu_255_p2 = (!j_1_reg_134.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_134.read() == ap_const_lv4_8);
}

void Accelerator_MAT_Multiply::thread_exitcond2_fu_231_p2() {
    exitcond2_fu_231_p2 = (!i_1_reg_123.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_123.read() == ap_const_lv4_8);
}

void Accelerator_MAT_Multiply::thread_exitcond3_fu_205_p2() {
    exitcond3_fu_205_p2 = (!j_reg_112.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_112.read() == ap_const_lv4_8);
}

void Accelerator_MAT_Multiply::thread_exitcond4_fu_181_p2() {
    exitcond4_fu_181_p2 = (!i_reg_101.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_101.read() == ap_const_lv4_8);
}

void Accelerator_MAT_Multiply::thread_exitcond_fu_271_p2() {
    exitcond_fu_271_p2 = (!k_reg_145.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_145.read() == ap_const_lv4_8);
}

void Accelerator_MAT_Multiply::thread_grp_fu_170_ce() {
    grp_fu_170_ce = ap_const_logic_1;
}

void Accelerator_MAT_Multiply::thread_grp_fu_170_p0() {
    grp_fu_170_p0 = temp_reg_156.read();
}

void Accelerator_MAT_Multiply::thread_grp_fu_170_p1() {
    grp_fu_170_p1 = tmp_9_reg_415.read();
}

void Accelerator_MAT_Multiply::thread_grp_fu_175_ce() {
    grp_fu_175_ce = ap_const_logic_1;
}

void Accelerator_MAT_Multiply::thread_grp_fu_175_p0() {
    grp_fu_175_p0 = A_q0.read();
}

void Accelerator_MAT_Multiply::thread_grp_fu_175_p1() {
    grp_fu_175_p1 = B_cached_q0.read();
}

void Accelerator_MAT_Multiply::thread_i_2_fu_187_p2() {
    i_2_fu_187_p2 = (!i_reg_101.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_101.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Accelerator_MAT_Multiply::thread_i_3_fu_237_p2() {
    i_3_fu_237_p2 = (!i_1_reg_123.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_1_reg_123.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Accelerator_MAT_Multiply::thread_j_2_fu_211_p2() {
    j_2_fu_211_p2 = (!j_reg_112.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_reg_112.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Accelerator_MAT_Multiply::thread_j_3_fu_261_p2() {
    j_3_fu_261_p2 = (!j_1_reg_134.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_1_reg_134.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Accelerator_MAT_Multiply::thread_k_1_fu_277_p2() {
    k_1_fu_277_p2 = (!k_reg_145.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(k_reg_145.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Accelerator_MAT_Multiply::thread_p_addr1_fu_309_p2() {
    p_addr1_fu_309_p2 = (!tmp_6_trn_cast_reg_381.read().is_01() || !p_addr_cast_fu_305_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_6_trn_cast_reg_381.read()) + sc_biguint<8>(p_addr_cast_fu_305_p1.read()));
}

void Accelerator_MAT_Multiply::thread_p_addr4_cast_fu_251_p1() {
    p_addr4_cast_fu_251_p1 = esl_zext<8,7>(tmp_1_fu_243_p3.read());
}

void Accelerator_MAT_Multiply::thread_p_addr5_fu_287_p2() {
    p_addr5_fu_287_p2 = (!tmp_8_trn1_cast_fu_283_p1.read().is_01() || !p_addr4_cast_reg_367.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_8_trn1_cast_fu_283_p1.read()) + sc_biguint<8>(p_addr4_cast_reg_367.read()));
}

void Accelerator_MAT_Multiply::thread_p_addr7_fu_319_p2() {
    p_addr7_fu_319_p2 = (!tmp_6_trn_cast_reg_381.read().is_01() || !p_addr4_cast_reg_367.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_6_trn_cast_reg_381.read()) + sc_biguint<8>(p_addr4_cast_reg_367.read()));
}

void Accelerator_MAT_Multiply::thread_p_addr8_cast_fu_201_p1() {
    p_addr8_cast_fu_201_p1 = esl_zext<8,7>(tmp_fu_193_p3.read());
}

void Accelerator_MAT_Multiply::thread_p_addr9_fu_221_p2() {
    p_addr9_fu_221_p2 = (!tmp_3_trn7_cast_fu_217_p1.read().is_01() || !p_addr8_cast_reg_336.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_3_trn7_cast_fu_217_p1.read()) + sc_biguint<8>(p_addr8_cast_reg_336.read()));
}

void Accelerator_MAT_Multiply::thread_p_addr_cast_fu_305_p1() {
    p_addr_cast_fu_305_p1 = esl_zext<8,7>(tmp_7_fu_297_p3.read());
}

void Accelerator_MAT_Multiply::thread_tmp_1_fu_243_p3() {
    tmp_1_fu_243_p3 = esl_concat<4,3>(i_1_reg_123.read(), ap_const_lv3_0);
}

void Accelerator_MAT_Multiply::thread_tmp_3_fu_226_p1() {
    tmp_3_fu_226_p1 = esl_zext<64,8>(p_addr9_fu_221_p2.read());
}

void Accelerator_MAT_Multiply::thread_tmp_3_trn7_cast_fu_217_p1() {
    tmp_3_trn7_cast_fu_217_p1 = esl_zext<8,4>(j_reg_112.read());
}

void Accelerator_MAT_Multiply::thread_tmp_4_fu_323_p1() {
    tmp_4_fu_323_p1 = esl_zext<64,8>(p_addr7_fu_319_p2.read());
}

void Accelerator_MAT_Multiply::thread_tmp_6_fu_292_p1() {
    tmp_6_fu_292_p1 = esl_zext<64,8>(p_addr5_fu_287_p2.read());
}

void Accelerator_MAT_Multiply::thread_tmp_6_trn_cast_fu_267_p1() {
    tmp_6_trn_cast_fu_267_p1 = esl_zext<8,4>(j_1_reg_134.read());
}

void Accelerator_MAT_Multiply::thread_tmp_7_fu_297_p3() {
    tmp_7_fu_297_p3 = esl_concat<4,3>(k_reg_145.read(), ap_const_lv3_0);
}

void Accelerator_MAT_Multiply::thread_tmp_8_fu_314_p1() {
    tmp_8_fu_314_p1 = esl_zext<64,8>(p_addr1_fu_309_p2.read());
}

void Accelerator_MAT_Multiply::thread_tmp_8_trn1_cast_fu_283_p1() {
    tmp_8_trn1_cast_fu_283_p1 = esl_zext<8,4>(k_reg_145.read());
}

void Accelerator_MAT_Multiply::thread_tmp_fu_193_p3() {
    tmp_fu_193_p3 = esl_concat<4,3>(i_reg_101.read(), ap_const_lv3_0);
}

void Accelerator_MAT_Multiply::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(exitcond4_fu_181_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_205_p2.read())) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_231_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            }
            break;
        case 32 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_255_p2.read())) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            }
            break;
        case 64 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_271_p2.read())) {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            } else {
                ap_NS_fsm = ap_ST_st8_fsm_7;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
            break;
    }
}

}

