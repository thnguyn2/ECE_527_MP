// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "Accelerator_Quant.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Accelerator_Quant::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Accelerator_Quant::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<26> Accelerator_Quant::ap_ST_st1_fsm_0 = "1";
const sc_lv<26> Accelerator_Quant::ap_ST_st2_fsm_1 = "10";
const sc_lv<26> Accelerator_Quant::ap_ST_st3_fsm_2 = "100";
const sc_lv<26> Accelerator_Quant::ap_ST_st4_fsm_3 = "1000";
const sc_lv<26> Accelerator_Quant::ap_ST_st5_fsm_4 = "10000";
const sc_lv<26> Accelerator_Quant::ap_ST_st6_fsm_5 = "100000";
const sc_lv<26> Accelerator_Quant::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st19_fsm_18 = "1000000000000000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st20_fsm_19 = "10000000000000000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st21_fsm_20 = "100000000000000000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st22_fsm_21 = "1000000000000000000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st23_fsm_22 = "10000000000000000000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st24_fsm_23 = "100000000000000000000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st25_fsm_24 = "1000000000000000000000000";
const sc_lv<26> Accelerator_Quant::ap_ST_st26_fsm_25 = "10000000000000000000000000";
const sc_lv<32> Accelerator_Quant::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Accelerator_Quant::ap_const_lv1_1 = "1";
const sc_lv<32> Accelerator_Quant::ap_const_lv32_3 = "11";
const sc_lv<32> Accelerator_Quant::ap_const_lv32_16 = "10110";
const sc_lv<32> Accelerator_Quant::ap_const_lv32_4 = "100";
const sc_lv<32> Accelerator_Quant::ap_const_lv32_1 = "1";
const sc_lv<1> Accelerator_Quant::ap_const_lv1_0 = "0";
const sc_lv<32> Accelerator_Quant::ap_const_lv32_2 = "10";
const sc_lv<32> Accelerator_Quant::ap_const_lv32_13 = "10011";
const sc_lv<32> Accelerator_Quant::ap_const_lv32_15 = "10101";
const sc_lv<4> Accelerator_Quant::ap_const_lv4_0 = "0000";
const sc_lv<32> Accelerator_Quant::ap_const_lv32_14 = "10100";
const sc_lv<32> Accelerator_Quant::ap_const_lv32_19 = "11001";
const sc_lv<8> Accelerator_Quant::ap_const_lv8_1 = "1";
const sc_lv<4> Accelerator_Quant::ap_const_lv4_8 = "1000";
const sc_lv<4> Accelerator_Quant::ap_const_lv4_1 = "1";
const sc_lv<3> Accelerator_Quant::ap_const_lv3_0 = "000";

Accelerator_Quant::Accelerator_Quant(sc_module_name name) : sc_module(name), mVcdFile(0) {
    stdQuantizationMatrix_U = new Accelerator_Quant_stdQuantizationMatrix("stdQuantizationMatrix_U");
    stdQuantizationMatrix_U->clk(ap_clk);
    stdQuantizationMatrix_U->reset(ap_rst);
    stdQuantizationMatrix_U->address0(stdQuantizationMatrix_address0);
    stdQuantizationMatrix_U->ce0(stdQuantizationMatrix_ce0);
    stdQuantizationMatrix_U->q0(stdQuantizationMatrix_q0);
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U12 = new Accelerator_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>("Accelerator_fmul_32ns_32ns_32_4_max_dsp_U12");
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U12->clk(ap_clk);
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U12->reset(ap_rst);
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U12->din0(grp_fu_149_p0);
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U12->din1(grp_fu_149_p1);
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U12->ce(grp_fu_149_ce);
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U12->dout(grp_fu_149_p2);
    Accelerator_fdiv_32ns_32ns_32_16_U13 = new Accelerator_fdiv_32ns_32ns_32_16<1,16,32,32,32>("Accelerator_fdiv_32ns_32ns_32_16_U13");
    Accelerator_fdiv_32ns_32ns_32_16_U13->clk(ap_clk);
    Accelerator_fdiv_32ns_32ns_32_16_U13->reset(ap_rst);
    Accelerator_fdiv_32ns_32ns_32_16_U13->din0(grp_fu_156_p0);
    Accelerator_fdiv_32ns_32ns_32_16_U13->din1(grp_fu_156_p1);
    Accelerator_fdiv_32ns_32ns_32_16_U13->ce(grp_fu_156_ce);
    Accelerator_fdiv_32ns_32ns_32_16_U13->dout(grp_fu_156_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_X_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_10_fu_248_p1 );
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );
    sensitive << ( tmp_9_fu_274_p1 );

    SC_METHOD(thread_X_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );

    SC_METHOD(thread_Y_address0);
    sensitive << ( tmp_10_reg_318 );
    sensitive << ( tmp_9_reg_347 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st26_fsm_25 );

    SC_METHOD(thread_Y_ce0);
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st26_fsm_25 );

    SC_METHOD(thread_Y_d0);
    sensitive << ( tmp_6_i_reg_334 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st26_fsm_25 );
    sensitive << ( grp_fu_149_p2 );

    SC_METHOD(thread_Y_we0);
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st26_fsm_25 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( cond_reg_280 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_i3_fu_179_p2 );
    sensitive << ( exitcond1_i_fu_203_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( cond_reg_280 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_i3_fu_179_p2 );
    sensitive << ( exitcond1_i_fu_203_p2 );

    SC_METHOD(thread_ap_sig_bdd_107);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_135);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_153);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_162);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_193);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_202);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_76);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_83);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_92);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_44 );

    SC_METHOD(thread_ap_sig_cseq_ST_st20_fsm_19);
    sensitive << ( ap_sig_bdd_153 );

    SC_METHOD(thread_ap_sig_cseq_ST_st21_fsm_20);
    sensitive << ( ap_sig_bdd_193 );

    SC_METHOD(thread_ap_sig_cseq_ST_st22_fsm_21);
    sensitive << ( ap_sig_bdd_162 );

    SC_METHOD(thread_ap_sig_cseq_ST_st23_fsm_22);
    sensitive << ( ap_sig_bdd_83 );

    SC_METHOD(thread_ap_sig_cseq_ST_st26_fsm_25);
    sensitive << ( ap_sig_bdd_202 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_107 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_135 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_76 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_bdd_92 );

    SC_METHOD(thread_cond_fu_173_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( function_r );

    SC_METHOD(thread_exitcond1_i3_fu_179_p2);
    sensitive << ( cond_reg_280 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_i2_reg_104 );

    SC_METHOD(thread_exitcond1_i_fu_203_p2);
    sensitive << ( cond_reg_280 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_i_reg_115 );

    SC_METHOD(thread_exitcond_i6_fu_227_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( j_i5_reg_126 );

    SC_METHOD(thread_exitcond_i_fu_253_p2);
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );
    sensitive << ( j_i_reg_137 );

    SC_METHOD(thread_grp_fu_149_ce);

    SC_METHOD(thread_grp_fu_149_p0);
    sensitive << ( X_q0 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );

    SC_METHOD(thread_grp_fu_149_p1);
    sensitive << ( stdQuantizationMatrix_q0 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );

    SC_METHOD(thread_grp_fu_156_ce);

    SC_METHOD(thread_grp_fu_156_p0);
    sensitive << ( reg_161 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_grp_fu_156_p1);
    sensitive << ( stdQuantizationMatrix_q0 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_i_4_fu_185_p2);
    sensitive << ( i_i2_reg_104 );

    SC_METHOD(thread_i_fu_209_p2);
    sensitive << ( i_i_reg_115 );

    SC_METHOD(thread_j_4_fu_233_p2);
    sensitive << ( j_i5_reg_126 );

    SC_METHOD(thread_j_fu_259_p2);
    sensitive << ( j_i_reg_137 );

    SC_METHOD(thread_p_addr1_fu_243_p2);
    sensitive << ( p_addr_cast_reg_292 );
    sensitive << ( tmp_i7_trn_cast_fu_239_p1 );

    SC_METHOD(thread_p_addr2_cast_fu_223_p1);
    sensitive << ( tmp_fu_215_p3 );

    SC_METHOD(thread_p_addr3_fu_269_p2);
    sensitive << ( p_addr2_cast_reg_305 );
    sensitive << ( tmp_i_trn_cast_fu_265_p1 );

    SC_METHOD(thread_p_addr_cast_fu_199_p1);
    sensitive << ( tmp_s_fu_191_p3 );

    SC_METHOD(thread_stdQuantizationMatrix_address0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_10_reg_318 );
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );
    sensitive << ( tmp_9_fu_274_p1 );

    SC_METHOD(thread_stdQuantizationMatrix_ce0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );

    SC_METHOD(thread_tmp_10_fu_248_p1);
    sensitive << ( p_addr1_fu_243_p2 );

    SC_METHOD(thread_tmp_9_fu_274_p1);
    sensitive << ( p_addr3_fu_269_p2 );

    SC_METHOD(thread_tmp_fu_215_p3);
    sensitive << ( i_i_reg_115 );

    SC_METHOD(thread_tmp_i7_trn_cast_fu_239_p1);
    sensitive << ( j_i5_reg_126 );

    SC_METHOD(thread_tmp_i_trn_cast_fu_265_p1);
    sensitive << ( j_i_reg_137 );

    SC_METHOD(thread_tmp_s_fu_191_p3);
    sensitive << ( i_i2_reg_104 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( cond_reg_280 );
    sensitive << ( exitcond1_i3_fu_179_p2 );
    sensitive << ( exitcond1_i_fu_203_p2 );
    sensitive << ( exitcond_i6_fu_227_p2 );
    sensitive << ( exitcond_i_fu_253_p2 );

    ap_CS_fsm = "00000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Accelerator_Quant_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, X_address0, "(port)X_address0");
    sc_trace(mVcdFile, X_ce0, "(port)X_ce0");
    sc_trace(mVcdFile, X_q0, "(port)X_q0");
    sc_trace(mVcdFile, function_r, "(port)function_r");
    sc_trace(mVcdFile, Y_address0, "(port)Y_address0");
    sc_trace(mVcdFile, Y_ce0, "(port)Y_ce0");
    sc_trace(mVcdFile, Y_we0, "(port)Y_we0");
    sc_trace(mVcdFile, Y_d0, "(port)Y_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_44, "ap_sig_bdd_44");
    sc_trace(mVcdFile, stdQuantizationMatrix_address0, "stdQuantizationMatrix_address0");
    sc_trace(mVcdFile, stdQuantizationMatrix_ce0, "stdQuantizationMatrix_ce0");
    sc_trace(mVcdFile, stdQuantizationMatrix_q0, "stdQuantizationMatrix_q0");
    sc_trace(mVcdFile, reg_161, "reg_161");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_76, "ap_sig_bdd_76");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st23_fsm_22, "ap_sig_cseq_ST_st23_fsm_22");
    sc_trace(mVcdFile, ap_sig_bdd_83, "ap_sig_bdd_83");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_92, "ap_sig_bdd_92");
    sc_trace(mVcdFile, cond_fu_173_p2, "cond_fu_173_p2");
    sc_trace(mVcdFile, cond_reg_280, "cond_reg_280");
    sc_trace(mVcdFile, i_4_fu_185_p2, "i_4_fu_185_p2");
    sc_trace(mVcdFile, i_4_reg_287, "i_4_reg_287");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_107, "ap_sig_bdd_107");
    sc_trace(mVcdFile, p_addr_cast_fu_199_p1, "p_addr_cast_fu_199_p1");
    sc_trace(mVcdFile, p_addr_cast_reg_292, "p_addr_cast_reg_292");
    sc_trace(mVcdFile, exitcond1_i3_fu_179_p2, "exitcond1_i3_fu_179_p2");
    sc_trace(mVcdFile, i_fu_209_p2, "i_fu_209_p2");
    sc_trace(mVcdFile, i_reg_300, "i_reg_300");
    sc_trace(mVcdFile, p_addr2_cast_fu_223_p1, "p_addr2_cast_fu_223_p1");
    sc_trace(mVcdFile, p_addr2_cast_reg_305, "p_addr2_cast_reg_305");
    sc_trace(mVcdFile, exitcond1_i_fu_203_p2, "exitcond1_i_fu_203_p2");
    sc_trace(mVcdFile, j_4_fu_233_p2, "j_4_fu_233_p2");
    sc_trace(mVcdFile, j_4_reg_313, "j_4_reg_313");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_135, "ap_sig_bdd_135");
    sc_trace(mVcdFile, tmp_10_fu_248_p1, "tmp_10_fu_248_p1");
    sc_trace(mVcdFile, tmp_10_reg_318, "tmp_10_reg_318");
    sc_trace(mVcdFile, exitcond_i6_fu_227_p2, "exitcond_i6_fu_227_p2");
    sc_trace(mVcdFile, grp_fu_156_p2, "grp_fu_156_p2");
    sc_trace(mVcdFile, tmp_6_i_reg_334, "tmp_6_i_reg_334");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st20_fsm_19, "ap_sig_cseq_ST_st20_fsm_19");
    sc_trace(mVcdFile, ap_sig_bdd_153, "ap_sig_bdd_153");
    sc_trace(mVcdFile, j_fu_259_p2, "j_fu_259_p2");
    sc_trace(mVcdFile, j_reg_342, "j_reg_342");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st22_fsm_21, "ap_sig_cseq_ST_st22_fsm_21");
    sc_trace(mVcdFile, ap_sig_bdd_162, "ap_sig_bdd_162");
    sc_trace(mVcdFile, tmp_9_fu_274_p1, "tmp_9_fu_274_p1");
    sc_trace(mVcdFile, tmp_9_reg_347, "tmp_9_reg_347");
    sc_trace(mVcdFile, exitcond_i_fu_253_p2, "exitcond_i_fu_253_p2");
    sc_trace(mVcdFile, i_i2_reg_104, "i_i2_reg_104");
    sc_trace(mVcdFile, i_i_reg_115, "i_i_reg_115");
    sc_trace(mVcdFile, j_i5_reg_126, "j_i5_reg_126");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st21_fsm_20, "ap_sig_cseq_ST_st21_fsm_20");
    sc_trace(mVcdFile, ap_sig_bdd_193, "ap_sig_bdd_193");
    sc_trace(mVcdFile, j_i_reg_137, "j_i_reg_137");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st26_fsm_25, "ap_sig_cseq_ST_st26_fsm_25");
    sc_trace(mVcdFile, ap_sig_bdd_202, "ap_sig_bdd_202");
    sc_trace(mVcdFile, grp_fu_149_p2, "grp_fu_149_p2");
    sc_trace(mVcdFile, grp_fu_149_p0, "grp_fu_149_p0");
    sc_trace(mVcdFile, grp_fu_149_p1, "grp_fu_149_p1");
    sc_trace(mVcdFile, grp_fu_156_p0, "grp_fu_156_p0");
    sc_trace(mVcdFile, grp_fu_156_p1, "grp_fu_156_p1");
    sc_trace(mVcdFile, tmp_s_fu_191_p3, "tmp_s_fu_191_p3");
    sc_trace(mVcdFile, tmp_fu_215_p3, "tmp_fu_215_p3");
    sc_trace(mVcdFile, tmp_i7_trn_cast_fu_239_p1, "tmp_i7_trn_cast_fu_239_p1");
    sc_trace(mVcdFile, p_addr1_fu_243_p2, "p_addr1_fu_243_p2");
    sc_trace(mVcdFile, tmp_i_trn_cast_fu_265_p1, "tmp_i_trn_cast_fu_265_p1");
    sc_trace(mVcdFile, p_addr3_fu_269_p2, "p_addr3_fu_269_p2");
    sc_trace(mVcdFile, grp_fu_149_ce, "grp_fu_149_ce");
    sc_trace(mVcdFile, grp_fu_156_ce, "grp_fu_156_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Accelerator_Quant::~Accelerator_Quant() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete stdQuantizationMatrix_U;
    delete Accelerator_fmul_32ns_32ns_32_4_max_dsp_U12;
    delete Accelerator_fdiv_32ns_32ns_32_16_U13;
}

void Accelerator_Quant::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(cond_fu_173_p2.read(), ap_const_lv1_0))) {
        i_i2_reg_104 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i6_fu_227_p2.read()))) {
        i_i2_reg_104 = i_4_reg_287.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         !esl_seteq<1,1,1>(cond_fu_173_p2.read(), ap_const_lv1_0))) {
        i_i_reg_115 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_253_p2.read()))) {
        i_i_reg_115 = i_reg_300.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        j_i5_reg_126 = j_4_reg_313.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(cond_reg_280.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_fu_179_p2.read()))) {
        j_i5_reg_126 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st26_fsm_25.read())) {
        j_i_reg_137 = j_reg_342.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                !esl_seteq<1,1,1>(cond_reg_280.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_203_p2.read()))) {
        j_i_reg_137 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        cond_reg_280 = cond_fu_173_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(cond_reg_280.read(), ap_const_lv1_0))) {
        i_4_reg_287 = i_4_fu_185_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && !esl_seteq<1,1,1>(cond_reg_280.read(), ap_const_lv1_0))) {
        i_reg_300 = i_fu_209_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        j_4_reg_313 = j_4_fu_233_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read())) {
        j_reg_342 = j_fu_259_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && !esl_seteq<1,1,1>(cond_reg_280.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_203_p2.read()))) {
        p_addr2_cast_reg_305 = p_addr2_cast_fu_223_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(cond_reg_280.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_fu_179_p2.read()))) {
        p_addr_cast_reg_292 = p_addr_cast_fu_199_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read()))) {
        reg_161 = X_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i6_fu_227_p2.read()))) {
        tmp_10_reg_318 = tmp_10_fu_248_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        tmp_6_i_reg_334 = grp_fu_156_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_253_p2.read()))) {
        tmp_9_reg_347 = tmp_9_fu_274_p1.read();
    }
}

void Accelerator_Quant::thread_X_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read())) {
        X_address0 =  (sc_lv<6>) (tmp_9_fu_274_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        X_address0 =  (sc_lv<6>) (tmp_10_fu_248_p1.read());
    } else {
        X_address0 = "XXXXXX";
    }
}

void Accelerator_Quant::thread_X_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read()))) {
        X_ce0 = ap_const_logic_1;
    } else {
        X_ce0 = ap_const_logic_0;
    }
}

void Accelerator_Quant::thread_Y_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st26_fsm_25.read())) {
        Y_address0 =  (sc_lv<6>) (tmp_9_reg_347.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        Y_address0 =  (sc_lv<6>) (tmp_10_reg_318.read());
    } else {
        Y_address0 = "XXXXXX";
    }
}

void Accelerator_Quant::thread_Y_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st26_fsm_25.read()))) {
        Y_ce0 = ap_const_logic_1;
    } else {
        Y_ce0 = ap_const_logic_0;
    }
}

void Accelerator_Quant::thread_Y_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st26_fsm_25.read())) {
        Y_d0 = grp_fu_149_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        Y_d0 = tmp_6_i_reg_334.read();
    } else {
        Y_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Accelerator_Quant::thread_Y_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st26_fsm_25.read()))) {
        Y_we0 = ap_const_logic_1;
    } else {
        Y_we0 = ap_const_logic_0;
    }
}

void Accelerator_Quant::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          ((esl_seteq<1,1,1>(cond_reg_280.read(), ap_const_lv1_0) && 
            !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_fu_179_p2.read())) || 
           (!esl_seteq<1,1,1>(cond_reg_280.read(), ap_const_lv1_0) && 
            !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_203_p2.read())))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Accelerator_Quant::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Accelerator_Quant::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         ((esl_seteq<1,1,1>(cond_reg_280.read(), ap_const_lv1_0) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_fu_179_p2.read())) || 
          (!esl_seteq<1,1,1>(cond_reg_280.read(), ap_const_lv1_0) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_203_p2.read()))))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Accelerator_Quant::thread_ap_sig_bdd_107() {
    ap_sig_bdd_107 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void Accelerator_Quant::thread_ap_sig_bdd_135() {
    ap_sig_bdd_135 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void Accelerator_Quant::thread_ap_sig_bdd_153() {
    ap_sig_bdd_153 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(19, 19));
}

void Accelerator_Quant::thread_ap_sig_bdd_162() {
    ap_sig_bdd_162 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(21, 21));
}

void Accelerator_Quant::thread_ap_sig_bdd_193() {
    ap_sig_bdd_193 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(20, 20));
}

void Accelerator_Quant::thread_ap_sig_bdd_202() {
    ap_sig_bdd_202 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(25, 25));
}

void Accelerator_Quant::thread_ap_sig_bdd_44() {
    ap_sig_bdd_44 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void Accelerator_Quant::thread_ap_sig_bdd_76() {
    ap_sig_bdd_76 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void Accelerator_Quant::thread_ap_sig_bdd_83() {
    ap_sig_bdd_83 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(22, 22));
}

void Accelerator_Quant::thread_ap_sig_bdd_92() {
    ap_sig_bdd_92 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void Accelerator_Quant::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_44.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void Accelerator_Quant::thread_ap_sig_cseq_ST_st20_fsm_19() {
    if (ap_sig_bdd_153.read()) {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    }
}

void Accelerator_Quant::thread_ap_sig_cseq_ST_st21_fsm_20() {
    if (ap_sig_bdd_193.read()) {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    }
}

void Accelerator_Quant::thread_ap_sig_cseq_ST_st22_fsm_21() {
    if (ap_sig_bdd_162.read()) {
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    }
}

void Accelerator_Quant::thread_ap_sig_cseq_ST_st23_fsm_22() {
    if (ap_sig_bdd_83.read()) {
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    }
}

void Accelerator_Quant::thread_ap_sig_cseq_ST_st26_fsm_25() {
    if (ap_sig_bdd_202.read()) {
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    }
}

void Accelerator_Quant::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_107.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void Accelerator_Quant::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_135.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void Accelerator_Quant::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_76.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void Accelerator_Quant::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_bdd_92.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void Accelerator_Quant::thread_cond_fu_173_p2() {
    cond_fu_173_p2 = (!function_r.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<1>(): sc_lv<1>(function_r.read() == ap_const_lv8_1);
}

void Accelerator_Quant::thread_exitcond1_i3_fu_179_p2() {
    exitcond1_i3_fu_179_p2 = (!i_i2_reg_104.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_i2_reg_104.read() == ap_const_lv4_8);
}

void Accelerator_Quant::thread_exitcond1_i_fu_203_p2() {
    exitcond1_i_fu_203_p2 = (!i_i_reg_115.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_115.read() == ap_const_lv4_8);
}

void Accelerator_Quant::thread_exitcond_i6_fu_227_p2() {
    exitcond_i6_fu_227_p2 = (!j_i5_reg_126.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_i5_reg_126.read() == ap_const_lv4_8);
}

void Accelerator_Quant::thread_exitcond_i_fu_253_p2() {
    exitcond_i_fu_253_p2 = (!j_i_reg_137.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_i_reg_137.read() == ap_const_lv4_8);
}

void Accelerator_Quant::thread_grp_fu_149_ce() {
    grp_fu_149_ce = ap_const_logic_1;
}

void Accelerator_Quant::thread_grp_fu_149_p0() {
    grp_fu_149_p0 = X_q0.read();
}

void Accelerator_Quant::thread_grp_fu_149_p1() {
    grp_fu_149_p1 = stdQuantizationMatrix_q0.read();
}

void Accelerator_Quant::thread_grp_fu_156_ce() {
    grp_fu_156_ce = ap_const_logic_1;
}

void Accelerator_Quant::thread_grp_fu_156_p0() {
    grp_fu_156_p0 = reg_161.read();
}

void Accelerator_Quant::thread_grp_fu_156_p1() {
    grp_fu_156_p1 = stdQuantizationMatrix_q0.read();
}

void Accelerator_Quant::thread_i_4_fu_185_p2() {
    i_4_fu_185_p2 = (!i_i2_reg_104.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_i2_reg_104.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Accelerator_Quant::thread_i_fu_209_p2() {
    i_fu_209_p2 = (!i_i_reg_115.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_i_reg_115.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Accelerator_Quant::thread_j_4_fu_233_p2() {
    j_4_fu_233_p2 = (!j_i5_reg_126.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_i5_reg_126.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Accelerator_Quant::thread_j_fu_259_p2() {
    j_fu_259_p2 = (!j_i_reg_137.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_i_reg_137.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Accelerator_Quant::thread_p_addr1_fu_243_p2() {
    p_addr1_fu_243_p2 = (!tmp_i7_trn_cast_fu_239_p1.read().is_01() || !p_addr_cast_reg_292.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_i7_trn_cast_fu_239_p1.read()) + sc_biguint<8>(p_addr_cast_reg_292.read()));
}

void Accelerator_Quant::thread_p_addr2_cast_fu_223_p1() {
    p_addr2_cast_fu_223_p1 = esl_zext<8,7>(tmp_fu_215_p3.read());
}

void Accelerator_Quant::thread_p_addr3_fu_269_p2() {
    p_addr3_fu_269_p2 = (!tmp_i_trn_cast_fu_265_p1.read().is_01() || !p_addr2_cast_reg_305.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_i_trn_cast_fu_265_p1.read()) + sc_biguint<8>(p_addr2_cast_reg_305.read()));
}

void Accelerator_Quant::thread_p_addr_cast_fu_199_p1() {
    p_addr_cast_fu_199_p1 = esl_zext<8,7>(tmp_s_fu_191_p3.read());
}

void Accelerator_Quant::thread_stdQuantizationMatrix_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read())) {
        stdQuantizationMatrix_address0 =  (sc_lv<6>) (tmp_9_fu_274_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        stdQuantizationMatrix_address0 =  (sc_lv<6>) (tmp_10_reg_318.read());
    } else {
        stdQuantizationMatrix_address0 = "XXXXXX";
    }
}

void Accelerator_Quant::thread_stdQuantizationMatrix_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read()))) {
        stdQuantizationMatrix_ce0 = ap_const_logic_1;
    } else {
        stdQuantizationMatrix_ce0 = ap_const_logic_0;
    }
}

void Accelerator_Quant::thread_tmp_10_fu_248_p1() {
    tmp_10_fu_248_p1 = esl_zext<64,8>(p_addr1_fu_243_p2.read());
}

void Accelerator_Quant::thread_tmp_9_fu_274_p1() {
    tmp_9_fu_274_p1 = esl_zext<64,8>(p_addr3_fu_269_p2.read());
}

void Accelerator_Quant::thread_tmp_fu_215_p3() {
    tmp_fu_215_p3 = esl_concat<4,3>(i_i_reg_115.read(), ap_const_lv3_0);
}

void Accelerator_Quant::thread_tmp_i7_trn_cast_fu_239_p1() {
    tmp_i7_trn_cast_fu_239_p1 = esl_zext<8,4>(j_i5_reg_126.read());
}

void Accelerator_Quant::thread_tmp_i_trn_cast_fu_265_p1() {
    tmp_i_trn_cast_fu_265_p1 = esl_zext<8,4>(j_i_reg_137.read());
}

void Accelerator_Quant::thread_tmp_s_fu_191_p3() {
    tmp_s_fu_191_p3 = esl_concat<4,3>(i_i2_reg_104.read(), ap_const_lv3_0);
}

void Accelerator_Quant::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (((esl_seteq<1,1,1>(cond_reg_280.read(), ap_const_lv1_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_fu_179_p2.read())) || (!esl_seteq<1,1,1>(cond_reg_280.read(), ap_const_lv1_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_203_p2.read())))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else if ((!esl_seteq<1,1,1>(cond_reg_280.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_203_p2.read()))) {
                ap_NS_fsm = ap_ST_st22_fsm_21;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i6_fu_227_p2.read())) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 2097152 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_253_p2.read())) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st23_fsm_22;
            }
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_st26_fsm_25;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<26>) ("XXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

