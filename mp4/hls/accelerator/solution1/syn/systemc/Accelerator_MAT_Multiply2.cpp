// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "Accelerator_MAT_Multiply2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Accelerator_MAT_Multiply2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Accelerator_MAT_Multiply2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<15> Accelerator_MAT_Multiply2::ap_ST_st1_fsm_0 = "1";
const sc_lv<15> Accelerator_MAT_Multiply2::ap_ST_st2_fsm_1 = "10";
const sc_lv<15> Accelerator_MAT_Multiply2::ap_ST_st3_fsm_2 = "100";
const sc_lv<15> Accelerator_MAT_Multiply2::ap_ST_st4_fsm_3 = "1000";
const sc_lv<15> Accelerator_MAT_Multiply2::ap_ST_st5_fsm_4 = "10000";
const sc_lv<15> Accelerator_MAT_Multiply2::ap_ST_st6_fsm_5 = "100000";
const sc_lv<15> Accelerator_MAT_Multiply2::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<15> Accelerator_MAT_Multiply2::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<15> Accelerator_MAT_Multiply2::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<15> Accelerator_MAT_Multiply2::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<15> Accelerator_MAT_Multiply2::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<15> Accelerator_MAT_Multiply2::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<15> Accelerator_MAT_Multiply2::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<15> Accelerator_MAT_Multiply2::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<15> Accelerator_MAT_Multiply2::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<32> Accelerator_MAT_Multiply2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Accelerator_MAT_Multiply2::ap_const_lv1_1 = "1";
const sc_lv<32> Accelerator_MAT_Multiply2::ap_const_lv32_1 = "1";
const sc_lv<1> Accelerator_MAT_Multiply2::ap_const_lv1_0 = "0";
const sc_lv<32> Accelerator_MAT_Multiply2::ap_const_lv32_2 = "10";
const sc_lv<32> Accelerator_MAT_Multiply2::ap_const_lv32_4 = "100";
const sc_lv<32> Accelerator_MAT_Multiply2::ap_const_lv32_5 = "101";
const sc_lv<32> Accelerator_MAT_Multiply2::ap_const_lv32_6 = "110";
const sc_lv<32> Accelerator_MAT_Multiply2::ap_const_lv32_9 = "1001";
const sc_lv<32> Accelerator_MAT_Multiply2::ap_const_lv32_E = "1110";
const sc_lv<4> Accelerator_MAT_Multiply2::ap_const_lv4_0 = "0000";
const sc_lv<32> Accelerator_MAT_Multiply2::ap_const_lv32_3 = "11";
const sc_lv<32> Accelerator_MAT_Multiply2::ap_const_lv32_A = "1010";
const sc_lv<4> Accelerator_MAT_Multiply2::ap_const_lv4_8 = "1000";
const sc_lv<4> Accelerator_MAT_Multiply2::ap_const_lv4_1 = "1";
const sc_lv<3> Accelerator_MAT_Multiply2::ap_const_lv3_0 = "000";
const sc_lv<28> Accelerator_MAT_Multiply2::ap_const_lv28_4 = "100";

Accelerator_MAT_Multiply2::Accelerator_MAT_Multiply2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    A_cached_row_U = new Accelerator_MAT_Multiply2_A_cached_row("A_cached_row_U");
    A_cached_row_U->clk(ap_clk);
    A_cached_row_U->reset(ap_rst);
    A_cached_row_U->address0(A_cached_row_address0);
    A_cached_row_U->ce0(A_cached_row_ce0);
    A_cached_row_U->we0(A_cached_row_we0);
    A_cached_row_U->d0(A_cached_row_d0);
    A_cached_row_U->q0(A_cached_row_q0);
    Accelerator_fadd_32ns_32ns_32_5_full_dsp_U6 = new Accelerator_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>("Accelerator_fadd_32ns_32ns_32_5_full_dsp_U6");
    Accelerator_fadd_32ns_32ns_32_5_full_dsp_U6->clk(ap_clk);
    Accelerator_fadd_32ns_32ns_32_5_full_dsp_U6->reset(ap_rst);
    Accelerator_fadd_32ns_32ns_32_5_full_dsp_U6->din0(grp_fu_163_p0);
    Accelerator_fadd_32ns_32ns_32_5_full_dsp_U6->din1(grp_fu_163_p1);
    Accelerator_fadd_32ns_32ns_32_5_full_dsp_U6->ce(grp_fu_163_ce);
    Accelerator_fadd_32ns_32ns_32_5_full_dsp_U6->dout(grp_fu_163_p2);
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U7 = new Accelerator_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>("Accelerator_fmul_32ns_32ns_32_4_max_dsp_U7");
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U7->clk(ap_clk);
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U7->reset(ap_rst);
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U7->din0(grp_fu_168_p0);
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U7->din1(grp_fu_168_p1);
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U7->ce(grp_fu_168_ce);
    Accelerator_fmul_32ns_32ns_32_4_max_dsp_U7->dout(grp_fu_168_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_7_fu_219_p1 );

    SC_METHOD(thread_A_cached_row_address0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_2_fu_224_p1 );
    sensitive << ( tmp_3_fu_257_p1 );

    SC_METHOD(thread_A_cached_row_ce0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_A_cached_row_d0);
    sensitive << ( A_q0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_A_cached_row_we0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_B_address0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp_s_fu_279_p1 );

    SC_METHOD(thread_B_ce0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_C_address0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp_8_fu_292_p1 );

    SC_METHOD(thread_C_ce0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_C_d0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( temp_reg_149 );

    SC_METHOD(thread_C_we0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( exitcond_fu_245_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( exitcond1_fu_229_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( exitcond1_fu_229_p2 );

    SC_METHOD(thread_ap_sig_bdd_107);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_123);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_133);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_142);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_168);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_197);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_79);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_93);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_bdd_133 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_bdd_197 );

    SC_METHOD(thread_ap_sig_cseq_ST_st15_fsm_14);
    sensitive << ( ap_sig_bdd_142 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_33 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_64 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_79 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_168 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_bdd_93 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_bdd_107 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_bdd_123 );

    SC_METHOD(thread_exitcond1_fu_229_p2);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( j_reg_126 );

    SC_METHOD(thread_exitcond2_fu_198_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( k_reg_114 );

    SC_METHOD(thread_exitcond3_fu_174_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_reg_103 );

    SC_METHOD(thread_exitcond_fu_245_p2);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( k_1_reg_138 );

    SC_METHOD(thread_grp_fu_163_ce);

    SC_METHOD(thread_grp_fu_163_p0);
    sensitive << ( temp_reg_149 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );

    SC_METHOD(thread_grp_fu_163_p1);
    sensitive << ( tmp_4_reg_364 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );

    SC_METHOD(thread_grp_fu_168_ce);

    SC_METHOD(thread_grp_fu_168_p0);
    sensitive << ( A_cached_row_q0 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_grp_fu_168_p1);
    sensitive << ( B_q0 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_j_1_fu_235_p2);
    sensitive << ( j_reg_126 );

    SC_METHOD(thread_k_2_fu_204_p2);
    sensitive << ( k_reg_114 );

    SC_METHOD(thread_k_3_fu_251_p2);
    sensitive << ( k_1_reg_138 );

    SC_METHOD(thread_p_addr1_fu_214_p2);
    sensitive << ( p_addr_cast_reg_305 );
    sensitive << ( tmp_2_trn_cast_fu_210_p1 );

    SC_METHOD(thread_p_addr2_cast_fu_270_p1);
    sensitive << ( tmp_9_fu_262_p3 );

    SC_METHOD(thread_p_addr3_fu_274_p2);
    sensitive << ( tmp_trn_cast_reg_331 );
    sensitive << ( p_addr2_cast_fu_270_p1 );

    SC_METHOD(thread_p_addr4_fu_284_p3);
    sensitive << ( j_reg_126 );

    SC_METHOD(thread_p_addr_cast_fu_194_p1);
    sensitive << ( tmp_fu_186_p3 );

    SC_METHOD(thread_tmp_1_fu_180_p2);
    sensitive << ( i_reg_103 );

    SC_METHOD(thread_tmp_2_fu_224_p1);
    sensitive << ( k_reg_114 );

    SC_METHOD(thread_tmp_2_trn_cast_fu_210_p1);
    sensitive << ( k_reg_114 );

    SC_METHOD(thread_tmp_3_fu_257_p1);
    sensitive << ( k_1_reg_138 );

    SC_METHOD(thread_tmp_7_fu_219_p1);
    sensitive << ( p_addr1_fu_214_p2 );

    SC_METHOD(thread_tmp_8_fu_292_p1);
    sensitive << ( p_addr4_fu_284_p3 );

    SC_METHOD(thread_tmp_9_fu_262_p3);
    sensitive << ( k_1_reg_138 );

    SC_METHOD(thread_tmp_fu_186_p3);
    sensitive << ( i_reg_103 );

    SC_METHOD(thread_tmp_s_fu_279_p1);
    sensitive << ( p_addr3_fu_274_p2 );

    SC_METHOD(thread_tmp_trn_cast_fu_241_p1);
    sensitive << ( j_reg_126 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond3_fu_174_p2 );
    sensitive << ( exitcond2_fu_198_p2 );
    sensitive << ( exitcond1_fu_229_p2 );
    sensitive << ( exitcond_fu_245_p2 );

    ap_CS_fsm = "000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Accelerator_MAT_Multiply2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, B_address0, "(port)B_address0");
    sc_trace(mVcdFile, B_ce0, "(port)B_ce0");
    sc_trace(mVcdFile, B_q0, "(port)B_q0");
    sc_trace(mVcdFile, C_address0, "(port)C_address0");
    sc_trace(mVcdFile, C_ce0, "(port)C_ce0");
    sc_trace(mVcdFile, C_we0, "(port)C_we0");
    sc_trace(mVcdFile, C_d0, "(port)C_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_33, "ap_sig_bdd_33");
    sc_trace(mVcdFile, tmp_1_fu_180_p2, "tmp_1_fu_180_p2");
    sc_trace(mVcdFile, tmp_1_reg_300, "tmp_1_reg_300");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_64, "ap_sig_bdd_64");
    sc_trace(mVcdFile, p_addr_cast_fu_194_p1, "p_addr_cast_fu_194_p1");
    sc_trace(mVcdFile, p_addr_cast_reg_305, "p_addr_cast_reg_305");
    sc_trace(mVcdFile, exitcond3_fu_174_p2, "exitcond3_fu_174_p2");
    sc_trace(mVcdFile, k_2_fu_204_p2, "k_2_fu_204_p2");
    sc_trace(mVcdFile, k_2_reg_313, "k_2_reg_313");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_79, "ap_sig_bdd_79");
    sc_trace(mVcdFile, exitcond2_fu_198_p2, "exitcond2_fu_198_p2");
    sc_trace(mVcdFile, j_1_fu_235_p2, "j_1_fu_235_p2");
    sc_trace(mVcdFile, j_1_reg_326, "j_1_reg_326");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_93, "ap_sig_bdd_93");
    sc_trace(mVcdFile, tmp_trn_cast_fu_241_p1, "tmp_trn_cast_fu_241_p1");
    sc_trace(mVcdFile, tmp_trn_cast_reg_331, "tmp_trn_cast_reg_331");
    sc_trace(mVcdFile, exitcond1_fu_229_p2, "exitcond1_fu_229_p2");
    sc_trace(mVcdFile, k_3_fu_251_p2, "k_3_fu_251_p2");
    sc_trace(mVcdFile, k_3_reg_339, "k_3_reg_339");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_107, "ap_sig_bdd_107");
    sc_trace(mVcdFile, exitcond_fu_245_p2, "exitcond_fu_245_p2");
    sc_trace(mVcdFile, A_cached_row_q0, "A_cached_row_q0");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_123, "ap_sig_bdd_123");
    sc_trace(mVcdFile, grp_fu_168_p2, "grp_fu_168_p2");
    sc_trace(mVcdFile, tmp_4_reg_364, "tmp_4_reg_364");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_9, "ap_sig_cseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_bdd_133, "ap_sig_bdd_133");
    sc_trace(mVcdFile, grp_fu_163_p2, "grp_fu_163_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st15_fsm_14, "ap_sig_cseq_ST_st15_fsm_14");
    sc_trace(mVcdFile, ap_sig_bdd_142, "ap_sig_bdd_142");
    sc_trace(mVcdFile, A_cached_row_address0, "A_cached_row_address0");
    sc_trace(mVcdFile, A_cached_row_ce0, "A_cached_row_ce0");
    sc_trace(mVcdFile, A_cached_row_we0, "A_cached_row_we0");
    sc_trace(mVcdFile, A_cached_row_d0, "A_cached_row_d0");
    sc_trace(mVcdFile, i_reg_103, "i_reg_103");
    sc_trace(mVcdFile, k_reg_114, "k_reg_114");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_168, "ap_sig_bdd_168");
    sc_trace(mVcdFile, j_reg_126, "j_reg_126");
    sc_trace(mVcdFile, k_1_reg_138, "k_1_reg_138");
    sc_trace(mVcdFile, temp_reg_149, "temp_reg_149");
    sc_trace(mVcdFile, tmp_7_fu_219_p1, "tmp_7_fu_219_p1");
    sc_trace(mVcdFile, tmp_2_fu_224_p1, "tmp_2_fu_224_p1");
    sc_trace(mVcdFile, tmp_3_fu_257_p1, "tmp_3_fu_257_p1");
    sc_trace(mVcdFile, tmp_s_fu_279_p1, "tmp_s_fu_279_p1");
    sc_trace(mVcdFile, tmp_8_fu_292_p1, "tmp_8_fu_292_p1");
    sc_trace(mVcdFile, grp_fu_163_p0, "grp_fu_163_p0");
    sc_trace(mVcdFile, grp_fu_163_p1, "grp_fu_163_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_bdd_197, "ap_sig_bdd_197");
    sc_trace(mVcdFile, grp_fu_168_p0, "grp_fu_168_p0");
    sc_trace(mVcdFile, grp_fu_168_p1, "grp_fu_168_p1");
    sc_trace(mVcdFile, tmp_fu_186_p3, "tmp_fu_186_p3");
    sc_trace(mVcdFile, tmp_2_trn_cast_fu_210_p1, "tmp_2_trn_cast_fu_210_p1");
    sc_trace(mVcdFile, p_addr1_fu_214_p2, "p_addr1_fu_214_p2");
    sc_trace(mVcdFile, tmp_9_fu_262_p3, "tmp_9_fu_262_p3");
    sc_trace(mVcdFile, p_addr2_cast_fu_270_p1, "p_addr2_cast_fu_270_p1");
    sc_trace(mVcdFile, p_addr3_fu_274_p2, "p_addr3_fu_274_p2");
    sc_trace(mVcdFile, p_addr4_fu_284_p3, "p_addr4_fu_284_p3");
    sc_trace(mVcdFile, grp_fu_163_ce, "grp_fu_163_ce");
    sc_trace(mVcdFile, grp_fu_168_ce, "grp_fu_168_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Accelerator_MAT_Multiply2::~Accelerator_MAT_Multiply2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete A_cached_row_U;
    delete Accelerator_fadd_32ns_32ns_32_5_full_dsp_U6;
    delete Accelerator_fmul_32ns_32ns_32_4_max_dsp_U7;
}

void Accelerator_MAT_Multiply2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_198_p2.read()))) {
        i_reg_103 = tmp_1_reg_300.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_103 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond3_fu_174_p2.read(), ap_const_lv1_0))) {
        j_reg_126 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_245_p2.read()))) {
        j_reg_126 = j_1_reg_326.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read())) {
        k_1_reg_138 = k_3_reg_339.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_229_p2.read()))) {
        k_1_reg_138 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        k_reg_114 = k_2_reg_313.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_174_p2.read(), ap_const_lv1_0))) {
        k_reg_114 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st15_fsm_14.read())) {
        temp_reg_149 = grp_fu_163_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_229_p2.read()))) {
        temp_reg_149 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        j_1_reg_326 = j_1_fu_235_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        k_2_reg_313 = k_2_fu_204_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        k_3_reg_339 = k_3_fu_251_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(exitcond3_fu_174_p2.read(), ap_const_lv1_0))) {
        p_addr_cast_reg_305 = p_addr_cast_fu_194_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        tmp_1_reg_300 = tmp_1_fu_180_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        tmp_4_reg_364 = grp_fu_168_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_229_p2.read()))) {
        tmp_trn_cast_reg_331 = tmp_trn_cast_fu_241_p1.read();
    }
}

void Accelerator_MAT_Multiply2::thread_A_address0() {
    A_address0 =  (sc_lv<6>) (tmp_7_fu_219_p1.read());
}

void Accelerator_MAT_Multiply2::thread_A_cached_row_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        A_cached_row_address0 =  (sc_lv<3>) (tmp_2_fu_224_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        A_cached_row_address0 =  (sc_lv<3>) (tmp_3_fu_257_p1.read());
    } else {
        A_cached_row_address0 = "XXX";
    }
}

void Accelerator_MAT_Multiply2::thread_A_cached_row_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        A_cached_row_ce0 = ap_const_logic_1;
    } else {
        A_cached_row_ce0 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_A_cached_row_d0() {
    A_cached_row_d0 = A_q0.read();
}

void Accelerator_MAT_Multiply2::thread_A_cached_row_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()))) {
        A_cached_row_we0 = ap_const_logic_1;
    } else {
        A_cached_row_we0 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_A_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_B_address0() {
    B_address0 =  (sc_lv<6>) (tmp_s_fu_279_p1.read());
}

void Accelerator_MAT_Multiply2::thread_B_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        B_ce0 = ap_const_logic_1;
    } else {
        B_ce0 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_C_address0() {
    C_address0 =  (sc_lv<6>) (tmp_8_fu_292_p1.read());
}

void Accelerator_MAT_Multiply2::thread_C_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        C_ce0 = ap_const_logic_1;
    } else {
        C_ce0 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_C_d0() {
    C_d0 = temp_reg_149.read();
}

void Accelerator_MAT_Multiply2::thread_C_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_245_p2.read())))) {
        C_we0 = ap_const_logic_1;
    } else {
        C_we0 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_229_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_229_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_ap_sig_bdd_107() {
    ap_sig_bdd_107 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void Accelerator_MAT_Multiply2::thread_ap_sig_bdd_123() {
    ap_sig_bdd_123 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void Accelerator_MAT_Multiply2::thread_ap_sig_bdd_133() {
    ap_sig_bdd_133 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void Accelerator_MAT_Multiply2::thread_ap_sig_bdd_142() {
    ap_sig_bdd_142 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(14, 14));
}

void Accelerator_MAT_Multiply2::thread_ap_sig_bdd_168() {
    ap_sig_bdd_168 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void Accelerator_MAT_Multiply2::thread_ap_sig_bdd_197() {
    ap_sig_bdd_197 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void Accelerator_MAT_Multiply2::thread_ap_sig_bdd_33() {
    ap_sig_bdd_33 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void Accelerator_MAT_Multiply2::thread_ap_sig_bdd_64() {
    ap_sig_bdd_64 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void Accelerator_MAT_Multiply2::thread_ap_sig_bdd_79() {
    ap_sig_bdd_79 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void Accelerator_MAT_Multiply2::thread_ap_sig_bdd_93() {
    ap_sig_bdd_93 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void Accelerator_MAT_Multiply2::thread_ap_sig_cseq_ST_st10_fsm_9() {
    if (ap_sig_bdd_133.read()) {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_bdd_197.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_ap_sig_cseq_ST_st15_fsm_14() {
    if (ap_sig_bdd_142.read()) {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_33.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_64.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_79.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_168.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_bdd_93.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_bdd_107.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_bdd_123.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply2::thread_exitcond1_fu_229_p2() {
    exitcond1_fu_229_p2 = (!j_reg_126.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_126.read() == ap_const_lv4_8);
}

void Accelerator_MAT_Multiply2::thread_exitcond2_fu_198_p2() {
    exitcond2_fu_198_p2 = (!k_reg_114.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_114.read() == ap_const_lv4_8);
}

void Accelerator_MAT_Multiply2::thread_exitcond3_fu_174_p2() {
    exitcond3_fu_174_p2 = (!i_reg_103.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_103.read() == ap_const_lv4_8);
}

void Accelerator_MAT_Multiply2::thread_exitcond_fu_245_p2() {
    exitcond_fu_245_p2 = (!k_1_reg_138.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(k_1_reg_138.read() == ap_const_lv4_8);
}

void Accelerator_MAT_Multiply2::thread_grp_fu_163_ce() {
    grp_fu_163_ce = ap_const_logic_1;
}

void Accelerator_MAT_Multiply2::thread_grp_fu_163_p0() {
    grp_fu_163_p0 = temp_reg_149.read();
}

void Accelerator_MAT_Multiply2::thread_grp_fu_163_p1() {
    grp_fu_163_p1 = tmp_4_reg_364.read();
}

void Accelerator_MAT_Multiply2::thread_grp_fu_168_ce() {
    grp_fu_168_ce = ap_const_logic_1;
}

void Accelerator_MAT_Multiply2::thread_grp_fu_168_p0() {
    grp_fu_168_p0 = A_cached_row_q0.read();
}

void Accelerator_MAT_Multiply2::thread_grp_fu_168_p1() {
    grp_fu_168_p1 = B_q0.read();
}

void Accelerator_MAT_Multiply2::thread_j_1_fu_235_p2() {
    j_1_fu_235_p2 = (!j_reg_126.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_reg_126.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Accelerator_MAT_Multiply2::thread_k_2_fu_204_p2() {
    k_2_fu_204_p2 = (!k_reg_114.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(k_reg_114.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Accelerator_MAT_Multiply2::thread_k_3_fu_251_p2() {
    k_3_fu_251_p2 = (!k_1_reg_138.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(k_1_reg_138.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Accelerator_MAT_Multiply2::thread_p_addr1_fu_214_p2() {
    p_addr1_fu_214_p2 = (!tmp_2_trn_cast_fu_210_p1.read().is_01() || !p_addr_cast_reg_305.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_2_trn_cast_fu_210_p1.read()) + sc_biguint<8>(p_addr_cast_reg_305.read()));
}

void Accelerator_MAT_Multiply2::thread_p_addr2_cast_fu_270_p1() {
    p_addr2_cast_fu_270_p1 = esl_zext<8,7>(tmp_9_fu_262_p3.read());
}

void Accelerator_MAT_Multiply2::thread_p_addr3_fu_274_p2() {
    p_addr3_fu_274_p2 = (!tmp_trn_cast_reg_331.read().is_01() || !p_addr2_cast_fu_270_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_trn_cast_reg_331.read()) + sc_biguint<8>(p_addr2_cast_fu_270_p1.read()));
}

void Accelerator_MAT_Multiply2::thread_p_addr4_fu_284_p3() {
    p_addr4_fu_284_p3 = esl_concat<28,4>(ap_const_lv28_4, j_reg_126.read());
}

void Accelerator_MAT_Multiply2::thread_p_addr_cast_fu_194_p1() {
    p_addr_cast_fu_194_p1 = esl_zext<8,7>(tmp_fu_186_p3.read());
}

void Accelerator_MAT_Multiply2::thread_tmp_1_fu_180_p2() {
    tmp_1_fu_180_p2 = (!i_reg_103.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_103.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Accelerator_MAT_Multiply2::thread_tmp_2_fu_224_p1() {
    tmp_2_fu_224_p1 = esl_zext<64,4>(k_reg_114.read());
}

void Accelerator_MAT_Multiply2::thread_tmp_2_trn_cast_fu_210_p1() {
    tmp_2_trn_cast_fu_210_p1 = esl_zext<8,4>(k_reg_114.read());
}

void Accelerator_MAT_Multiply2::thread_tmp_3_fu_257_p1() {
    tmp_3_fu_257_p1 = esl_zext<64,4>(k_1_reg_138.read());
}

void Accelerator_MAT_Multiply2::thread_tmp_7_fu_219_p1() {
    tmp_7_fu_219_p1 = esl_zext<64,8>(p_addr1_fu_214_p2.read());
}

void Accelerator_MAT_Multiply2::thread_tmp_8_fu_292_p1() {
    tmp_8_fu_292_p1 = esl_zext<64,32>(p_addr4_fu_284_p3.read());
}

void Accelerator_MAT_Multiply2::thread_tmp_9_fu_262_p3() {
    tmp_9_fu_262_p3 = esl_concat<4,3>(k_1_reg_138.read(), ap_const_lv3_0);
}

void Accelerator_MAT_Multiply2::thread_tmp_fu_186_p3() {
    tmp_fu_186_p3 = esl_concat<4,3>(i_reg_103.read(), ap_const_lv3_0);
}

void Accelerator_MAT_Multiply2::thread_tmp_s_fu_279_p1() {
    tmp_s_fu_279_p1 = esl_zext<64,8>(p_addr3_fu_274_p2.read());
}

void Accelerator_MAT_Multiply2::thread_tmp_trn_cast_fu_241_p1() {
    tmp_trn_cast_fu_241_p1 = esl_zext<8,4>(j_reg_126.read());
}

void Accelerator_MAT_Multiply2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(exitcond3_fu_174_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_198_p2.read())) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_229_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            }
            break;
        case 32 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_245_p2.read())) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
            break;
    }
}

}

