

================================================================
== Vivado HLS Report for 'Accelerator_Quant'
================================================================
* Date:           Thu Oct 29 21:20:46 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        accelerator
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.46|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+------+-----+------+---------+
    |   Latency  |  Interval  | Pipeline|
    | min |  max | min |  max |   Type  |
    +-----+------+-----+------+---------+
    |  337|  1233|  337|  1233|   none  |
    +-----+------+-----+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+------+------+----------+-----------+-----------+------+----------+
        |- row     |   336|   336|        42|          -|          -|     8|    no    |
        | + col    |    40|    40|         5|          -|          -|     8|    no    |
        |- row     |  1232|  1232|       154|          -|          -|     8|    no    |
        | + col    |   152|   152|        19|          -|          -|     8|    no    |
        +----------+------+------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 26
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!cond & !exitcond1_i3)
	22  / (cond & !exitcond1_i)
3 --> 
	4  / (!exitcond_i6)
	2  / (exitcond_i6)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	3  / true
22 --> 
	23  / (!exitcond_i)
	2  / (exitcond_i)
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	22  / true
* FSM state operations: 

 <State 1>: 4.61ns
ST_1: function_read [1/1] 1.04ns
:0  %function_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %function_r)

ST_1: cond [1/1] 2.00ns
:1  %cond = icmp eq i8 %function_read, 1

ST_1: stg_29 [1/1] 1.57ns
:2  br i1 %cond, label %.preheader12, label %.preheader


 <State 2>: 1.88ns
ST_2: i_i2 [1/1] 0.00ns
.preheader:0  %i_i2 = phi i4 [ %i_4, %8 ], [ 0, %0 ]

ST_2: exitcond1_i3 [1/1] 1.88ns
.preheader:1  %exitcond1_i3 = icmp eq i4 %i_i2, -8

ST_2: empty_17 [1/1] 0.00ns
.preheader:2  %empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_2: i_4 [1/1] 0.80ns
.preheader:3  %i_4 = add i4 %i_i2, 1

ST_2: stg_34 [1/1] 0.00ns
.preheader:4  br i1 %exitcond1_i3, label %DOT_Multiply.exit, label %5

ST_2: stg_35 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str6) nounwind

ST_2: tmp_15_i [1/1] 0.00ns
:1  %tmp_15_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str6)

ST_2: tmp_s [1/1] 0.00ns
:2  %tmp_s = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i_i2, i3 0)

ST_2: p_addr_cast [1/1] 0.00ns
:3  %p_addr_cast = zext i7 %tmp_s to i8

ST_2: stg_39 [1/1] 1.57ns
:4  br label %6

ST_2: i_i [1/1] 0.00ns
.preheader12:0  %i_i = phi i4 [ %i, %4 ], [ 0, %0 ]

ST_2: exitcond1_i [1/1] 1.88ns
.preheader12:1  %exitcond1_i = icmp eq i4 %i_i, -8

ST_2: empty [1/1] 0.00ns
.preheader12:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_2: i [1/1] 0.80ns
.preheader12:3  %i = add i4 %i_i, 1

ST_2: stg_44 [1/1] 0.00ns
.preheader12:4  br i1 %exitcond1_i, label %DOT_Multiply.exit, label %1

ST_2: stg_45 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str6) nounwind

ST_2: tmp_17_i [1/1] 0.00ns
:1  %tmp_17_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str6)

ST_2: tmp [1/1] 0.00ns
:2  %tmp = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i_i, i3 0)

ST_2: p_addr2_cast [1/1] 0.00ns
:3  %p_addr2_cast = zext i7 %tmp to i8

ST_2: stg_49 [1/1] 1.57ns
:4  br label %2

ST_2: stg_50 [1/1] 0.00ns
DOT_Multiply.exit:0  ret void


 <State 3>: 4.43ns
ST_3: j_i5 [1/1] 0.00ns
:0  %j_i5 = phi i4 [ 0, %5 ], [ %j_4, %7 ]

ST_3: exitcond_i6 [1/1] 1.88ns
:1  %exitcond_i6 = icmp eq i4 %j_i5, -8

ST_3: empty_18 [1/1] 0.00ns
:2  %empty_18 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_3: j_4 [1/1] 0.80ns
:3  %j_4 = add i4 %j_i5, 1

ST_3: stg_55 [1/1] 0.00ns
:4  br i1 %exitcond_i6, label %8, label %7

ST_3: tmp_i7_trn_cast [1/1] 0.00ns
:1  %tmp_i7_trn_cast = zext i4 %j_i5 to i8

ST_3: p_addr1 [1/1] 1.72ns
:2  %p_addr1 = add i8 %tmp_i7_trn_cast, %p_addr_cast

ST_3: tmp_10 [1/1] 0.00ns
:3  %tmp_10 = zext i8 %p_addr1 to i64

ST_3: X_addr_1 [1/1] 0.00ns
:4  %X_addr_1 = getelementptr [64 x float]* %X, i64 0, i64 %tmp_10

ST_3: X_load_1 [2/2] 2.71ns
:5  %X_load_1 = load float* %X_addr_1, align 4

ST_3: empty_19 [1/1] 0.00ns
:0  %empty_19 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str6, i32 %tmp_15_i)

ST_3: stg_62 [1/1] 0.00ns
:1  br label %.preheader


 <State 4>: 2.71ns
ST_4: X_load_1 [1/2] 2.71ns
:5  %X_load_1 = load float* %X_addr_1, align 4

ST_4: stdQuantizationMatrix_addr_1 [1/1] 0.00ns
:6  %stdQuantizationMatrix_addr_1 = getelementptr [64 x float]* @stdQuantizationMatrix, i64 0, i64 %tmp_10

ST_4: stdQuantizationMatrix_load_1 [2/2] 2.39ns
:7  %stdQuantizationMatrix_load_1 = load float* %stdQuantizationMatrix_addr_1, align 4


 <State 5>: 8.46ns
ST_5: stdQuantizationMatrix_load_1 [1/2] 2.39ns
:7  %stdQuantizationMatrix_load_1 = load float* %stdQuantizationMatrix_addr_1, align 4

ST_5: tmp_6_i [16/16] 6.08ns
:8  %tmp_6_i = fdiv float %X_load_1, %stdQuantizationMatrix_load_1


 <State 6>: 6.08ns
ST_6: tmp_6_i [15/16] 6.08ns
:8  %tmp_6_i = fdiv float %X_load_1, %stdQuantizationMatrix_load_1


 <State 7>: 6.08ns
ST_7: tmp_6_i [14/16] 6.08ns
:8  %tmp_6_i = fdiv float %X_load_1, %stdQuantizationMatrix_load_1


 <State 8>: 6.08ns
ST_8: tmp_6_i [13/16] 6.08ns
:8  %tmp_6_i = fdiv float %X_load_1, %stdQuantizationMatrix_load_1


 <State 9>: 6.08ns
ST_9: tmp_6_i [12/16] 6.08ns
:8  %tmp_6_i = fdiv float %X_load_1, %stdQuantizationMatrix_load_1


 <State 10>: 6.08ns
ST_10: tmp_6_i [11/16] 6.08ns
:8  %tmp_6_i = fdiv float %X_load_1, %stdQuantizationMatrix_load_1


 <State 11>: 6.08ns
ST_11: tmp_6_i [10/16] 6.08ns
:8  %tmp_6_i = fdiv float %X_load_1, %stdQuantizationMatrix_load_1


 <State 12>: 6.08ns
ST_12: tmp_6_i [9/16] 6.08ns
:8  %tmp_6_i = fdiv float %X_load_1, %stdQuantizationMatrix_load_1


 <State 13>: 6.08ns
ST_13: tmp_6_i [8/16] 6.08ns
:8  %tmp_6_i = fdiv float %X_load_1, %stdQuantizationMatrix_load_1


 <State 14>: 6.08ns
ST_14: tmp_6_i [7/16] 6.08ns
:8  %tmp_6_i = fdiv float %X_load_1, %stdQuantizationMatrix_load_1


 <State 15>: 6.08ns
ST_15: tmp_6_i [6/16] 6.08ns
:8  %tmp_6_i = fdiv float %X_load_1, %stdQuantizationMatrix_load_1


 <State 16>: 6.08ns
ST_16: tmp_6_i [5/16] 6.08ns
:8  %tmp_6_i = fdiv float %X_load_1, %stdQuantizationMatrix_load_1


 <State 17>: 6.08ns
ST_17: tmp_6_i [4/16] 6.08ns
:8  %tmp_6_i = fdiv float %X_load_1, %stdQuantizationMatrix_load_1


 <State 18>: 6.08ns
ST_18: tmp_6_i [3/16] 6.08ns
:8  %tmp_6_i = fdiv float %X_load_1, %stdQuantizationMatrix_load_1


 <State 19>: 6.08ns
ST_19: tmp_6_i [2/16] 6.08ns
:8  %tmp_6_i = fdiv float %X_load_1, %stdQuantizationMatrix_load_1


 <State 20>: 6.08ns
ST_20: tmp_6_i [1/16] 6.08ns
:8  %tmp_6_i = fdiv float %X_load_1, %stdQuantizationMatrix_load_1


 <State 21>: 2.71ns
ST_21: stg_83 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str7) nounwind

ST_21: Y_addr_1 [1/1] 0.00ns
:9  %Y_addr_1 = getelementptr [64 x float]* %Y, i64 0, i64 %tmp_10

ST_21: stg_85 [1/1] 2.71ns
:10  store float %tmp_6_i, float* %Y_addr_1, align 4

ST_21: stg_86 [1/1] 0.00ns
:11  br label %6


 <State 22>: 4.43ns
ST_22: j_i [1/1] 0.00ns
:0  %j_i = phi i4 [ 0, %1 ], [ %j, %3 ]

ST_22: exitcond_i [1/1] 1.88ns
:1  %exitcond_i = icmp eq i4 %j_i, -8

ST_22: empty_15 [1/1] 0.00ns
:2  %empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_22: j [1/1] 0.80ns
:3  %j = add i4 %j_i, 1

ST_22: stg_91 [1/1] 0.00ns
:4  br i1 %exitcond_i, label %4, label %3

ST_22: tmp_i_trn_cast [1/1] 0.00ns
:1  %tmp_i_trn_cast = zext i4 %j_i to i8

ST_22: p_addr3 [1/1] 1.72ns
:2  %p_addr3 = add i8 %tmp_i_trn_cast, %p_addr2_cast

ST_22: tmp_9 [1/1] 0.00ns
:3  %tmp_9 = zext i8 %p_addr3 to i64

ST_22: X_addr [1/1] 0.00ns
:4  %X_addr = getelementptr [64 x float]* %X, i64 0, i64 %tmp_9

ST_22: X_load [2/2] 2.71ns
:5  %X_load = load float* %X_addr, align 4

ST_22: stdQuantizationMatrix_addr [1/1] 0.00ns
:6  %stdQuantizationMatrix_addr = getelementptr [64 x float]* @stdQuantizationMatrix, i64 0, i64 %tmp_9

ST_22: stdQuantizationMatrix_load [2/2] 2.39ns
:7  %stdQuantizationMatrix_load = load float* %stdQuantizationMatrix_addr, align 4

ST_22: empty_16 [1/1] 0.00ns
:0  %empty_16 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str6, i32 %tmp_17_i)

ST_22: stg_100 [1/1] 0.00ns
:1  br label %.preheader12


 <State 23>: 8.41ns
ST_23: X_load [1/2] 2.71ns
:5  %X_load = load float* %X_addr, align 4

ST_23: stdQuantizationMatrix_load [1/2] 2.39ns
:7  %stdQuantizationMatrix_load = load float* %stdQuantizationMatrix_addr, align 4

ST_23: tmp_5_i [4/4] 5.70ns
:8  %tmp_5_i = fmul float %X_load, %stdQuantizationMatrix_load


 <State 24>: 5.70ns
ST_24: tmp_5_i [3/4] 5.70ns
:8  %tmp_5_i = fmul float %X_load, %stdQuantizationMatrix_load


 <State 25>: 5.70ns
ST_25: tmp_5_i [2/4] 5.70ns
:8  %tmp_5_i = fmul float %X_load, %stdQuantizationMatrix_load


 <State 26>: 8.41ns
ST_26: stg_106 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str7) nounwind

ST_26: tmp_5_i [1/4] 5.70ns
:8  %tmp_5_i = fmul float %X_load, %stdQuantizationMatrix_load

ST_26: Y_addr [1/1] 0.00ns
:9  %Y_addr = getelementptr [64 x float]* %Y, i64 0, i64 %tmp_9

ST_26: stg_109 [1/1] 2.71ns
:10  store float %tmp_5_i, float* %Y_addr, align 4

ST_26: stg_110 [1/1] 0.00ns
:11  br label %2



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
