

================================================================
== Vivado HLS Report for 'Accelerator_MAT_Multiply'
================================================================
* Date:           Thu Oct 29 22:12:23 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        accelerator
* Solution:       solution2opt
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      7.68|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |  367|  367|  301|  301| dataflow |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        +------------------------------------------------------+--------------------------------------------+-----+-----+-----+-----+---------+
        |                                                      |                                            |  Latency  |  Interval | Pipeline|
        |                       Instance                       |                   Module                   | min | max | min | max |   Type  |
        +------------------------------------------------------+--------------------------------------------+-----+-----+-----+-----+---------+
        |grp_Accelerator_MAT_Multiply_Loop_LoadRow_proc_fu_68  |Accelerator_MAT_Multiply_Loop_LoadRow_proc  |   66|   66|   66|   66|   none  |
        |grp_Accelerator_MAT_Multiply_Loop_Row_proc_fu_45      |Accelerator_MAT_Multiply_Loop_Row_proc      |  300|  300|  300|  300|   none  |
        +------------------------------------------------------+--------------------------------------------+-----+-----+-----+-----+---------+

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       0|      1|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|     10|    1872|   2286|
|Memory           |        4|      -|       0|      0|
|Multiplexer      |        -|      -|       -|      2|
|Register         |        -|      -|       5|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        4|     10|    1877|   2289|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        1|      4|       1|      4|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    +-----------------------------------------------+--------------------------------------------+---------+-------+------+------+
    |                    Instance                   |                   Module                   | BRAM_18K| DSP48E|  FF  |  LUT |
    +-----------------------------------------------+--------------------------------------------+---------+-------+------+------+
    |Accelerator_MAT_Multiply_Loop_LoadRow_proc_U0  |Accelerator_MAT_Multiply_Loop_LoadRow_proc  |        0|      0|    26|    88|
    |Accelerator_MAT_Multiply_Loop_Row_proc_U0      |Accelerator_MAT_Multiply_Loop_Row_proc      |        0|     10|  1846|  2198|
    +-----------------------------------------------+--------------------------------------------+---------+-------+------+------+
    |Total                                          |                                            |        0|     10|  1872|  2286|
    +-----------------------------------------------+--------------------------------------------+---------+-------+------+------+

    * Memory: 
    +------------+-----------------------------------+---------+---+----+------+-----+------+-------------+
    |   Memory   |               Module              | BRAM_18K| FF| LUT| Words| Bits| Banks| W*Bits*Banks|
    +------------+-----------------------------------+---------+---+----+------+-----+------+-------------+
    |B_cached_U  |Accelerator_MAT_Multiply_B_cached  |        4|  0|   0|    64|   32|     2|         4096|
    +------------+-----------------------------------+---------+---+----+------+-----+------+-------------+
    |Total       |                                   |        4|  0|   0|    64|   32|     2|         4096|
    +------------+-----------------------------------+---------+---+----+------+-----+------+-------------+

    * FIFO: 
    N/A

    * Expression: 
    +----------------------------------------------------+----------+-------+---+----+------------+------------+
    |                    Variable Name                   | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +----------------------------------------------------+----------+-------+---+----+------------+------------+
    |Accelerator_MAT_Multiply_Loop_Row_proc_U0_ap_start  |    and   |      0|  0|   1|           1|           1|
    +----------------------------------------------------+----------+-------+---+----+------------+------------+
    |Total                                               |          |      0|  0|   1|           1|           1|
    +----------------------------------------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +---------------------------------------------------------------------+----+-----------+-----+-----------+
    |                                 Name                                | LUT| Input Size| Bits| Total Bits|
    +---------------------------------------------------------------------+----+-----------+-----+-----------+
    |ap_sig_ready_Accelerator_MAT_Multiply_Loop_LoadRow_proc_U0_ap_ready  |   1|          2|    1|          2|
    |ap_sig_ready_Accelerator_MAT_Multiply_Loop_Row_proc_U0_ap_ready      |   1|          2|    1|          2|
    +---------------------------------------------------------------------+----+-----------+-----+-----------+
    |Total                                                                |   2|          4|    2|          4|
    +---------------------------------------------------------------------+----+-----------+-----+-----------+

    * Register: 
    +---------------------------------------------------------------------+---+----+-----+-----------+
    |                                 Name                                | FF| LUT| Bits| Const Bits|
    +---------------------------------------------------------------------+---+----+-----+-----------+
    |ap_CS                                                                |  1|   0|    1|          0|
    |ap_reg_procdone_Accelerator_MAT_Multiply_Loop_LoadRow_proc_U0        |  1|   0|    1|          0|
    |ap_reg_procdone_Accelerator_MAT_Multiply_Loop_Row_proc_U0            |  1|   0|    1|          0|
    |ap_reg_ready_Accelerator_MAT_Multiply_Loop_LoadRow_proc_U0_ap_ready  |  1|   0|    1|          0|
    |ap_reg_ready_Accelerator_MAT_Multiply_Loop_Row_proc_U0_ap_ready      |  1|   0|    1|          0|
    +---------------------------------------------------------------------+---+----+-----+-----------+
    |Total                                                                |  5|   0|    5|          0|
    +---------------------------------------------------------------------+---+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+-----------------+-----+-----+------------+--------------------------+--------------+
|    RTL Ports    | Dir | Bits|  Protocol  |       Source Object      |    C Type    |
+-----------------+-----+-----+------------+--------------------------+--------------+
|ap_clk           |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|ap_rst           |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_0_pipo_status  |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_0_pipo_update  | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_1_pipo_status  |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_1_pipo_update  | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_2_pipo_status  |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_2_pipo_update  | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_3_pipo_status  |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_3_pipo_update  | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_4_pipo_status  |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_4_pipo_update  | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_5_pipo_status  |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_5_pipo_update  | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_6_pipo_status  |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_6_pipo_update  | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_7_pipo_status  |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_7_pipo_update  | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|ap_continue      |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|ap_done          | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|ap_start         |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|ap_idle          | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|ap_ready         | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_0_address0     | out |    3|  ap_memory |            A_0           |     array    |
|A_0_ce0          | out |    1|  ap_memory |            A_0           |     array    |
|A_0_d0           | out |   32|  ap_memory |            A_0           |     array    |
|A_0_q0           |  in |   32|  ap_memory |            A_0           |     array    |
|A_0_we0          | out |    1|  ap_memory |            A_0           |     array    |
|A_0_address1     | out |    3|  ap_memory |            A_0           |     array    |
|A_0_ce1          | out |    1|  ap_memory |            A_0           |     array    |
|A_0_d1           | out |   32|  ap_memory |            A_0           |     array    |
|A_0_q1           |  in |   32|  ap_memory |            A_0           |     array    |
|A_0_we1          | out |    1|  ap_memory |            A_0           |     array    |
|A_1_address0     | out |    3|  ap_memory |            A_1           |     array    |
|A_1_ce0          | out |    1|  ap_memory |            A_1           |     array    |
|A_1_d0           | out |   32|  ap_memory |            A_1           |     array    |
|A_1_q0           |  in |   32|  ap_memory |            A_1           |     array    |
|A_1_we0          | out |    1|  ap_memory |            A_1           |     array    |
|A_1_address1     | out |    3|  ap_memory |            A_1           |     array    |
|A_1_ce1          | out |    1|  ap_memory |            A_1           |     array    |
|A_1_d1           | out |   32|  ap_memory |            A_1           |     array    |
|A_1_q1           |  in |   32|  ap_memory |            A_1           |     array    |
|A_1_we1          | out |    1|  ap_memory |            A_1           |     array    |
|A_2_address0     | out |    3|  ap_memory |            A_2           |     array    |
|A_2_ce0          | out |    1|  ap_memory |            A_2           |     array    |
|A_2_d0           | out |   32|  ap_memory |            A_2           |     array    |
|A_2_q0           |  in |   32|  ap_memory |            A_2           |     array    |
|A_2_we0          | out |    1|  ap_memory |            A_2           |     array    |
|A_2_address1     | out |    3|  ap_memory |            A_2           |     array    |
|A_2_ce1          | out |    1|  ap_memory |            A_2           |     array    |
|A_2_d1           | out |   32|  ap_memory |            A_2           |     array    |
|A_2_q1           |  in |   32|  ap_memory |            A_2           |     array    |
|A_2_we1          | out |    1|  ap_memory |            A_2           |     array    |
|A_3_address0     | out |    3|  ap_memory |            A_3           |     array    |
|A_3_ce0          | out |    1|  ap_memory |            A_3           |     array    |
|A_3_d0           | out |   32|  ap_memory |            A_3           |     array    |
|A_3_q0           |  in |   32|  ap_memory |            A_3           |     array    |
|A_3_we0          | out |    1|  ap_memory |            A_3           |     array    |
|A_3_address1     | out |    3|  ap_memory |            A_3           |     array    |
|A_3_ce1          | out |    1|  ap_memory |            A_3           |     array    |
|A_3_d1           | out |   32|  ap_memory |            A_3           |     array    |
|A_3_q1           |  in |   32|  ap_memory |            A_3           |     array    |
|A_3_we1          | out |    1|  ap_memory |            A_3           |     array    |
|A_4_address0     | out |    3|  ap_memory |            A_4           |     array    |
|A_4_ce0          | out |    1|  ap_memory |            A_4           |     array    |
|A_4_d0           | out |   32|  ap_memory |            A_4           |     array    |
|A_4_q0           |  in |   32|  ap_memory |            A_4           |     array    |
|A_4_we0          | out |    1|  ap_memory |            A_4           |     array    |
|A_4_address1     | out |    3|  ap_memory |            A_4           |     array    |
|A_4_ce1          | out |    1|  ap_memory |            A_4           |     array    |
|A_4_d1           | out |   32|  ap_memory |            A_4           |     array    |
|A_4_q1           |  in |   32|  ap_memory |            A_4           |     array    |
|A_4_we1          | out |    1|  ap_memory |            A_4           |     array    |
|A_5_address0     | out |    3|  ap_memory |            A_5           |     array    |
|A_5_ce0          | out |    1|  ap_memory |            A_5           |     array    |
|A_5_d0           | out |   32|  ap_memory |            A_5           |     array    |
|A_5_q0           |  in |   32|  ap_memory |            A_5           |     array    |
|A_5_we0          | out |    1|  ap_memory |            A_5           |     array    |
|A_5_address1     | out |    3|  ap_memory |            A_5           |     array    |
|A_5_ce1          | out |    1|  ap_memory |            A_5           |     array    |
|A_5_d1           | out |   32|  ap_memory |            A_5           |     array    |
|A_5_q1           |  in |   32|  ap_memory |            A_5           |     array    |
|A_5_we1          | out |    1|  ap_memory |            A_5           |     array    |
|A_6_address0     | out |    3|  ap_memory |            A_6           |     array    |
|A_6_ce0          | out |    1|  ap_memory |            A_6           |     array    |
|A_6_d0           | out |   32|  ap_memory |            A_6           |     array    |
|A_6_q0           |  in |   32|  ap_memory |            A_6           |     array    |
|A_6_we0          | out |    1|  ap_memory |            A_6           |     array    |
|A_6_address1     | out |    3|  ap_memory |            A_6           |     array    |
|A_6_ce1          | out |    1|  ap_memory |            A_6           |     array    |
|A_6_d1           | out |   32|  ap_memory |            A_6           |     array    |
|A_6_q1           |  in |   32|  ap_memory |            A_6           |     array    |
|A_6_we1          | out |    1|  ap_memory |            A_6           |     array    |
|A_7_address0     | out |    3|  ap_memory |            A_7           |     array    |
|A_7_ce0          | out |    1|  ap_memory |            A_7           |     array    |
|A_7_d0           | out |   32|  ap_memory |            A_7           |     array    |
|A_7_q0           |  in |   32|  ap_memory |            A_7           |     array    |
|A_7_we0          | out |    1|  ap_memory |            A_7           |     array    |
|A_7_address1     | out |    3|  ap_memory |            A_7           |     array    |
|A_7_ce1          | out |    1|  ap_memory |            A_7           |     array    |
|A_7_d1           | out |   32|  ap_memory |            A_7           |     array    |
|A_7_q1           |  in |   32|  ap_memory |            A_7           |     array    |
|A_7_we1          | out |    1|  ap_memory |            A_7           |     array    |
|B_dout           |  in |   32|   ap_fifo  |             B            |    pointer   |
|B_empty_n        |  in |    1|   ap_fifo  |             B            |    pointer   |
|B_read           | out |    1|   ap_fifo  |             B            |    pointer   |
|C_address0       | out |    6|  ap_memory |             C            |     array    |
|C_ce0            | out |    1|  ap_memory |             C            |     array    |
|C_d0             | out |   32|  ap_memory |             C            |     array    |
|C_q0             |  in |   32|  ap_memory |             C            |     array    |
|C_we0            | out |    1|  ap_memory |             C            |     array    |
|C_address1       | out |    6|  ap_memory |             C            |     array    |
|C_ce1            | out |    1|  ap_memory |             C            |     array    |
|C_d1             | out |   32|  ap_memory |             C            |     array    |
|C_q1             |  in |   32|  ap_memory |             C            |     array    |
|C_we1            | out |    1|  ap_memory |             C            |     array    |
+-----------------+-----+-----+------------+--------------------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 4
* Pipeline: 0
* Dataflow Pipeline: 1
  DF-Pipeline-0: Size = 4, States = { 1 2 3 4 }

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
* FSM state operations: 

 <State 1>: 2.71ns
ST_1: B_cached [1/1] 2.71ns
codeRepl:2  %B_cached = alloca [64 x float], align 4

ST_1: stg_6 [2/2] 0.00ns
codeRepl:3  call fastcc void @Accelerator_MAT_Multiply_Loop_LoadRow_proc(float* %B, [64 x float]* nocapture %B_cached)


 <State 2>: 0.00ns
ST_2: stg_7 [1/2] 0.00ns
codeRepl:3  call fastcc void @Accelerator_MAT_Multiply_Loop_LoadRow_proc(float* %B, [64 x float]* nocapture %B_cached)


 <State 3>: 0.00ns
ST_3: stg_8 [2/2] 0.00ns
codeRepl:4  call fastcc void @Accelerator_MAT_Multiply_Loop_Row_proc([8 x float]* nocapture %A_0, [8 x float]* nocapture %A_1, [8 x float]* nocapture %A_2, [8 x float]* nocapture %A_3, [8 x float]* nocapture %A_4, [8 x float]* nocapture %A_5, [8 x float]* nocapture %A_6, [8 x float]* nocapture %A_7, [64 x float]* nocapture %B_cached, [64 x float]* nocapture %C)


 <State 4>: 0.00ns
ST_4: stg_9 [1/1] 0.00ns
codeRepl:0  call void (...)* @_ssdm_op_SpecDataflowPipeline(i32 -1, [1 x i8]* @p_str12) nounwind

ST_4: stg_10 [1/1] 0.00ns
codeRepl:1  call void (...)* @_ssdm_op_SpecInterface(float* %B, [8 x i8]* @p_str112, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str11, [1 x i8]* @p_str11, [1 x i8]* @p_str11)

ST_4: stg_11 [1/2] 0.00ns
codeRepl:4  call fastcc void @Accelerator_MAT_Multiply_Loop_Row_proc([8 x float]* nocapture %A_0, [8 x float]* nocapture %A_1, [8 x float]* nocapture %A_2, [8 x float]* nocapture %A_3, [8 x float]* nocapture %A_4, [8 x float]* nocapture %A_5, [8 x float]* nocapture %A_6, [8 x float]* nocapture %A_7, [64 x float]* nocapture %B_cached, [64 x float]* nocapture %C)

ST_4: stg_12 [1/1] 0.00ns
codeRepl:5  ret void



============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is clock enabled: 0
- Is pipelined: 0
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ A_0]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; mode=0x9aa1eb98b0; pingpong=1; private_global=0; MemPort=[11]; IO mode=ap_memory:ce=0
Port [ A_1]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; mode=0x9aa1eb9d30; pingpong=1; private_global=0; MemPort=[11]; IO mode=ap_memory:ce=0
Port [ A_2]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; mode=0x9aa1ebab40; pingpong=1; private_global=0; MemPort=[11]; IO mode=ap_memory:ce=0
Port [ A_3]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; mode=0x9aa1eba120; pingpong=1; private_global=0; MemPort=[11]; IO mode=ap_memory:ce=0
Port [ A_4]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; mode=0x9aa1eb9670; pingpong=1; private_global=0; MemPort=[11]; IO mode=ap_memory:ce=0
Port [ A_5]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; mode=0x9aa1eb9f70; pingpong=1; private_global=0; MemPort=[11]; IO mode=ap_memory:ce=0
Port [ A_6]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; mode=0x9aa1eb9e50; pingpong=1; private_global=0; MemPort=[11]; IO mode=ap_memory:ce=0
Port [ A_7]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; mode=0x9aa1eba7e0; pingpong=1; private_global=0; MemPort=[11]; IO mode=ap_memory:ce=0
Port [ B]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=3; mode=0x9aa1eba5a0; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
Port [ C]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=1; mode=0x9aa1eb8c50; pingpong=0; private_global=0; MemPort=[03]; IO mode=ap_memory:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
B_cached (alloca              ) [ 00111]
stg_7    (call                ) [ 00000]
stg_9    (specdataflowpipeline) [ 00000]
stg_10   (specinterface       ) [ 00000]
stg_11   (call                ) [ 00000]
stg_12   (ret                 ) [ 00000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="A_0">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="A_0"/><MemPortTyVec>1 1 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="A_1">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="A_1"/><MemPortTyVec>1 1 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="A_2">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="A_2"/><MemPortTyVec>1 1 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="A_3">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="A_3"/><MemPortTyVec>1 1 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="A_4">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="A_4"/><MemPortTyVec>1 1 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="A_5">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="A_5"/><MemPortTyVec>1 1 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="12" class="1000" name="A_6">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="A_6"/><MemPortTyVec>1 1 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="14" class="1000" name="A_7">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="A_7"/><MemPortTyVec>1 1 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="16" class="1000" name="B">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="B"/></StgValue>
</bind>
</comp>

<comp id="18" class="1000" name="C">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="C"/><MemPortTyVec>0 3 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="Accelerator_MAT_Multiply_Loop_LoadRow_proc"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="Accelerator_MAT_Multiply_Loop_Row_proc"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecDataflowPipeline"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str12"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str112"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str11"/></StgValue>
</bind>
</comp>

<comp id="40" class="1004" name="B_cached_alloca_fu_40">
<pin_list>
<pin id="41" dir="0" index="0" bw="1" slack="0"/>
<pin id="42" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="B_cached/1 "/>
</bind>
</comp>

<comp id="45" class="1004" name="grp_Accelerator_MAT_Multiply_Loop_Row_proc_fu_45">
<pin_list>
<pin id="46" dir="0" index="0" bw="0" slack="0"/>
<pin id="47" dir="0" index="1" bw="32" slack="0"/>
<pin id="48" dir="0" index="2" bw="32" slack="0"/>
<pin id="49" dir="0" index="3" bw="32" slack="0"/>
<pin id="50" dir="0" index="4" bw="32" slack="0"/>
<pin id="51" dir="0" index="5" bw="32" slack="0"/>
<pin id="52" dir="0" index="6" bw="32" slack="0"/>
<pin id="53" dir="0" index="7" bw="32" slack="0"/>
<pin id="54" dir="0" index="8" bw="32" slack="0"/>
<pin id="55" dir="0" index="9" bw="32" slack="2147483647"/>
<pin id="56" dir="0" index="10" bw="32" slack="0"/>
<pin id="57" dir="1" index="11" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="call(48) " fcode="call"/>
<opset="stg_8/3 "/>
</bind>
</comp>

<comp id="68" class="1004" name="grp_Accelerator_MAT_Multiply_Loop_LoadRow_proc_fu_68">
<pin_list>
<pin id="69" dir="0" index="0" bw="0" slack="0"/>
<pin id="70" dir="0" index="1" bw="32" slack="0"/>
<pin id="71" dir="0" index="2" bw="32" slack="0"/>
<pin id="72" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="call(48) " fcode="call"/>
<opset="stg_6/1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="43"><net_src comp="20" pin="0"/><net_sink comp="40" pin=0"/></net>

<net id="58"><net_src comp="24" pin="0"/><net_sink comp="45" pin=0"/></net>

<net id="59"><net_src comp="0" pin="0"/><net_sink comp="45" pin=1"/></net>

<net id="60"><net_src comp="2" pin="0"/><net_sink comp="45" pin=2"/></net>

<net id="61"><net_src comp="4" pin="0"/><net_sink comp="45" pin=3"/></net>

<net id="62"><net_src comp="6" pin="0"/><net_sink comp="45" pin=4"/></net>

<net id="63"><net_src comp="8" pin="0"/><net_sink comp="45" pin=5"/></net>

<net id="64"><net_src comp="10" pin="0"/><net_sink comp="45" pin=6"/></net>

<net id="65"><net_src comp="12" pin="0"/><net_sink comp="45" pin=7"/></net>

<net id="66"><net_src comp="14" pin="0"/><net_sink comp="45" pin=8"/></net>

<net id="67"><net_src comp="18" pin="0"/><net_sink comp="45" pin=10"/></net>

<net id="73"><net_src comp="22" pin="0"/><net_sink comp="68" pin=0"/></net>

<net id="74"><net_src comp="16" pin="0"/><net_sink comp="68" pin=1"/></net>

<net id="75"><net_src comp="40" pin="1"/><net_sink comp="68" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: A_0 | {}
	Port: A_1 | {}
	Port: A_2 | {}
	Port: A_3 | {}
	Port: A_4 | {}
	Port: A_5 | {}
	Port: A_6 | {}
	Port: A_7 | {}
	Port: B | {}
  - Chain level:
	State 1
		stg_6 : 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|------------------------------------------------------|---------|---------|---------|---------|
| Operation|                    Functional Unit                   |  DSP48E |  Delay  |    FF   |   LUT   |
|----------|------------------------------------------------------|---------|---------|---------|---------|
|   call   |   grp_Accelerator_MAT_Multiply_Loop_Row_proc_fu_45   |    10   |  46.295 |   2069  |   1947  |
|          | grp_Accelerator_MAT_Multiply_Loop_LoadRow_proc_fu_68 |    0    |  1.939  |    16   |    18   |
|----------|------------------------------------------------------|---------|---------|---------|---------|
|   Total  |                                                      |    10   |  48.234 |   2085  |   1965  |
|----------|------------------------------------------------------|---------|---------|---------|---------|

Memories:
+--------+--------+--------+--------+
|        |  BRAM  |   FF   |   LUT  |
+--------+--------+--------+--------+
|B_cached|    4   |    0   |    0   |
+--------+--------+--------+--------+
|  Total |    4   |    0   |    0   |
+--------+--------+--------+--------+

* Register list:
N/A

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+--------+--------+--------+
|           |  BRAM  | DSP48E |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+--------+
|  Function |    -   |   10   |   48   |  2085  |  1965  |
|   Memory  |    4   |    -   |    -   |    0   |    0   |
|Multiplexer|    -   |    -   |    -   |    -   |    -   |
|  Register |    -   |    -   |    -   |    -   |    -   |
+-----------+--------+--------+--------+--------+--------+
|   Total   |    4   |   10   |   48   |  2085  |  1965  |
+-----------+--------+--------+--------+--------+--------+
