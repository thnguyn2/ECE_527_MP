

================================================================
== Vivado HLS Report for 'Accelerator_MAT_Multiply_Loop_LoadRow_proc'
================================================================
* Date:           Thu Oct 29 22:12:14 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        accelerator
* Solution:       solution2opt
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      7.09|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   66|   66|   66|   66|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------+-----+-----+----------+-----------+-----------+------+----------+
        |           |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------+-----+-----+----------+-----------+-----------+------+----------+
        |- LoadRow  |   64|   64|         9|          8|          1|     8|    yes   |
        +-----------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 8, depth = 9


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 11
* Pipeline: 1
  Pipeline-0: II = 8, D = 9, States = { 2 3 4 5 6 7 8 9 10 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	11  / (exitcond4_i_i)
	3  / (!exitcond4_i_i)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	2  / true
11 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_12 [1/1] 0.00ns
newFuncRoot:0  call void (...)* @_ssdm_op_SpecInterface(float* %B, [8 x i8]* @p_str112, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str11, [1 x i8]* @p_str11, [1 x i8]* @p_str11)

ST_1: stg_13 [1/1] 1.57ns
newFuncRoot:1  br label %0


 <State 2>: 3.25ns
ST_2: i_0_i_i [1/1] 0.00ns
:0  %i_0_i_i = phi i4 [ 0, %newFuncRoot ], [ %i, %1 ]

ST_2: exitcond4_i_i [1/1] 1.88ns
:1  %exitcond4_i_i = icmp eq i4 %i_0_i_i, -8

ST_2: i [1/1] 0.80ns
:2  %i = add i4 %i_0_i_i, 1

ST_2: stg_17 [1/1] 0.00ns
:3  br i1 %exitcond4_i_i, label %.preheader.exitStub, label %1

ST_2: tmp_21 [1/1] 0.00ns
:5  %tmp_21 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i_0_i_i, i3 0)


 <State 3>: 7.09ns
ST_3: B_read [1/1] 4.38ns
:4  %B_read = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %B)

ST_3: tmp_22 [1/1] 0.00ns
:6  %tmp_22 = zext i7 %tmp_21 to i64

ST_3: B_cached_addr [1/1] 0.00ns
:7  %B_cached_addr = getelementptr [64 x float]* %B_cached, i64 0, i64 %tmp_22

ST_3: stg_22 [1/1] 2.71ns
:8  store float %B_read, float* %B_cached_addr, align 16


 <State 4>: 7.09ns
ST_4: B_read_1 [1/1] 4.38ns
:9  %B_read_1 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %B)

ST_4: tmp_23 [1/1] 0.00ns
:10  %tmp_23 = or i7 %tmp_21, 1

ST_4: p_addr [1/1] 0.00ns
:11  %p_addr = call i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25 0, i7 %tmp_23)

ST_4: tmp_24 [1/1] 0.00ns
:12  %tmp_24 = zext i32 %p_addr to i64

ST_4: B_cached_addr_1 [1/1] 0.00ns
:13  %B_cached_addr_1 = getelementptr [64 x float]* %B_cached, i64 0, i64 %tmp_24

ST_4: stg_28 [1/1] 2.71ns
:14  store float %B_read_1, float* %B_cached_addr_1, align 4


 <State 5>: 7.09ns
ST_5: B_read_2 [1/1] 4.38ns
:15  %B_read_2 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %B)

ST_5: tmp_s [1/1] 0.00ns
:16  %tmp_s = or i7 %tmp_21, 2

ST_5: p_addr9 [1/1] 0.00ns
:17  %p_addr9 = call i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25 0, i7 %tmp_s)

ST_5: tmp_25 [1/1] 0.00ns
:18  %tmp_25 = zext i32 %p_addr9 to i64

ST_5: B_cached_addr_2 [1/1] 0.00ns
:19  %B_cached_addr_2 = getelementptr [64 x float]* %B_cached, i64 0, i64 %tmp_25

ST_5: stg_34 [1/1] 2.71ns
:20  store float %B_read_2, float* %B_cached_addr_2, align 8


 <State 6>: 7.09ns
ST_6: B_read_3 [1/1] 4.38ns
:21  %B_read_3 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %B)

ST_6: tmp_26 [1/1] 0.00ns
:22  %tmp_26 = or i7 %tmp_21, 3

ST_6: p_addr1 [1/1] 0.00ns
:23  %p_addr1 = call i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25 0, i7 %tmp_26)

ST_6: tmp_27 [1/1] 0.00ns
:24  %tmp_27 = zext i32 %p_addr1 to i64

ST_6: B_cached_addr_3 [1/1] 0.00ns
:25  %B_cached_addr_3 = getelementptr [64 x float]* %B_cached, i64 0, i64 %tmp_27

ST_6: stg_40 [1/1] 2.71ns
:26  store float %B_read_3, float* %B_cached_addr_3, align 4


 <State 7>: 7.09ns
ST_7: B_read_4 [1/1] 4.38ns
:27  %B_read_4 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %B)

ST_7: tmp_28 [1/1] 0.00ns
:28  %tmp_28 = or i7 %tmp_21, 4

ST_7: p_addr2 [1/1] 0.00ns
:29  %p_addr2 = call i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25 0, i7 %tmp_28)

ST_7: tmp_29 [1/1] 0.00ns
:30  %tmp_29 = zext i32 %p_addr2 to i64

ST_7: B_cached_addr_4 [1/1] 0.00ns
:31  %B_cached_addr_4 = getelementptr [64 x float]* %B_cached, i64 0, i64 %tmp_29

ST_7: stg_46 [1/1] 2.71ns
:32  store float %B_read_4, float* %B_cached_addr_4, align 16


 <State 8>: 7.09ns
ST_8: B_read_5 [1/1] 4.38ns
:33  %B_read_5 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %B)

ST_8: tmp_30 [1/1] 0.00ns
:34  %tmp_30 = or i7 %tmp_21, 5

ST_8: p_addr3 [1/1] 0.00ns
:35  %p_addr3 = call i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25 0, i7 %tmp_30)

ST_8: tmp_31 [1/1] 0.00ns
:36  %tmp_31 = zext i32 %p_addr3 to i64

ST_8: B_cached_addr_5 [1/1] 0.00ns
:37  %B_cached_addr_5 = getelementptr [64 x float]* %B_cached, i64 0, i64 %tmp_31

ST_8: stg_52 [1/1] 2.71ns
:38  store float %B_read_5, float* %B_cached_addr_5, align 4


 <State 9>: 7.09ns
ST_9: B_read_6 [1/1] 4.38ns
:39  %B_read_6 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %B)

ST_9: tmp_32 [1/1] 0.00ns
:40  %tmp_32 = or i7 %tmp_21, 6

ST_9: p_addr4 [1/1] 0.00ns
:41  %p_addr4 = call i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25 0, i7 %tmp_32)

ST_9: tmp_33 [1/1] 0.00ns
:42  %tmp_33 = zext i32 %p_addr4 to i64

ST_9: B_cached_addr_6 [1/1] 0.00ns
:43  %B_cached_addr_6 = getelementptr [64 x float]* %B_cached, i64 0, i64 %tmp_33

ST_9: stg_58 [1/1] 2.71ns
:44  store float %B_read_6, float* %B_cached_addr_6, align 8


 <State 10>: 7.09ns
ST_10: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_10: stg_60 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str2) nounwind

ST_10: tmp [1/1] 0.00ns
:2  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([8 x i8]* @p_str2)

ST_10: stg_62 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str12) nounwind

ST_10: B_read_7 [1/1] 4.38ns
:45  %B_read_7 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %B)

ST_10: tmp_34 [1/1] 0.00ns
:46  %tmp_34 = or i7 %tmp_21, 7

ST_10: p_addr5 [1/1] 0.00ns
:47  %p_addr5 = call i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25 0, i7 %tmp_34)

ST_10: tmp_35 [1/1] 0.00ns
:48  %tmp_35 = zext i32 %p_addr5 to i64

ST_10: B_cached_addr_7 [1/1] 0.00ns
:49  %B_cached_addr_7 = getelementptr [64 x float]* %B_cached, i64 0, i64 %tmp_35

ST_10: stg_68 [1/1] 2.71ns
:50  store float %B_read_7, float* %B_cached_addr_7, align 4

ST_10: empty_9 [1/1] 0.00ns
:51  %empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([8 x i8]* @p_str2, i32 %tmp)

ST_10: stg_70 [1/1] 0.00ns
:52  br label %0


 <State 11>: 0.00ns
ST_11: stg_71 [1/1] 0.00ns
.preheader.exitStub:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
