

================================================================
== Vivado HLS Report for 'Accelerator_DCT_Block_proc'
================================================================
* Date:           Thu Oct 29 22:12:16 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        accelerator
* Solution:       solution2opt
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.09|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  513|  513|  513|  513|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 10
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (!cond)
	7  / (cond)
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	6  / true
* FSM state operations: 

 <State 1>: 2.00ns
ST_1: stg_11 [1/1] 0.00ns
newFuncRoot:0  call void (...)* @_ssdm_op_SpecInterface(float* %X, [8 x i8]* @p_str112, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str11, [1 x i8]* @p_str11, [1 x i8]* @p_str11)

ST_1: function_read [1/1] 0.00ns
newFuncRoot:1  %function_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %function_r)

ST_1: A_cached_row_i1 [1/1] 0.00ns
newFuncRoot:2  %A_cached_row_i1 = alloca [8 x float], align 16

ST_1: A_cached_row_i [1/1] 0.00ns
newFuncRoot:3  %A_cached_row_i = alloca [8 x float], align 16

ST_1: temp [1/1] 0.00ns
newFuncRoot:4  %temp = alloca [64 x float], align 4

ST_1: cond [1/1] 2.00ns
newFuncRoot:5  %cond = icmp eq i8 %function_read, 1

ST_1: stg_17 [1/1] 0.00ns
newFuncRoot:6  br i1 %cond, label %0, label %1

ST_1: stg_18 [2/2] 0.00ns
:0  call fastcc void @Accelerator_MAT_Multiply([8 x float]* nocapture @T_0, [8 x float]* nocapture @T_1, [8 x float]* nocapture @T_2, [8 x float]* nocapture @T_3, [8 x float]* nocapture @T_4, [8 x float]* nocapture @T_5, [8 x float]* nocapture @T_6, [8 x float]* nocapture @T_7, float* %X, [64 x float]* nocapture %temp)

ST_1: stg_19 [2/2] 0.00ns
:0  call fastcc void @Accelerator_MAT_Multiply([8 x float]* nocapture @Tinv_0, [8 x float]* nocapture @Tinv_1, [8 x float]* nocapture @Tinv_2, [8 x float]* nocapture @Tinv_3, [8 x float]* nocapture @Tinv_4, [8 x float]* nocapture @Tinv_5, [8 x float]* nocapture @Tinv_6, [8 x float]* nocapture @Tinv_7, float* %X, [64 x float]* nocapture %temp)


 <State 2>: 0.00ns
ST_2: stg_20 [1/2] 0.00ns
:0  call fastcc void @Accelerator_MAT_Multiply([8 x float]* nocapture @T_0, [8 x float]* nocapture @T_1, [8 x float]* nocapture @T_2, [8 x float]* nocapture @T_3, [8 x float]* nocapture @T_4, [8 x float]* nocapture @T_5, [8 x float]* nocapture @T_6, [8 x float]* nocapture @T_7, float* %X, [64 x float]* nocapture %temp)


 <State 3>: 0.00ns
ST_3: stg_21 [2/2] 0.00ns
:2  call fastcc void @Accelerator_MAT_Multiply2_Loop_Row_proc([64 x float]* nocapture %temp, [8 x float]* nocapture %A_cached_row_i1)


 <State 4>: 0.00ns
ST_4: stg_22 [1/2] 0.00ns
:2  call fastcc void @Accelerator_MAT_Multiply2_Loop_Row_proc([64 x float]* nocapture %temp, [8 x float]* nocapture %A_cached_row_i1)


 <State 5>: 0.00ns
ST_5: stg_23 [2/2] 0.00ns
:3  call fastcc void @Accelerator_MAT_Multiply2_Loop_Col_proc([8 x float]* nocapture %A_cached_row_i1, [8 x float]* nocapture @Tinv_0, [8 x float]* nocapture @Tinv_1, [8 x float]* nocapture @Tinv_2, [8 x float]* nocapture @Tinv_3, [8 x float]* nocapture @Tinv_4, [8 x float]* nocapture @Tinv_5, [8 x float]* nocapture @Tinv_6, [8 x float]* nocapture @Tinv_7, [64 x float]* nocapture %Y)


 <State 6>: 0.00ns
ST_6: stg_24 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecDataflowPipeline(i32 -1, [1 x i8]* @p_str12) nounwind

ST_6: stg_25 [1/2] 0.00ns
:3  call fastcc void @Accelerator_MAT_Multiply2_Loop_Col_proc([8 x float]* nocapture %A_cached_row_i1, [8 x float]* nocapture @Tinv_0, [8 x float]* nocapture @Tinv_1, [8 x float]* nocapture @Tinv_2, [8 x float]* nocapture @Tinv_3, [8 x float]* nocapture @Tinv_4, [8 x float]* nocapture @Tinv_5, [8 x float]* nocapture @Tinv_6, [8 x float]* nocapture @Tinv_7, [64 x float]* nocapture %Y)

ST_6: stg_26 [1/1] 0.00ns
:4  br label %.ret.exitStub

ST_6: stg_27 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecDataflowPipeline(i32 -1, [1 x i8]* @p_str12) nounwind

ST_6: stg_28 [1/2] 0.00ns
:3  call fastcc void @Accelerator_MAT_Multiply2_Loop_Col_proc([8 x float]* nocapture %A_cached_row_i, [8 x float]* nocapture @T_0, [8 x float]* nocapture @T_1, [8 x float]* nocapture @T_2, [8 x float]* nocapture @T_3, [8 x float]* nocapture @T_4, [8 x float]* nocapture @T_5, [8 x float]* nocapture @T_6, [8 x float]* nocapture @T_7, [64 x float]* nocapture %Y)

ST_6: stg_29 [1/1] 0.00ns
:4  br label %.ret.exitStub

ST_6: stg_30 [1/1] 0.00ns
.ret.exitStub:0  ret void


 <State 7>: 0.00ns
ST_7: stg_31 [1/2] 0.00ns
:0  call fastcc void @Accelerator_MAT_Multiply([8 x float]* nocapture @Tinv_0, [8 x float]* nocapture @Tinv_1, [8 x float]* nocapture @Tinv_2, [8 x float]* nocapture @Tinv_3, [8 x float]* nocapture @Tinv_4, [8 x float]* nocapture @Tinv_5, [8 x float]* nocapture @Tinv_6, [8 x float]* nocapture @Tinv_7, float* %X, [64 x float]* nocapture %temp)


 <State 8>: 0.00ns
ST_8: stg_32 [2/2] 0.00ns
:2  call fastcc void @Accelerator_MAT_Multiply2_Loop_Row_proc([64 x float]* nocapture %temp, [8 x float]* nocapture %A_cached_row_i)


 <State 9>: 0.00ns
ST_9: stg_33 [1/2] 0.00ns
:2  call fastcc void @Accelerator_MAT_Multiply2_Loop_Row_proc([64 x float]* nocapture %temp, [8 x float]* nocapture %A_cached_row_i)


 <State 10>: 0.00ns
ST_10: stg_34 [2/2] 0.00ns
:3  call fastcc void @Accelerator_MAT_Multiply2_Loop_Col_proc([8 x float]* nocapture %A_cached_row_i, [8 x float]* nocapture @T_0, [8 x float]* nocapture @T_1, [8 x float]* nocapture @T_2, [8 x float]* nocapture @T_3, [8 x float]* nocapture @T_4, [8 x float]* nocapture @T_5, [8 x float]* nocapture @T_6, [8 x float]* nocapture @T_7, [64 x float]* nocapture %Y)



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
