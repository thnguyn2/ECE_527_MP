

================================================================
== Vivado HLS Report for 'Accelerator_MAT_Multiply'
================================================================
* Date:           Thu Oct 29 22:12:23 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        accelerator
* Solution:       solution2opt
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      7.68|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |  367|  367|  301|  301| dataflow |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        +------------------------------------------------------+--------------------------------------------+-----+-----+-----+-----+---------+
        |                                                      |                                            |  Latency  |  Interval | Pipeline|
        |                       Instance                       |                   Module                   | min | max | min | max |   Type  |
        +------------------------------------------------------+--------------------------------------------+-----+-----+-----+-----+---------+
        |grp_Accelerator_MAT_Multiply_Loop_LoadRow_proc_fu_68  |Accelerator_MAT_Multiply_Loop_LoadRow_proc  |   66|   66|   66|   66|   none  |
        |grp_Accelerator_MAT_Multiply_Loop_Row_proc_fu_45      |Accelerator_MAT_Multiply_Loop_Row_proc      |  300|  300|  300|  300|   none  |
        +------------------------------------------------------+--------------------------------------------+-----+-----+-----+-----+---------+

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       0|      1|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|     10|    1872|   2286|
|Memory           |        4|      -|       0|      0|
|Multiplexer      |        -|      -|       -|      2|
|Register         |        -|      -|       5|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        4|     10|    1877|   2289|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        1|      4|       1|      4|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    +-----------------------------------------------+--------------------------------------------+---------+-------+------+------+
    |                    Instance                   |                   Module                   | BRAM_18K| DSP48E|  FF  |  LUT |
    +-----------------------------------------------+--------------------------------------------+---------+-------+------+------+
    |Accelerator_MAT_Multiply_Loop_LoadRow_proc_U0  |Accelerator_MAT_Multiply_Loop_LoadRow_proc  |        0|      0|    26|    88|
    |Accelerator_MAT_Multiply_Loop_Row_proc_U0      |Accelerator_MAT_Multiply_Loop_Row_proc      |        0|     10|  1846|  2198|
    +-----------------------------------------------+--------------------------------------------+---------+-------+------+------+
    |Total                                          |                                            |        0|     10|  1872|  2286|
    +-----------------------------------------------+--------------------------------------------+---------+-------+------+------+

    * Memory: 
    +------------+-----------------------------------+---------+---+----+------+-----+------+-------------+
    |   Memory   |               Module              | BRAM_18K| FF| LUT| Words| Bits| Banks| W*Bits*Banks|
    +------------+-----------------------------------+---------+---+----+------+-----+------+-------------+
    |B_cached_U  |Accelerator_MAT_Multiply_B_cached  |        4|  0|   0|    64|   32|     2|         4096|
    +------------+-----------------------------------+---------+---+----+------+-----+------+-------------+
    |Total       |                                   |        4|  0|   0|    64|   32|     2|         4096|
    +------------+-----------------------------------+---------+---+----+------+-----+------+-------------+

    * FIFO: 
    N/A

    * Expression: 
    +----------------------------------------------------+----------+-------+---+----+------------+------------+
    |                    Variable Name                   | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +----------------------------------------------------+----------+-------+---+----+------------+------------+
    |Accelerator_MAT_Multiply_Loop_Row_proc_U0_ap_start  |    and   |      0|  0|   1|           1|           1|
    +----------------------------------------------------+----------+-------+---+----+------------+------------+
    |Total                                               |          |      0|  0|   1|           1|           1|
    +----------------------------------------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +---------------------------------------------------------------------+----+-----------+-----+-----------+
    |                                 Name                                | LUT| Input Size| Bits| Total Bits|
    +---------------------------------------------------------------------+----+-----------+-----+-----------+
    |ap_sig_ready_Accelerator_MAT_Multiply_Loop_LoadRow_proc_U0_ap_ready  |   1|          2|    1|          2|
    |ap_sig_ready_Accelerator_MAT_Multiply_Loop_Row_proc_U0_ap_ready      |   1|          2|    1|          2|
    +---------------------------------------------------------------------+----+-----------+-----+-----------+
    |Total                                                                |   2|          4|    2|          4|
    +---------------------------------------------------------------------+----+-----------+-----+-----------+

    * Register: 
    +---------------------------------------------------------------------+---+----+-----+-----------+
    |                                 Name                                | FF| LUT| Bits| Const Bits|
    +---------------------------------------------------------------------+---+----+-----+-----------+
    |ap_CS                                                                |  1|   0|    1|          0|
    |ap_reg_procdone_Accelerator_MAT_Multiply_Loop_LoadRow_proc_U0        |  1|   0|    1|          0|
    |ap_reg_procdone_Accelerator_MAT_Multiply_Loop_Row_proc_U0            |  1|   0|    1|          0|
    |ap_reg_ready_Accelerator_MAT_Multiply_Loop_LoadRow_proc_U0_ap_ready  |  1|   0|    1|          0|
    |ap_reg_ready_Accelerator_MAT_Multiply_Loop_Row_proc_U0_ap_ready      |  1|   0|    1|          0|
    +---------------------------------------------------------------------+---+----+-----+-----------+
    |Total                                                                |  5|   0|    5|          0|
    +---------------------------------------------------------------------+---+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+-----------------+-----+-----+------------+--------------------------+--------------+
|    RTL Ports    | Dir | Bits|  Protocol  |       Source Object      |    C Type    |
+-----------------+-----+-----+------------+--------------------------+--------------+
|ap_clk           |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|ap_rst           |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_0_pipo_status  |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_0_pipo_update  | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_1_pipo_status  |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_1_pipo_update  | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_2_pipo_status  |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_2_pipo_update  | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_3_pipo_status  |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_3_pipo_update  | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_4_pipo_status  |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_4_pipo_update  | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_5_pipo_status  |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_5_pipo_update  | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_6_pipo_status  |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_6_pipo_update  | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_7_pipo_status  |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_7_pipo_update  | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|ap_continue      |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|ap_done          | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|ap_start         |  in |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|ap_idle          | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|ap_ready         | out |    1| ap_ctrl_hs | Accelerator_MAT_Multiply | return value |
|A_0_address0     | out |    3|  ap_memory |            A_0           |     array    |
|A_0_ce0          | out |    1|  ap_memory |            A_0           |     array    |
|A_0_d0           | out |   32|  ap_memory |            A_0           |     array    |
|A_0_q0           |  in |   32|  ap_memory |            A_0           |     array    |
|A_0_we0          | out |    1|  ap_memory |            A_0           |     array    |
|A_0_address1     | out |    3|  ap_memory |            A_0           |     array    |
|A_0_ce1          | out |    1|  ap_memory |            A_0           |     array    |
|A_0_d1           | out |   32|  ap_memory |            A_0           |     array    |
|A_0_q1           |  in |   32|  ap_memory |            A_0           |     array    |
|A_0_we1          | out |    1|  ap_memory |            A_0           |     array    |
|A_1_address0     | out |    3|  ap_memory |            A_1           |     array    |
|A_1_ce0          | out |    1|  ap_memory |            A_1           |     array    |
|A_1_d0           | out |   32|  ap_memory |            A_1           |     array    |
|A_1_q0           |  in |   32|  ap_memory |            A_1           |     array    |
|A_1_we0          | out |    1|  ap_memory |            A_1           |     array    |
|A_1_address1     | out |    3|  ap_memory |            A_1           |     array    |
|A_1_ce1          | out |    1|  ap_memory |            A_1           |     array    |
|A_1_d1           | out |   32|  ap_memory |            A_1           |     array    |
|A_1_q1           |  in |   32|  ap_memory |            A_1           |     array    |
|A_1_we1          | out |    1|  ap_memory |            A_1           |     array    |
|A_2_address0     | out |    3|  ap_memory |            A_2           |     array    |
|A_2_ce0          | out |    1|  ap_memory |            A_2           |     array    |
|A_2_d0           | out |   32|  ap_memory |            A_2           |     array    |
|A_2_q0           |  in |   32|  ap_memory |            A_2           |     array    |
|A_2_we0          | out |    1|  ap_memory |            A_2           |     array    |
|A_2_address1     | out |    3|  ap_memory |            A_2           |     array    |
|A_2_ce1          | out |    1|  ap_memory |            A_2           |     array    |
|A_2_d1           | out |   32|  ap_memory |            A_2           |     array    |
|A_2_q1           |  in |   32|  ap_memory |            A_2           |     array    |
|A_2_we1          | out |    1|  ap_memory |            A_2           |     array    |
|A_3_address0     | out |    3|  ap_memory |            A_3           |     array    |
|A_3_ce0          | out |    1|  ap_memory |            A_3           |     array    |
|A_3_d0           | out |   32|  ap_memory |            A_3           |     array    |
|A_3_q0           |  in |   32|  ap_memory |            A_3           |     array    |
|A_3_we0          | out |    1|  ap_memory |            A_3           |     array    |
|A_3_address1     | out |    3|  ap_memory |            A_3           |     array    |
|A_3_ce1          | out |    1|  ap_memory |            A_3           |     array    |
|A_3_d1           | out |   32|  ap_memory |            A_3           |     array    |
|A_3_q1           |  in |   32|  ap_memory |            A_3           |     array    |
|A_3_we1          | out |    1|  ap_memory |            A_3           |     array    |
|A_4_address0     | out |    3|  ap_memory |            A_4           |     array    |
|A_4_ce0          | out |    1|  ap_memory |            A_4           |     array    |
|A_4_d0           | out |   32|  ap_memory |            A_4           |     array    |
|A_4_q0           |  in |   32|  ap_memory |            A_4           |     array    |
|A_4_we0          | out |    1|  ap_memory |            A_4           |     array    |
|A_4_address1     | out |    3|  ap_memory |            A_4           |     array    |
|A_4_ce1          | out |    1|  ap_memory |            A_4           |     array    |
|A_4_d1           | out |   32|  ap_memory |            A_4           |     array    |
|A_4_q1           |  in |   32|  ap_memory |            A_4           |     array    |
|A_4_we1          | out |    1|  ap_memory |            A_4           |     array    |
|A_5_address0     | out |    3|  ap_memory |            A_5           |     array    |
|A_5_ce0          | out |    1|  ap_memory |            A_5           |     array    |
|A_5_d0           | out |   32|  ap_memory |            A_5           |     array    |
|A_5_q0           |  in |   32|  ap_memory |            A_5           |     array    |
|A_5_we0          | out |    1|  ap_memory |            A_5           |     array    |
|A_5_address1     | out |    3|  ap_memory |            A_5           |     array    |
|A_5_ce1          | out |    1|  ap_memory |            A_5           |     array    |
|A_5_d1           | out |   32|  ap_memory |            A_5           |     array    |
|A_5_q1           |  in |   32|  ap_memory |            A_5           |     array    |
|A_5_we1          | out |    1|  ap_memory |            A_5           |     array    |
|A_6_address0     | out |    3|  ap_memory |            A_6           |     array    |
|A_6_ce0          | out |    1|  ap_memory |            A_6           |     array    |
|A_6_d0           | out |   32|  ap_memory |            A_6           |     array    |
|A_6_q0           |  in |   32|  ap_memory |            A_6           |     array    |
|A_6_we0          | out |    1|  ap_memory |            A_6           |     array    |
|A_6_address1     | out |    3|  ap_memory |            A_6           |     array    |
|A_6_ce1          | out |    1|  ap_memory |            A_6           |     array    |
|A_6_d1           | out |   32|  ap_memory |            A_6           |     array    |
|A_6_q1           |  in |   32|  ap_memory |            A_6           |     array    |
|A_6_we1          | out |    1|  ap_memory |            A_6           |     array    |
|A_7_address0     | out |    3|  ap_memory |            A_7           |     array    |
|A_7_ce0          | out |    1|  ap_memory |            A_7           |     array    |
|A_7_d0           | out |   32|  ap_memory |            A_7           |     array    |
|A_7_q0           |  in |   32|  ap_memory |            A_7           |     array    |
|A_7_we0          | out |    1|  ap_memory |            A_7           |     array    |
|A_7_address1     | out |    3|  ap_memory |            A_7           |     array    |
|A_7_ce1          | out |    1|  ap_memory |            A_7           |     array    |
|A_7_d1           | out |   32|  ap_memory |            A_7           |     array    |
|A_7_q1           |  in |   32|  ap_memory |            A_7           |     array    |
|A_7_we1          | out |    1|  ap_memory |            A_7           |     array    |
|B_dout           |  in |   32|   ap_fifo  |             B            |    pointer   |
|B_empty_n        |  in |    1|   ap_fifo  |             B            |    pointer   |
|B_read           | out |    1|   ap_fifo  |             B            |    pointer   |
|C_address0       | out |    6|  ap_memory |             C            |     array    |
|C_ce0            | out |    1|  ap_memory |             C            |     array    |
|C_d0             | out |   32|  ap_memory |             C            |     array    |
|C_q0             |  in |   32|  ap_memory |             C            |     array    |
|C_we0            | out |    1|  ap_memory |             C            |     array    |
|C_address1       | out |    6|  ap_memory |             C            |     array    |
|C_ce1            | out |    1|  ap_memory |             C            |     array    |
|C_d1             | out |   32|  ap_memory |             C            |     array    |
|C_q1             |  in |   32|  ap_memory |             C            |     array    |
|C_we1            | out |    1|  ap_memory |             C            |     array    |
+-----------------+-----+-----+------------+--------------------------+--------------+

