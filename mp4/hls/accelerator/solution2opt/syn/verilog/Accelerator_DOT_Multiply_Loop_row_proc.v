// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Accelerator_DOT_Multiply_Loop_row_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        A_dout,
        A_empty_n,
        A_read,
        C_din,
        C_full_n,
        C_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 10'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 10'b10;
parameter    ap_ST_pp0_stg1_fsm_2 = 10'b100;
parameter    ap_ST_pp0_stg2_fsm_3 = 10'b1000;
parameter    ap_ST_pp0_stg3_fsm_4 = 10'b10000;
parameter    ap_ST_pp0_stg4_fsm_5 = 10'b100000;
parameter    ap_ST_pp0_stg5_fsm_6 = 10'b1000000;
parameter    ap_ST_pp0_stg6_fsm_7 = 10'b10000000;
parameter    ap_ST_pp0_stg7_fsm_8 = 10'b100000000;
parameter    ap_ST_st16_fsm_9 = 10'b1000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv32_41800000 = 32'b1000001100000000000000000000000;
parameter    ap_const_lv32_41400000 = 32'b1000001010000000000000000000000;
parameter    ap_const_lv32_41600000 = 32'b1000001011000000000000000000000;
parameter    ap_const_lv32_41900000 = 32'b1000001100100000000000000000000;
parameter    ap_const_lv32_41C00000 = 32'b1000001110000000000000000000000;
parameter    ap_const_lv32_42440000 = 32'b1000010010001000000000000000000;
parameter    ap_const_lv32_42900000 = 32'b1000010100100000000000000000000;
parameter    ap_const_lv32_41300000 = 32'b1000001001100000000000000000000;
parameter    ap_const_lv32_41500000 = 32'b1000001010100000000000000000000;
parameter    ap_const_lv32_41880000 = 32'b1000001100010000000000000000000;
parameter    ap_const_lv32_41B00000 = 32'b1000001101100000000000000000000;
parameter    ap_const_lv32_420C0000 = 32'b1000010000011000000000000000000;
parameter    ap_const_lv32_42800000 = 32'b1000010100000000000000000000000;
parameter    ap_const_lv32_42B80000 = 32'b1000010101110000000000000000000;
parameter    ap_const_lv32_41200000 = 32'b1000001001000000000000000000000;
parameter    ap_const_lv32_42140000 = 32'b1000010000101000000000000000000;
parameter    ap_const_lv32_425C0000 = 32'b1000010010111000000000000000000;
parameter    ap_const_lv32_429C0000 = 32'b1000010100111000000000000000000;
parameter    ap_const_lv32_42BE0000 = 32'b1000010101111100000000000000000;
parameter    ap_const_lv32_41980000 = 32'b1000001100110000000000000000000;
parameter    ap_const_lv32_41E80000 = 32'b1000001111010000000000000000000;
parameter    ap_const_lv32_42600000 = 32'b1000010011000000000000000000000;
parameter    ap_const_lv32_42AE0000 = 32'b1000010101011100000000000000000;
parameter    ap_const_lv32_42C40000 = 32'b1000010110001000000000000000000;
parameter    ap_const_lv32_41D00000 = 32'b1000001110100000000000000000000;
parameter    ap_const_lv32_42200000 = 32'b1000010001000000000000000000000;
parameter    ap_const_lv32_424C0000 = 32'b1000010010011000000000000000000;
parameter    ap_const_lv32_42880000 = 32'b1000010100010000000000000000000;
parameter    ap_const_lv32_42A20000 = 32'b1000010101000100000000000000000;
parameter    ap_const_lv32_42CE0000 = 32'b1000010110011100000000000000000;
parameter    ap_const_lv32_42E00000 = 32'b1000010111000000000000000000000;
parameter    ap_const_lv32_42680000 = 32'b1000010011010000000000000000000;
parameter    ap_const_lv32_42640000 = 32'b1000010011001000000000000000000;
parameter    ap_const_lv32_42DA0000 = 32'b1000010110110100000000000000000;
parameter    ap_const_lv32_42D00000 = 32'b1000010110100000000000000000000;
parameter    ap_const_lv32_42F20000 = 32'b1000010111100100000000000000000;
parameter    ap_const_lv32_42C80000 = 32'b1000010110010000000000000000000;
parameter    ap_const_lv32_42700000 = 32'b1000010011100000000000000000000;
parameter    ap_const_lv32_428A0000 = 32'b1000010100010100000000000000000;
parameter    ap_const_lv32_42A00000 = 32'b1000010101000000000000000000000;
parameter    ap_const_lv32_42E20000 = 32'b1000010111000100000000000000000;
parameter    ap_const_lv32_42F00000 = 32'b1000010111100000000000000000000;
parameter    ap_const_lv32_42740000 = 32'b1000010011101000000000000000000;
parameter    ap_const_lv32_42780000 = 32'b1000010011110000000000000000000;
parameter    ap_const_lv32_429A0000 = 32'b1000010100110100000000000000000;
parameter    ap_const_lv32_42CA0000 = 32'b1000010110010100000000000000000;
parameter    ap_const_lv32_42C60000 = 32'b1000010110001100000000000000000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] A_dout;
input   A_empty_n;
output   A_read;
output  [31:0] C_din;
input   C_full_n;
output   C_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_read;
reg C_write;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm = 10'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_29;
reg   [3:0] i_0_i_i_reg_149;
reg   [31:0] reg_165;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_2;
reg    ap_sig_bdd_53;
reg   [0:0] exitcond1_i_i_reg_382;
reg    ap_sig_bdd_60;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond1_i_i_reg_382_pp0_it1;
reg    ap_sig_bdd_68;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_sig_cseq_ST_pp0_stg5_fsm_6;
reg    ap_sig_bdd_81;
reg   [31:0] reg_170;
reg    ap_sig_cseq_ST_pp0_stg2_fsm_3;
reg    ap_sig_bdd_92;
reg    ap_sig_cseq_ST_pp0_stg6_fsm_7;
reg    ap_sig_bdd_101;
reg    ap_sig_bdd_105;
reg   [31:0] reg_175;
reg    ap_sig_cseq_ST_pp0_stg3_fsm_4;
reg    ap_sig_bdd_117;
reg    ap_sig_cseq_ST_pp0_stg7_fsm_8;
reg    ap_sig_bdd_126;
reg   [31:0] reg_180;
reg    ap_sig_cseq_ST_pp0_stg4_fsm_5;
reg    ap_sig_bdd_137;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_146;
wire   [31:0] grp_fu_161_p2;
reg   [31:0] reg_185;
wire   [0:0] exitcond1_i_i_fu_190_p2;
wire   [3:0] i_fu_196_p2;
reg   [3:0] i_reg_386;
wire   [2:0] tmp_25_fu_202_p1;
reg   [2:0] tmp_25_reg_391;
reg   [2:0] ap_reg_ppstg_tmp_25_reg_391_pp0_it1;
wire   [31:0] tmp_s_fu_206_p10;
wire   [31:0] tmp_18_fu_228_p10;
wire   [31:0] tmp_19_fu_250_p10;
wire   [31:0] tmp_20_fu_272_p10;
wire   [31:0] tmp_21_fu_294_p10;
wire   [31:0] tmp_22_fu_316_p10;
wire   [31:0] tmp_23_fu_338_p10;
wire   [31:0] tmp_24_fu_360_p10;
reg    ap_sig_bdd_197;
reg   [3:0] i_0_i_i_phi_fu_153_p4;
reg   [31:0] grp_fu_161_p0;
reg   [31:0] grp_fu_161_p1;
wire   [31:0] tmp_s_fu_206_p1;
wire   [31:0] tmp_s_fu_206_p2;
wire   [31:0] tmp_s_fu_206_p3;
wire   [31:0] tmp_s_fu_206_p4;
wire   [31:0] tmp_s_fu_206_p5;
wire   [31:0] tmp_s_fu_206_p6;
wire   [31:0] tmp_s_fu_206_p7;
wire   [31:0] tmp_s_fu_206_p8;
wire   [2:0] tmp_s_fu_206_p9;
wire   [31:0] tmp_18_fu_228_p1;
wire   [31:0] tmp_18_fu_228_p2;
wire   [31:0] tmp_18_fu_228_p3;
wire   [31:0] tmp_18_fu_228_p4;
wire   [31:0] tmp_18_fu_228_p5;
wire   [31:0] tmp_18_fu_228_p6;
wire   [31:0] tmp_18_fu_228_p7;
wire   [31:0] tmp_18_fu_228_p8;
wire   [2:0] tmp_18_fu_228_p9;
wire   [31:0] tmp_19_fu_250_p1;
wire   [31:0] tmp_19_fu_250_p2;
wire   [31:0] tmp_19_fu_250_p3;
wire   [31:0] tmp_19_fu_250_p4;
wire   [31:0] tmp_19_fu_250_p5;
wire   [31:0] tmp_19_fu_250_p6;
wire   [31:0] tmp_19_fu_250_p7;
wire   [31:0] tmp_19_fu_250_p8;
wire   [2:0] tmp_19_fu_250_p9;
wire   [31:0] tmp_20_fu_272_p1;
wire   [31:0] tmp_20_fu_272_p2;
wire   [31:0] tmp_20_fu_272_p3;
wire   [31:0] tmp_20_fu_272_p4;
wire   [31:0] tmp_20_fu_272_p5;
wire   [31:0] tmp_20_fu_272_p6;
wire   [31:0] tmp_20_fu_272_p7;
wire   [31:0] tmp_20_fu_272_p8;
wire   [2:0] tmp_20_fu_272_p9;
wire   [31:0] tmp_21_fu_294_p1;
wire   [31:0] tmp_21_fu_294_p2;
wire   [31:0] tmp_21_fu_294_p3;
wire   [31:0] tmp_21_fu_294_p4;
wire   [31:0] tmp_21_fu_294_p5;
wire   [31:0] tmp_21_fu_294_p6;
wire   [31:0] tmp_21_fu_294_p7;
wire   [31:0] tmp_21_fu_294_p8;
wire   [2:0] tmp_21_fu_294_p9;
wire   [31:0] tmp_22_fu_316_p1;
wire   [31:0] tmp_22_fu_316_p2;
wire   [31:0] tmp_22_fu_316_p3;
wire   [31:0] tmp_22_fu_316_p4;
wire   [31:0] tmp_22_fu_316_p5;
wire   [31:0] tmp_22_fu_316_p6;
wire   [31:0] tmp_22_fu_316_p7;
wire   [31:0] tmp_22_fu_316_p8;
wire   [2:0] tmp_22_fu_316_p9;
wire   [31:0] tmp_23_fu_338_p1;
wire   [31:0] tmp_23_fu_338_p2;
wire   [31:0] tmp_23_fu_338_p3;
wire   [31:0] tmp_23_fu_338_p4;
wire   [31:0] tmp_23_fu_338_p5;
wire   [31:0] tmp_23_fu_338_p6;
wire   [31:0] tmp_23_fu_338_p7;
wire   [31:0] tmp_23_fu_338_p8;
wire   [2:0] tmp_23_fu_338_p9;
wire   [31:0] tmp_24_fu_360_p1;
wire   [31:0] tmp_24_fu_360_p2;
wire   [31:0] tmp_24_fu_360_p3;
wire   [31:0] tmp_24_fu_360_p4;
wire   [31:0] tmp_24_fu_360_p5;
wire   [31:0] tmp_24_fu_360_p6;
wire   [31:0] tmp_24_fu_360_p7;
wire   [31:0] tmp_24_fu_360_p8;
wire   [2:0] tmp_24_fu_360_p9;
reg    grp_fu_161_ce;
reg    ap_sig_cseq_ST_st16_fsm_9;
reg    ap_sig_bdd_425;
reg   [9:0] ap_NS_fsm;


Accelerator_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Accelerator_fmul_32ns_32ns_32_4_max_dsp_U82(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_161_p0 ),
    .din1( grp_fu_161_p1 ),
    .ce( grp_fu_161_ce ),
    .dout( grp_fu_161_p2 )
);

Accelerator_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
Accelerator_mux_8to1_sel3_32_1_U83(
    .din1( tmp_s_fu_206_p1 ),
    .din2( tmp_s_fu_206_p2 ),
    .din3( tmp_s_fu_206_p3 ),
    .din4( tmp_s_fu_206_p4 ),
    .din5( tmp_s_fu_206_p5 ),
    .din6( tmp_s_fu_206_p6 ),
    .din7( tmp_s_fu_206_p7 ),
    .din8( tmp_s_fu_206_p8 ),
    .din9( tmp_s_fu_206_p9 ),
    .dout( tmp_s_fu_206_p10 )
);

Accelerator_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
Accelerator_mux_8to1_sel3_32_1_U84(
    .din1( tmp_18_fu_228_p1 ),
    .din2( tmp_18_fu_228_p2 ),
    .din3( tmp_18_fu_228_p3 ),
    .din4( tmp_18_fu_228_p4 ),
    .din5( tmp_18_fu_228_p5 ),
    .din6( tmp_18_fu_228_p6 ),
    .din7( tmp_18_fu_228_p7 ),
    .din8( tmp_18_fu_228_p8 ),
    .din9( tmp_18_fu_228_p9 ),
    .dout( tmp_18_fu_228_p10 )
);

Accelerator_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
Accelerator_mux_8to1_sel3_32_1_U85(
    .din1( tmp_19_fu_250_p1 ),
    .din2( tmp_19_fu_250_p2 ),
    .din3( tmp_19_fu_250_p3 ),
    .din4( tmp_19_fu_250_p4 ),
    .din5( tmp_19_fu_250_p5 ),
    .din6( tmp_19_fu_250_p6 ),
    .din7( tmp_19_fu_250_p7 ),
    .din8( tmp_19_fu_250_p8 ),
    .din9( tmp_19_fu_250_p9 ),
    .dout( tmp_19_fu_250_p10 )
);

Accelerator_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
Accelerator_mux_8to1_sel3_32_1_U86(
    .din1( tmp_20_fu_272_p1 ),
    .din2( tmp_20_fu_272_p2 ),
    .din3( tmp_20_fu_272_p3 ),
    .din4( tmp_20_fu_272_p4 ),
    .din5( tmp_20_fu_272_p5 ),
    .din6( tmp_20_fu_272_p6 ),
    .din7( tmp_20_fu_272_p7 ),
    .din8( tmp_20_fu_272_p8 ),
    .din9( tmp_20_fu_272_p9 ),
    .dout( tmp_20_fu_272_p10 )
);

Accelerator_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
Accelerator_mux_8to1_sel3_32_1_U87(
    .din1( tmp_21_fu_294_p1 ),
    .din2( tmp_21_fu_294_p2 ),
    .din3( tmp_21_fu_294_p3 ),
    .din4( tmp_21_fu_294_p4 ),
    .din5( tmp_21_fu_294_p5 ),
    .din6( tmp_21_fu_294_p6 ),
    .din7( tmp_21_fu_294_p7 ),
    .din8( tmp_21_fu_294_p8 ),
    .din9( tmp_21_fu_294_p9 ),
    .dout( tmp_21_fu_294_p10 )
);

Accelerator_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
Accelerator_mux_8to1_sel3_32_1_U88(
    .din1( tmp_22_fu_316_p1 ),
    .din2( tmp_22_fu_316_p2 ),
    .din3( tmp_22_fu_316_p3 ),
    .din4( tmp_22_fu_316_p4 ),
    .din5( tmp_22_fu_316_p5 ),
    .din6( tmp_22_fu_316_p6 ),
    .din7( tmp_22_fu_316_p7 ),
    .din8( tmp_22_fu_316_p8 ),
    .din9( tmp_22_fu_316_p9 ),
    .dout( tmp_22_fu_316_p10 )
);

Accelerator_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
Accelerator_mux_8to1_sel3_32_1_U89(
    .din1( tmp_23_fu_338_p1 ),
    .din2( tmp_23_fu_338_p2 ),
    .din3( tmp_23_fu_338_p3 ),
    .din4( tmp_23_fu_338_p4 ),
    .din5( tmp_23_fu_338_p5 ),
    .din6( tmp_23_fu_338_p6 ),
    .din7( tmp_23_fu_338_p7 ),
    .din8( tmp_23_fu_338_p8 ),
    .din9( tmp_23_fu_338_p9 ),
    .dout( tmp_23_fu_338_p10 )
);

Accelerator_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
Accelerator_mux_8to1_sel3_32_1_U90(
    .din1( tmp_24_fu_360_p1 ),
    .din2( tmp_24_fu_360_p2 ),
    .din3( tmp_24_fu_360_p3 ),
    .din4( tmp_24_fu_360_p4 ),
    .din5( tmp_24_fu_360_p5 ),
    .din6( tmp_24_fu_360_p6 ),
    .din7( tmp_24_fu_360_p7 ),
    .din8( tmp_24_fu_360_p8 ),
    .din9( tmp_24_fu_360_p9 ),
    .dout( tmp_24_fu_360_p10 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_9)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_105) & ~(ap_const_lv1_0 == exitcond1_i_i_fu_190_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_197)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((exitcond1_i_i_reg_382 == ap_const_lv1_0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_105) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_197) | (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_105) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8) & ~(exitcond1_i_i_reg_382 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((exitcond1_i_i_reg_382 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_105))) begin
        i_0_i_i_reg_149 <= i_reg_386;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_197)) begin
        i_0_i_i_reg_149 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_105))) begin
        ap_reg_ppstg_exitcond1_i_i_reg_382_pp0_it1 <= exitcond1_i_i_reg_382;
        ap_reg_ppstg_tmp_25_reg_391_pp0_it1 <= tmp_25_reg_391;
        exitcond1_i_i_reg_382 <= exitcond1_i_i_fu_190_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_105))) begin
        i_reg_386 <= i_fu_196_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (exitcond1_i_i_reg_382 == ap_const_lv1_0) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) | ((exitcond1_i_i_reg_382 == ap_const_lv1_0) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6)))) begin
        reg_165 <= A_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((exitcond1_i_i_reg_382 == ap_const_lv1_0) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((exitcond1_i_i_reg_382 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_7) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_105)))) begin
        reg_170 <= A_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((exitcond1_i_i_reg_382 == ap_const_lv1_0) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) | ((exitcond1_i_i_reg_382 == ap_const_lv1_0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_105) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8)))) begin
        reg_175 <= A_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((exitcond1_i_i_reg_382 == ap_const_lv1_0) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5)) | ((exitcond1_i_i_reg_382 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_105)))) begin
        reg_180 <= A_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((exitcond1_i_i_reg_382 == ap_const_lv1_0) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6)) | ((exitcond1_i_i_reg_382 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_7) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_105)) | ((exitcond1_i_i_reg_382 == ap_const_lv1_0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_105) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8)) | ((exitcond1_i_i_reg_382 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_105)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_i_reg_382_pp0_it1) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_i_reg_382_pp0_it1) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_i_reg_382_pp0_it1) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_i_reg_382_pp0_it1) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5)))) begin
        reg_185 <= grp_fu_161_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_105) & (ap_const_lv1_0 == exitcond1_i_i_fu_190_p2))) begin
        tmp_25_reg_391 <= tmp_25_fu_202_p1;
    end
end

/// A_read assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or exitcond1_i_i_reg_382 or ap_sig_bdd_60 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_68 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg6_fsm_7 or ap_sig_bdd_105 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or ap_sig_cseq_ST_pp0_stg7_fsm_8 or ap_sig_cseq_ST_pp0_stg4_fsm_5 or ap_sig_cseq_ST_pp0_stg0_fsm_1)
begin
    if ((((exitcond1_i_i_reg_382 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_105)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (exitcond1_i_i_reg_382 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) | ((exitcond1_i_i_reg_382 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((exitcond1_i_i_reg_382 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) | ((exitcond1_i_i_reg_382 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5)) | ((exitcond1_i_i_reg_382 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6)) | ((exitcond1_i_i_reg_382 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_7) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_105)) | ((exitcond1_i_i_reg_382 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_105) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8)))) begin
        A_read = ap_const_logic_1;
    end else begin
        A_read = ap_const_logic_0;
    end
end

/// C_write assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or exitcond1_i_i_reg_382 or ap_sig_bdd_60 or ap_reg_ppiten_pp0_it0 or ap_reg_ppstg_exitcond1_i_i_reg_382_pp0_it1 or ap_sig_bdd_68 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg6_fsm_7 or ap_sig_bdd_105 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or ap_sig_cseq_ST_pp0_stg7_fsm_8 or ap_sig_cseq_ST_pp0_stg4_fsm_5 or ap_sig_cseq_ST_pp0_stg0_fsm_1)
begin
    if ((((exitcond1_i_i_reg_382 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_105)) | ((exitcond1_i_i_reg_382 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_7) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_105)) | ((exitcond1_i_i_reg_382 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_105) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_i_reg_382_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_i_reg_382_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_i_reg_382_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_i_reg_382_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_i_reg_382_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6)))) begin
        C_write = ap_const_logic_1;
    end else begin
        C_write = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st16_fsm_9)
begin
    if (((ap_const_logic_1 == ap_done_reg) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_9))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st16_fsm_9)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_9)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. ///
always @ (ap_sig_bdd_146)
begin
    if (ap_sig_bdd_146) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg1_fsm_2 assign process. ///
always @ (ap_sig_bdd_53)
begin
    if (ap_sig_bdd_53) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg2_fsm_3 assign process. ///
always @ (ap_sig_bdd_92)
begin
    if (ap_sig_bdd_92) begin
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg3_fsm_4 assign process. ///
always @ (ap_sig_bdd_117)
begin
    if (ap_sig_bdd_117) begin
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg4_fsm_5 assign process. ///
always @ (ap_sig_bdd_137)
begin
    if (ap_sig_bdd_137) begin
        ap_sig_cseq_ST_pp0_stg4_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg4_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg5_fsm_6 assign process. ///
always @ (ap_sig_bdd_81)
begin
    if (ap_sig_bdd_81) begin
        ap_sig_cseq_ST_pp0_stg5_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg5_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg6_fsm_7 assign process. ///
always @ (ap_sig_bdd_101)
begin
    if (ap_sig_bdd_101) begin
        ap_sig_cseq_ST_pp0_stg6_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg6_fsm_7 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg7_fsm_8 assign process. ///
always @ (ap_sig_bdd_126)
begin
    if (ap_sig_bdd_126) begin
        ap_sig_cseq_ST_pp0_stg7_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg7_fsm_8 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_9 assign process. ///
always @ (ap_sig_bdd_425)
begin
    if (ap_sig_bdd_425) begin
        ap_sig_cseq_ST_st16_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_29)
begin
    if (ap_sig_bdd_29) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// grp_fu_161_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_bdd_60 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_68 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg6_fsm_7 or ap_sig_bdd_105 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or ap_sig_cseq_ST_pp0_stg7_fsm_8 or ap_sig_cseq_ST_pp0_stg4_fsm_5 or ap_sig_cseq_ST_pp0_stg0_fsm_1)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) | (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6)) | (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_7) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_105)) | (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) | (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_105) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8)) | (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_105)))) begin
        grp_fu_161_ce = ap_const_logic_1;
    end else begin
        grp_fu_161_ce = ap_const_logic_0;
    end
end

/// grp_fu_161_p0 assign process. ///
always @ (reg_165 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or reg_170 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg6_fsm_7 or reg_175 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or ap_sig_cseq_ST_pp0_stg7_fsm_8 or reg_180 or ap_sig_cseq_ST_pp0_stg4_fsm_5 or ap_sig_cseq_ST_pp0_stg0_fsm_1)
begin
    if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        grp_fu_161_p0 = reg_180;
    end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5)))) begin
        grp_fu_161_p0 = reg_175;
    end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8)))) begin
        grp_fu_161_p0 = reg_170;
    end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_7)))) begin
        grp_fu_161_p0 = reg_165;
    end else begin
        grp_fu_161_p0 = 'bx;
    end
end

/// grp_fu_161_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg6_fsm_7 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or ap_sig_cseq_ST_pp0_stg7_fsm_8 or ap_sig_cseq_ST_pp0_stg4_fsm_5 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or tmp_s_fu_206_p10 or tmp_18_fu_228_p10 or tmp_19_fu_250_p10 or tmp_20_fu_272_p10 or tmp_21_fu_294_p10 or tmp_22_fu_316_p10 or tmp_23_fu_338_p10 or tmp_24_fu_360_p10)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        grp_fu_161_p1 = tmp_24_fu_360_p10;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        grp_fu_161_p1 = tmp_23_fu_338_p10;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg7_fsm_8))) begin
        grp_fu_161_p1 = tmp_22_fu_316_p10;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg6_fsm_7))) begin
        grp_fu_161_p1 = tmp_21_fu_294_p10;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6))) begin
        grp_fu_161_p1 = tmp_20_fu_272_p10;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg4_fsm_5))) begin
        grp_fu_161_p1 = tmp_19_fu_250_p10;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4))) begin
        grp_fu_161_p1 = tmp_18_fu_228_p10;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3))) begin
        grp_fu_161_p1 = tmp_s_fu_206_p10;
    end else begin
        grp_fu_161_p1 = 'bx;
    end
end

/// i_0_i_i_phi_fu_153_p4 assign process. ///
always @ (i_0_i_i_reg_149 or exitcond1_i_i_reg_382 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or i_reg_386)
begin
    if (((exitcond1_i_i_reg_382 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1))) begin
        i_0_i_i_phi_fu_153_p4 = i_reg_386;
    end else begin
        i_0_i_i_phi_fu_153_p4 = i_0_i_i_reg_149;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or ap_sig_bdd_60 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_68 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg5_fsm_6 or ap_sig_bdd_105 or exitcond1_i_i_fu_190_p2 or ap_sig_bdd_197)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_197) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_105) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_105) & ~(ap_const_lv1_0 == exitcond1_i_i_fu_190_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_105) & ~(ap_const_lv1_0 == exitcond1_i_i_fu_190_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st16_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end
        end
        ap_ST_pp0_stg1_fsm_2 : 
        begin
            if (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            end
        end
        ap_ST_pp0_stg2_fsm_3 : 
        begin
            if (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg3_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_3;
            end
        end
        ap_ST_pp0_stg3_fsm_4 : 
        begin
            if (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg4_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg3_fsm_4;
            end
        end
        ap_ST_pp0_stg4_fsm_5 : 
        begin
            if (~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg5_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg4_fsm_5;
            end
        end
        ap_ST_pp0_stg5_fsm_6 : 
        begin
            if ((~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it0)))) begin
                ap_NS_fsm = ap_ST_pp0_stg6_fsm_7;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_60 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_68 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg5_fsm_6) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
                ap_NS_fsm = ap_ST_st16_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg5_fsm_6;
            end
        end
        ap_ST_pp0_stg6_fsm_7 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_105)) begin
                ap_NS_fsm = ap_ST_pp0_stg7_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg6_fsm_7;
            end
        end
        ap_ST_pp0_stg7_fsm_8 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ap_sig_bdd_105)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg7_fsm_8;
            end
        end
        ap_ST_st16_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_din = reg_185;

/// ap_sig_bdd_101 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_101 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_105 assign process. ///
always @ (A_empty_n or C_full_n or exitcond1_i_i_reg_382)
begin
    ap_sig_bdd_105 = (((A_empty_n == ap_const_logic_0) & (exitcond1_i_i_reg_382 == ap_const_lv1_0)) | ((exitcond1_i_i_reg_382 == ap_const_lv1_0) & (C_full_n == ap_const_logic_0)));
end

/// ap_sig_bdd_117 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_117 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_126 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_126 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_137 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_137 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_146 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_146 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_197 assign process. ///
always @ (ap_start or ap_done_reg)
begin
    ap_sig_bdd_197 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_29 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_29 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_425 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_425 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_53 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_53 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_60 assign process. ///
always @ (A_empty_n or exitcond1_i_i_reg_382)
begin
    ap_sig_bdd_60 = ((A_empty_n == ap_const_logic_0) & (exitcond1_i_i_reg_382 == ap_const_lv1_0));
end

/// ap_sig_bdd_68 assign process. ///
always @ (C_full_n or ap_reg_ppstg_exitcond1_i_i_reg_382_pp0_it1)
begin
    ap_sig_bdd_68 = ((C_full_n == ap_const_logic_0) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_i_i_reg_382_pp0_it1));
end

/// ap_sig_bdd_81 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_81 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_92 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_92 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end
assign exitcond1_i_i_fu_190_p2 = (i_0_i_i_phi_fu_153_p4 == ap_const_lv4_8? 1'b1: 1'b0);
assign i_fu_196_p2 = (i_0_i_i_phi_fu_153_p4 + ap_const_lv4_1);
assign tmp_18_fu_228_p1 = ap_const_lv32_41300000;
assign tmp_18_fu_228_p2 = ap_const_lv32_41400000;
assign tmp_18_fu_228_p3 = ap_const_lv32_41500000;
assign tmp_18_fu_228_p4 = ap_const_lv32_41880000;
assign tmp_18_fu_228_p5 = ap_const_lv32_41B00000;
assign tmp_18_fu_228_p6 = ap_const_lv32_420C0000;
assign tmp_18_fu_228_p7 = ap_const_lv32_42800000;
assign tmp_18_fu_228_p8 = ap_const_lv32_42B80000;
assign tmp_18_fu_228_p9 = tmp_25_reg_391;
assign tmp_19_fu_250_p1 = ap_const_lv32_41200000;
assign tmp_19_fu_250_p2 = ap_const_lv32_41600000;
assign tmp_19_fu_250_p3 = ap_const_lv32_41800000;
assign tmp_19_fu_250_p4 = ap_const_lv32_41B00000;
assign tmp_19_fu_250_p5 = ap_const_lv32_42140000;
assign tmp_19_fu_250_p6 = ap_const_lv32_425C0000;
assign tmp_19_fu_250_p7 = ap_const_lv32_429C0000;
assign tmp_19_fu_250_p8 = ap_const_lv32_42BE0000;
assign tmp_19_fu_250_p9 = tmp_25_reg_391;
assign tmp_20_fu_272_p1 = ap_const_lv32_41800000;
assign tmp_20_fu_272_p2 = ap_const_lv32_41980000;
assign tmp_20_fu_272_p3 = ap_const_lv32_41C00000;
assign tmp_20_fu_272_p4 = ap_const_lv32_41E80000;
assign tmp_20_fu_272_p5 = ap_const_lv32_42600000;
assign tmp_20_fu_272_p6 = ap_const_lv32_42800000;
assign tmp_20_fu_272_p7 = ap_const_lv32_42AE0000;
assign tmp_20_fu_272_p8 = ap_const_lv32_42C40000;
assign tmp_20_fu_272_p9 = tmp_25_reg_391;
assign tmp_21_fu_294_p1 = ap_const_lv32_41C00000;
assign tmp_21_fu_294_p2 = ap_const_lv32_41D00000;
assign tmp_21_fu_294_p3 = ap_const_lv32_42200000;
assign tmp_21_fu_294_p4 = ap_const_lv32_424C0000;
assign tmp_21_fu_294_p5 = ap_const_lv32_42880000;
assign tmp_21_fu_294_p6 = ap_const_lv32_42A20000;
assign tmp_21_fu_294_p7 = ap_const_lv32_42CE0000;
assign tmp_21_fu_294_p8 = ap_const_lv32_42E00000;
assign tmp_21_fu_294_p9 = tmp_25_reg_391;
assign tmp_22_fu_316_p1 = ap_const_lv32_42200000;
assign tmp_22_fu_316_p2 = ap_const_lv32_42680000;
assign tmp_22_fu_316_p3 = ap_const_lv32_42640000;
assign tmp_22_fu_316_p4 = ap_const_lv32_42AE0000;
assign tmp_22_fu_316_p5 = ap_const_lv32_42DA0000;
assign tmp_22_fu_316_p6 = ap_const_lv32_42D00000;
assign tmp_22_fu_316_p7 = ap_const_lv32_42F20000;
assign tmp_22_fu_316_p8 = ap_const_lv32_42C80000;
assign tmp_22_fu_316_p9 = tmp_25_reg_391;
assign tmp_23_fu_338_p1 = ap_const_lv32_424C0000;
assign tmp_23_fu_338_p2 = ap_const_lv32_42700000;
assign tmp_23_fu_338_p3 = ap_const_lv32_428A0000;
assign tmp_23_fu_338_p4 = ap_const_lv32_42A00000;
assign tmp_23_fu_338_p5 = ap_const_lv32_42CE0000;
assign tmp_23_fu_338_p6 = ap_const_lv32_42E20000;
assign tmp_23_fu_338_p7 = ap_const_lv32_42F00000;
assign tmp_23_fu_338_p8 = ap_const_lv32_42CE0000;
assign tmp_23_fu_338_p9 = tmp_25_reg_391;
assign tmp_24_fu_360_p1 = ap_const_lv32_42740000;
assign tmp_24_fu_360_p2 = ap_const_lv32_425C0000;
assign tmp_24_fu_360_p3 = ap_const_lv32_42600000;
assign tmp_24_fu_360_p4 = ap_const_lv32_42780000;
assign tmp_24_fu_360_p5 = ap_const_lv32_429A0000;
assign tmp_24_fu_360_p6 = ap_const_lv32_42B80000;
assign tmp_24_fu_360_p7 = ap_const_lv32_42CA0000;
assign tmp_24_fu_360_p8 = ap_const_lv32_42C60000;
assign tmp_24_fu_360_p9 = ap_reg_ppstg_tmp_25_reg_391_pp0_it1;
assign tmp_25_fu_202_p1 = i_0_i_i_phi_fu_153_p4[2:0];
assign tmp_s_fu_206_p1 = ap_const_lv32_41800000;
assign tmp_s_fu_206_p2 = ap_const_lv32_41400000;
assign tmp_s_fu_206_p3 = ap_const_lv32_41600000;
assign tmp_s_fu_206_p4 = ap_const_lv32_41600000;
assign tmp_s_fu_206_p5 = ap_const_lv32_41900000;
assign tmp_s_fu_206_p6 = ap_const_lv32_41C00000;
assign tmp_s_fu_206_p7 = ap_const_lv32_42440000;
assign tmp_s_fu_206_p8 = ap_const_lv32_42900000;
assign tmp_s_fu_206_p9 = tmp_25_reg_391;


endmodule //Accelerator_DOT_Multiply_Loop_row_proc

