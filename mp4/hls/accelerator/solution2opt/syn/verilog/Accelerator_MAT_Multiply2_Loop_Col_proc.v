// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Accelerator_MAT_Multiply2_Loop_Col_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        A_cached_row_address0,
        A_cached_row_ce0,
        A_cached_row_q0,
        A_cached_row_address1,
        A_cached_row_ce1,
        A_cached_row_q1,
        B_0_address0,
        B_0_ce0,
        B_0_q0,
        B_1_address0,
        B_1_ce0,
        B_1_q0,
        B_2_address0,
        B_2_ce0,
        B_2_q0,
        B_3_address0,
        B_3_ce0,
        B_3_q0,
        B_4_address0,
        B_4_ce0,
        B_4_q0,
        B_5_address0,
        B_5_ce0,
        B_5_q0,
        B_6_address0,
        B_6_ce0,
        B_6_q0,
        B_7_address0,
        B_7_ce0,
        B_7_q0,
        C_address0,
        C_ce0,
        C_we0,
        C_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 6'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 6'b10;
parameter    ap_ST_pp0_stg1_fsm_2 = 6'b100;
parameter    ap_ST_pp0_stg2_fsm_3 = 6'b1000;
parameter    ap_ST_pp0_stg3_fsm_4 = 6'b10000;
parameter    ap_ST_st48_fsm_5 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv64_6 = 64'b110;
parameter    ap_const_lv64_7 = 64'b111;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv28_4 = 28'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [2:0] A_cached_row_address0;
output   A_cached_row_ce0;
input  [31:0] A_cached_row_q0;
output  [2:0] A_cached_row_address1;
output   A_cached_row_ce1;
input  [31:0] A_cached_row_q1;
output  [2:0] B_0_address0;
output   B_0_ce0;
input  [31:0] B_0_q0;
output  [2:0] B_1_address0;
output   B_1_ce0;
input  [31:0] B_1_q0;
output  [2:0] B_2_address0;
output   B_2_ce0;
input  [31:0] B_2_q0;
output  [2:0] B_3_address0;
output   B_3_ce0;
input  [31:0] B_3_q0;
output  [2:0] B_4_address0;
output   B_4_ce0;
input  [31:0] B_4_q0;
output  [2:0] B_5_address0;
output   B_5_ce0;
input  [31:0] B_5_q0;
output  [2:0] B_6_address0;
output   B_6_ce0;
input  [31:0] B_6_q0;
output  [2:0] B_7_address0;
output   B_7_ce0;
input  [31:0] B_7_q0;
output  [5:0] C_address0;
output   C_ce0;
output   C_we0;
output  [31:0] C_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] A_cached_row_address0;
reg A_cached_row_ce0;
reg[2:0] A_cached_row_address1;
reg A_cached_row_ce1;
reg B_0_ce0;
reg B_1_ce0;
reg B_2_ce0;
reg B_3_ce0;
reg B_4_ce0;
reg B_5_ce0;
reg B_6_ce0;
reg B_7_ce0;
reg C_ce0;
reg C_we0;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm = 6'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_25;
reg   [3:0] j_reg_247;
reg   [3:0] ap_reg_ppstg_j_reg_247_pp0_it1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_104;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg    ap_reg_ppiten_pp0_it9 = 1'b0;
reg    ap_reg_ppiten_pp0_it10 = 1'b0;
reg    ap_reg_ppiten_pp0_it11 = 1'b0;
reg   [3:0] ap_reg_ppstg_j_reg_247_pp0_it2;
reg   [3:0] ap_reg_ppstg_j_reg_247_pp0_it3;
reg   [3:0] ap_reg_ppstg_j_reg_247_pp0_it4;
reg   [3:0] ap_reg_ppstg_j_reg_247_pp0_it5;
reg   [3:0] ap_reg_ppstg_j_reg_247_pp0_it6;
reg   [3:0] ap_reg_ppstg_j_reg_247_pp0_it7;
reg   [3:0] ap_reg_ppstg_j_reg_247_pp0_it8;
reg   [3:0] ap_reg_ppstg_j_reg_247_pp0_it9;
reg   [3:0] ap_reg_ppstg_j_reg_247_pp0_it10;
reg   [3:0] ap_reg_ppstg_j_reg_247_pp0_it11;
wire   [2:0] A_cached_row_addr_gep_fu_68_p3;
reg   [2:0] A_cached_row_addr_reg_318;
reg    ap_sig_bdd_145;
wire   [2:0] A_cached_row_addr_1_gep_fu_76_p3;
reg   [2:0] A_cached_row_addr_1_reg_323;
wire   [2:0] A_cached_row_addr_2_gep_fu_84_p3;
reg   [2:0] A_cached_row_addr_2_reg_328;
wire   [2:0] A_cached_row_addr_3_gep_fu_92_p3;
reg   [2:0] A_cached_row_addr_3_reg_333;
wire   [2:0] A_cached_row_addr_4_gep_fu_100_p3;
reg   [2:0] A_cached_row_addr_4_reg_338;
wire   [2:0] A_cached_row_addr_5_gep_fu_108_p3;
reg   [2:0] A_cached_row_addr_5_reg_343;
wire   [2:0] A_cached_row_addr_6_gep_fu_116_p3;
reg   [2:0] A_cached_row_addr_6_reg_348;
wire   [2:0] A_cached_row_addr_7_gep_fu_124_p3;
reg   [2:0] A_cached_row_addr_7_reg_353;
wire   [0:0] exitcond1_fu_287_p2;
reg   [0:0] exitcond1_reg_358;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_358_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_358_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_358_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_358_pp0_it4;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_358_pp0_it5;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_358_pp0_it6;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_358_pp0_it7;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_358_pp0_it8;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_358_pp0_it9;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_358_pp0_it10;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_358_pp0_it11;
wire   [3:0] j_1_fu_293_p2;
reg   [3:0] j_1_reg_362;
wire   [63:0] tmp_s_fu_299_p1;
reg   [63:0] tmp_s_reg_367;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_2;
reg    ap_sig_bdd_194;
reg    ap_sig_cseq_ST_pp0_stg2_fsm_3;
reg    ap_sig_bdd_211;
reg    ap_sig_cseq_ST_pp0_stg3_fsm_4;
reg    ap_sig_bdd_227;
wire   [31:0] grp_fu_269_p2;
reg   [31:0] tmp_4_reg_477;
wire   [31:0] grp_fu_275_p2;
reg   [31:0] tmp_4_1_reg_482;
reg   [31:0] ap_reg_ppstg_tmp_4_1_reg_482_pp0_it2;
reg   [31:0] tmp_4_2_reg_507;
reg   [31:0] ap_reg_ppstg_tmp_4_2_reg_507_pp0_it2;
reg   [31:0] ap_reg_ppstg_tmp_4_2_reg_507_pp0_it3;
reg   [31:0] tmp_4_3_reg_512;
reg   [31:0] ap_reg_ppstg_tmp_4_3_reg_512_pp0_it2;
reg   [31:0] ap_reg_ppstg_tmp_4_3_reg_512_pp0_it3;
reg   [31:0] ap_reg_ppstg_tmp_4_3_reg_512_pp0_it4;
reg   [31:0] tmp_4_4_reg_517;
reg   [31:0] ap_reg_ppstg_tmp_4_4_reg_517_pp0_it2;
reg   [31:0] ap_reg_ppstg_tmp_4_4_reg_517_pp0_it3;
reg   [31:0] ap_reg_ppstg_tmp_4_4_reg_517_pp0_it4;
reg   [31:0] ap_reg_ppstg_tmp_4_4_reg_517_pp0_it5;
reg   [31:0] tmp_4_5_reg_522;
reg   [31:0] ap_reg_ppstg_tmp_4_5_reg_522_pp0_it2;
reg   [31:0] ap_reg_ppstg_tmp_4_5_reg_522_pp0_it3;
reg   [31:0] ap_reg_ppstg_tmp_4_5_reg_522_pp0_it4;
reg   [31:0] ap_reg_ppstg_tmp_4_5_reg_522_pp0_it5;
reg   [31:0] ap_reg_ppstg_tmp_4_5_reg_522_pp0_it6;
reg   [31:0] tmp_4_6_reg_527;
reg   [31:0] ap_reg_ppstg_tmp_4_6_reg_527_pp0_it2;
reg   [31:0] ap_reg_ppstg_tmp_4_6_reg_527_pp0_it3;
reg   [31:0] ap_reg_ppstg_tmp_4_6_reg_527_pp0_it4;
reg   [31:0] ap_reg_ppstg_tmp_4_6_reg_527_pp0_it5;
reg   [31:0] ap_reg_ppstg_tmp_4_6_reg_527_pp0_it6;
reg   [31:0] ap_reg_ppstg_tmp_4_6_reg_527_pp0_it7;
reg   [31:0] tmp_4_7_reg_532;
reg   [31:0] ap_reg_ppstg_tmp_4_7_reg_532_pp0_it2;
reg   [31:0] ap_reg_ppstg_tmp_4_7_reg_532_pp0_it3;
reg   [31:0] ap_reg_ppstg_tmp_4_7_reg_532_pp0_it4;
reg   [31:0] ap_reg_ppstg_tmp_4_7_reg_532_pp0_it5;
reg   [31:0] ap_reg_ppstg_tmp_4_7_reg_532_pp0_it6;
reg   [31:0] ap_reg_ppstg_tmp_4_7_reg_532_pp0_it7;
reg   [31:0] ap_reg_ppstg_tmp_4_7_reg_532_pp0_it8;
reg   [31:0] ap_reg_ppstg_tmp_4_7_reg_532_pp0_it9;
wire   [31:0] grp_fu_260_p2;
reg   [31:0] temp_2_reg_537;
reg   [31:0] temp_2_1_reg_542;
reg   [31:0] temp_2_2_reg_547;
reg   [31:0] temp_2_3_reg_552;
wire   [31:0] grp_fu_265_p2;
reg   [31:0] temp_2_4_reg_557;
reg   [31:0] temp_2_5_reg_562;
reg   [31:0] temp_2_6_reg_567;
reg   [31:0] temp_2_7_reg_572;
reg   [3:0] j_phi_fu_251_p4;
wire   [63:0] tmp_fu_313_p1;
reg   [31:0] grp_fu_260_p0;
reg   [31:0] grp_fu_260_p1;
reg   [31:0] grp_fu_265_p0;
reg   [31:0] grp_fu_265_p1;
wire   [31:0] grp_fu_269_p0;
reg   [31:0] grp_fu_269_p1;
wire   [31:0] grp_fu_275_p0;
reg   [31:0] grp_fu_275_p1;
wire   [31:0] p_addr_fu_305_p3;
wire    grp_fu_260_ce;
wire    grp_fu_265_ce;
wire    grp_fu_269_ce;
wire    grp_fu_275_ce;
reg    ap_sig_cseq_ST_st48_fsm_5;
reg    ap_sig_bdd_425;
reg   [5:0] ap_NS_fsm;


Accelerator_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Accelerator_fadd_32ns_32ns_32_5_full_dsp_U31(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_260_p0 ),
    .din1( grp_fu_260_p1 ),
    .ce( grp_fu_260_ce ),
    .dout( grp_fu_260_p2 )
);

Accelerator_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Accelerator_fadd_32ns_32ns_32_5_full_dsp_U32(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_265_p0 ),
    .din1( grp_fu_265_p1 ),
    .ce( grp_fu_265_ce ),
    .dout( grp_fu_265_p2 )
);

Accelerator_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Accelerator_fmul_32ns_32ns_32_4_max_dsp_U33(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_269_p0 ),
    .din1( grp_fu_269_p1 ),
    .ce( grp_fu_269_ce ),
    .dout( grp_fu_269_p2 )
);

Accelerator_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Accelerator_fmul_32ns_32ns_32_4_max_dsp_U34(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_275_p0 ),
    .din1( grp_fu_275_p1 ),
    .ce( grp_fu_275_ce ),
    .dout( grp_fu_275_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_5)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond1_fu_287_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_145)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((exitcond1_reg_358 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_145) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & ~(exitcond1_reg_358 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it10
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
        end
    end
end

/// ap_reg_ppiten_pp0_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it11
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_145)) begin
            ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end
    end
end

/// ap_reg_ppiten_pp0_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end
    end
end

/// ap_reg_ppiten_pp0_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end
    end
end

/// ap_reg_ppiten_pp0_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
        end
    end
end

/// ap_reg_ppiten_pp0_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it9
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_145)) begin
        j_reg_247 <= ap_const_lv4_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_358 == ap_const_lv1_0))) begin
        j_reg_247 <= j_1_reg_362;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
        ap_reg_ppstg_exitcond1_reg_358_pp0_it1 <= exitcond1_reg_358;
        ap_reg_ppstg_exitcond1_reg_358_pp0_it10 <= ap_reg_ppstg_exitcond1_reg_358_pp0_it9;
        ap_reg_ppstg_exitcond1_reg_358_pp0_it11 <= ap_reg_ppstg_exitcond1_reg_358_pp0_it10;
        ap_reg_ppstg_exitcond1_reg_358_pp0_it2 <= ap_reg_ppstg_exitcond1_reg_358_pp0_it1;
        ap_reg_ppstg_exitcond1_reg_358_pp0_it3 <= ap_reg_ppstg_exitcond1_reg_358_pp0_it2;
        ap_reg_ppstg_exitcond1_reg_358_pp0_it4 <= ap_reg_ppstg_exitcond1_reg_358_pp0_it3;
        ap_reg_ppstg_exitcond1_reg_358_pp0_it5 <= ap_reg_ppstg_exitcond1_reg_358_pp0_it4;
        ap_reg_ppstg_exitcond1_reg_358_pp0_it6 <= ap_reg_ppstg_exitcond1_reg_358_pp0_it5;
        ap_reg_ppstg_exitcond1_reg_358_pp0_it7 <= ap_reg_ppstg_exitcond1_reg_358_pp0_it6;
        ap_reg_ppstg_exitcond1_reg_358_pp0_it8 <= ap_reg_ppstg_exitcond1_reg_358_pp0_it7;
        ap_reg_ppstg_exitcond1_reg_358_pp0_it9 <= ap_reg_ppstg_exitcond1_reg_358_pp0_it8;
        ap_reg_ppstg_j_reg_247_pp0_it1 <= j_reg_247;
        ap_reg_ppstg_j_reg_247_pp0_it10 <= ap_reg_ppstg_j_reg_247_pp0_it9;
        ap_reg_ppstg_j_reg_247_pp0_it11 <= ap_reg_ppstg_j_reg_247_pp0_it10;
        ap_reg_ppstg_j_reg_247_pp0_it2 <= ap_reg_ppstg_j_reg_247_pp0_it1;
        ap_reg_ppstg_j_reg_247_pp0_it3 <= ap_reg_ppstg_j_reg_247_pp0_it2;
        ap_reg_ppstg_j_reg_247_pp0_it4 <= ap_reg_ppstg_j_reg_247_pp0_it3;
        ap_reg_ppstg_j_reg_247_pp0_it5 <= ap_reg_ppstg_j_reg_247_pp0_it4;
        ap_reg_ppstg_j_reg_247_pp0_it6 <= ap_reg_ppstg_j_reg_247_pp0_it5;
        ap_reg_ppstg_j_reg_247_pp0_it7 <= ap_reg_ppstg_j_reg_247_pp0_it6;
        ap_reg_ppstg_j_reg_247_pp0_it8 <= ap_reg_ppstg_j_reg_247_pp0_it7;
        ap_reg_ppstg_j_reg_247_pp0_it9 <= ap_reg_ppstg_j_reg_247_pp0_it8;
        ap_reg_ppstg_tmp_4_1_reg_482_pp0_it2 <= tmp_4_1_reg_482;
        exitcond1_reg_358 <= exitcond1_fu_287_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) begin
        ap_reg_ppstg_tmp_4_2_reg_507_pp0_it2 <= tmp_4_2_reg_507;
        ap_reg_ppstg_tmp_4_2_reg_507_pp0_it3 <= ap_reg_ppstg_tmp_4_2_reg_507_pp0_it2;
        ap_reg_ppstg_tmp_4_3_reg_512_pp0_it2 <= tmp_4_3_reg_512;
        ap_reg_ppstg_tmp_4_3_reg_512_pp0_it3 <= ap_reg_ppstg_tmp_4_3_reg_512_pp0_it2;
        ap_reg_ppstg_tmp_4_3_reg_512_pp0_it4 <= ap_reg_ppstg_tmp_4_3_reg_512_pp0_it3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
        ap_reg_ppstg_tmp_4_4_reg_517_pp0_it2 <= tmp_4_4_reg_517;
        ap_reg_ppstg_tmp_4_4_reg_517_pp0_it3 <= ap_reg_ppstg_tmp_4_4_reg_517_pp0_it2;
        ap_reg_ppstg_tmp_4_4_reg_517_pp0_it4 <= ap_reg_ppstg_tmp_4_4_reg_517_pp0_it3;
        ap_reg_ppstg_tmp_4_4_reg_517_pp0_it5 <= ap_reg_ppstg_tmp_4_4_reg_517_pp0_it4;
        ap_reg_ppstg_tmp_4_5_reg_522_pp0_it2 <= tmp_4_5_reg_522;
        ap_reg_ppstg_tmp_4_5_reg_522_pp0_it3 <= ap_reg_ppstg_tmp_4_5_reg_522_pp0_it2;
        ap_reg_ppstg_tmp_4_5_reg_522_pp0_it4 <= ap_reg_ppstg_tmp_4_5_reg_522_pp0_it3;
        ap_reg_ppstg_tmp_4_5_reg_522_pp0_it5 <= ap_reg_ppstg_tmp_4_5_reg_522_pp0_it4;
        ap_reg_ppstg_tmp_4_5_reg_522_pp0_it6 <= ap_reg_ppstg_tmp_4_5_reg_522_pp0_it5;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
        ap_reg_ppstg_tmp_4_6_reg_527_pp0_it2 <= tmp_4_6_reg_527;
        ap_reg_ppstg_tmp_4_6_reg_527_pp0_it3 <= ap_reg_ppstg_tmp_4_6_reg_527_pp0_it2;
        ap_reg_ppstg_tmp_4_6_reg_527_pp0_it4 <= ap_reg_ppstg_tmp_4_6_reg_527_pp0_it3;
        ap_reg_ppstg_tmp_4_6_reg_527_pp0_it5 <= ap_reg_ppstg_tmp_4_6_reg_527_pp0_it4;
        ap_reg_ppstg_tmp_4_6_reg_527_pp0_it6 <= ap_reg_ppstg_tmp_4_6_reg_527_pp0_it5;
        ap_reg_ppstg_tmp_4_6_reg_527_pp0_it7 <= ap_reg_ppstg_tmp_4_6_reg_527_pp0_it6;
        ap_reg_ppstg_tmp_4_7_reg_532_pp0_it2 <= tmp_4_7_reg_532;
        ap_reg_ppstg_tmp_4_7_reg_532_pp0_it3 <= ap_reg_ppstg_tmp_4_7_reg_532_pp0_it2;
        ap_reg_ppstg_tmp_4_7_reg_532_pp0_it4 <= ap_reg_ppstg_tmp_4_7_reg_532_pp0_it3;
        ap_reg_ppstg_tmp_4_7_reg_532_pp0_it5 <= ap_reg_ppstg_tmp_4_7_reg_532_pp0_it4;
        ap_reg_ppstg_tmp_4_7_reg_532_pp0_it6 <= ap_reg_ppstg_tmp_4_7_reg_532_pp0_it5;
        ap_reg_ppstg_tmp_4_7_reg_532_pp0_it7 <= ap_reg_ppstg_tmp_4_7_reg_532_pp0_it6;
        ap_reg_ppstg_tmp_4_7_reg_532_pp0_it8 <= ap_reg_ppstg_tmp_4_7_reg_532_pp0_it7;
        ap_reg_ppstg_tmp_4_7_reg_532_pp0_it9 <= ap_reg_ppstg_tmp_4_7_reg_532_pp0_it8;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        j_1_reg_362 <= j_1_fu_293_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_reg_ppstg_exitcond1_reg_358_pp0_it3 == ap_const_lv1_0))) begin
        temp_2_1_reg_542 <= grp_fu_260_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_reg_ppstg_exitcond1_reg_358_pp0_it4 == ap_const_lv1_0))) begin
        temp_2_2_reg_547 <= grp_fu_260_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_reg_ppstg_exitcond1_reg_358_pp0_it5 == ap_const_lv1_0))) begin
        temp_2_3_reg_552 <= grp_fu_260_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond1_reg_358_pp0_it7 == ap_const_lv1_0))) begin
        temp_2_4_reg_557 <= grp_fu_265_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_reg_ppstg_exitcond1_reg_358_pp0_it8 == ap_const_lv1_0))) begin
        temp_2_5_reg_562 <= grp_fu_265_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_reg_ppstg_exitcond1_reg_358_pp0_it9 == ap_const_lv1_0))) begin
        temp_2_6_reg_567 <= grp_fu_265_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_reg_ppstg_exitcond1_reg_358_pp0_it10 == ap_const_lv1_0))) begin
        temp_2_7_reg_572 <= grp_fu_265_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond1_reg_358_pp0_it2 == ap_const_lv1_0))) begin
        temp_2_reg_537 <= grp_fu_260_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond1_reg_358 == ap_const_lv1_0))) begin
        tmp_4_1_reg_482 <= grp_fu_275_p2;
        tmp_4_reg_477 <= grp_fu_269_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond1_reg_358_pp0_it1 == ap_const_lv1_0))) begin
        tmp_4_2_reg_507 <= grp_fu_269_p2;
        tmp_4_3_reg_512 <= grp_fu_275_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3) & (ap_reg_ppstg_exitcond1_reg_358_pp0_it1 == ap_const_lv1_0))) begin
        tmp_4_4_reg_517 <= grp_fu_269_p2;
        tmp_4_5_reg_522 <= grp_fu_275_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4) & (ap_reg_ppstg_exitcond1_reg_358_pp0_it1 == ap_const_lv1_0))) begin
        tmp_4_6_reg_527 <= grp_fu_269_p2;
        tmp_4_7_reg_532 <= grp_fu_275_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond1_fu_287_p2 == ap_const_lv1_0))) begin
        tmp_s_reg_367[3 : 0] <= tmp_s_fu_299_p1[3 : 0];
    end
end

/// A_cached_row_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or A_cached_row_addr_reg_318 or A_cached_row_addr_2_reg_328 or A_cached_row_addr_4_reg_338 or A_cached_row_addr_6_reg_348 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            A_cached_row_address0 = A_cached_row_addr_6_reg_348;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
            A_cached_row_address0 = A_cached_row_addr_4_reg_338;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) begin
            A_cached_row_address0 = A_cached_row_addr_2_reg_328;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
            A_cached_row_address0 = A_cached_row_addr_reg_318;
        end else begin
            A_cached_row_address0 = 'bx;
        end
    end else begin
        A_cached_row_address0 = 'bx;
    end
end

/// A_cached_row_address1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or A_cached_row_addr_1_reg_323 or A_cached_row_addr_3_reg_333 or A_cached_row_addr_5_reg_343 or A_cached_row_addr_7_reg_353 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)) begin
            A_cached_row_address1 = A_cached_row_addr_7_reg_353;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) begin
            A_cached_row_address1 = A_cached_row_addr_5_reg_343;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) begin
            A_cached_row_address1 = A_cached_row_addr_3_reg_333;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
            A_cached_row_address1 = A_cached_row_addr_1_reg_323;
        end else begin
            A_cached_row_address1 = 'bx;
        end
    end else begin
        A_cached_row_address1 = 'bx;
    end
end

/// A_cached_row_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)))) begin
        A_cached_row_ce0 = ap_const_logic_1;
    end else begin
        A_cached_row_ce0 = ap_const_logic_0;
    end
end

/// A_cached_row_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4)))) begin
        A_cached_row_ce1 = ap_const_logic_1;
    end else begin
        A_cached_row_ce1 = ap_const_logic_0;
    end
end

/// B_0_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        B_0_ce0 = ap_const_logic_1;
    end else begin
        B_0_ce0 = ap_const_logic_0;
    end
end

/// B_1_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        B_1_ce0 = ap_const_logic_1;
    end else begin
        B_1_ce0 = ap_const_logic_0;
    end
end

/// B_2_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_2)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2))) begin
        B_2_ce0 = ap_const_logic_1;
    end else begin
        B_2_ce0 = ap_const_logic_0;
    end
end

/// B_3_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg1_fsm_2)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2))) begin
        B_3_ce0 = ap_const_logic_1;
    end else begin
        B_3_ce0 = ap_const_logic_0;
    end
end

/// B_4_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_3)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3))) begin
        B_4_ce0 = ap_const_logic_1;
    end else begin
        B_4_ce0 = ap_const_logic_0;
    end
end

/// B_5_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg2_fsm_3)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3))) begin
        B_5_ce0 = ap_const_logic_1;
    end else begin
        B_5_ce0 = ap_const_logic_0;
    end
end

/// B_6_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg3_fsm_4)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4))) begin
        B_6_ce0 = ap_const_logic_1;
    end else begin
        B_6_ce0 = ap_const_logic_0;
    end
end

/// B_7_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it0 or ap_sig_cseq_ST_pp0_stg3_fsm_4)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4))) begin
        B_7_ce0 = ap_const_logic_1;
    end else begin
        B_7_ce0 = ap_const_logic_0;
    end
end

/// C_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it11 or ap_sig_cseq_ST_pp0_stg1_fsm_2)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it11) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2))) begin
        C_ce0 = ap_const_logic_1;
    end else begin
        C_ce0 = ap_const_logic_0;
    end
end

/// C_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it11 or ap_reg_ppstg_exitcond1_reg_358_pp0_it11 or ap_sig_cseq_ST_pp0_stg1_fsm_2)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it11) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & (ap_reg_ppstg_exitcond1_reg_358_pp0_it11 == ap_const_lv1_0))) begin
        C_we0 = ap_const_logic_1;
    end else begin
        C_we0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st48_fsm_5)
begin
    if (((ap_const_logic_1 == ap_done_reg) | (ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_5))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st48_fsm_5)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_5)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. ///
always @ (ap_sig_bdd_104)
begin
    if (ap_sig_bdd_104) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg1_fsm_2 assign process. ///
always @ (ap_sig_bdd_194)
begin
    if (ap_sig_bdd_194) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg2_fsm_3 assign process. ///
always @ (ap_sig_bdd_211)
begin
    if (ap_sig_bdd_211) begin
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg3_fsm_4 assign process. ///
always @ (ap_sig_bdd_227)
begin
    if (ap_sig_bdd_227) begin
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_25)
begin
    if (ap_sig_bdd_25) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st48_fsm_5 assign process. ///
always @ (ap_sig_bdd_425)
begin
    if (ap_sig_bdd_425) begin
        ap_sig_cseq_ST_st48_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_5 = ap_const_logic_0;
    end
end

/// grp_fu_260_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppiten_pp0_it5 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or tmp_4_reg_477 or temp_2_reg_537 or temp_2_1_reg_542 or temp_2_2_reg_547)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5))) begin
        grp_fu_260_p0 = temp_2_2_reg_547;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4))) begin
        grp_fu_260_p0 = temp_2_1_reg_542;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3))) begin
        grp_fu_260_p0 = temp_2_reg_537;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2))) begin
        grp_fu_260_p0 = tmp_4_reg_477;
    end else begin
        grp_fu_260_p0 = 'bx;
    end
end

/// grp_fu_260_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_reg_ppiten_pp0_it5 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or ap_reg_ppstg_tmp_4_1_reg_482_pp0_it2 or ap_reg_ppstg_tmp_4_2_reg_507_pp0_it3 or ap_reg_ppstg_tmp_4_3_reg_512_pp0_it4)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it5))) begin
        grp_fu_260_p1 = ap_reg_ppstg_tmp_4_3_reg_512_pp0_it4;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4))) begin
        grp_fu_260_p1 = ap_reg_ppstg_tmp_4_2_reg_507_pp0_it3;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3))) begin
        grp_fu_260_p1 = ap_reg_ppstg_tmp_4_1_reg_482_pp0_it2;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2))) begin
        grp_fu_260_p1 = ap_const_lv32_0;
    end else begin
        grp_fu_260_p1 = 'bx;
    end
end

/// grp_fu_265_p0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it6 or ap_reg_ppiten_pp0_it7 or ap_reg_ppiten_pp0_it8 or ap_reg_ppiten_pp0_it10 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or temp_2_3_reg_552 or temp_2_4_reg_557 or temp_2_5_reg_562 or temp_2_6_reg_567)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it10))) begin
        grp_fu_265_p0 = temp_2_6_reg_567;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4))) begin
        grp_fu_265_p0 = temp_2_5_reg_562;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3))) begin
        grp_fu_265_p0 = temp_2_4_reg_557;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it6) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2))) begin
        grp_fu_265_p0 = temp_2_3_reg_552;
    end else begin
        grp_fu_265_p0 = 'bx;
    end
end

/// grp_fu_265_p1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it6 or ap_reg_ppiten_pp0_it7 or ap_reg_ppiten_pp0_it8 or ap_reg_ppiten_pp0_it10 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4 or ap_reg_ppstg_tmp_4_4_reg_517_pp0_it5 or ap_reg_ppstg_tmp_4_5_reg_522_pp0_it6 or ap_reg_ppstg_tmp_4_6_reg_527_pp0_it7 or ap_reg_ppstg_tmp_4_7_reg_532_pp0_it9)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it10))) begin
        grp_fu_265_p1 = ap_reg_ppstg_tmp_4_7_reg_532_pp0_it9;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it8) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4))) begin
        grp_fu_265_p1 = ap_reg_ppstg_tmp_4_6_reg_527_pp0_it7;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it7) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3))) begin
        grp_fu_265_p1 = ap_reg_ppstg_tmp_4_5_reg_522_pp0_it6;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it6) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2))) begin
        grp_fu_265_p1 = ap_reg_ppstg_tmp_4_4_reg_517_pp0_it5;
    end else begin
        grp_fu_265_p1 = 'bx;
    end
end

/// grp_fu_269_p1 assign process. ///
always @ (B_0_q0 or B_2_q0 or B_4_q0 or B_6_q0 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        grp_fu_269_p1 = B_6_q0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4))) begin
        grp_fu_269_p1 = B_4_q0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3))) begin
        grp_fu_269_p1 = B_2_q0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2))) begin
        grp_fu_269_p1 = B_0_q0;
    end else begin
        grp_fu_269_p1 = 'bx;
    end
end

/// grp_fu_275_p1 assign process. ///
always @ (B_1_q0 or B_3_q0 or B_5_q0 or B_7_q0 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg1_fsm_2 or ap_sig_cseq_ST_pp0_stg2_fsm_3 or ap_sig_cseq_ST_pp0_stg3_fsm_4)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        grp_fu_275_p1 = B_7_q0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg3_fsm_4))) begin
        grp_fu_275_p1 = B_5_q0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg2_fsm_3))) begin
        grp_fu_275_p1 = B_3_q0;
    end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2))) begin
        grp_fu_275_p1 = B_1_q0;
    end else begin
        grp_fu_275_p1 = 'bx;
    end
end

/// j_phi_fu_251_p4 assign process. ///
always @ (j_reg_247 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or exitcond1_reg_358 or j_1_reg_362)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond1_reg_358 == ap_const_lv1_0))) begin
        j_phi_fu_251_p4 = j_1_reg_362;
    end else begin
        j_phi_fu_251_p4 = j_reg_247;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it10 or ap_reg_ppiten_pp0_it11 or ap_sig_bdd_145 or exitcond1_fu_287_p2 or ap_sig_cseq_ST_pp0_stg1_fsm_2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_145) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond1_fu_287_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st48_fsm_5;
            end
        end
        ap_ST_pp0_stg1_fsm_2 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it11) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it10))) begin
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st48_fsm_5;
            end
        end
        ap_ST_pp0_stg2_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_4;
        end
        ap_ST_pp0_stg3_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
        end
        ap_ST_st48_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_cached_row_addr_1_gep_fu_76_p3 = ap_const_lv64_1;
assign A_cached_row_addr_2_gep_fu_84_p3 = ap_const_lv64_2;
assign A_cached_row_addr_3_gep_fu_92_p3 = ap_const_lv64_3;
assign A_cached_row_addr_4_gep_fu_100_p3 = ap_const_lv64_4;
assign A_cached_row_addr_5_gep_fu_108_p3 = ap_const_lv64_5;
assign A_cached_row_addr_6_gep_fu_116_p3 = ap_const_lv64_6;
assign A_cached_row_addr_7_gep_fu_124_p3 = ap_const_lv64_7;
assign A_cached_row_addr_gep_fu_68_p3 = ap_const_lv64_0;
assign B_0_address0 = tmp_s_fu_299_p1;
assign B_1_address0 = tmp_s_fu_299_p1;
assign B_2_address0 = tmp_s_reg_367;
assign B_3_address0 = tmp_s_reg_367;
assign B_4_address0 = tmp_s_reg_367;
assign B_5_address0 = tmp_s_reg_367;
assign B_6_address0 = tmp_s_reg_367;
assign B_7_address0 = tmp_s_reg_367;
assign C_address0 = tmp_fu_313_p1;
assign C_d0 = temp_2_7_reg_572;

/// ap_sig_bdd_104 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_104 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_145 assign process. ///
always @ (ap_start or ap_done_reg)
begin
    ap_sig_bdd_145 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_194 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_194 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_211 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_211 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_227 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_227 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_25 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_25 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_425 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_425 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end
assign exitcond1_fu_287_p2 = (j_phi_fu_251_p4 == ap_const_lv4_8? 1'b1: 1'b0);
assign grp_fu_260_ce = ap_const_logic_1;
assign grp_fu_265_ce = ap_const_logic_1;
assign grp_fu_269_ce = ap_const_logic_1;
assign grp_fu_269_p0 = A_cached_row_q0;
assign grp_fu_275_ce = ap_const_logic_1;
assign grp_fu_275_p0 = A_cached_row_q1;
assign j_1_fu_293_p2 = (j_phi_fu_251_p4 + ap_const_lv4_1);
assign p_addr_fu_305_p3 = {{ap_const_lv28_4}, {ap_reg_ppstg_j_reg_247_pp0_it11}};
assign tmp_fu_313_p1 = p_addr_fu_305_p3;
assign tmp_s_fu_299_p1 = j_phi_fu_251_p4;
always @ (posedge ap_clk)
begin
    A_cached_row_addr_reg_318[2:0] <= 3'b000;
    A_cached_row_addr_1_reg_323[2:0] <= 3'b001;
    A_cached_row_addr_2_reg_328[2:0] <= 3'b010;
    A_cached_row_addr_3_reg_333[2:0] <= 3'b011;
    A_cached_row_addr_4_reg_338[2:0] <= 3'b100;
    A_cached_row_addr_5_reg_343[2:0] <= 3'b101;
    A_cached_row_addr_6_reg_348[2:0] <= 3'b110;
    A_cached_row_addr_7_reg_353[2:0] <= 3'b111;
    tmp_s_reg_367[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end



endmodule //Accelerator_MAT_Multiply2_Loop_Col_proc

