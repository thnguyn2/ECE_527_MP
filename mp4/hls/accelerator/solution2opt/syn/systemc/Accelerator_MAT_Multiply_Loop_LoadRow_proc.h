// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _Accelerator_MAT_Multiply_Loop_LoadRow_proc_HH_
#define _Accelerator_MAT_Multiply_Loop_LoadRow_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Accelerator_MAT_Multiply_Loop_LoadRow_proc : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > B_dout;
    sc_in< sc_logic > B_empty_n;
    sc_out< sc_logic > B_read;
    sc_out< sc_lv<6> > B_cached_address0;
    sc_out< sc_logic > B_cached_ce0;
    sc_out< sc_logic > B_cached_we0;
    sc_out< sc_lv<32> > B_cached_d0;


    // Module declarations
    Accelerator_MAT_Multiply_Loop_LoadRow_proc(sc_module_name name);
    SC_HAS_PROCESS(Accelerator_MAT_Multiply_Loop_LoadRow_proc);

    ~Accelerator_MAT_Multiply_Loop_LoadRow_proc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_29;
    sc_signal< sc_lv<4> > i_0_i_i_reg_137;
    sc_signal< sc_lv<1> > exitcond4_i_i_fu_149_p2;
    sc_signal< sc_lv<1> > exitcond4_i_i_reg_299;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_1;
    sc_signal< bool > ap_sig_bdd_56;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< bool > ap_sig_bdd_64;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_lv<4> > i_fu_155_p2;
    sc_signal< sc_lv<4> > i_reg_303;
    sc_signal< sc_lv<7> > tmp_21_fu_161_p3;
    sc_signal< sc_lv<7> > tmp_21_reg_308;
    sc_signal< bool > ap_sig_bdd_81;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg7_fsm_8;
    sc_signal< bool > ap_sig_bdd_91;
    sc_signal< sc_lv<4> > i_0_i_i_phi_fu_141_p4;
    sc_signal< sc_lv<64> > tmp_22_fu_169_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg1_fsm_2;
    sc_signal< bool > ap_sig_bdd_113;
    sc_signal< sc_lv<64> > tmp_24_fu_186_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg2_fsm_3;
    sc_signal< bool > ap_sig_bdd_124;
    sc_signal< sc_lv<64> > tmp_25_fu_204_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg3_fsm_4;
    sc_signal< bool > ap_sig_bdd_135;
    sc_signal< sc_lv<64> > tmp_27_fu_222_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg4_fsm_5;
    sc_signal< bool > ap_sig_bdd_146;
    sc_signal< sc_lv<64> > tmp_29_fu_240_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg5_fsm_6;
    sc_signal< bool > ap_sig_bdd_157;
    sc_signal< sc_lv<64> > tmp_31_fu_258_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg6_fsm_7;
    sc_signal< bool > ap_sig_bdd_168;
    sc_signal< sc_lv<64> > tmp_33_fu_276_p1;
    sc_signal< sc_lv<64> > tmp_35_fu_294_p1;
    sc_signal< sc_lv<7> > tmp_23_fu_173_p2;
    sc_signal< sc_lv<32> > p_addr_fu_178_p3;
    sc_signal< sc_lv<7> > tmp_s_fu_191_p2;
    sc_signal< sc_lv<32> > p_addr9_fu_196_p3;
    sc_signal< sc_lv<7> > tmp_26_fu_209_p2;
    sc_signal< sc_lv<32> > p_addr1_fu_214_p3;
    sc_signal< sc_lv<7> > tmp_28_fu_227_p2;
    sc_signal< sc_lv<32> > p_addr2_fu_232_p3;
    sc_signal< sc_lv<7> > tmp_30_fu_245_p2;
    sc_signal< sc_lv<32> > p_addr3_fu_250_p3;
    sc_signal< sc_lv<7> > tmp_32_fu_263_p2;
    sc_signal< sc_lv<32> > p_addr4_fu_268_p3;
    sc_signal< sc_lv<7> > tmp_34_fu_281_p2;
    sc_signal< sc_lv<32> > p_addr5_fu_286_p3;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_9;
    sc_signal< bool > ap_sig_bdd_312;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_st1_fsm_0;
    static const sc_lv<10> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<10> ap_ST_pp0_stg1_fsm_2;
    static const sc_lv<10> ap_ST_pp0_stg2_fsm_3;
    static const sc_lv<10> ap_ST_pp0_stg3_fsm_4;
    static const sc_lv<10> ap_ST_pp0_stg4_fsm_5;
    static const sc_lv<10> ap_ST_pp0_stg5_fsm_6;
    static const sc_lv<10> ap_ST_pp0_stg6_fsm_7;
    static const sc_lv<10> ap_ST_pp0_stg7_fsm_8;
    static const sc_lv<10> ap_ST_st11_fsm_9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<25> ap_const_lv25_0;
    static const sc_lv<7> ap_const_lv7_2;
    static const sc_lv<7> ap_const_lv7_3;
    static const sc_lv<7> ap_const_lv7_4;
    static const sc_lv<7> ap_const_lv7_5;
    static const sc_lv<7> ap_const_lv7_6;
    static const sc_lv<7> ap_const_lv7_7;
    static const sc_lv<32> ap_const_lv32_9;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_B_cached_address0();
    void thread_B_cached_ce0();
    void thread_B_cached_d0();
    void thread_B_cached_we0();
    void thread_B_read();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_113();
    void thread_ap_sig_bdd_124();
    void thread_ap_sig_bdd_135();
    void thread_ap_sig_bdd_146();
    void thread_ap_sig_bdd_157();
    void thread_ap_sig_bdd_168();
    void thread_ap_sig_bdd_29();
    void thread_ap_sig_bdd_312();
    void thread_ap_sig_bdd_56();
    void thread_ap_sig_bdd_64();
    void thread_ap_sig_bdd_81();
    void thread_ap_sig_bdd_91();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_1();
    void thread_ap_sig_cseq_ST_pp0_stg1_fsm_2();
    void thread_ap_sig_cseq_ST_pp0_stg2_fsm_3();
    void thread_ap_sig_cseq_ST_pp0_stg3_fsm_4();
    void thread_ap_sig_cseq_ST_pp0_stg4_fsm_5();
    void thread_ap_sig_cseq_ST_pp0_stg5_fsm_6();
    void thread_ap_sig_cseq_ST_pp0_stg6_fsm_7();
    void thread_ap_sig_cseq_ST_pp0_stg7_fsm_8();
    void thread_ap_sig_cseq_ST_st11_fsm_9();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_exitcond4_i_i_fu_149_p2();
    void thread_i_0_i_i_phi_fu_141_p4();
    void thread_i_fu_155_p2();
    void thread_p_addr1_fu_214_p3();
    void thread_p_addr2_fu_232_p3();
    void thread_p_addr3_fu_250_p3();
    void thread_p_addr4_fu_268_p3();
    void thread_p_addr5_fu_286_p3();
    void thread_p_addr9_fu_196_p3();
    void thread_p_addr_fu_178_p3();
    void thread_tmp_21_fu_161_p3();
    void thread_tmp_22_fu_169_p1();
    void thread_tmp_23_fu_173_p2();
    void thread_tmp_24_fu_186_p1();
    void thread_tmp_25_fu_204_p1();
    void thread_tmp_26_fu_209_p2();
    void thread_tmp_27_fu_222_p1();
    void thread_tmp_28_fu_227_p2();
    void thread_tmp_29_fu_240_p1();
    void thread_tmp_30_fu_245_p2();
    void thread_tmp_31_fu_258_p1();
    void thread_tmp_32_fu_263_p2();
    void thread_tmp_33_fu_276_p1();
    void thread_tmp_34_fu_281_p2();
    void thread_tmp_35_fu_294_p1();
    void thread_tmp_s_fu_191_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
