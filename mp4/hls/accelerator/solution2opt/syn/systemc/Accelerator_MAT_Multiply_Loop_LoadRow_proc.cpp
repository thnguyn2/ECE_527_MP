// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "Accelerator_MAT_Multiply_Loop_LoadRow_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_ST_st1_fsm_0 = "1";
const sc_lv<10> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_ST_pp0_stg0_fsm_1 = "10";
const sc_lv<10> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_ST_pp0_stg1_fsm_2 = "100";
const sc_lv<10> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_ST_pp0_stg2_fsm_3 = "1000";
const sc_lv<10> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_ST_pp0_stg3_fsm_4 = "10000";
const sc_lv<10> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_ST_pp0_stg4_fsm_5 = "100000";
const sc_lv<10> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_ST_pp0_stg5_fsm_6 = "1000000";
const sc_lv<10> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_ST_pp0_stg6_fsm_7 = "10000000";
const sc_lv<10> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_ST_pp0_stg7_fsm_8 = "100000000";
const sc_lv<10> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_ST_st11_fsm_9 = "1000000000";
const sc_lv<32> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv1_1 = "1";
const sc_lv<32> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv32_1 = "1";
const sc_lv<1> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv1_0 = "0";
const sc_lv<32> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv32_8 = "1000";
const sc_lv<4> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv4_0 = "0000";
const sc_lv<32> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv32_2 = "10";
const sc_lv<32> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv32_3 = "11";
const sc_lv<32> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv32_4 = "100";
const sc_lv<32> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv32_5 = "101";
const sc_lv<32> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv32_6 = "110";
const sc_lv<32> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv32_7 = "111";
const sc_lv<4> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv4_8 = "1000";
const sc_lv<4> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv4_1 = "1";
const sc_lv<3> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv3_0 = "000";
const sc_lv<7> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv7_1 = "1";
const sc_lv<25> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv25_0 = "0000000000000000000000000";
const sc_lv<7> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv7_2 = "10";
const sc_lv<7> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv7_3 = "11";
const sc_lv<7> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv7_4 = "100";
const sc_lv<7> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv7_5 = "101";
const sc_lv<7> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv7_6 = "110";
const sc_lv<7> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv7_7 = "111";
const sc_lv<32> Accelerator_MAT_Multiply_Loop_LoadRow_proc::ap_const_lv32_9 = "1001";

Accelerator_MAT_Multiply_Loop_LoadRow_proc::Accelerator_MAT_Multiply_Loop_LoadRow_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_B_cached_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );
    sensitive << ( tmp_22_fu_169_p1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( tmp_24_fu_186_p1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( tmp_25_fu_204_p1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( tmp_27_fu_222_p1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( tmp_29_fu_240_p1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( tmp_31_fu_258_p1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );
    sensitive << ( tmp_33_fu_276_p1 );
    sensitive << ( tmp_35_fu_294_p1 );

    SC_METHOD(thread_B_cached_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_64 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );

    SC_METHOD(thread_B_cached_d0);
    sensitive << ( B_dout );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );

    SC_METHOD(thread_B_cached_we0);
    sensitive << ( exitcond4_i_i_reg_299 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_64 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );

    SC_METHOD(thread_B_read);
    sensitive << ( exitcond4_i_i_reg_299 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_64 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg7_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg2_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg3_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg4_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg5_fsm_6 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg6_fsm_7 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_9 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_9 );

    SC_METHOD(thread_ap_sig_bdd_113);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_124);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_135);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_146);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_157);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_168);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_312);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_64);
    sensitive << ( B_empty_n );
    sensitive << ( exitcond4_i_i_reg_299 );

    SC_METHOD(thread_ap_sig_bdd_81);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_sig_bdd_91);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_1);
    sensitive << ( ap_sig_bdd_56 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg1_fsm_2);
    sensitive << ( ap_sig_bdd_113 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg2_fsm_3);
    sensitive << ( ap_sig_bdd_124 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg3_fsm_4);
    sensitive << ( ap_sig_bdd_135 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg4_fsm_5);
    sensitive << ( ap_sig_bdd_146 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg5_fsm_6);
    sensitive << ( ap_sig_bdd_157 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg6_fsm_7);
    sensitive << ( ap_sig_bdd_168 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg7_fsm_8);
    sensitive << ( ap_sig_bdd_91 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_9);
    sensitive << ( ap_sig_bdd_312 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_29 );

    SC_METHOD(thread_exitcond4_i_i_fu_149_p2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_64 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( i_0_i_i_phi_fu_141_p4 );

    SC_METHOD(thread_i_0_i_i_phi_fu_141_p4);
    sensitive << ( i_0_i_i_reg_137 );
    sensitive << ( exitcond4_i_i_reg_299 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( i_reg_303 );

    SC_METHOD(thread_i_fu_155_p2);
    sensitive << ( i_0_i_i_phi_fu_141_p4 );

    SC_METHOD(thread_p_addr1_fu_214_p3);
    sensitive << ( tmp_26_fu_209_p2 );

    SC_METHOD(thread_p_addr2_fu_232_p3);
    sensitive << ( tmp_28_fu_227_p2 );

    SC_METHOD(thread_p_addr3_fu_250_p3);
    sensitive << ( tmp_30_fu_245_p2 );

    SC_METHOD(thread_p_addr4_fu_268_p3);
    sensitive << ( tmp_32_fu_263_p2 );

    SC_METHOD(thread_p_addr5_fu_286_p3);
    sensitive << ( tmp_34_fu_281_p2 );

    SC_METHOD(thread_p_addr9_fu_196_p3);
    sensitive << ( tmp_s_fu_191_p2 );

    SC_METHOD(thread_p_addr_fu_178_p3);
    sensitive << ( tmp_23_fu_173_p2 );

    SC_METHOD(thread_tmp_21_fu_161_p3);
    sensitive << ( i_0_i_i_phi_fu_141_p4 );

    SC_METHOD(thread_tmp_22_fu_169_p1);
    sensitive << ( tmp_21_reg_308 );

    SC_METHOD(thread_tmp_23_fu_173_p2);
    sensitive << ( tmp_21_reg_308 );

    SC_METHOD(thread_tmp_24_fu_186_p1);
    sensitive << ( p_addr_fu_178_p3 );

    SC_METHOD(thread_tmp_25_fu_204_p1);
    sensitive << ( p_addr9_fu_196_p3 );

    SC_METHOD(thread_tmp_26_fu_209_p2);
    sensitive << ( tmp_21_reg_308 );

    SC_METHOD(thread_tmp_27_fu_222_p1);
    sensitive << ( p_addr1_fu_214_p3 );

    SC_METHOD(thread_tmp_28_fu_227_p2);
    sensitive << ( tmp_21_reg_308 );

    SC_METHOD(thread_tmp_29_fu_240_p1);
    sensitive << ( p_addr2_fu_232_p3 );

    SC_METHOD(thread_tmp_30_fu_245_p2);
    sensitive << ( tmp_21_reg_308 );

    SC_METHOD(thread_tmp_31_fu_258_p1);
    sensitive << ( p_addr3_fu_250_p3 );

    SC_METHOD(thread_tmp_32_fu_263_p2);
    sensitive << ( tmp_21_reg_308 );

    SC_METHOD(thread_tmp_33_fu_276_p1);
    sensitive << ( p_addr4_fu_268_p3 );

    SC_METHOD(thread_tmp_34_fu_281_p2);
    sensitive << ( tmp_21_reg_308 );

    SC_METHOD(thread_tmp_35_fu_294_p1);
    sensitive << ( p_addr5_fu_286_p3 );

    SC_METHOD(thread_tmp_s_fu_191_p2);
    sensitive << ( tmp_21_reg_308 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond4_i_i_fu_149_p2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_64 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_81 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000000001";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Accelerator_MAT_Multiply_Loop_LoadRow_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, B_dout, "(port)B_dout");
    sc_trace(mVcdFile, B_empty_n, "(port)B_empty_n");
    sc_trace(mVcdFile, B_read, "(port)B_read");
    sc_trace(mVcdFile, B_cached_address0, "(port)B_cached_address0");
    sc_trace(mVcdFile, B_cached_ce0, "(port)B_cached_ce0");
    sc_trace(mVcdFile, B_cached_we0, "(port)B_cached_we0");
    sc_trace(mVcdFile, B_cached_d0, "(port)B_cached_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_29, "ap_sig_bdd_29");
    sc_trace(mVcdFile, i_0_i_i_reg_137, "i_0_i_i_reg_137");
    sc_trace(mVcdFile, exitcond4_i_i_fu_149_p2, "exitcond4_i_i_fu_149_p2");
    sc_trace(mVcdFile, exitcond4_i_i_reg_299, "exitcond4_i_i_reg_299");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_1, "ap_sig_cseq_ST_pp0_stg0_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_56, "ap_sig_bdd_56");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_sig_bdd_64, "ap_sig_bdd_64");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, i_fu_155_p2, "i_fu_155_p2");
    sc_trace(mVcdFile, i_reg_303, "i_reg_303");
    sc_trace(mVcdFile, tmp_21_fu_161_p3, "tmp_21_fu_161_p3");
    sc_trace(mVcdFile, tmp_21_reg_308, "tmp_21_reg_308");
    sc_trace(mVcdFile, ap_sig_bdd_81, "ap_sig_bdd_81");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg7_fsm_8, "ap_sig_cseq_ST_pp0_stg7_fsm_8");
    sc_trace(mVcdFile, ap_sig_bdd_91, "ap_sig_bdd_91");
    sc_trace(mVcdFile, i_0_i_i_phi_fu_141_p4, "i_0_i_i_phi_fu_141_p4");
    sc_trace(mVcdFile, tmp_22_fu_169_p1, "tmp_22_fu_169_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg1_fsm_2, "ap_sig_cseq_ST_pp0_stg1_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_113, "ap_sig_bdd_113");
    sc_trace(mVcdFile, tmp_24_fu_186_p1, "tmp_24_fu_186_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg2_fsm_3, "ap_sig_cseq_ST_pp0_stg2_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_124, "ap_sig_bdd_124");
    sc_trace(mVcdFile, tmp_25_fu_204_p1, "tmp_25_fu_204_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg3_fsm_4, "ap_sig_cseq_ST_pp0_stg3_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_135, "ap_sig_bdd_135");
    sc_trace(mVcdFile, tmp_27_fu_222_p1, "tmp_27_fu_222_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg4_fsm_5, "ap_sig_cseq_ST_pp0_stg4_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_146, "ap_sig_bdd_146");
    sc_trace(mVcdFile, tmp_29_fu_240_p1, "tmp_29_fu_240_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg5_fsm_6, "ap_sig_cseq_ST_pp0_stg5_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_157, "ap_sig_bdd_157");
    sc_trace(mVcdFile, tmp_31_fu_258_p1, "tmp_31_fu_258_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg6_fsm_7, "ap_sig_cseq_ST_pp0_stg6_fsm_7");
    sc_trace(mVcdFile, ap_sig_bdd_168, "ap_sig_bdd_168");
    sc_trace(mVcdFile, tmp_33_fu_276_p1, "tmp_33_fu_276_p1");
    sc_trace(mVcdFile, tmp_35_fu_294_p1, "tmp_35_fu_294_p1");
    sc_trace(mVcdFile, tmp_23_fu_173_p2, "tmp_23_fu_173_p2");
    sc_trace(mVcdFile, p_addr_fu_178_p3, "p_addr_fu_178_p3");
    sc_trace(mVcdFile, tmp_s_fu_191_p2, "tmp_s_fu_191_p2");
    sc_trace(mVcdFile, p_addr9_fu_196_p3, "p_addr9_fu_196_p3");
    sc_trace(mVcdFile, tmp_26_fu_209_p2, "tmp_26_fu_209_p2");
    sc_trace(mVcdFile, p_addr1_fu_214_p3, "p_addr1_fu_214_p3");
    sc_trace(mVcdFile, tmp_28_fu_227_p2, "tmp_28_fu_227_p2");
    sc_trace(mVcdFile, p_addr2_fu_232_p3, "p_addr2_fu_232_p3");
    sc_trace(mVcdFile, tmp_30_fu_245_p2, "tmp_30_fu_245_p2");
    sc_trace(mVcdFile, p_addr3_fu_250_p3, "p_addr3_fu_250_p3");
    sc_trace(mVcdFile, tmp_32_fu_263_p2, "tmp_32_fu_263_p2");
    sc_trace(mVcdFile, p_addr4_fu_268_p3, "p_addr4_fu_268_p3");
    sc_trace(mVcdFile, tmp_34_fu_281_p2, "tmp_34_fu_281_p2");
    sc_trace(mVcdFile, p_addr5_fu_286_p3, "p_addr5_fu_286_p3");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_9, "ap_sig_cseq_ST_st11_fsm_9");
    sc_trace(mVcdFile, ap_sig_bdd_312, "ap_sig_bdd_312");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Accelerator_MAT_Multiply_Loop_LoadRow_proc::~Accelerator_MAT_Multiply_Loop_LoadRow_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_9.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             !(ap_sig_bdd_64.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && 
             !esl_seteq<1,1,1>(exitcond4_i_i_fu_149_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                    !ap_sig_bdd_81.read())) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                     !ap_sig_bdd_81.read()) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
                     !esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0)))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !(ap_sig_bdd_64.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        i_0_i_i_reg_137 = i_reg_303.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !ap_sig_bdd_81.read())) {
        i_0_i_i_reg_137 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !(ap_sig_bdd_64.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        exitcond4_i_i_reg_299 = exitcond4_i_i_fu_149_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(ap_sig_bdd_64.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
        i_reg_303 = i_fu_155_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !(ap_sig_bdd_64.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && esl_seteq<1,1,1>(exitcond4_i_i_fu_149_p2.read(), ap_const_lv1_0))) {
        tmp_21_reg_308 = tmp_21_fu_161_p3.read();
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_B_cached_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        B_cached_address0 =  (sc_lv<6>) (tmp_35_fu_294_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read()))) {
        B_cached_address0 =  (sc_lv<6>) (tmp_33_fu_276_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg6_fsm_7.read()))) {
        B_cached_address0 =  (sc_lv<6>) (tmp_31_fu_258_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg5_fsm_6.read()))) {
        B_cached_address0 =  (sc_lv<6>) (tmp_29_fu_240_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg4_fsm_5.read()))) {
        B_cached_address0 =  (sc_lv<6>) (tmp_27_fu_222_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg3_fsm_4.read()))) {
        B_cached_address0 =  (sc_lv<6>) (tmp_25_fu_204_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg2_fsm_3.read()))) {
        B_cached_address0 =  (sc_lv<6>) (tmp_24_fu_186_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()))) {
        B_cached_address0 =  (sc_lv<6>) (tmp_22_fu_169_p1.read());
    } else {
        B_cached_address0 = "XXXXXX";
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_B_cached_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          !(ap_sig_bdd_64.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg2_fsm_3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg3_fsm_4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg4_fsm_5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg5_fsm_6.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg6_fsm_7.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read())))) {
        B_cached_ce0 = ap_const_logic_1;
    } else {
        B_cached_ce0 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_B_cached_d0() {
    B_cached_d0 = B_dout.read();
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_B_cached_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          !(ap_sig_bdd_64.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg2_fsm_3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg3_fsm_4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg4_fsm_5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg5_fsm_6.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg6_fsm_7.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read())))) {
        B_cached_we0 = ap_const_logic_1;
    } else {
        B_cached_we0 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_B_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          !(ap_sig_bdd_64.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg2_fsm_3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg3_fsm_4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg4_fsm_5.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg5_fsm_6.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg6_fsm_7.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg7_fsm_8.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read())))) {
        B_read = ap_const_logic_1;
    } else {
        B_read = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_9.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_9.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_bdd_113() {
    ap_sig_bdd_113 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_bdd_124() {
    ap_sig_bdd_124 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_bdd_135() {
    ap_sig_bdd_135 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_bdd_146() {
    ap_sig_bdd_146 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_bdd_157() {
    ap_sig_bdd_157 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_bdd_168() {
    ap_sig_bdd_168 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_bdd_29() {
    ap_sig_bdd_29 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_bdd_312() {
    ap_sig_bdd_312 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_bdd_56() {
    ap_sig_bdd_56 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_bdd_64() {
    ap_sig_bdd_64 = (esl_seteq<1,1,1>(B_empty_n.read(), ap_const_logic_0) && esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0));
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_bdd_81() {
    ap_sig_bdd_81 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_bdd_91() {
    ap_sig_bdd_91 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_cseq_ST_pp0_stg0_fsm_1() {
    if (ap_sig_bdd_56.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_cseq_ST_pp0_stg1_fsm_2() {
    if (ap_sig_bdd_113.read()) {
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_cseq_ST_pp0_stg2_fsm_3() {
    if (ap_sig_bdd_124.read()) {
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg2_fsm_3 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_cseq_ST_pp0_stg3_fsm_4() {
    if (ap_sig_bdd_135.read()) {
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg3_fsm_4 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_cseq_ST_pp0_stg4_fsm_5() {
    if (ap_sig_bdd_146.read()) {
        ap_sig_cseq_ST_pp0_stg4_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg4_fsm_5 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_cseq_ST_pp0_stg5_fsm_6() {
    if (ap_sig_bdd_157.read()) {
        ap_sig_cseq_ST_pp0_stg5_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg5_fsm_6 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_cseq_ST_pp0_stg6_fsm_7() {
    if (ap_sig_bdd_168.read()) {
        ap_sig_cseq_ST_pp0_stg6_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg6_fsm_7 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_cseq_ST_pp0_stg7_fsm_8() {
    if (ap_sig_bdd_91.read()) {
        ap_sig_cseq_ST_pp0_stg7_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg7_fsm_8 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_cseq_ST_st11_fsm_9() {
    if (ap_sig_bdd_312.read()) {
        ap_sig_cseq_ST_st11_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_9 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_29.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_exitcond4_i_i_fu_149_p2() {
    exitcond4_i_i_fu_149_p2 = (!i_0_i_i_phi_fu_141_p4.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_i_phi_fu_141_p4.read() == ap_const_lv4_8);
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_i_0_i_i_phi_fu_141_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond4_i_i_reg_299.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        i_0_i_i_phi_fu_141_p4 = i_reg_303.read();
    } else {
        i_0_i_i_phi_fu_141_p4 = i_0_i_i_reg_137.read();
    }
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_i_fu_155_p2() {
    i_fu_155_p2 = (!i_0_i_i_phi_fu_141_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_i_i_phi_fu_141_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_p_addr1_fu_214_p3() {
    p_addr1_fu_214_p3 = esl_concat<25,7>(ap_const_lv25_0, tmp_26_fu_209_p2.read());
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_p_addr2_fu_232_p3() {
    p_addr2_fu_232_p3 = esl_concat<25,7>(ap_const_lv25_0, tmp_28_fu_227_p2.read());
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_p_addr3_fu_250_p3() {
    p_addr3_fu_250_p3 = esl_concat<25,7>(ap_const_lv25_0, tmp_30_fu_245_p2.read());
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_p_addr4_fu_268_p3() {
    p_addr4_fu_268_p3 = esl_concat<25,7>(ap_const_lv25_0, tmp_32_fu_263_p2.read());
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_p_addr5_fu_286_p3() {
    p_addr5_fu_286_p3 = esl_concat<25,7>(ap_const_lv25_0, tmp_34_fu_281_p2.read());
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_p_addr9_fu_196_p3() {
    p_addr9_fu_196_p3 = esl_concat<25,7>(ap_const_lv25_0, tmp_s_fu_191_p2.read());
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_p_addr_fu_178_p3() {
    p_addr_fu_178_p3 = esl_concat<25,7>(ap_const_lv25_0, tmp_23_fu_173_p2.read());
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_tmp_21_fu_161_p3() {
    tmp_21_fu_161_p3 = esl_concat<4,3>(i_0_i_i_phi_fu_141_p4.read(), ap_const_lv3_0);
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_tmp_22_fu_169_p1() {
    tmp_22_fu_169_p1 = esl_zext<64,7>(tmp_21_reg_308.read());
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_tmp_23_fu_173_p2() {
    tmp_23_fu_173_p2 = (tmp_21_reg_308.read() | ap_const_lv7_1);
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_tmp_24_fu_186_p1() {
    tmp_24_fu_186_p1 = esl_zext<64,32>(p_addr_fu_178_p3.read());
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_tmp_25_fu_204_p1() {
    tmp_25_fu_204_p1 = esl_zext<64,32>(p_addr9_fu_196_p3.read());
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_tmp_26_fu_209_p2() {
    tmp_26_fu_209_p2 = (tmp_21_reg_308.read() | ap_const_lv7_3);
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_tmp_27_fu_222_p1() {
    tmp_27_fu_222_p1 = esl_zext<64,32>(p_addr1_fu_214_p3.read());
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_tmp_28_fu_227_p2() {
    tmp_28_fu_227_p2 = (tmp_21_reg_308.read() | ap_const_lv7_4);
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_tmp_29_fu_240_p1() {
    tmp_29_fu_240_p1 = esl_zext<64,32>(p_addr2_fu_232_p3.read());
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_tmp_30_fu_245_p2() {
    tmp_30_fu_245_p2 = (tmp_21_reg_308.read() | ap_const_lv7_5);
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_tmp_31_fu_258_p1() {
    tmp_31_fu_258_p1 = esl_zext<64,32>(p_addr3_fu_250_p3.read());
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_tmp_32_fu_263_p2() {
    tmp_32_fu_263_p2 = (tmp_21_reg_308.read() | ap_const_lv7_6);
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_tmp_33_fu_276_p1() {
    tmp_33_fu_276_p1 = esl_zext<64,32>(p_addr4_fu_268_p3.read());
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_tmp_34_fu_281_p2() {
    tmp_34_fu_281_p2 = (tmp_21_reg_308.read() | ap_const_lv7_7);
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_tmp_35_fu_294_p1() {
    tmp_35_fu_294_p1 = esl_zext<64,32>(p_addr5_fu_286_p3.read());
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_tmp_s_fu_191_p2() {
    tmp_s_fu_191_p2 = (tmp_21_reg_308.read() | ap_const_lv7_2);
}

void Accelerator_MAT_Multiply_Loop_LoadRow_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!ap_sig_bdd_81.read()) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if ((!(ap_sig_bdd_64.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(ap_sig_bdd_64.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !esl_seteq<1,1,1>(exitcond4_i_i_fu_149_p2.read(), ap_const_lv1_0)))) {
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(ap_sig_bdd_64.read() && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) && !esl_seteq<1,1,1>(exitcond4_i_i_fu_149_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st11_fsm_9;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read())) {
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            }
            break;
        case 8 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read())) {
                ap_NS_fsm = ap_ST_pp0_stg3_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg2_fsm_3;
            }
            break;
        case 16 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read())) {
                ap_NS_fsm = ap_ST_pp0_stg4_fsm_5;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg3_fsm_4;
            }
            break;
        case 32 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read())) {
                ap_NS_fsm = ap_ST_pp0_stg5_fsm_6;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg4_fsm_5;
            }
            break;
        case 64 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read())) {
                ap_NS_fsm = ap_ST_pp0_stg6_fsm_7;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg5_fsm_6;
            }
            break;
        case 128 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read())) {
                ap_NS_fsm = ap_ST_pp0_stg7_fsm_8;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg6_fsm_7;
            }
            break;
        case 256 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_bdd_64.read())) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg7_fsm_8;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

