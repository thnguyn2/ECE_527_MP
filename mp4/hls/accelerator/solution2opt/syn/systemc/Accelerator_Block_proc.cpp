// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "Accelerator_Block_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Accelerator_Block_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Accelerator_Block_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> Accelerator_Block_proc::ap_ST_st1_fsm_0 = "1";
const sc_lv<6> Accelerator_Block_proc::ap_ST_st2_fsm_1 = "10";
const sc_lv<6> Accelerator_Block_proc::ap_ST_st3_fsm_2 = "100";
const sc_lv<6> Accelerator_Block_proc::ap_ST_st4_fsm_3 = "1000";
const sc_lv<6> Accelerator_Block_proc::ap_ST_st5_fsm_4 = "10000";
const sc_lv<6> Accelerator_Block_proc::ap_ST_st6_fsm_5 = "100000";
const sc_lv<32> Accelerator_Block_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Accelerator_Block_proc::ap_const_lv1_1 = "1";
const sc_lv<1> Accelerator_Block_proc::ap_const_lv1_0 = "0";
const sc_lv<32> Accelerator_Block_proc::ap_const_lv32_1 = "1";
const sc_lv<32> Accelerator_Block_proc::ap_const_lv32_5 = "101";
const sc_lv<32> Accelerator_Block_proc::ap_const_lv32_3 = "11";
const sc_lv<8> Accelerator_Block_proc::ap_const_lv8_1 = "1";
const sc_lv<32> Accelerator_Block_proc::ap_const_lv32_4 = "100";
const sc_lv<32> Accelerator_Block_proc::ap_const_lv32_2 = "10";

Accelerator_Block_proc::Accelerator_Block_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {
    temp_U = new Accelerator_Block_proc_temp("temp_U");
    temp_U->clk(ap_clk);
    temp_U->reset(ap_rst);
    temp_U->address0(temp_address0);
    temp_U->ce0(temp_ce0);
    temp_U->we0(temp_we0);
    temp_U->d0(temp_d0);
    grp_Accelerator_DCT_fu_67 = new Accelerator_DCT("grp_Accelerator_DCT_fu_67");
    grp_Accelerator_DCT_fu_67->X_dout(grp_Accelerator_DCT_fu_67_X_dout);
    grp_Accelerator_DCT_fu_67->X_empty_n(grp_Accelerator_DCT_fu_67_X_empty_n);
    grp_Accelerator_DCT_fu_67->X_read(grp_Accelerator_DCT_fu_67_X_read);
    grp_Accelerator_DCT_fu_67->function_r(grp_Accelerator_DCT_fu_67_function_r);
    grp_Accelerator_DCT_fu_67->Y_address0(grp_Accelerator_DCT_fu_67_Y_address0);
    grp_Accelerator_DCT_fu_67->Y_ce0(grp_Accelerator_DCT_fu_67_Y_ce0);
    grp_Accelerator_DCT_fu_67->Y_d0(grp_Accelerator_DCT_fu_67_Y_d0);
    grp_Accelerator_DCT_fu_67->Y_q0(grp_Accelerator_DCT_fu_67_Y_q0);
    grp_Accelerator_DCT_fu_67->Y_we0(grp_Accelerator_DCT_fu_67_Y_we0);
    grp_Accelerator_DCT_fu_67->Y_address1(grp_Accelerator_DCT_fu_67_Y_address1);
    grp_Accelerator_DCT_fu_67->Y_ce1(grp_Accelerator_DCT_fu_67_Y_ce1);
    grp_Accelerator_DCT_fu_67->Y_d1(grp_Accelerator_DCT_fu_67_Y_d1);
    grp_Accelerator_DCT_fu_67->Y_q1(grp_Accelerator_DCT_fu_67_Y_q1);
    grp_Accelerator_DCT_fu_67->Y_we1(grp_Accelerator_DCT_fu_67_Y_we1);
    grp_Accelerator_DCT_fu_67->ap_clk(ap_clk);
    grp_Accelerator_DCT_fu_67->ap_rst(ap_rst);
    grp_Accelerator_DCT_fu_67->function_r_ap_vld(grp_Accelerator_DCT_fu_67_function_r_ap_vld);
    grp_Accelerator_DCT_fu_67->function_r_ap_ack(grp_Accelerator_DCT_fu_67_function_r_ap_ack);
    grp_Accelerator_DCT_fu_67->ap_done(grp_Accelerator_DCT_fu_67_ap_done);
    grp_Accelerator_DCT_fu_67->ap_start(grp_Accelerator_DCT_fu_67_ap_start);
    grp_Accelerator_DCT_fu_67->ap_idle(grp_Accelerator_DCT_fu_67_ap_idle);
    grp_Accelerator_DCT_fu_67->ap_ready(grp_Accelerator_DCT_fu_67_ap_ready);
    grp_Accelerator_Quant_fu_110 = new Accelerator_Quant("grp_Accelerator_Quant_fu_110");
    grp_Accelerator_Quant_fu_110->X_dout(grp_Accelerator_Quant_fu_110_X_dout);
    grp_Accelerator_Quant_fu_110->X_empty_n(grp_Accelerator_Quant_fu_110_X_empty_n);
    grp_Accelerator_Quant_fu_110->X_read(grp_Accelerator_Quant_fu_110_X_read);
    grp_Accelerator_Quant_fu_110->function_r(grp_Accelerator_Quant_fu_110_function_r);
    grp_Accelerator_Quant_fu_110->Y_din(grp_Accelerator_Quant_fu_110_Y_din);
    grp_Accelerator_Quant_fu_110->Y_full_n(grp_Accelerator_Quant_fu_110_Y_full_n);
    grp_Accelerator_Quant_fu_110->Y_write(grp_Accelerator_Quant_fu_110_Y_write);
    grp_Accelerator_Quant_fu_110->ap_clk(ap_clk);
    grp_Accelerator_Quant_fu_110->ap_rst(ap_rst);
    grp_Accelerator_Quant_fu_110->function_r_ap_ack(grp_Accelerator_Quant_fu_110_function_r_ap_ack);
    grp_Accelerator_Quant_fu_110->ap_done(grp_Accelerator_Quant_fu_110_ap_done);
    grp_Accelerator_Quant_fu_110->ap_start(grp_Accelerator_Quant_fu_110_ap_start);
    grp_Accelerator_Quant_fu_110->ap_idle(grp_Accelerator_Quant_fu_110_ap_idle);
    grp_Accelerator_Quant_fu_110->ap_ready(grp_Accelerator_Quant_fu_110_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_X_read);
    sensitive << ( cond_reg_132 );
    sensitive << ( grp_Accelerator_DCT_fu_67_X_read );
    sensitive << ( grp_Accelerator_Quant_fu_110_X_read );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_Y_din);
    sensitive << ( cond_reg_132 );
    sensitive << ( grp_Accelerator_Quant_fu_110_Y_din );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_Y_write);
    sensitive << ( cond_reg_132 );
    sensitive << ( grp_Accelerator_Quant_fu_110_Y_write );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( cond_reg_132 );
    sensitive << ( grp_Accelerator_DCT_fu_67_ap_done );
    sensitive << ( grp_Accelerator_Quant_fu_110_ap_done );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( cond_reg_132 );
    sensitive << ( grp_Accelerator_DCT_fu_67_ap_done );
    sensitive << ( grp_Accelerator_Quant_fu_110_ap_done );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_ap_sig_bdd_108);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_123);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_131);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_402);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_416);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_46);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_25 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_108 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_416 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_131 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_bdd_402 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_bdd_123 );

    SC_METHOD(thread_ap_sig_startack_grp_Accelerator_DCT_fu_67_ap_ready);
    sensitive << ( grp_Accelerator_DCT_fu_67_ap_ready );
    sensitive << ( ap_reg_startack_grp_Accelerator_DCT_fu_67_ap_ready );

    SC_METHOD(thread_ap_sig_startack_grp_Accelerator_Quant_fu_110_ap_ready);
    sensitive << ( grp_Accelerator_Quant_fu_110_ap_ready );
    sensitive << ( ap_reg_startack_grp_Accelerator_Quant_fu_110_ap_ready );

    SC_METHOD(thread_cond_fu_120_p2);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( function_r );
    sensitive << ( ap_sig_bdd_46 );

    SC_METHOD(thread_grp_Accelerator_DCT_fu_67_X_dout);
    sensitive << ( X_dout );
    sensitive << ( cond_reg_132 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_grp_Accelerator_DCT_fu_67_X_empty_n);
    sensitive << ( X_empty_n );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_grp_Accelerator_DCT_fu_67_Y_q0);

    SC_METHOD(thread_grp_Accelerator_DCT_fu_67_Y_q1);

    SC_METHOD(thread_grp_Accelerator_DCT_fu_67_ap_start);
    sensitive << ( grp_Accelerator_DCT_fu_67_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_Accelerator_DCT_fu_67_function_r);
    sensitive << ( function_r );
    sensitive << ( cond_reg_132 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_grp_Accelerator_DCT_fu_67_function_r_ap_vld);

    SC_METHOD(thread_grp_Accelerator_Quant_fu_110_X_dout);
    sensitive << ( X_dout );
    sensitive << ( cond_reg_132 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_grp_Accelerator_Quant_fu_110_X_empty_n);
    sensitive << ( X_empty_n );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_grp_Accelerator_Quant_fu_110_Y_full_n);
    sensitive << ( Y_full_n );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_grp_Accelerator_Quant_fu_110_ap_start);
    sensitive << ( grp_Accelerator_Quant_fu_110_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_Accelerator_Quant_fu_110_function_r);
    sensitive << ( function_r );
    sensitive << ( cond_reg_132 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_temp_address0);
    sensitive << ( cond_reg_132 );
    sensitive << ( grp_Accelerator_DCT_fu_67_Y_address0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_temp_ce0);
    sensitive << ( cond_reg_132 );
    sensitive << ( grp_Accelerator_DCT_fu_67_Y_ce0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_temp_d0);
    sensitive << ( cond_reg_132 );
    sensitive << ( grp_Accelerator_DCT_fu_67_Y_d0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_temp_we0);
    sensitive << ( cond_reg_132 );
    sensitive << ( grp_Accelerator_DCT_fu_67_Y_we0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_46 );
    sensitive << ( cond_fu_120_p2 );
    sensitive << ( cond_reg_132 );
    sensitive << ( grp_Accelerator_DCT_fu_67_ap_done );
    sensitive << ( grp_Accelerator_Quant_fu_110_ap_done );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000001";
    grp_Accelerator_DCT_fu_67_ap_start_ap_start_reg = SC_LOGIC_0;
    ap_reg_startack_grp_Accelerator_DCT_fu_67_ap_ready = SC_LOGIC_0;
    grp_Accelerator_Quant_fu_110_ap_start_ap_start_reg = SC_LOGIC_0;
    ap_reg_startack_grp_Accelerator_Quant_fu_110_ap_ready = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Accelerator_Block_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, function_r, "(port)function_r");
    sc_trace(mVcdFile, X_dout, "(port)X_dout");
    sc_trace(mVcdFile, X_empty_n, "(port)X_empty_n");
    sc_trace(mVcdFile, X_read, "(port)X_read");
    sc_trace(mVcdFile, Y_din, "(port)Y_din");
    sc_trace(mVcdFile, Y_full_n, "(port)Y_full_n");
    sc_trace(mVcdFile, Y_write, "(port)Y_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_25, "ap_sig_bdd_25");
    sc_trace(mVcdFile, ap_sig_bdd_46, "ap_sig_bdd_46");
    sc_trace(mVcdFile, cond_fu_120_p2, "cond_fu_120_p2");
    sc_trace(mVcdFile, cond_reg_132, "cond_reg_132");
    sc_trace(mVcdFile, temp_address0, "temp_address0");
    sc_trace(mVcdFile, temp_ce0, "temp_ce0");
    sc_trace(mVcdFile, temp_we0, "temp_we0");
    sc_trace(mVcdFile, temp_d0, "temp_d0");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_X_dout, "grp_Accelerator_DCT_fu_67_X_dout");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_X_empty_n, "grp_Accelerator_DCT_fu_67_X_empty_n");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_X_read, "grp_Accelerator_DCT_fu_67_X_read");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_function_r, "grp_Accelerator_DCT_fu_67_function_r");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_Y_address0, "grp_Accelerator_DCT_fu_67_Y_address0");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_Y_ce0, "grp_Accelerator_DCT_fu_67_Y_ce0");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_Y_d0, "grp_Accelerator_DCT_fu_67_Y_d0");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_Y_q0, "grp_Accelerator_DCT_fu_67_Y_q0");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_Y_we0, "grp_Accelerator_DCT_fu_67_Y_we0");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_Y_address1, "grp_Accelerator_DCT_fu_67_Y_address1");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_Y_ce1, "grp_Accelerator_DCT_fu_67_Y_ce1");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_Y_d1, "grp_Accelerator_DCT_fu_67_Y_d1");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_Y_q1, "grp_Accelerator_DCT_fu_67_Y_q1");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_Y_we1, "grp_Accelerator_DCT_fu_67_Y_we1");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_function_r_ap_vld, "grp_Accelerator_DCT_fu_67_function_r_ap_vld");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_function_r_ap_ack, "grp_Accelerator_DCT_fu_67_function_r_ap_ack");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_ap_done, "grp_Accelerator_DCT_fu_67_ap_done");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_ap_start, "grp_Accelerator_DCT_fu_67_ap_start");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_ap_idle, "grp_Accelerator_DCT_fu_67_ap_idle");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_ap_ready, "grp_Accelerator_DCT_fu_67_ap_ready");
    sc_trace(mVcdFile, grp_Accelerator_Quant_fu_110_X_dout, "grp_Accelerator_Quant_fu_110_X_dout");
    sc_trace(mVcdFile, grp_Accelerator_Quant_fu_110_X_empty_n, "grp_Accelerator_Quant_fu_110_X_empty_n");
    sc_trace(mVcdFile, grp_Accelerator_Quant_fu_110_X_read, "grp_Accelerator_Quant_fu_110_X_read");
    sc_trace(mVcdFile, grp_Accelerator_Quant_fu_110_function_r, "grp_Accelerator_Quant_fu_110_function_r");
    sc_trace(mVcdFile, grp_Accelerator_Quant_fu_110_Y_din, "grp_Accelerator_Quant_fu_110_Y_din");
    sc_trace(mVcdFile, grp_Accelerator_Quant_fu_110_Y_full_n, "grp_Accelerator_Quant_fu_110_Y_full_n");
    sc_trace(mVcdFile, grp_Accelerator_Quant_fu_110_Y_write, "grp_Accelerator_Quant_fu_110_Y_write");
    sc_trace(mVcdFile, grp_Accelerator_Quant_fu_110_function_r_ap_ack, "grp_Accelerator_Quant_fu_110_function_r_ap_ack");
    sc_trace(mVcdFile, grp_Accelerator_Quant_fu_110_ap_done, "grp_Accelerator_Quant_fu_110_ap_done");
    sc_trace(mVcdFile, grp_Accelerator_Quant_fu_110_ap_start, "grp_Accelerator_Quant_fu_110_ap_start");
    sc_trace(mVcdFile, grp_Accelerator_Quant_fu_110_ap_idle, "grp_Accelerator_Quant_fu_110_ap_idle");
    sc_trace(mVcdFile, grp_Accelerator_Quant_fu_110_ap_ready, "grp_Accelerator_Quant_fu_110_ap_ready");
    sc_trace(mVcdFile, grp_Accelerator_DCT_fu_67_ap_start_ap_start_reg, "grp_Accelerator_DCT_fu_67_ap_start_ap_start_reg");
    sc_trace(mVcdFile, ap_reg_startack_grp_Accelerator_DCT_fu_67_ap_ready, "ap_reg_startack_grp_Accelerator_DCT_fu_67_ap_ready");
    sc_trace(mVcdFile, ap_sig_startack_grp_Accelerator_DCT_fu_67_ap_ready, "ap_sig_startack_grp_Accelerator_DCT_fu_67_ap_ready");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_108, "ap_sig_bdd_108");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_123, "ap_sig_bdd_123");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_131, "ap_sig_bdd_131");
    sc_trace(mVcdFile, grp_Accelerator_Quant_fu_110_ap_start_ap_start_reg, "grp_Accelerator_Quant_fu_110_ap_start_ap_start_reg");
    sc_trace(mVcdFile, ap_reg_startack_grp_Accelerator_Quant_fu_110_ap_ready, "ap_reg_startack_grp_Accelerator_Quant_fu_110_ap_ready");
    sc_trace(mVcdFile, ap_sig_startack_grp_Accelerator_Quant_fu_110_ap_ready, "ap_sig_startack_grp_Accelerator_Quant_fu_110_ap_ready");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_402, "ap_sig_bdd_402");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_416, "ap_sig_bdd_416");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Accelerator_Block_proc::~Accelerator_Block_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete temp_U;
    delete grp_Accelerator_DCT_fu_67;
    delete grp_Accelerator_Quant_fu_110;
}

void Accelerator_Block_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
                    !((esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_Accelerator_Quant_fu_110_ap_done.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, grp_Accelerator_DCT_fu_67_ap_done.read()) && 
  !esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0))))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_startack_grp_Accelerator_DCT_fu_67_ap_ready = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
              !esl_seteq<1,1,1>(ap_const_logic_0, grp_Accelerator_DCT_fu_67_ap_done.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
              !esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0) && 
              !((esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_Accelerator_Quant_fu_110_ap_done.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, grp_Accelerator_DCT_fu_67_ap_done.read()) && 
  !esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0)))))) {
            ap_reg_startack_grp_Accelerator_DCT_fu_67_ap_ready = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, grp_Accelerator_DCT_fu_67_ap_ready.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, grp_Accelerator_DCT_fu_67_ap_ready.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
                     !esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0)))) {
            ap_reg_startack_grp_Accelerator_DCT_fu_67_ap_ready = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_startack_grp_Accelerator_Quant_fu_110_ap_ready = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
              !esl_seteq<1,1,1>(ap_const_logic_0, grp_Accelerator_Quant_fu_110_ap_done.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
              esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0) && 
              !((esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_Accelerator_Quant_fu_110_ap_done.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, grp_Accelerator_DCT_fu_67_ap_done.read()) && 
  !esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0)))))) {
            ap_reg_startack_grp_Accelerator_Quant_fu_110_ap_ready = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, grp_Accelerator_Quant_fu_110_ap_ready.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
                     esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, grp_Accelerator_Quant_fu_110_ap_ready.read())))) {
            ap_reg_startack_grp_Accelerator_Quant_fu_110_ap_ready = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_Accelerator_DCT_fu_67_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
              !ap_sig_bdd_46.read() && 
              esl_seteq<1,1,1>(cond_fu_120_p2.read(), ap_const_lv1_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_startack_grp_Accelerator_DCT_fu_67_ap_ready.read())) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_startack_grp_Accelerator_DCT_fu_67_ap_ready.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
              !esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0)))) {
            grp_Accelerator_DCT_fu_67_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_Accelerator_DCT_fu_67_ap_ready.read())) {
            grp_Accelerator_DCT_fu_67_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_Accelerator_Quant_fu_110_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
              !ap_sig_bdd_46.read() && 
              !esl_seteq<1,1,1>(cond_fu_120_p2.read(), ap_const_lv1_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_startack_grp_Accelerator_Quant_fu_110_ap_ready.read())) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
              esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_startack_grp_Accelerator_Quant_fu_110_ap_ready.read())))) {
            grp_Accelerator_Quant_fu_110_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_Accelerator_Quant_fu_110_ap_ready.read())) {
            grp_Accelerator_Quant_fu_110_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !ap_sig_bdd_46.read())) {
        cond_reg_132 = cond_fu_120_p2.read();
    }
}

void Accelerator_Block_proc::thread_X_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0)))) {
        X_read = grp_Accelerator_Quant_fu_110_X_read.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
                 !esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0)))) {
        X_read = grp_Accelerator_DCT_fu_67_X_read.read();
    } else {
        X_read = ap_const_logic_0;
    }
}

void Accelerator_Block_proc::thread_Y_din() {
    Y_din = grp_Accelerator_Quant_fu_110_Y_din.read();
}

void Accelerator_Block_proc::thread_Y_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0)))) {
        Y_write = grp_Accelerator_Quant_fu_110_Y_write.read();
    } else {
        Y_write = ap_const_logic_0;
    }
}

void Accelerator_Block_proc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          !((esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_Accelerator_Quant_fu_110_ap_done.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, grp_Accelerator_DCT_fu_67_ap_done.read()) && 
  !esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0)))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Accelerator_Block_proc::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Accelerator_Block_proc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !((esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_Accelerator_Quant_fu_110_ap_done.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, grp_Accelerator_DCT_fu_67_ap_done.read()) && 
  !esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0))))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Accelerator_Block_proc::thread_ap_sig_bdd_108() {
    ap_sig_bdd_108 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void Accelerator_Block_proc::thread_ap_sig_bdd_123() {
    ap_sig_bdd_123 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void Accelerator_Block_proc::thread_ap_sig_bdd_131() {
    ap_sig_bdd_131 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void Accelerator_Block_proc::thread_ap_sig_bdd_25() {
    ap_sig_bdd_25 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void Accelerator_Block_proc::thread_ap_sig_bdd_402() {
    ap_sig_bdd_402 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void Accelerator_Block_proc::thread_ap_sig_bdd_416() {
    ap_sig_bdd_416 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void Accelerator_Block_proc::thread_ap_sig_bdd_46() {
    ap_sig_bdd_46 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Accelerator_Block_proc::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_25.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void Accelerator_Block_proc::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_108.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void Accelerator_Block_proc::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_416.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void Accelerator_Block_proc::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_131.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void Accelerator_Block_proc::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_bdd_402.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void Accelerator_Block_proc::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_bdd_123.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void Accelerator_Block_proc::thread_ap_sig_startack_grp_Accelerator_DCT_fu_67_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_startack_grp_Accelerator_DCT_fu_67_ap_ready.read())) {
        ap_sig_startack_grp_Accelerator_DCT_fu_67_ap_ready = grp_Accelerator_DCT_fu_67_ap_ready.read();
    } else {
        ap_sig_startack_grp_Accelerator_DCT_fu_67_ap_ready = ap_const_logic_1;
    }
}

void Accelerator_Block_proc::thread_ap_sig_startack_grp_Accelerator_Quant_fu_110_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_startack_grp_Accelerator_Quant_fu_110_ap_ready.read())) {
        ap_sig_startack_grp_Accelerator_Quant_fu_110_ap_ready = grp_Accelerator_Quant_fu_110_ap_ready.read();
    } else {
        ap_sig_startack_grp_Accelerator_Quant_fu_110_ap_ready = ap_const_logic_1;
    }
}

void Accelerator_Block_proc::thread_cond_fu_120_p2() {
    cond_fu_120_p2 = (!function_r.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<1>(): sc_lv<1>(function_r.read() == ap_const_lv8_1);
}

void Accelerator_Block_proc::thread_grp_Accelerator_DCT_fu_67_X_dout() {
    grp_Accelerator_DCT_fu_67_X_dout = X_dout.read();
}

void Accelerator_Block_proc::thread_grp_Accelerator_DCT_fu_67_X_empty_n() {
    grp_Accelerator_DCT_fu_67_X_empty_n = X_empty_n.read();
}

void Accelerator_Block_proc::thread_grp_Accelerator_DCT_fu_67_Y_q0() {
    grp_Accelerator_DCT_fu_67_Y_q0 = ap_const_lv32_0;
}

void Accelerator_Block_proc::thread_grp_Accelerator_DCT_fu_67_Y_q1() {
    grp_Accelerator_DCT_fu_67_Y_q1 = ap_const_lv32_0;
}

void Accelerator_Block_proc::thread_grp_Accelerator_DCT_fu_67_ap_start() {
    grp_Accelerator_DCT_fu_67_ap_start = grp_Accelerator_DCT_fu_67_ap_start_ap_start_reg.read();
}

void Accelerator_Block_proc::thread_grp_Accelerator_DCT_fu_67_function_r() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0))) {
        grp_Accelerator_DCT_fu_67_function_r = ap_const_lv8_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        grp_Accelerator_DCT_fu_67_function_r = function_r.read();
    } else {
        grp_Accelerator_DCT_fu_67_function_r = "XXXXXXXX";
    }
}

void Accelerator_Block_proc::thread_grp_Accelerator_DCT_fu_67_function_r_ap_vld() {
    grp_Accelerator_DCT_fu_67_function_r_ap_vld = ap_const_logic_1;
}

void Accelerator_Block_proc::thread_grp_Accelerator_Quant_fu_110_X_dout() {
    grp_Accelerator_Quant_fu_110_X_dout = X_dout.read();
}

void Accelerator_Block_proc::thread_grp_Accelerator_Quant_fu_110_X_empty_n() {
    grp_Accelerator_Quant_fu_110_X_empty_n = X_empty_n.read();
}

void Accelerator_Block_proc::thread_grp_Accelerator_Quant_fu_110_Y_full_n() {
    grp_Accelerator_Quant_fu_110_Y_full_n = Y_full_n.read();
}

void Accelerator_Block_proc::thread_grp_Accelerator_Quant_fu_110_ap_start() {
    grp_Accelerator_Quant_fu_110_ap_start = grp_Accelerator_Quant_fu_110_ap_start_ap_start_reg.read();
}

void Accelerator_Block_proc::thread_grp_Accelerator_Quant_fu_110_function_r() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0))) {
        grp_Accelerator_Quant_fu_110_function_r = function_r.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        grp_Accelerator_Quant_fu_110_function_r = ap_const_lv8_1;
    } else {
        grp_Accelerator_Quant_fu_110_function_r = "XXXXXXXX";
    }
}

void Accelerator_Block_proc::thread_temp_address0() {
    temp_address0 = grp_Accelerator_DCT_fu_67_Y_address0.read();
}

void Accelerator_Block_proc::thread_temp_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          !esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0)))) {
        temp_ce0 = grp_Accelerator_DCT_fu_67_Y_ce0.read();
    } else {
        temp_ce0 = ap_const_logic_0;
    }
}

void Accelerator_Block_proc::thread_temp_d0() {
    temp_d0 = grp_Accelerator_DCT_fu_67_Y_d0.read();
}

void Accelerator_Block_proc::thread_temp_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          !esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0)))) {
        temp_we0 = grp_Accelerator_DCT_fu_67_Y_we0.read();
    } else {
        temp_we0 = ap_const_logic_0;
    }
}

void Accelerator_Block_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!ap_sig_bdd_46.read() && !esl_seteq<1,1,1>(cond_fu_120_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else if ((!ap_sig_bdd_46.read() && esl_seteq<1,1,1>(cond_fu_120_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_Accelerator_DCT_fu_67_ap_done.read())) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            if (!((esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_Accelerator_Quant_fu_110_ap_done.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, grp_Accelerator_DCT_fu_67_ap_done.read()) && 
  !esl_seteq<1,1,1>(cond_reg_132.read(), ap_const_lv1_0)))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_Accelerator_Quant_fu_110_ap_done.read())) {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

