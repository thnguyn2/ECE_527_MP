// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="xillybus_wrapper,hls_ip_2015_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.185000,HLS_SYN_LAT=13,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=2,HLS_SYN_FF=688,HLS_SYN_LUT=1374}" *)

module xillybus_wrapper (
        ap_clk,
        ap_rst,
        in_r_dout,
        in_r_empty_n,
        in_r_read,
        out_r_din,
        out_r_full_n,
        out_r_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 14'b1;
parameter    ap_ST_st2_fsm_1 = 14'b10;
parameter    ap_ST_st3_fsm_2 = 14'b100;
parameter    ap_ST_st4_fsm_3 = 14'b1000;
parameter    ap_ST_st5_fsm_4 = 14'b10000;
parameter    ap_ST_st6_fsm_5 = 14'b100000;
parameter    ap_ST_st7_fsm_6 = 14'b1000000;
parameter    ap_ST_st8_fsm_7 = 14'b10000000;
parameter    ap_ST_st9_fsm_8 = 14'b100000000;
parameter    ap_ST_st10_fsm_9 = 14'b1000000000;
parameter    ap_ST_st11_fsm_10 = 14'b10000000000;
parameter    ap_ST_st12_fsm_11 = 14'b100000000000;
parameter    ap_ST_st13_fsm_12 = 14'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 14'b10000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_40A00000 = 32'b1000000101000000000000000000000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv9_181 = 9'b110000001;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input  [31:0] in_r_dout;
input   in_r_empty_n;
output   in_r_read;
output  [31:0] out_r_din;
input   out_r_full_n;
output   out_r_write;

reg in_r_read;
reg out_r_write;
reg   [31:0] in_read_reg_215;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm = 14'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_37;
wire   [31:0] grp_fu_73_p1;
reg   [31:0] data_reg_220;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_50;
wire   [31:0] grp_fu_68_p2;
reg   [31:0] data_1_reg_225;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_59;
reg   [0:0] p_Result_s_reg_230;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_68;
wire   [31:0] p_Val2_3_fu_195_p3;
reg   [31:0] p_Val2_3_reg_235;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_79;
wire   [31:0] grp_fu_68_p0;
wire   [31:0] grp_fu_68_p1;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_93;
wire   [31:0] grp_fu_73_p0;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_101;
wire   [31:0] p_Val2_s_fu_76_p1;
wire   [22:0] loc_V_1_fu_97_p1;
wire   [23:0] p_Result_1_fu_101_p3;
wire   [7:0] loc_V_fu_87_p4;
wire   [8:0] tmp_i_i_i_cast1_fu_113_p1;
wire   [8:0] sh_assign_fu_117_p2;
wire   [7:0] tmp_4_i_i_fu_131_p2;
wire   [0:0] isNeg_fu_123_p3;
wire  signed [8:0] tmp_4_i_i_cast_fu_137_p1;
wire   [8:0] sh_assign_1_fu_141_p3;
wire  signed [31:0] sh_assign_1_cast_fu_149_p1;
wire  signed [23:0] sh_assign_1_cast_cast_fu_153_p1;
wire   [77:0] tmp_2_i_i_fu_109_p1;
wire   [77:0] tmp_6_i_i_fu_157_p1;
wire   [23:0] tmp_7_i_i_fu_161_p2;
wire   [0:0] tmp_fu_173_p3;
wire   [77:0] tmp_9_i_i_fu_167_p2;
wire   [31:0] tmp_1_fu_181_p1;
wire   [31:0] tmp_2_fu_185_p4;
wire   [31:0] p_Val2_7_i_i_fu_203_p2;
wire    grp_fu_68_ce;
wire    grp_fu_73_ce;
reg   [13:0] ap_NS_fsm;


xillybus_wrapper_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
xillybus_wrapper_fadd_32ns_32ns_32_5_full_dsp_U0(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_68_p0 ),
    .din1( grp_fu_68_p1 ),
    .ce( grp_fu_68_ce ),
    .dout( grp_fu_68_p2 )
);

xillybus_wrapper_sitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
xillybus_wrapper_sitofp_32ns_32_6_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_73_p0 ),
    .ce( grp_fu_73_ce ),
    .dout( grp_fu_73_p1 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        data_1_reg_225 <= grp_fu_68_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        data_reg_220 <= grp_fu_73_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(in_r_empty_n == ap_const_logic_0))) begin
        in_read_reg_215 <= in_r_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        p_Result_s_reg_230 <= p_Val2_s_fu_76_p1[ap_const_lv32_1F];
        p_Val2_3_reg_235 <= p_Val2_3_fu_195_p3;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_59)
begin
    if (ap_sig_bdd_59) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_68)
begin
    if (ap_sig_bdd_68) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_79)
begin
    if (ap_sig_bdd_79) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_37)
begin
    if (ap_sig_bdd_37) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_101)
begin
    if (ap_sig_bdd_101) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_50)
begin
    if (ap_sig_bdd_50) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_93)
begin
    if (ap_sig_bdd_93) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// in_r_read assign process. ///
always @ (in_r_empty_n or ap_sig_cseq_ST_st1_fsm_0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(in_r_empty_n == ap_const_logic_0))) begin
        in_r_read = ap_const_logic_1;
    end else begin
        in_r_read = ap_const_logic_0;
    end
end

/// out_r_write assign process. ///
always @ (out_r_full_n or ap_sig_cseq_ST_st14_fsm_13)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) & ~(out_r_full_n == ap_const_logic_0))) begin
        out_r_write = ap_const_logic_1;
    end else begin
        out_r_write = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (in_r_empty_n or out_r_full_n or ap_CS_fsm)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(in_r_empty_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            if (~(out_r_full_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_101 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_101 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_37 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_37 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_50 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_50 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_59 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_59 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_68 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_68 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_79 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_79 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_93 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_93 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end
assign grp_fu_68_ce = ap_const_logic_1;
assign grp_fu_68_p0 = data_reg_220;
assign grp_fu_68_p1 = ap_const_lv32_40A00000;
assign grp_fu_73_ce = ap_const_logic_1;
assign grp_fu_73_p0 = in_read_reg_215;
assign isNeg_fu_123_p3 = sh_assign_fu_117_p2[ap_const_lv32_8];
assign loc_V_1_fu_97_p1 = p_Val2_s_fu_76_p1[22:0];
assign loc_V_fu_87_p4 = {{p_Val2_s_fu_76_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign out_r_din = ((p_Result_s_reg_230[0:0]===1'b1)? p_Val2_7_i_i_fu_203_p2: p_Val2_3_reg_235);
assign p_Result_1_fu_101_p3 = {{ap_const_lv1_1}, {loc_V_1_fu_97_p1}};
assign p_Val2_3_fu_195_p3 = ((isNeg_fu_123_p3[0:0]===1'b1)? tmp_1_fu_181_p1: tmp_2_fu_185_p4);
assign p_Val2_7_i_i_fu_203_p2 = (ap_const_lv32_0 - p_Val2_3_reg_235);
assign p_Val2_s_fu_76_p1 = data_1_reg_225;
assign sh_assign_1_cast_cast_fu_153_p1 = $signed(sh_assign_1_fu_141_p3);
assign sh_assign_1_cast_fu_149_p1 = $signed(sh_assign_1_fu_141_p3);
assign sh_assign_1_fu_141_p3 = ((isNeg_fu_123_p3[0:0]===1'b1)? tmp_4_i_i_cast_fu_137_p1: sh_assign_fu_117_p2);
assign sh_assign_fu_117_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_i_cast1_fu_113_p1));
assign tmp_1_fu_181_p1 = tmp_fu_173_p3;
assign tmp_2_fu_185_p4 = {{tmp_9_i_i_fu_167_p2[ap_const_lv32_36 : ap_const_lv32_17]}};
assign tmp_2_i_i_fu_109_p1 = p_Result_1_fu_101_p3;
assign tmp_4_i_i_cast_fu_137_p1 = $signed(tmp_4_i_i_fu_131_p2);
assign tmp_4_i_i_fu_131_p2 = (ap_const_lv8_7F - loc_V_fu_87_p4);
assign tmp_6_i_i_fu_157_p1 = $unsigned(sh_assign_1_cast_fu_149_p1);
assign tmp_7_i_i_fu_161_p2 = p_Result_1_fu_101_p3 >> sh_assign_1_cast_cast_fu_153_p1;
assign tmp_9_i_i_fu_167_p2 = tmp_2_i_i_fu_109_p1 << tmp_6_i_i_fu_157_p1;
assign tmp_fu_173_p3 = tmp_7_i_i_fu_161_p2[ap_const_lv32_17];
assign tmp_i_i_i_cast1_fu_113_p1 = loc_V_fu_87_p4;


endmodule //xillybus_wrapper

