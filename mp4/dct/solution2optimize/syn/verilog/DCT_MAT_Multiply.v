// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module DCT_MAT_Multiply (
        A_0_1_read,
        A_0_2_read,
        A_0_3_read,
        A_0_5_read,
        A_0_6_read,
        A_0_7_read,
        A_1_0_read,
        A_1_2_read,
        A_1_3_read,
        A_1_4_read,
        A_1_5_read,
        A_1_6_read,
        A_1_7_read,
        A_2_0_read,
        A_2_1_read,
        A_2_3_read,
        A_2_4_read,
        A_2_5_read,
        A_2_6_read,
        A_2_7_read,
        A_3_0_read,
        A_3_1_read,
        A_3_2_read,
        A_3_4_read,
        A_3_5_read,
        A_3_6_read,
        A_3_7_read,
        A_4_1_read,
        A_4_2_read,
        A_4_3_read,
        A_4_5_read,
        A_4_6_read,
        A_4_7_read,
        A_5_0_read,
        A_5_1_read,
        A_5_2_read,
        A_5_3_read,
        A_5_4_read,
        A_5_6_read,
        A_5_7_read,
        A_6_0_read,
        A_6_1_read,
        A_6_2_read,
        A_6_3_read,
        A_6_4_read,
        A_6_5_read,
        A_6_7_read,
        A_7_0_read,
        A_7_1_read,
        A_7_2_read,
        A_7_3_read,
        A_7_4_read,
        A_7_5_read,
        A_7_6_read,
        B_dout,
        B_empty_n,
        B_read,
        C_address0,
        C_ce0,
        C_d0,
        C_q0,
        C_we0,
        C_address1,
        C_ce1,
        C_d1,
        C_q1,
        C_we1,
        ap_clk,
        ap_rst,
        A_5_1_read_ap_ack,
        A_6_2_read_ap_ack,
        A_4_1_read_ap_ack,
        A_5_0_read_ap_ack,
        A_1_2_read_ap_ack,
        A_3_6_read_ap_ack,
        A_5_6_read_ap_ack,
        A_1_5_read_ap_ack,
        A_6_4_read_ap_ack,
        A_4_7_read_ap_ack,
        A_0_7_read_ap_ack,
        A_7_5_read_ap_ack,
        A_2_0_read_ap_ack,
        A_1_4_read_ap_ack,
        A_0_1_read_ap_ack,
        A_0_6_read_ap_ack,
        A_0_5_read_ap_ack,
        A_5_3_read_ap_ack,
        A_4_3_read_ap_ack,
        A_4_2_read_ap_ack,
        A_2_5_read_ap_ack,
        A_5_4_read_ap_ack,
        A_5_7_read_ap_ack,
        A_6_3_read_ap_ack,
        A_1_7_read_ap_ack,
        A_6_5_read_ap_ack,
        A_6_7_read_ap_ack,
        A_5_2_read_ap_ack,
        A_6_0_read_ap_ack,
        A_0_2_read_ap_ack,
        A_7_2_read_ap_ack,
        A_0_3_read_ap_ack,
        A_7_3_read_ap_ack,
        A_2_4_read_ap_ack,
        A_4_6_read_ap_ack,
        A_7_4_read_ap_ack,
        A_3_1_read_ap_ack,
        A_2_1_read_ap_ack,
        A_7_6_read_ap_ack,
        A_3_2_read_ap_ack,
        A_7_1_read_ap_ack,
        A_1_3_read_ap_ack,
        A_6_1_read_ap_ack,
        A_7_0_read_ap_ack,
        A_2_6_read_ap_ack,
        A_3_0_read_ap_ack,
        A_3_7_read_ap_ack,
        A_1_6_read_ap_ack,
        A_1_0_read_ap_ack,
        A_2_7_read_ap_ack,
        A_3_5_read_ap_ack,
        A_3_4_read_ap_ack,
        A_2_3_read_ap_ack,
        A_4_5_read_ap_ack,
        ap_done,
        ap_start,
        ap_idle,
        ap_ready
);

parameter    ap_const_logic_0 = 1'b0;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_true = 1'b1;

input  [31:0] A_0_1_read;
input  [31:0] A_0_2_read;
input  [31:0] A_0_3_read;
input  [31:0] A_0_5_read;
input  [31:0] A_0_6_read;
input  [31:0] A_0_7_read;
input  [31:0] A_1_0_read;
input  [31:0] A_1_2_read;
input  [31:0] A_1_3_read;
input  [31:0] A_1_4_read;
input  [31:0] A_1_5_read;
input  [31:0] A_1_6_read;
input  [31:0] A_1_7_read;
input  [31:0] A_2_0_read;
input  [31:0] A_2_1_read;
input  [31:0] A_2_3_read;
input  [31:0] A_2_4_read;
input  [31:0] A_2_5_read;
input  [31:0] A_2_6_read;
input  [31:0] A_2_7_read;
input  [31:0] A_3_0_read;
input  [31:0] A_3_1_read;
input  [31:0] A_3_2_read;
input  [31:0] A_3_4_read;
input  [31:0] A_3_5_read;
input  [31:0] A_3_6_read;
input  [31:0] A_3_7_read;
input  [31:0] A_4_1_read;
input  [31:0] A_4_2_read;
input  [31:0] A_4_3_read;
input  [31:0] A_4_5_read;
input  [31:0] A_4_6_read;
input  [31:0] A_4_7_read;
input  [31:0] A_5_0_read;
input  [31:0] A_5_1_read;
input  [31:0] A_5_2_read;
input  [31:0] A_5_3_read;
input  [31:0] A_5_4_read;
input  [31:0] A_5_6_read;
input  [31:0] A_5_7_read;
input  [31:0] A_6_0_read;
input  [31:0] A_6_1_read;
input  [31:0] A_6_2_read;
input  [31:0] A_6_3_read;
input  [31:0] A_6_4_read;
input  [31:0] A_6_5_read;
input  [31:0] A_6_7_read;
input  [31:0] A_7_0_read;
input  [31:0] A_7_1_read;
input  [31:0] A_7_2_read;
input  [31:0] A_7_3_read;
input  [31:0] A_7_4_read;
input  [31:0] A_7_5_read;
input  [31:0] A_7_6_read;
input  [31:0] B_dout;
input   B_empty_n;
output   B_read;
output  [5:0] C_address0;
output   C_ce0;
output  [31:0] C_d0;
input  [31:0] C_q0;
output   C_we0;
output  [5:0] C_address1;
output   C_ce1;
output  [31:0] C_d1;
input  [31:0] C_q1;
output   C_we1;
input   ap_clk;
input   ap_rst;
output   A_5_1_read_ap_ack;
output   A_6_2_read_ap_ack;
output   A_4_1_read_ap_ack;
output   A_5_0_read_ap_ack;
output   A_1_2_read_ap_ack;
output   A_3_6_read_ap_ack;
output   A_5_6_read_ap_ack;
output   A_1_5_read_ap_ack;
output   A_6_4_read_ap_ack;
output   A_4_7_read_ap_ack;
output   A_0_7_read_ap_ack;
output   A_7_5_read_ap_ack;
output   A_2_0_read_ap_ack;
output   A_1_4_read_ap_ack;
output   A_0_1_read_ap_ack;
output   A_0_6_read_ap_ack;
output   A_0_5_read_ap_ack;
output   A_5_3_read_ap_ack;
output   A_4_3_read_ap_ack;
output   A_4_2_read_ap_ack;
output   A_2_5_read_ap_ack;
output   A_5_4_read_ap_ack;
output   A_5_7_read_ap_ack;
output   A_6_3_read_ap_ack;
output   A_1_7_read_ap_ack;
output   A_6_5_read_ap_ack;
output   A_6_7_read_ap_ack;
output   A_5_2_read_ap_ack;
output   A_6_0_read_ap_ack;
output   A_0_2_read_ap_ack;
output   A_7_2_read_ap_ack;
output   A_0_3_read_ap_ack;
output   A_7_3_read_ap_ack;
output   A_2_4_read_ap_ack;
output   A_4_6_read_ap_ack;
output   A_7_4_read_ap_ack;
output   A_3_1_read_ap_ack;
output   A_2_1_read_ap_ack;
output   A_7_6_read_ap_ack;
output   A_3_2_read_ap_ack;
output   A_7_1_read_ap_ack;
output   A_1_3_read_ap_ack;
output   A_6_1_read_ap_ack;
output   A_7_0_read_ap_ack;
output   A_2_6_read_ap_ack;
output   A_3_0_read_ap_ack;
output   A_3_7_read_ap_ack;
output   A_1_6_read_ap_ack;
output   A_1_0_read_ap_ack;
output   A_2_7_read_ap_ack;
output   A_3_5_read_ap_ack;
output   A_3_4_read_ap_ack;
output   A_2_3_read_ap_ack;
output   A_4_5_read_ap_ack;
output   ap_done;
input   ap_start;
output   ap_idle;
output   ap_ready;

reg ap_idle;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_start;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
reg    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_idle;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_ready;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_dout;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_empty_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_read;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read64;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read191;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read192;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read193;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read196;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read199;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read200;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read201;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read202;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read203;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read204;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read205;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read206;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read207;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read208;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read209;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read211;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read212;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read213;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read214;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read215;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read216;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read218;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read219;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read220;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read221;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read222;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read223;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read224;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read225;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read226;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read227;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read228;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read229;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read230;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read232;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read233;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read234;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read235;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read236;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read237;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read238;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read239;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read240;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read241;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read242;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read243;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read244;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read245;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read246;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read247;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read248;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read250;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read252;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_1_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_1_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_1_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_2_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_2_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_2_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_1_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_1_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_1_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_0_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_0_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_0_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_6_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_6_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_6_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_0_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_0_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_0_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_2_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_2_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_2_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_1_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_1_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_1_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_7_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_7_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_7_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_6_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_6_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_6_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_6_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_6_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_6_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_5_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_5_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_5_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_4_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_4_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_4_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_7_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_7_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_7_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_7_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_7_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_7_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_5_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_5_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_5_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_0_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_0_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_0_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_4_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_4_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_4_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_1_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_1_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_1_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_6_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_6_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_6_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_0_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_0_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_0_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_5_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_5_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_5_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_3_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_3_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_3_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_3_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_3_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_3_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_2_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_2_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_2_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_5_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_5_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_5_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_4_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_4_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_4_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_4_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_4_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_4_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_7_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_7_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_7_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_3_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_3_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_3_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_7_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_7_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_7_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_5_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_5_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_5_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_7_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_7_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_7_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_2_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_2_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_2_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_0_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_0_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_0_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_2_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_2_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_2_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_2_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_2_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_2_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_3_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_3_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_3_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_3_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_3_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_3_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_4_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_4_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_4_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_6_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_6_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_6_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_4_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_4_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_4_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_4_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_4_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_4_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_1_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_1_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_1_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_1_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_1_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_1_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_6_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_6_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_6_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_2_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_2_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_2_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_1_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_1_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_1_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_3_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_3_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_3_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_1_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_1_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_1_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_0_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_0_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_0_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_6_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_6_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_6_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_0_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_0_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_0_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_7_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_7_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_7_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_6_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_6_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_6_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_0_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_0_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_0_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_7_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_7_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_7_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_5_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_5_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_5_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_4_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_4_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_4_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_3_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_3_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_3_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_3_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_3_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_3_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_5_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_5_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_5_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_5_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_5_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_5_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_2_out_din;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_2_out_full_n;
wire    DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_2_out_write;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_0;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_1;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_2;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_3;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_4;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_5;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_6;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_7;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_8;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_9;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_10;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_11;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_12;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_13;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_14;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_15;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_16;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_17;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_18;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_19;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_20;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_21;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_22;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_23;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_24;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_25;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_26;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_27;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_28;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_29;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_30;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_31;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_32;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_33;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_34;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_35;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_36;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_37;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_38;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_39;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_40;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_41;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_42;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_43;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_44;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_45;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_46;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_47;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_48;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_49;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_50;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_51;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_52;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_53;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_54;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_55;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_56;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_57;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_58;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_59;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_60;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_61;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_62;
wire   [31:0] DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_63;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_6_channel;
wire    B_cached_2_6_channel_full_n;
reg    ap_reg_ready_B_cached_2_6_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_2_6_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_4_channel;
wire    B_cached_6_4_channel_full_n;
reg    ap_reg_ready_B_cached_6_4_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_6_4_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_4_channel;
wire    B_cached_0_4_channel_full_n;
reg    ap_reg_ready_B_cached_0_4_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_0_4_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_2_channel;
wire    B_cached_1_2_channel_full_n;
reg    ap_reg_ready_B_cached_1_2_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_1_2_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_5_channel;
wire    B_cached_1_5_channel_full_n;
reg    ap_reg_ready_B_cached_1_5_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_1_5_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_2_channel;
wire    B_cached_0_2_channel_full_n;
reg    ap_reg_ready_B_cached_0_2_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_0_2_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_5_channel;
wire    B_cached_6_5_channel_full_n;
reg    ap_reg_ready_B_cached_6_5_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_6_5_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_6_channel;
wire    B_cached_0_6_channel_full_n;
reg    ap_reg_ready_B_cached_0_6_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_0_6_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_1_channel;
wire    B_cached_0_1_channel_full_n;
reg    ap_reg_ready_B_cached_0_1_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_0_1_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_6_channel;
wire    B_cached_3_6_channel_full_n;
reg    ap_reg_ready_B_cached_3_6_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_3_6_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_3_channel;
wire    B_cached_4_3_channel_full_n;
reg    ap_reg_ready_B_cached_4_3_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_4_3_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_5_channel;
wire    B_cached_0_5_channel_full_n;
reg    ap_reg_ready_B_cached_0_5_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_0_5_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_5_channel;
wire    B_cached_4_5_channel_full_n;
reg    ap_reg_ready_B_cached_4_5_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_4_5_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_5_channel;
wire    B_cached_5_5_channel_full_n;
reg    ap_reg_ready_B_cached_5_5_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_5_5_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_1_channel;
wire    B_cached_1_1_channel_full_n;
reg    ap_reg_ready_B_cached_1_1_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_1_1_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_7_channel;
wire    B_cached_1_7_channel_full_n;
reg    ap_reg_ready_B_cached_1_7_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_1_7_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_1_channel;
wire    B_cached_2_1_channel_full_n;
reg    ap_reg_ready_B_cached_2_1_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_2_1_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_6_channel;
wire    B_cached_6_6_channel_full_n;
reg    ap_reg_ready_B_cached_6_6_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_6_6_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_7_channel;
wire    B_cached_6_7_channel_full_n;
reg    ap_reg_ready_B_cached_6_7_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_6_7_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_2_channel;
wire    B_cached_7_2_channel_full_n;
reg    ap_reg_ready_B_cached_7_2_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_7_2_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_3_channel;
wire    B_cached_7_3_channel_full_n;
reg    ap_reg_ready_B_cached_7_3_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_7_3_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_2_channel;
wire    B_cached_5_2_channel_full_n;
reg    ap_reg_ready_B_cached_5_2_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_5_2_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_3_channel;
wire    B_cached_6_3_channel_full_n;
reg    ap_reg_ready_B_cached_6_3_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_6_3_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_6_channel;
wire    B_cached_7_6_channel_full_n;
reg    ap_reg_ready_B_cached_7_6_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_7_6_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_1_channel;
wire    B_cached_4_1_channel_full_n;
reg    ap_reg_ready_B_cached_4_1_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_4_1_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_1_channel;
wire    B_cached_5_1_channel_full_n;
reg    ap_reg_ready_B_cached_5_1_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_5_1_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_7_channel;
wire    B_cached_4_7_channel_full_n;
reg    ap_reg_ready_B_cached_4_7_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_4_7_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_5_channel;
wire    B_cached_7_5_channel_full_n;
reg    ap_reg_ready_B_cached_7_5_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_7_5_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_7_channel;
wire    B_cached_7_7_channel_full_n;
reg    ap_reg_ready_B_cached_7_7_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_7_7_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_6_channel;
wire    B_cached_5_6_channel_full_n;
reg    ap_reg_ready_B_cached_5_6_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_5_6_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_3_channel;
wire    B_cached_2_3_channel_full_n;
reg    ap_reg_ready_B_cached_2_3_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_2_3_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_2_channel;
wire    B_cached_3_2_channel_full_n;
reg    ap_reg_ready_B_cached_3_2_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_3_2_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_0_channel;
wire    B_cached_4_0_channel_full_n;
reg    ap_reg_ready_B_cached_4_0_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_4_0_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_0_channel;
wire    B_cached_2_0_channel_full_n;
reg    ap_reg_ready_B_cached_2_0_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_2_0_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_7_channel;
wire    B_cached_3_7_channel_full_n;
reg    ap_reg_ready_B_cached_3_7_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_3_7_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_0_channel;
wire    B_cached_5_0_channel_full_n;
reg    ap_reg_ready_B_cached_5_0_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_5_0_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_4_channel;
wire    B_cached_4_4_channel_full_n;
reg    ap_reg_ready_B_cached_4_4_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_4_4_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_6_channel;
wire    B_cached_4_6_channel_full_n;
reg    ap_reg_ready_B_cached_4_6_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_4_6_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_4_channel;
wire    B_cached_2_4_channel_full_n;
reg    ap_reg_ready_B_cached_2_4_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_2_4_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_0_channel;
wire    B_cached_7_0_channel_full_n;
reg    ap_reg_ready_B_cached_7_0_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_7_0_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_3_channel;
wire    B_cached_0_3_channel_full_n;
reg    ap_reg_ready_B_cached_0_3_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_0_3_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_4_channel;
wire    B_cached_1_4_channel_full_n;
reg    ap_reg_ready_B_cached_1_4_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_1_4_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_2_channel;
wire    B_cached_4_2_channel_full_n;
reg    ap_reg_ready_B_cached_4_2_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_4_2_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_0_channel;
wire    B_cached_6_0_channel_full_n;
reg    ap_reg_ready_B_cached_6_0_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_6_0_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_1_channel;
wire    B_cached_7_1_channel_full_n;
reg    ap_reg_ready_B_cached_7_1_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_7_1_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_4_channel;
wire    B_cached_3_4_channel_full_n;
reg    ap_reg_ready_B_cached_3_4_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_3_4_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_4_channel;
wire    B_cached_7_4_channel_full_n;
reg    ap_reg_ready_B_cached_7_4_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_7_4_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_0_channel;
wire    B_cached_1_0_channel_full_n;
reg    ap_reg_ready_B_cached_1_0_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_1_0_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_5_channel;
wire    B_cached_2_5_channel_full_n;
reg    ap_reg_ready_B_cached_2_5_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_2_5_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_1_channel;
wire    B_cached_3_1_channel_full_n;
reg    ap_reg_ready_B_cached_3_1_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_3_1_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_6_channel;
wire    B_cached_1_6_channel_full_n;
reg    ap_reg_ready_B_cached_1_6_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_1_6_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_3_channel;
wire    B_cached_3_3_channel_full_n;
reg    ap_reg_ready_B_cached_3_3_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_3_3_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_5_channel;
wire    B_cached_3_5_channel_full_n;
reg    ap_reg_ready_B_cached_3_5_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_3_5_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_7_channel;
wire    B_cached_0_7_channel_full_n;
reg    ap_reg_ready_B_cached_0_7_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_0_7_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_4_channel;
wire    B_cached_5_4_channel_full_n;
reg    ap_reg_ready_B_cached_5_4_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_5_4_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_0_channel;
wire    B_cached_0_0_channel_full_n;
reg    ap_reg_ready_B_cached_0_0_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_0_0_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_2_channel;
wire    B_cached_2_2_channel_full_n;
reg    ap_reg_ready_B_cached_2_2_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_2_2_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_3_channel;
wire    B_cached_1_3_channel_full_n;
reg    ap_reg_ready_B_cached_1_3_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_1_3_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_0_channel;
wire    B_cached_3_0_channel_full_n;
reg    ap_reg_ready_B_cached_3_0_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_3_0_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_7_channel;
wire    B_cached_2_7_channel_full_n;
reg    ap_reg_ready_B_cached_2_7_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_2_7_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_3_channel;
wire    B_cached_5_3_channel_full_n;
reg    ap_reg_ready_B_cached_5_3_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_5_3_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_1_channel;
wire    B_cached_6_1_channel_full_n;
reg    ap_reg_ready_B_cached_6_1_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_6_1_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_2_channel;
wire    B_cached_6_2_channel_full_n;
reg    ap_reg_ready_B_cached_6_2_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_6_2_channel_full_n;
reg    ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_7_channel;
wire    B_cached_5_7_channel_full_n;
reg    ap_reg_ready_B_cached_5_7_channel_full_n = 1'b0;
reg    ap_sig_ready_B_cached_5_7_channel_full_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_start;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_done;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_continue;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_idle;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_0_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_0_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_0_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_0_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_0_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_0_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_0_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_0_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_0_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_0_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_0_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_0_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_0_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_0_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_0_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_0_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_0_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_0_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_0_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_0_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_0_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_0_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_0_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_0_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read1;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read2;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read3;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read4;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read5;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read6;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read7;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_1_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_1_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_1_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_1_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_1_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_1_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_1_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_1_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_1_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_1_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_1_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_1_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_1_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_1_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_1_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_1_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_1_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_1_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_1_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_1_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_1_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_1_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_1_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_1_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read8;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read9;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read10;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read11;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read12;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read13;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read14;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read15;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_2_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_2_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_2_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_2_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_2_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_2_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_2_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_2_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_2_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_2_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_2_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_2_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_2_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_2_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_2_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_2_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_2_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_2_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_2_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_2_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_2_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_2_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_2_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_2_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read16;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read17;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read18;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read19;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read20;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read21;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read22;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read23;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_3_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_3_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_3_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_3_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_3_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_3_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_3_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_3_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_3_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_3_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_3_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_3_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_3_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_3_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_3_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_3_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_3_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_3_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_3_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_3_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_3_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_3_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_3_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_3_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read24;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read25;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read26;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read27;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read28;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read29;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read30;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read31;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_4_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_4_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_4_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_4_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_4_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_4_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_4_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_4_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_4_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_4_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_4_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_4_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_4_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_4_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_4_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_4_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_4_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_4_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_4_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_4_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_4_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_4_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_4_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_4_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read32;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read33;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read34;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read35;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read36;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read37;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read38;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read39;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_5_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_5_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_5_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_5_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_5_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_5_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_5_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_5_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_5_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_5_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_5_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_5_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_5_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_5_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_5_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_5_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_5_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_5_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_5_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_5_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_5_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_5_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_5_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_5_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read40;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read41;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read42;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read43;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read44;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read45;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read46;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read47;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_6_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_6_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_6_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_6_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_6_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_6_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_6_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_6_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_6_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_6_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_6_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_6_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_6_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_6_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_6_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_6_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_6_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_6_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_6_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_6_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_6_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_6_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_6_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_6_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read48;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read49;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read50;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read51;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read52;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read53;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read54;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read55;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_7_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_7_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_7_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_7_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_7_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_7_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_7_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_7_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_7_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_7_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_7_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_7_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_7_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_7_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_7_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_7_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_7_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_7_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_7_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_7_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_7_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_7_dout;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_7_empty_n;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_7_read;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read56;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read57;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read58;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read59;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read60;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read61;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read62;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read63;
wire   [5:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_C_address0;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_C_ce0;
wire    DCT_MAT_Multiply_Loop_Row_proc440_U0_C_we0;
wire   [31:0] DCT_MAT_Multiply_Loop_Row_proc440_U0_C_d0;
wire    ap_sig_hs_continue;
wire    A_5_171_U_ap_dummy_ce;
wire   [31:0] A_5_171_din;
wire    A_5_171_full_n;
wire    A_5_171_write;
wire   [31:0] A_5_171_dout;
wire    A_5_171_empty_n;
wire    A_5_171_read;
wire    A_6_272_U_ap_dummy_ce;
wire   [31:0] A_6_272_din;
wire    A_6_272_full_n;
wire    A_6_272_write;
wire   [31:0] A_6_272_dout;
wire    A_6_272_empty_n;
wire    A_6_272_read;
wire    A_4_173_U_ap_dummy_ce;
wire   [31:0] A_4_173_din;
wire    A_4_173_full_n;
wire    A_4_173_write;
wire   [31:0] A_4_173_dout;
wire    A_4_173_empty_n;
wire    A_4_173_read;
wire    A_5_074_U_ap_dummy_ce;
wire   [31:0] A_5_074_din;
wire    A_5_074_full_n;
wire    A_5_074_write;
wire   [31:0] A_5_074_dout;
wire    A_5_074_empty_n;
wire    A_5_074_read;
wire    A_6_675_U_ap_dummy_ce;
wire   [31:0] A_6_675_din;
wire    A_6_675_full_n;
wire    A_6_675_write;
wire   [31:0] A_6_675_dout;
wire    A_6_675_empty_n;
wire    A_6_675_read;
wire    A_4_076_U_ap_dummy_ce;
wire   [31:0] A_4_076_din;
wire    A_4_076_full_n;
wire    A_4_076_write;
wire   [31:0] A_4_076_dout;
wire    A_4_076_empty_n;
wire    A_4_076_read;
wire    A_1_277_U_ap_dummy_ce;
wire   [31:0] A_1_277_din;
wire    A_1_277_full_n;
wire    A_1_277_write;
wire   [31:0] A_1_277_dout;
wire    A_1_277_empty_n;
wire    A_1_277_read;
wire    A_1_178_U_ap_dummy_ce;
wire   [31:0] A_1_178_din;
wire    A_1_178_full_n;
wire    A_1_178_write;
wire   [31:0] A_1_178_dout;
wire    A_1_178_empty_n;
wire    A_1_178_read;
wire    A_7_779_U_ap_dummy_ce;
wire   [31:0] A_7_779_din;
wire    A_7_779_full_n;
wire    A_7_779_write;
wire   [31:0] A_7_779_dout;
wire    A_7_779_empty_n;
wire    A_7_779_read;
wire    A_3_680_U_ap_dummy_ce;
wire   [31:0] A_3_680_din;
wire    A_3_680_full_n;
wire    A_3_680_write;
wire   [31:0] A_3_680_dout;
wire    A_3_680_empty_n;
wire    A_3_680_read;
wire    A_5_681_U_ap_dummy_ce;
wire   [31:0] A_5_681_din;
wire    A_5_681_full_n;
wire    A_5_681_write;
wire   [31:0] A_5_681_dout;
wire    A_5_681_empty_n;
wire    A_5_681_read;
wire    A_1_582_U_ap_dummy_ce;
wire   [31:0] A_1_582_din;
wire    A_1_582_full_n;
wire    A_1_582_write;
wire   [31:0] A_1_582_dout;
wire    A_1_582_empty_n;
wire    A_1_582_read;
wire    A_6_483_U_ap_dummy_ce;
wire   [31:0] A_6_483_din;
wire    A_6_483_full_n;
wire    A_6_483_write;
wire   [31:0] A_6_483_dout;
wire    A_6_483_empty_n;
wire    A_6_483_read;
wire    A_4_784_U_ap_dummy_ce;
wire   [31:0] A_4_784_din;
wire    A_4_784_full_n;
wire    A_4_784_write;
wire   [31:0] A_4_784_dout;
wire    A_4_784_empty_n;
wire    A_4_784_read;
wire    A_0_785_U_ap_dummy_ce;
wire   [31:0] A_0_785_din;
wire    A_0_785_full_n;
wire    A_0_785_write;
wire   [31:0] A_0_785_dout;
wire    A_0_785_empty_n;
wire    A_0_785_read;
wire    A_7_586_U_ap_dummy_ce;
wire   [31:0] A_7_586_din;
wire    A_7_586_full_n;
wire    A_7_586_write;
wire   [31:0] A_7_586_dout;
wire    A_7_586_empty_n;
wire    A_7_586_read;
wire    A_2_087_U_ap_dummy_ce;
wire   [31:0] A_2_087_din;
wire    A_2_087_full_n;
wire    A_2_087_write;
wire   [31:0] A_2_087_dout;
wire    A_2_087_empty_n;
wire    A_2_087_read;
wire    A_1_488_U_ap_dummy_ce;
wire   [31:0] A_1_488_din;
wire    A_1_488_full_n;
wire    A_1_488_write;
wire   [31:0] A_1_488_dout;
wire    A_1_488_empty_n;
wire    A_1_488_read;
wire    A_0_189_U_ap_dummy_ce;
wire   [31:0] A_0_189_din;
wire    A_0_189_full_n;
wire    A_0_189_write;
wire   [31:0] A_0_189_dout;
wire    A_0_189_empty_n;
wire    A_0_189_read;
wire    A_0_690_U_ap_dummy_ce;
wire   [31:0] A_0_690_din;
wire    A_0_690_full_n;
wire    A_0_690_write;
wire   [31:0] A_0_690_dout;
wire    A_0_690_empty_n;
wire    A_0_690_read;
wire    A_0_091_U_ap_dummy_ce;
wire   [31:0] A_0_091_din;
wire    A_0_091_full_n;
wire    A_0_091_write;
wire   [31:0] A_0_091_dout;
wire    A_0_091_empty_n;
wire    A_0_091_read;
wire    A_0_592_U_ap_dummy_ce;
wire   [31:0] A_0_592_din;
wire    A_0_592_full_n;
wire    A_0_592_write;
wire   [31:0] A_0_592_dout;
wire    A_0_592_empty_n;
wire    A_0_592_read;
wire    A_5_393_U_ap_dummy_ce;
wire   [31:0] A_5_393_din;
wire    A_5_393_full_n;
wire    A_5_393_write;
wire   [31:0] A_5_393_dout;
wire    A_5_393_empty_n;
wire    A_5_393_read;
wire    A_4_394_U_ap_dummy_ce;
wire   [31:0] A_4_394_din;
wire    A_4_394_full_n;
wire    A_4_394_write;
wire   [31:0] A_4_394_dout;
wire    A_4_394_empty_n;
wire    A_4_394_read;
wire    A_4_295_U_ap_dummy_ce;
wire   [31:0] A_4_295_din;
wire    A_4_295_full_n;
wire    A_4_295_write;
wire   [31:0] A_4_295_dout;
wire    A_4_295_empty_n;
wire    A_4_295_read;
wire    A_2_596_U_ap_dummy_ce;
wire   [31:0] A_2_596_din;
wire    A_2_596_full_n;
wire    A_2_596_write;
wire   [31:0] A_2_596_dout;
wire    A_2_596_empty_n;
wire    A_2_596_read;
wire    A_5_497_U_ap_dummy_ce;
wire   [31:0] A_5_497_din;
wire    A_5_497_full_n;
wire    A_5_497_write;
wire   [31:0] A_5_497_dout;
wire    A_5_497_empty_n;
wire    A_5_497_read;
wire    A_4_498_U_ap_dummy_ce;
wire   [31:0] A_4_498_din;
wire    A_4_498_full_n;
wire    A_4_498_write;
wire   [31:0] A_4_498_dout;
wire    A_4_498_empty_n;
wire    A_4_498_read;
wire    A_5_799_U_ap_dummy_ce;
wire   [31:0] A_5_799_din;
wire    A_5_799_full_n;
wire    A_5_799_write;
wire   [31:0] A_5_799_dout;
wire    A_5_799_empty_n;
wire    A_5_799_read;
wire    A_6_3100_U_ap_dummy_ce;
wire   [31:0] A_6_3100_din;
wire    A_6_3100_full_n;
wire    A_6_3100_write;
wire   [31:0] A_6_3100_dout;
wire    A_6_3100_empty_n;
wire    A_6_3100_read;
wire    A_1_7101_U_ap_dummy_ce;
wire   [31:0] A_1_7101_din;
wire    A_1_7101_full_n;
wire    A_1_7101_write;
wire   [31:0] A_1_7101_dout;
wire    A_1_7101_empty_n;
wire    A_1_7101_read;
wire    A_6_5102_U_ap_dummy_ce;
wire   [31:0] A_6_5102_din;
wire    A_6_5102_full_n;
wire    A_6_5102_write;
wire   [31:0] A_6_5102_dout;
wire    A_6_5102_empty_n;
wire    A_6_5102_read;
wire    A_6_7103_U_ap_dummy_ce;
wire   [31:0] A_6_7103_din;
wire    A_6_7103_full_n;
wire    A_6_7103_write;
wire   [31:0] A_6_7103_dout;
wire    A_6_7103_empty_n;
wire    A_6_7103_read;
wire    A_5_2104_U_ap_dummy_ce;
wire   [31:0] A_5_2104_din;
wire    A_5_2104_full_n;
wire    A_5_2104_write;
wire   [31:0] A_5_2104_dout;
wire    A_5_2104_empty_n;
wire    A_5_2104_read;
wire    A_6_0105_U_ap_dummy_ce;
wire   [31:0] A_6_0105_din;
wire    A_6_0105_full_n;
wire    A_6_0105_write;
wire   [31:0] A_6_0105_dout;
wire    A_6_0105_empty_n;
wire    A_6_0105_read;
wire    A_0_2106_U_ap_dummy_ce;
wire   [31:0] A_0_2106_din;
wire    A_0_2106_full_n;
wire    A_0_2106_write;
wire   [31:0] A_0_2106_dout;
wire    A_0_2106_empty_n;
wire    A_0_2106_read;
wire    A_7_2107_U_ap_dummy_ce;
wire   [31:0] A_7_2107_din;
wire    A_7_2107_full_n;
wire    A_7_2107_write;
wire   [31:0] A_7_2107_dout;
wire    A_7_2107_empty_n;
wire    A_7_2107_read;
wire    A_0_3108_U_ap_dummy_ce;
wire   [31:0] A_0_3108_din;
wire    A_0_3108_full_n;
wire    A_0_3108_write;
wire   [31:0] A_0_3108_dout;
wire    A_0_3108_empty_n;
wire    A_0_3108_read;
wire    A_7_3109_U_ap_dummy_ce;
wire   [31:0] A_7_3109_din;
wire    A_7_3109_full_n;
wire    A_7_3109_write;
wire   [31:0] A_7_3109_dout;
wire    A_7_3109_empty_n;
wire    A_7_3109_read;
wire    A_2_4110_U_ap_dummy_ce;
wire   [31:0] A_2_4110_din;
wire    A_2_4110_full_n;
wire    A_2_4110_write;
wire   [31:0] A_2_4110_dout;
wire    A_2_4110_empty_n;
wire    A_2_4110_read;
wire    A_4_6111_U_ap_dummy_ce;
wire   [31:0] A_4_6111_din;
wire    A_4_6111_full_n;
wire    A_4_6111_write;
wire   [31:0] A_4_6111_dout;
wire    A_4_6111_empty_n;
wire    A_4_6111_read;
wire    A_0_4112_U_ap_dummy_ce;
wire   [31:0] A_0_4112_din;
wire    A_0_4112_full_n;
wire    A_0_4112_write;
wire   [31:0] A_0_4112_dout;
wire    A_0_4112_empty_n;
wire    A_0_4112_read;
wire    A_7_4113_U_ap_dummy_ce;
wire   [31:0] A_7_4113_din;
wire    A_7_4113_full_n;
wire    A_7_4113_write;
wire   [31:0] A_7_4113_dout;
wire    A_7_4113_empty_n;
wire    A_7_4113_read;
wire    A_3_1114_U_ap_dummy_ce;
wire   [31:0] A_3_1114_din;
wire    A_3_1114_full_n;
wire    A_3_1114_write;
wire   [31:0] A_3_1114_dout;
wire    A_3_1114_empty_n;
wire    A_3_1114_read;
wire    A_2_1115_U_ap_dummy_ce;
wire   [31:0] A_2_1115_din;
wire    A_2_1115_full_n;
wire    A_2_1115_write;
wire   [31:0] A_2_1115_dout;
wire    A_2_1115_empty_n;
wire    A_2_1115_read;
wire    A_7_6116_U_ap_dummy_ce;
wire   [31:0] A_7_6116_din;
wire    A_7_6116_full_n;
wire    A_7_6116_write;
wire   [31:0] A_7_6116_dout;
wire    A_7_6116_empty_n;
wire    A_7_6116_read;
wire    A_3_2117_U_ap_dummy_ce;
wire   [31:0] A_3_2117_din;
wire    A_3_2117_full_n;
wire    A_3_2117_write;
wire   [31:0] A_3_2117_dout;
wire    A_3_2117_empty_n;
wire    A_3_2117_read;
wire    A_7_1118_U_ap_dummy_ce;
wire   [31:0] A_7_1118_din;
wire    A_7_1118_full_n;
wire    A_7_1118_write;
wire   [31:0] A_7_1118_dout;
wire    A_7_1118_empty_n;
wire    A_7_1118_read;
wire    A_1_3119_U_ap_dummy_ce;
wire   [31:0] A_1_3119_din;
wire    A_1_3119_full_n;
wire    A_1_3119_write;
wire   [31:0] A_1_3119_dout;
wire    A_1_3119_empty_n;
wire    A_1_3119_read;
wire    A_6_1120_U_ap_dummy_ce;
wire   [31:0] A_6_1120_din;
wire    A_6_1120_full_n;
wire    A_6_1120_write;
wire   [31:0] A_6_1120_dout;
wire    A_6_1120_empty_n;
wire    A_6_1120_read;
wire    A_7_0121_U_ap_dummy_ce;
wire   [31:0] A_7_0121_din;
wire    A_7_0121_full_n;
wire    A_7_0121_write;
wire   [31:0] A_7_0121_dout;
wire    A_7_0121_empty_n;
wire    A_7_0121_read;
wire    A_2_6122_U_ap_dummy_ce;
wire   [31:0] A_2_6122_din;
wire    A_2_6122_full_n;
wire    A_2_6122_write;
wire   [31:0] A_2_6122_dout;
wire    A_2_6122_empty_n;
wire    A_2_6122_read;
wire    A_3_0123_U_ap_dummy_ce;
wire   [31:0] A_3_0123_din;
wire    A_3_0123_full_n;
wire    A_3_0123_write;
wire   [31:0] A_3_0123_dout;
wire    A_3_0123_empty_n;
wire    A_3_0123_read;
wire    A_3_7124_U_ap_dummy_ce;
wire   [31:0] A_3_7124_din;
wire    A_3_7124_full_n;
wire    A_3_7124_write;
wire   [31:0] A_3_7124_dout;
wire    A_3_7124_empty_n;
wire    A_3_7124_read;
wire    A_1_6125_U_ap_dummy_ce;
wire   [31:0] A_1_6125_din;
wire    A_1_6125_full_n;
wire    A_1_6125_write;
wire   [31:0] A_1_6125_dout;
wire    A_1_6125_empty_n;
wire    A_1_6125_read;
wire    A_1_0126_U_ap_dummy_ce;
wire   [31:0] A_1_0126_din;
wire    A_1_0126_full_n;
wire    A_1_0126_write;
wire   [31:0] A_1_0126_dout;
wire    A_1_0126_empty_n;
wire    A_1_0126_read;
wire    A_2_7127_U_ap_dummy_ce;
wire   [31:0] A_2_7127_din;
wire    A_2_7127_full_n;
wire    A_2_7127_write;
wire   [31:0] A_2_7127_dout;
wire    A_2_7127_empty_n;
wire    A_2_7127_read;
wire    A_3_5128_U_ap_dummy_ce;
wire   [31:0] A_3_5128_din;
wire    A_3_5128_full_n;
wire    A_3_5128_write;
wire   [31:0] A_3_5128_dout;
wire    A_3_5128_empty_n;
wire    A_3_5128_read;
wire    A_3_4129_U_ap_dummy_ce;
wire   [31:0] A_3_4129_din;
wire    A_3_4129_full_n;
wire    A_3_4129_write;
wire   [31:0] A_3_4129_dout;
wire    A_3_4129_empty_n;
wire    A_3_4129_read;
wire    A_3_3130_U_ap_dummy_ce;
wire   [31:0] A_3_3130_din;
wire    A_3_3130_full_n;
wire    A_3_3130_write;
wire   [31:0] A_3_3130_dout;
wire    A_3_3130_empty_n;
wire    A_3_3130_read;
wire    A_2_3131_U_ap_dummy_ce;
wire   [31:0] A_2_3131_din;
wire    A_2_3131_full_n;
wire    A_2_3131_write;
wire   [31:0] A_2_3131_dout;
wire    A_2_3131_empty_n;
wire    A_2_3131_read;
wire    A_5_5132_U_ap_dummy_ce;
wire   [31:0] A_5_5132_din;
wire    A_5_5132_full_n;
wire    A_5_5132_write;
wire   [31:0] A_5_5132_dout;
wire    A_5_5132_empty_n;
wire    A_5_5132_read;
wire    A_4_5133_U_ap_dummy_ce;
wire   [31:0] A_4_5133_din;
wire    A_4_5133_full_n;
wire    A_4_5133_write;
wire   [31:0] A_4_5133_dout;
wire    A_4_5133_empty_n;
wire    A_4_5133_read;
wire    A_2_2134_U_ap_dummy_ce;
wire   [31:0] A_2_2134_din;
wire    A_2_2134_full_n;
wire    A_2_2134_write;
wire   [31:0] A_2_2134_dout;
wire    A_2_2134_empty_n;
wire    A_2_2134_read;
wire    B_cached_0_0_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_0_0_channel_din;
wire    B_cached_0_0_channel_write;
wire   [31:0] B_cached_0_0_channel_dout;
wire    B_cached_0_0_channel_empty_n;
wire    B_cached_0_0_channel_read;
wire    B_cached_0_1_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_0_1_channel_din;
wire    B_cached_0_1_channel_write;
wire   [31:0] B_cached_0_1_channel_dout;
wire    B_cached_0_1_channel_empty_n;
wire    B_cached_0_1_channel_read;
wire    B_cached_0_2_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_0_2_channel_din;
wire    B_cached_0_2_channel_write;
wire   [31:0] B_cached_0_2_channel_dout;
wire    B_cached_0_2_channel_empty_n;
wire    B_cached_0_2_channel_read;
wire    B_cached_0_3_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_0_3_channel_din;
wire    B_cached_0_3_channel_write;
wire   [31:0] B_cached_0_3_channel_dout;
wire    B_cached_0_3_channel_empty_n;
wire    B_cached_0_3_channel_read;
wire    B_cached_0_4_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_0_4_channel_din;
wire    B_cached_0_4_channel_write;
wire   [31:0] B_cached_0_4_channel_dout;
wire    B_cached_0_4_channel_empty_n;
wire    B_cached_0_4_channel_read;
wire    B_cached_0_5_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_0_5_channel_din;
wire    B_cached_0_5_channel_write;
wire   [31:0] B_cached_0_5_channel_dout;
wire    B_cached_0_5_channel_empty_n;
wire    B_cached_0_5_channel_read;
wire    B_cached_0_6_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_0_6_channel_din;
wire    B_cached_0_6_channel_write;
wire   [31:0] B_cached_0_6_channel_dout;
wire    B_cached_0_6_channel_empty_n;
wire    B_cached_0_6_channel_read;
wire    B_cached_0_7_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_0_7_channel_din;
wire    B_cached_0_7_channel_write;
wire   [31:0] B_cached_0_7_channel_dout;
wire    B_cached_0_7_channel_empty_n;
wire    B_cached_0_7_channel_read;
wire    B_cached_1_0_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_1_0_channel_din;
wire    B_cached_1_0_channel_write;
wire   [31:0] B_cached_1_0_channel_dout;
wire    B_cached_1_0_channel_empty_n;
wire    B_cached_1_0_channel_read;
wire    B_cached_1_1_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_1_1_channel_din;
wire    B_cached_1_1_channel_write;
wire   [31:0] B_cached_1_1_channel_dout;
wire    B_cached_1_1_channel_empty_n;
wire    B_cached_1_1_channel_read;
wire    B_cached_1_2_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_1_2_channel_din;
wire    B_cached_1_2_channel_write;
wire   [31:0] B_cached_1_2_channel_dout;
wire    B_cached_1_2_channel_empty_n;
wire    B_cached_1_2_channel_read;
wire    B_cached_1_3_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_1_3_channel_din;
wire    B_cached_1_3_channel_write;
wire   [31:0] B_cached_1_3_channel_dout;
wire    B_cached_1_3_channel_empty_n;
wire    B_cached_1_3_channel_read;
wire    B_cached_1_4_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_1_4_channel_din;
wire    B_cached_1_4_channel_write;
wire   [31:0] B_cached_1_4_channel_dout;
wire    B_cached_1_4_channel_empty_n;
wire    B_cached_1_4_channel_read;
wire    B_cached_1_5_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_1_5_channel_din;
wire    B_cached_1_5_channel_write;
wire   [31:0] B_cached_1_5_channel_dout;
wire    B_cached_1_5_channel_empty_n;
wire    B_cached_1_5_channel_read;
wire    B_cached_1_6_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_1_6_channel_din;
wire    B_cached_1_6_channel_write;
wire   [31:0] B_cached_1_6_channel_dout;
wire    B_cached_1_6_channel_empty_n;
wire    B_cached_1_6_channel_read;
wire    B_cached_1_7_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_1_7_channel_din;
wire    B_cached_1_7_channel_write;
wire   [31:0] B_cached_1_7_channel_dout;
wire    B_cached_1_7_channel_empty_n;
wire    B_cached_1_7_channel_read;
wire    B_cached_2_0_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_2_0_channel_din;
wire    B_cached_2_0_channel_write;
wire   [31:0] B_cached_2_0_channel_dout;
wire    B_cached_2_0_channel_empty_n;
wire    B_cached_2_0_channel_read;
wire    B_cached_2_1_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_2_1_channel_din;
wire    B_cached_2_1_channel_write;
wire   [31:0] B_cached_2_1_channel_dout;
wire    B_cached_2_1_channel_empty_n;
wire    B_cached_2_1_channel_read;
wire    B_cached_2_2_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_2_2_channel_din;
wire    B_cached_2_2_channel_write;
wire   [31:0] B_cached_2_2_channel_dout;
wire    B_cached_2_2_channel_empty_n;
wire    B_cached_2_2_channel_read;
wire    B_cached_2_3_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_2_3_channel_din;
wire    B_cached_2_3_channel_write;
wire   [31:0] B_cached_2_3_channel_dout;
wire    B_cached_2_3_channel_empty_n;
wire    B_cached_2_3_channel_read;
wire    B_cached_2_4_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_2_4_channel_din;
wire    B_cached_2_4_channel_write;
wire   [31:0] B_cached_2_4_channel_dout;
wire    B_cached_2_4_channel_empty_n;
wire    B_cached_2_4_channel_read;
wire    B_cached_2_5_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_2_5_channel_din;
wire    B_cached_2_5_channel_write;
wire   [31:0] B_cached_2_5_channel_dout;
wire    B_cached_2_5_channel_empty_n;
wire    B_cached_2_5_channel_read;
wire    B_cached_2_6_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_2_6_channel_din;
wire    B_cached_2_6_channel_write;
wire   [31:0] B_cached_2_6_channel_dout;
wire    B_cached_2_6_channel_empty_n;
wire    B_cached_2_6_channel_read;
wire    B_cached_2_7_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_2_7_channel_din;
wire    B_cached_2_7_channel_write;
wire   [31:0] B_cached_2_7_channel_dout;
wire    B_cached_2_7_channel_empty_n;
wire    B_cached_2_7_channel_read;
wire    B_cached_3_0_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_3_0_channel_din;
wire    B_cached_3_0_channel_write;
wire   [31:0] B_cached_3_0_channel_dout;
wire    B_cached_3_0_channel_empty_n;
wire    B_cached_3_0_channel_read;
wire    B_cached_3_1_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_3_1_channel_din;
wire    B_cached_3_1_channel_write;
wire   [31:0] B_cached_3_1_channel_dout;
wire    B_cached_3_1_channel_empty_n;
wire    B_cached_3_1_channel_read;
wire    B_cached_3_2_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_3_2_channel_din;
wire    B_cached_3_2_channel_write;
wire   [31:0] B_cached_3_2_channel_dout;
wire    B_cached_3_2_channel_empty_n;
wire    B_cached_3_2_channel_read;
wire    B_cached_3_3_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_3_3_channel_din;
wire    B_cached_3_3_channel_write;
wire   [31:0] B_cached_3_3_channel_dout;
wire    B_cached_3_3_channel_empty_n;
wire    B_cached_3_3_channel_read;
wire    B_cached_3_4_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_3_4_channel_din;
wire    B_cached_3_4_channel_write;
wire   [31:0] B_cached_3_4_channel_dout;
wire    B_cached_3_4_channel_empty_n;
wire    B_cached_3_4_channel_read;
wire    B_cached_3_5_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_3_5_channel_din;
wire    B_cached_3_5_channel_write;
wire   [31:0] B_cached_3_5_channel_dout;
wire    B_cached_3_5_channel_empty_n;
wire    B_cached_3_5_channel_read;
wire    B_cached_3_6_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_3_6_channel_din;
wire    B_cached_3_6_channel_write;
wire   [31:0] B_cached_3_6_channel_dout;
wire    B_cached_3_6_channel_empty_n;
wire    B_cached_3_6_channel_read;
wire    B_cached_3_7_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_3_7_channel_din;
wire    B_cached_3_7_channel_write;
wire   [31:0] B_cached_3_7_channel_dout;
wire    B_cached_3_7_channel_empty_n;
wire    B_cached_3_7_channel_read;
wire    B_cached_4_0_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_4_0_channel_din;
wire    B_cached_4_0_channel_write;
wire   [31:0] B_cached_4_0_channel_dout;
wire    B_cached_4_0_channel_empty_n;
wire    B_cached_4_0_channel_read;
wire    B_cached_4_1_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_4_1_channel_din;
wire    B_cached_4_1_channel_write;
wire   [31:0] B_cached_4_1_channel_dout;
wire    B_cached_4_1_channel_empty_n;
wire    B_cached_4_1_channel_read;
wire    B_cached_4_2_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_4_2_channel_din;
wire    B_cached_4_2_channel_write;
wire   [31:0] B_cached_4_2_channel_dout;
wire    B_cached_4_2_channel_empty_n;
wire    B_cached_4_2_channel_read;
wire    B_cached_4_3_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_4_3_channel_din;
wire    B_cached_4_3_channel_write;
wire   [31:0] B_cached_4_3_channel_dout;
wire    B_cached_4_3_channel_empty_n;
wire    B_cached_4_3_channel_read;
wire    B_cached_4_4_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_4_4_channel_din;
wire    B_cached_4_4_channel_write;
wire   [31:0] B_cached_4_4_channel_dout;
wire    B_cached_4_4_channel_empty_n;
wire    B_cached_4_4_channel_read;
wire    B_cached_4_5_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_4_5_channel_din;
wire    B_cached_4_5_channel_write;
wire   [31:0] B_cached_4_5_channel_dout;
wire    B_cached_4_5_channel_empty_n;
wire    B_cached_4_5_channel_read;
wire    B_cached_4_6_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_4_6_channel_din;
wire    B_cached_4_6_channel_write;
wire   [31:0] B_cached_4_6_channel_dout;
wire    B_cached_4_6_channel_empty_n;
wire    B_cached_4_6_channel_read;
wire    B_cached_4_7_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_4_7_channel_din;
wire    B_cached_4_7_channel_write;
wire   [31:0] B_cached_4_7_channel_dout;
wire    B_cached_4_7_channel_empty_n;
wire    B_cached_4_7_channel_read;
wire    B_cached_5_0_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_5_0_channel_din;
wire    B_cached_5_0_channel_write;
wire   [31:0] B_cached_5_0_channel_dout;
wire    B_cached_5_0_channel_empty_n;
wire    B_cached_5_0_channel_read;
wire    B_cached_5_1_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_5_1_channel_din;
wire    B_cached_5_1_channel_write;
wire   [31:0] B_cached_5_1_channel_dout;
wire    B_cached_5_1_channel_empty_n;
wire    B_cached_5_1_channel_read;
wire    B_cached_5_2_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_5_2_channel_din;
wire    B_cached_5_2_channel_write;
wire   [31:0] B_cached_5_2_channel_dout;
wire    B_cached_5_2_channel_empty_n;
wire    B_cached_5_2_channel_read;
wire    B_cached_5_3_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_5_3_channel_din;
wire    B_cached_5_3_channel_write;
wire   [31:0] B_cached_5_3_channel_dout;
wire    B_cached_5_3_channel_empty_n;
wire    B_cached_5_3_channel_read;
wire    B_cached_5_4_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_5_4_channel_din;
wire    B_cached_5_4_channel_write;
wire   [31:0] B_cached_5_4_channel_dout;
wire    B_cached_5_4_channel_empty_n;
wire    B_cached_5_4_channel_read;
wire    B_cached_5_5_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_5_5_channel_din;
wire    B_cached_5_5_channel_write;
wire   [31:0] B_cached_5_5_channel_dout;
wire    B_cached_5_5_channel_empty_n;
wire    B_cached_5_5_channel_read;
wire    B_cached_5_6_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_5_6_channel_din;
wire    B_cached_5_6_channel_write;
wire   [31:0] B_cached_5_6_channel_dout;
wire    B_cached_5_6_channel_empty_n;
wire    B_cached_5_6_channel_read;
wire    B_cached_5_7_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_5_7_channel_din;
wire    B_cached_5_7_channel_write;
wire   [31:0] B_cached_5_7_channel_dout;
wire    B_cached_5_7_channel_empty_n;
wire    B_cached_5_7_channel_read;
wire    B_cached_6_0_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_6_0_channel_din;
wire    B_cached_6_0_channel_write;
wire   [31:0] B_cached_6_0_channel_dout;
wire    B_cached_6_0_channel_empty_n;
wire    B_cached_6_0_channel_read;
wire    B_cached_6_1_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_6_1_channel_din;
wire    B_cached_6_1_channel_write;
wire   [31:0] B_cached_6_1_channel_dout;
wire    B_cached_6_1_channel_empty_n;
wire    B_cached_6_1_channel_read;
wire    B_cached_6_2_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_6_2_channel_din;
wire    B_cached_6_2_channel_write;
wire   [31:0] B_cached_6_2_channel_dout;
wire    B_cached_6_2_channel_empty_n;
wire    B_cached_6_2_channel_read;
wire    B_cached_6_3_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_6_3_channel_din;
wire    B_cached_6_3_channel_write;
wire   [31:0] B_cached_6_3_channel_dout;
wire    B_cached_6_3_channel_empty_n;
wire    B_cached_6_3_channel_read;
wire    B_cached_6_4_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_6_4_channel_din;
wire    B_cached_6_4_channel_write;
wire   [31:0] B_cached_6_4_channel_dout;
wire    B_cached_6_4_channel_empty_n;
wire    B_cached_6_4_channel_read;
wire    B_cached_6_5_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_6_5_channel_din;
wire    B_cached_6_5_channel_write;
wire   [31:0] B_cached_6_5_channel_dout;
wire    B_cached_6_5_channel_empty_n;
wire    B_cached_6_5_channel_read;
wire    B_cached_6_6_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_6_6_channel_din;
wire    B_cached_6_6_channel_write;
wire   [31:0] B_cached_6_6_channel_dout;
wire    B_cached_6_6_channel_empty_n;
wire    B_cached_6_6_channel_read;
wire    B_cached_6_7_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_6_7_channel_din;
wire    B_cached_6_7_channel_write;
wire   [31:0] B_cached_6_7_channel_dout;
wire    B_cached_6_7_channel_empty_n;
wire    B_cached_6_7_channel_read;
wire    B_cached_7_0_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_7_0_channel_din;
wire    B_cached_7_0_channel_write;
wire   [31:0] B_cached_7_0_channel_dout;
wire    B_cached_7_0_channel_empty_n;
wire    B_cached_7_0_channel_read;
wire    B_cached_7_1_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_7_1_channel_din;
wire    B_cached_7_1_channel_write;
wire   [31:0] B_cached_7_1_channel_dout;
wire    B_cached_7_1_channel_empty_n;
wire    B_cached_7_1_channel_read;
wire    B_cached_7_2_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_7_2_channel_din;
wire    B_cached_7_2_channel_write;
wire   [31:0] B_cached_7_2_channel_dout;
wire    B_cached_7_2_channel_empty_n;
wire    B_cached_7_2_channel_read;
wire    B_cached_7_3_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_7_3_channel_din;
wire    B_cached_7_3_channel_write;
wire   [31:0] B_cached_7_3_channel_dout;
wire    B_cached_7_3_channel_empty_n;
wire    B_cached_7_3_channel_read;
wire    B_cached_7_4_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_7_4_channel_din;
wire    B_cached_7_4_channel_write;
wire   [31:0] B_cached_7_4_channel_dout;
wire    B_cached_7_4_channel_empty_n;
wire    B_cached_7_4_channel_read;
wire    B_cached_7_5_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_7_5_channel_din;
wire    B_cached_7_5_channel_write;
wire   [31:0] B_cached_7_5_channel_dout;
wire    B_cached_7_5_channel_empty_n;
wire    B_cached_7_5_channel_read;
wire    B_cached_7_6_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_7_6_channel_din;
wire    B_cached_7_6_channel_write;
wire   [31:0] B_cached_7_6_channel_dout;
wire    B_cached_7_6_channel_empty_n;
wire    B_cached_7_6_channel_read;
wire    B_cached_7_7_channel_U_ap_dummy_ce;
wire   [31:0] B_cached_7_7_channel_din;
wire    B_cached_7_7_channel_write;
wire   [31:0] B_cached_7_7_channel_dout;
wire    B_cached_7_7_channel_empty_n;
wire    B_cached_7_7_channel_read;
reg    ap_reg_procdone_DCT_MAT_Multiply_Loop_LoadRow_proc_U0 = 1'b0;
reg    ap_sig_hs_done;
reg    ap_reg_procdone_DCT_MAT_Multiply_Loop_Row_proc440_U0 = 1'b0;
reg    ap_CS;
wire    ap_sig_top_allready;


DCT_MAT_Multiply_Loop_LoadRow_proc DCT_MAT_Multiply_Loop_LoadRow_proc_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_start ),
    .ap_done( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done ),
    .ap_continue( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue ),
    .ap_idle( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_idle ),
    .ap_ready( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_ready ),
    .B_dout( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_dout ),
    .B_empty_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_empty_n ),
    .B_read( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_read ),
    .p_read64( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read64 ),
    .p_read191( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read191 ),
    .p_read192( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read192 ),
    .p_read193( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read193 ),
    .p_read196( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read196 ),
    .p_read199( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read199 ),
    .p_read200( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read200 ),
    .p_read201( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read201 ),
    .p_read202( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read202 ),
    .p_read203( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read203 ),
    .p_read204( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read204 ),
    .p_read205( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read205 ),
    .p_read206( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read206 ),
    .p_read207( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read207 ),
    .p_read208( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read208 ),
    .p_read209( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read209 ),
    .p_read211( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read211 ),
    .p_read212( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read212 ),
    .p_read213( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read213 ),
    .p_read214( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read214 ),
    .p_read215( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read215 ),
    .p_read216( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read216 ),
    .p_read218( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read218 ),
    .p_read219( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read219 ),
    .p_read220( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read220 ),
    .p_read221( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read221 ),
    .p_read222( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read222 ),
    .p_read223( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read223 ),
    .p_read224( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read224 ),
    .p_read225( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read225 ),
    .p_read226( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read226 ),
    .p_read227( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read227 ),
    .p_read228( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read228 ),
    .p_read229( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read229 ),
    .p_read230( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read230 ),
    .p_read232( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read232 ),
    .p_read233( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read233 ),
    .p_read234( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read234 ),
    .p_read235( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read235 ),
    .p_read236( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read236 ),
    .p_read237( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read237 ),
    .p_read238( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read238 ),
    .p_read239( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read239 ),
    .p_read240( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read240 ),
    .p_read241( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read241 ),
    .p_read242( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read242 ),
    .p_read243( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read243 ),
    .p_read244( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read244 ),
    .p_read245( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read245 ),
    .p_read246( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read246 ),
    .p_read247( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read247 ),
    .p_read248( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read248 ),
    .p_read250( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read250 ),
    .p_read252( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read252 ),
    .A_5_1_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_1_out_din ),
    .A_5_1_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_1_out_full_n ),
    .A_5_1_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_1_out_write ),
    .A_6_2_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_2_out_din ),
    .A_6_2_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_2_out_full_n ),
    .A_6_2_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_2_out_write ),
    .A_4_1_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_1_out_din ),
    .A_4_1_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_1_out_full_n ),
    .A_4_1_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_1_out_write ),
    .A_5_0_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_0_out_din ),
    .A_5_0_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_0_out_full_n ),
    .A_5_0_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_0_out_write ),
    .A_6_6_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_6_out_din ),
    .A_6_6_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_6_out_full_n ),
    .A_6_6_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_6_out_write ),
    .A_4_0_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_0_out_din ),
    .A_4_0_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_0_out_full_n ),
    .A_4_0_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_0_out_write ),
    .A_1_2_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_2_out_din ),
    .A_1_2_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_2_out_full_n ),
    .A_1_2_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_2_out_write ),
    .A_1_1_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_1_out_din ),
    .A_1_1_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_1_out_full_n ),
    .A_1_1_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_1_out_write ),
    .A_7_7_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_7_out_din ),
    .A_7_7_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_7_out_full_n ),
    .A_7_7_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_7_out_write ),
    .A_3_6_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_6_out_din ),
    .A_3_6_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_6_out_full_n ),
    .A_3_6_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_6_out_write ),
    .A_5_6_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_6_out_din ),
    .A_5_6_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_6_out_full_n ),
    .A_5_6_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_6_out_write ),
    .A_1_5_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_5_out_din ),
    .A_1_5_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_5_out_full_n ),
    .A_1_5_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_5_out_write ),
    .A_6_4_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_4_out_din ),
    .A_6_4_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_4_out_full_n ),
    .A_6_4_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_4_out_write ),
    .A_4_7_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_7_out_din ),
    .A_4_7_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_7_out_full_n ),
    .A_4_7_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_7_out_write ),
    .A_0_7_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_7_out_din ),
    .A_0_7_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_7_out_full_n ),
    .A_0_7_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_7_out_write ),
    .A_7_5_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_5_out_din ),
    .A_7_5_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_5_out_full_n ),
    .A_7_5_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_5_out_write ),
    .A_2_0_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_0_out_din ),
    .A_2_0_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_0_out_full_n ),
    .A_2_0_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_0_out_write ),
    .A_1_4_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_4_out_din ),
    .A_1_4_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_4_out_full_n ),
    .A_1_4_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_4_out_write ),
    .A_0_1_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_1_out_din ),
    .A_0_1_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_1_out_full_n ),
    .A_0_1_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_1_out_write ),
    .A_0_6_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_6_out_din ),
    .A_0_6_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_6_out_full_n ),
    .A_0_6_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_6_out_write ),
    .A_0_0_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_0_out_din ),
    .A_0_0_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_0_out_full_n ),
    .A_0_0_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_0_out_write ),
    .A_0_5_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_5_out_din ),
    .A_0_5_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_5_out_full_n ),
    .A_0_5_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_5_out_write ),
    .A_5_3_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_3_out_din ),
    .A_5_3_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_3_out_full_n ),
    .A_5_3_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_3_out_write ),
    .A_4_3_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_3_out_din ),
    .A_4_3_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_3_out_full_n ),
    .A_4_3_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_3_out_write ),
    .A_4_2_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_2_out_din ),
    .A_4_2_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_2_out_full_n ),
    .A_4_2_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_2_out_write ),
    .A_2_5_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_5_out_din ),
    .A_2_5_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_5_out_full_n ),
    .A_2_5_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_5_out_write ),
    .A_5_4_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_4_out_din ),
    .A_5_4_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_4_out_full_n ),
    .A_5_4_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_4_out_write ),
    .A_4_4_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_4_out_din ),
    .A_4_4_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_4_out_full_n ),
    .A_4_4_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_4_out_write ),
    .A_5_7_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_7_out_din ),
    .A_5_7_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_7_out_full_n ),
    .A_5_7_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_7_out_write ),
    .A_6_3_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_3_out_din ),
    .A_6_3_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_3_out_full_n ),
    .A_6_3_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_3_out_write ),
    .A_1_7_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_7_out_din ),
    .A_1_7_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_7_out_full_n ),
    .A_1_7_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_7_out_write ),
    .A_6_5_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_5_out_din ),
    .A_6_5_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_5_out_full_n ),
    .A_6_5_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_5_out_write ),
    .A_6_7_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_7_out_din ),
    .A_6_7_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_7_out_full_n ),
    .A_6_7_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_7_out_write ),
    .A_5_2_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_2_out_din ),
    .A_5_2_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_2_out_full_n ),
    .A_5_2_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_2_out_write ),
    .A_6_0_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_0_out_din ),
    .A_6_0_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_0_out_full_n ),
    .A_6_0_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_0_out_write ),
    .A_0_2_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_2_out_din ),
    .A_0_2_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_2_out_full_n ),
    .A_0_2_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_2_out_write ),
    .A_7_2_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_2_out_din ),
    .A_7_2_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_2_out_full_n ),
    .A_7_2_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_2_out_write ),
    .A_0_3_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_3_out_din ),
    .A_0_3_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_3_out_full_n ),
    .A_0_3_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_3_out_write ),
    .A_7_3_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_3_out_din ),
    .A_7_3_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_3_out_full_n ),
    .A_7_3_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_3_out_write ),
    .A_2_4_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_4_out_din ),
    .A_2_4_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_4_out_full_n ),
    .A_2_4_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_4_out_write ),
    .A_4_6_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_6_out_din ),
    .A_4_6_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_6_out_full_n ),
    .A_4_6_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_6_out_write ),
    .A_0_4_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_4_out_din ),
    .A_0_4_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_4_out_full_n ),
    .A_0_4_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_4_out_write ),
    .A_7_4_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_4_out_din ),
    .A_7_4_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_4_out_full_n ),
    .A_7_4_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_4_out_write ),
    .A_3_1_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_1_out_din ),
    .A_3_1_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_1_out_full_n ),
    .A_3_1_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_1_out_write ),
    .A_2_1_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_1_out_din ),
    .A_2_1_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_1_out_full_n ),
    .A_2_1_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_1_out_write ),
    .A_7_6_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_6_out_din ),
    .A_7_6_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_6_out_full_n ),
    .A_7_6_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_6_out_write ),
    .A_3_2_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_2_out_din ),
    .A_3_2_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_2_out_full_n ),
    .A_3_2_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_2_out_write ),
    .A_7_1_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_1_out_din ),
    .A_7_1_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_1_out_full_n ),
    .A_7_1_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_1_out_write ),
    .A_1_3_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_3_out_din ),
    .A_1_3_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_3_out_full_n ),
    .A_1_3_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_3_out_write ),
    .A_6_1_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_1_out_din ),
    .A_6_1_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_1_out_full_n ),
    .A_6_1_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_1_out_write ),
    .A_7_0_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_0_out_din ),
    .A_7_0_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_0_out_full_n ),
    .A_7_0_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_0_out_write ),
    .A_2_6_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_6_out_din ),
    .A_2_6_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_6_out_full_n ),
    .A_2_6_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_6_out_write ),
    .A_3_0_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_0_out_din ),
    .A_3_0_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_0_out_full_n ),
    .A_3_0_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_0_out_write ),
    .A_3_7_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_7_out_din ),
    .A_3_7_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_7_out_full_n ),
    .A_3_7_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_7_out_write ),
    .A_1_6_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_6_out_din ),
    .A_1_6_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_6_out_full_n ),
    .A_1_6_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_6_out_write ),
    .A_1_0_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_0_out_din ),
    .A_1_0_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_0_out_full_n ),
    .A_1_0_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_0_out_write ),
    .A_2_7_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_7_out_din ),
    .A_2_7_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_7_out_full_n ),
    .A_2_7_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_7_out_write ),
    .A_3_5_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_5_out_din ),
    .A_3_5_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_5_out_full_n ),
    .A_3_5_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_5_out_write ),
    .A_3_4_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_4_out_din ),
    .A_3_4_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_4_out_full_n ),
    .A_3_4_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_4_out_write ),
    .A_3_3_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_3_out_din ),
    .A_3_3_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_3_out_full_n ),
    .A_3_3_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_3_out_write ),
    .A_2_3_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_3_out_din ),
    .A_2_3_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_3_out_full_n ),
    .A_2_3_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_3_out_write ),
    .A_5_5_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_5_out_din ),
    .A_5_5_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_5_out_full_n ),
    .A_5_5_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_5_out_write ),
    .A_4_5_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_5_out_din ),
    .A_4_5_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_5_out_full_n ),
    .A_4_5_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_5_out_write ),
    .A_2_2_out_din( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_2_out_din ),
    .A_2_2_out_full_n( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_2_out_full_n ),
    .A_2_2_out_write( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_2_out_write ),
    .ap_return_0( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_0 ),
    .ap_return_1( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_1 ),
    .ap_return_2( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_2 ),
    .ap_return_3( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_3 ),
    .ap_return_4( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_4 ),
    .ap_return_5( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_5 ),
    .ap_return_6( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_6 ),
    .ap_return_7( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_7 ),
    .ap_return_8( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_8 ),
    .ap_return_9( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_9 ),
    .ap_return_10( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_10 ),
    .ap_return_11( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_11 ),
    .ap_return_12( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_12 ),
    .ap_return_13( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_13 ),
    .ap_return_14( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_14 ),
    .ap_return_15( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_15 ),
    .ap_return_16( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_16 ),
    .ap_return_17( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_17 ),
    .ap_return_18( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_18 ),
    .ap_return_19( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_19 ),
    .ap_return_20( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_20 ),
    .ap_return_21( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_21 ),
    .ap_return_22( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_22 ),
    .ap_return_23( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_23 ),
    .ap_return_24( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_24 ),
    .ap_return_25( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_25 ),
    .ap_return_26( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_26 ),
    .ap_return_27( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_27 ),
    .ap_return_28( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_28 ),
    .ap_return_29( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_29 ),
    .ap_return_30( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_30 ),
    .ap_return_31( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_31 ),
    .ap_return_32( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_32 ),
    .ap_return_33( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_33 ),
    .ap_return_34( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_34 ),
    .ap_return_35( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_35 ),
    .ap_return_36( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_36 ),
    .ap_return_37( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_37 ),
    .ap_return_38( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_38 ),
    .ap_return_39( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_39 ),
    .ap_return_40( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_40 ),
    .ap_return_41( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_41 ),
    .ap_return_42( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_42 ),
    .ap_return_43( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_43 ),
    .ap_return_44( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_44 ),
    .ap_return_45( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_45 ),
    .ap_return_46( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_46 ),
    .ap_return_47( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_47 ),
    .ap_return_48( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_48 ),
    .ap_return_49( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_49 ),
    .ap_return_50( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_50 ),
    .ap_return_51( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_51 ),
    .ap_return_52( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_52 ),
    .ap_return_53( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_53 ),
    .ap_return_54( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_54 ),
    .ap_return_55( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_55 ),
    .ap_return_56( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_56 ),
    .ap_return_57( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_57 ),
    .ap_return_58( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_58 ),
    .ap_return_59( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_59 ),
    .ap_return_60( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_60 ),
    .ap_return_61( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_61 ),
    .ap_return_62( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_62 ),
    .ap_return_63( DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_63 )
);

DCT_MAT_Multiply_Loop_Row_proc440 DCT_MAT_Multiply_Loop_Row_proc440_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_start ),
    .ap_done( DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_done ),
    .ap_continue( DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_continue ),
    .ap_idle( DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_idle ),
    .ap_ready( DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready ),
    .A_0_0_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_0_dout ),
    .A_0_0_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_0_empty_n ),
    .A_0_0_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_0_read ),
    .A_1_0_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_0_dout ),
    .A_1_0_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_0_empty_n ),
    .A_1_0_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_0_read ),
    .A_2_0_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_0_dout ),
    .A_2_0_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_0_empty_n ),
    .A_2_0_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_0_read ),
    .A_3_0_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_0_dout ),
    .A_3_0_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_0_empty_n ),
    .A_3_0_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_0_read ),
    .A_4_0_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_0_dout ),
    .A_4_0_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_0_empty_n ),
    .A_4_0_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_0_read ),
    .A_5_0_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_0_dout ),
    .A_5_0_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_0_empty_n ),
    .A_5_0_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_0_read ),
    .A_6_0_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_0_dout ),
    .A_6_0_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_0_empty_n ),
    .A_6_0_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_0_read ),
    .A_7_0_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_0_dout ),
    .A_7_0_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_0_empty_n ),
    .A_7_0_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_0_read ),
    .p_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read ),
    .p_read1( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read1 ),
    .p_read2( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read2 ),
    .p_read3( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read3 ),
    .p_read4( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read4 ),
    .p_read5( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read5 ),
    .p_read6( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read6 ),
    .p_read7( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read7 ),
    .A_0_1_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_1_dout ),
    .A_0_1_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_1_empty_n ),
    .A_0_1_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_1_read ),
    .A_1_1_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_1_dout ),
    .A_1_1_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_1_empty_n ),
    .A_1_1_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_1_read ),
    .A_2_1_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_1_dout ),
    .A_2_1_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_1_empty_n ),
    .A_2_1_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_1_read ),
    .A_3_1_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_1_dout ),
    .A_3_1_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_1_empty_n ),
    .A_3_1_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_1_read ),
    .A_4_1_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_1_dout ),
    .A_4_1_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_1_empty_n ),
    .A_4_1_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_1_read ),
    .A_5_1_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_1_dout ),
    .A_5_1_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_1_empty_n ),
    .A_5_1_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_1_read ),
    .A_6_1_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_1_dout ),
    .A_6_1_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_1_empty_n ),
    .A_6_1_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_1_read ),
    .A_7_1_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_1_dout ),
    .A_7_1_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_1_empty_n ),
    .A_7_1_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_1_read ),
    .p_read8( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read8 ),
    .p_read9( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read9 ),
    .p_read10( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read10 ),
    .p_read11( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read11 ),
    .p_read12( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read12 ),
    .p_read13( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read13 ),
    .p_read14( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read14 ),
    .p_read15( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read15 ),
    .A_0_2_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_2_dout ),
    .A_0_2_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_2_empty_n ),
    .A_0_2_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_2_read ),
    .A_1_2_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_2_dout ),
    .A_1_2_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_2_empty_n ),
    .A_1_2_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_2_read ),
    .A_2_2_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_2_dout ),
    .A_2_2_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_2_empty_n ),
    .A_2_2_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_2_read ),
    .A_3_2_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_2_dout ),
    .A_3_2_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_2_empty_n ),
    .A_3_2_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_2_read ),
    .A_4_2_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_2_dout ),
    .A_4_2_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_2_empty_n ),
    .A_4_2_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_2_read ),
    .A_5_2_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_2_dout ),
    .A_5_2_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_2_empty_n ),
    .A_5_2_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_2_read ),
    .A_6_2_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_2_dout ),
    .A_6_2_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_2_empty_n ),
    .A_6_2_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_2_read ),
    .A_7_2_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_2_dout ),
    .A_7_2_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_2_empty_n ),
    .A_7_2_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_2_read ),
    .p_read16( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read16 ),
    .p_read17( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read17 ),
    .p_read18( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read18 ),
    .p_read19( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read19 ),
    .p_read20( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read20 ),
    .p_read21( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read21 ),
    .p_read22( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read22 ),
    .p_read23( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read23 ),
    .A_0_3_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_3_dout ),
    .A_0_3_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_3_empty_n ),
    .A_0_3_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_3_read ),
    .A_1_3_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_3_dout ),
    .A_1_3_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_3_empty_n ),
    .A_1_3_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_3_read ),
    .A_2_3_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_3_dout ),
    .A_2_3_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_3_empty_n ),
    .A_2_3_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_3_read ),
    .A_3_3_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_3_dout ),
    .A_3_3_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_3_empty_n ),
    .A_3_3_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_3_read ),
    .A_4_3_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_3_dout ),
    .A_4_3_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_3_empty_n ),
    .A_4_3_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_3_read ),
    .A_5_3_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_3_dout ),
    .A_5_3_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_3_empty_n ),
    .A_5_3_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_3_read ),
    .A_6_3_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_3_dout ),
    .A_6_3_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_3_empty_n ),
    .A_6_3_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_3_read ),
    .A_7_3_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_3_dout ),
    .A_7_3_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_3_empty_n ),
    .A_7_3_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_3_read ),
    .p_read24( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read24 ),
    .p_read25( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read25 ),
    .p_read26( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read26 ),
    .p_read27( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read27 ),
    .p_read28( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read28 ),
    .p_read29( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read29 ),
    .p_read30( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read30 ),
    .p_read31( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read31 ),
    .A_0_4_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_4_dout ),
    .A_0_4_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_4_empty_n ),
    .A_0_4_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_4_read ),
    .A_1_4_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_4_dout ),
    .A_1_4_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_4_empty_n ),
    .A_1_4_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_4_read ),
    .A_2_4_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_4_dout ),
    .A_2_4_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_4_empty_n ),
    .A_2_4_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_4_read ),
    .A_3_4_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_4_dout ),
    .A_3_4_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_4_empty_n ),
    .A_3_4_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_4_read ),
    .A_4_4_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_4_dout ),
    .A_4_4_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_4_empty_n ),
    .A_4_4_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_4_read ),
    .A_5_4_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_4_dout ),
    .A_5_4_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_4_empty_n ),
    .A_5_4_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_4_read ),
    .A_6_4_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_4_dout ),
    .A_6_4_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_4_empty_n ),
    .A_6_4_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_4_read ),
    .A_7_4_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_4_dout ),
    .A_7_4_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_4_empty_n ),
    .A_7_4_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_4_read ),
    .p_read32( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read32 ),
    .p_read33( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read33 ),
    .p_read34( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read34 ),
    .p_read35( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read35 ),
    .p_read36( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read36 ),
    .p_read37( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read37 ),
    .p_read38( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read38 ),
    .p_read39( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read39 ),
    .A_0_5_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_5_dout ),
    .A_0_5_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_5_empty_n ),
    .A_0_5_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_5_read ),
    .A_1_5_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_5_dout ),
    .A_1_5_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_5_empty_n ),
    .A_1_5_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_5_read ),
    .A_2_5_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_5_dout ),
    .A_2_5_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_5_empty_n ),
    .A_2_5_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_5_read ),
    .A_3_5_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_5_dout ),
    .A_3_5_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_5_empty_n ),
    .A_3_5_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_5_read ),
    .A_4_5_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_5_dout ),
    .A_4_5_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_5_empty_n ),
    .A_4_5_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_5_read ),
    .A_5_5_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_5_dout ),
    .A_5_5_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_5_empty_n ),
    .A_5_5_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_5_read ),
    .A_6_5_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_5_dout ),
    .A_6_5_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_5_empty_n ),
    .A_6_5_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_5_read ),
    .A_7_5_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_5_dout ),
    .A_7_5_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_5_empty_n ),
    .A_7_5_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_5_read ),
    .p_read40( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read40 ),
    .p_read41( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read41 ),
    .p_read42( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read42 ),
    .p_read43( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read43 ),
    .p_read44( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read44 ),
    .p_read45( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read45 ),
    .p_read46( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read46 ),
    .p_read47( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read47 ),
    .A_0_6_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_6_dout ),
    .A_0_6_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_6_empty_n ),
    .A_0_6_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_6_read ),
    .A_1_6_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_6_dout ),
    .A_1_6_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_6_empty_n ),
    .A_1_6_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_6_read ),
    .A_2_6_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_6_dout ),
    .A_2_6_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_6_empty_n ),
    .A_2_6_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_6_read ),
    .A_3_6_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_6_dout ),
    .A_3_6_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_6_empty_n ),
    .A_3_6_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_6_read ),
    .A_4_6_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_6_dout ),
    .A_4_6_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_6_empty_n ),
    .A_4_6_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_6_read ),
    .A_5_6_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_6_dout ),
    .A_5_6_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_6_empty_n ),
    .A_5_6_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_6_read ),
    .A_6_6_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_6_dout ),
    .A_6_6_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_6_empty_n ),
    .A_6_6_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_6_read ),
    .A_7_6_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_6_dout ),
    .A_7_6_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_6_empty_n ),
    .A_7_6_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_6_read ),
    .p_read48( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read48 ),
    .p_read49( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read49 ),
    .p_read50( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read50 ),
    .p_read51( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read51 ),
    .p_read52( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read52 ),
    .p_read53( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read53 ),
    .p_read54( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read54 ),
    .p_read55( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read55 ),
    .A_0_7_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_7_dout ),
    .A_0_7_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_7_empty_n ),
    .A_0_7_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_7_read ),
    .A_1_7_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_7_dout ),
    .A_1_7_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_7_empty_n ),
    .A_1_7_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_7_read ),
    .A_2_7_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_7_dout ),
    .A_2_7_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_7_empty_n ),
    .A_2_7_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_7_read ),
    .A_3_7_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_7_dout ),
    .A_3_7_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_7_empty_n ),
    .A_3_7_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_7_read ),
    .A_4_7_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_7_dout ),
    .A_4_7_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_7_empty_n ),
    .A_4_7_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_7_read ),
    .A_5_7_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_7_dout ),
    .A_5_7_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_7_empty_n ),
    .A_5_7_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_7_read ),
    .A_6_7_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_7_dout ),
    .A_6_7_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_7_empty_n ),
    .A_6_7_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_7_read ),
    .A_7_7_dout( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_7_dout ),
    .A_7_7_empty_n( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_7_empty_n ),
    .A_7_7_read( DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_7_read ),
    .p_read56( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read56 ),
    .p_read57( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read57 ),
    .p_read58( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read58 ),
    .p_read59( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read59 ),
    .p_read60( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read60 ),
    .p_read61( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read61 ),
    .p_read62( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read62 ),
    .p_read63( DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read63 ),
    .C_address0( DCT_MAT_Multiply_Loop_Row_proc440_U0_C_address0 ),
    .C_ce0( DCT_MAT_Multiply_Loop_Row_proc440_U0_C_ce0 ),
    .C_we0( DCT_MAT_Multiply_Loop_Row_proc440_U0_C_we0 ),
    .C_d0( DCT_MAT_Multiply_Loop_Row_proc440_U0_C_d0 )
);

FIFO_DCT_MAT_Multiply_A_5_171 A_5_171_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_5_171_U_ap_dummy_ce ),
    .if_write_ce( A_5_171_U_ap_dummy_ce ),
    .if_din( A_5_171_din ),
    .if_full_n( A_5_171_full_n ),
    .if_write( A_5_171_write ),
    .if_dout( A_5_171_dout ),
    .if_empty_n( A_5_171_empty_n ),
    .if_read( A_5_171_read )
);

FIFO_DCT_MAT_Multiply_A_6_272 A_6_272_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_6_272_U_ap_dummy_ce ),
    .if_write_ce( A_6_272_U_ap_dummy_ce ),
    .if_din( A_6_272_din ),
    .if_full_n( A_6_272_full_n ),
    .if_write( A_6_272_write ),
    .if_dout( A_6_272_dout ),
    .if_empty_n( A_6_272_empty_n ),
    .if_read( A_6_272_read )
);

FIFO_DCT_MAT_Multiply_A_4_173 A_4_173_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_4_173_U_ap_dummy_ce ),
    .if_write_ce( A_4_173_U_ap_dummy_ce ),
    .if_din( A_4_173_din ),
    .if_full_n( A_4_173_full_n ),
    .if_write( A_4_173_write ),
    .if_dout( A_4_173_dout ),
    .if_empty_n( A_4_173_empty_n ),
    .if_read( A_4_173_read )
);

FIFO_DCT_MAT_Multiply_A_5_074 A_5_074_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_5_074_U_ap_dummy_ce ),
    .if_write_ce( A_5_074_U_ap_dummy_ce ),
    .if_din( A_5_074_din ),
    .if_full_n( A_5_074_full_n ),
    .if_write( A_5_074_write ),
    .if_dout( A_5_074_dout ),
    .if_empty_n( A_5_074_empty_n ),
    .if_read( A_5_074_read )
);

FIFO_DCT_MAT_Multiply_A_6_675 A_6_675_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_6_675_U_ap_dummy_ce ),
    .if_write_ce( A_6_675_U_ap_dummy_ce ),
    .if_din( A_6_675_din ),
    .if_full_n( A_6_675_full_n ),
    .if_write( A_6_675_write ),
    .if_dout( A_6_675_dout ),
    .if_empty_n( A_6_675_empty_n ),
    .if_read( A_6_675_read )
);

FIFO_DCT_MAT_Multiply_A_4_076 A_4_076_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_4_076_U_ap_dummy_ce ),
    .if_write_ce( A_4_076_U_ap_dummy_ce ),
    .if_din( A_4_076_din ),
    .if_full_n( A_4_076_full_n ),
    .if_write( A_4_076_write ),
    .if_dout( A_4_076_dout ),
    .if_empty_n( A_4_076_empty_n ),
    .if_read( A_4_076_read )
);

FIFO_DCT_MAT_Multiply_A_1_277 A_1_277_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_1_277_U_ap_dummy_ce ),
    .if_write_ce( A_1_277_U_ap_dummy_ce ),
    .if_din( A_1_277_din ),
    .if_full_n( A_1_277_full_n ),
    .if_write( A_1_277_write ),
    .if_dout( A_1_277_dout ),
    .if_empty_n( A_1_277_empty_n ),
    .if_read( A_1_277_read )
);

FIFO_DCT_MAT_Multiply_A_1_178 A_1_178_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_1_178_U_ap_dummy_ce ),
    .if_write_ce( A_1_178_U_ap_dummy_ce ),
    .if_din( A_1_178_din ),
    .if_full_n( A_1_178_full_n ),
    .if_write( A_1_178_write ),
    .if_dout( A_1_178_dout ),
    .if_empty_n( A_1_178_empty_n ),
    .if_read( A_1_178_read )
);

FIFO_DCT_MAT_Multiply_A_7_779 A_7_779_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_7_779_U_ap_dummy_ce ),
    .if_write_ce( A_7_779_U_ap_dummy_ce ),
    .if_din( A_7_779_din ),
    .if_full_n( A_7_779_full_n ),
    .if_write( A_7_779_write ),
    .if_dout( A_7_779_dout ),
    .if_empty_n( A_7_779_empty_n ),
    .if_read( A_7_779_read )
);

FIFO_DCT_MAT_Multiply_A_3_680 A_3_680_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_3_680_U_ap_dummy_ce ),
    .if_write_ce( A_3_680_U_ap_dummy_ce ),
    .if_din( A_3_680_din ),
    .if_full_n( A_3_680_full_n ),
    .if_write( A_3_680_write ),
    .if_dout( A_3_680_dout ),
    .if_empty_n( A_3_680_empty_n ),
    .if_read( A_3_680_read )
);

FIFO_DCT_MAT_Multiply_A_5_681 A_5_681_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_5_681_U_ap_dummy_ce ),
    .if_write_ce( A_5_681_U_ap_dummy_ce ),
    .if_din( A_5_681_din ),
    .if_full_n( A_5_681_full_n ),
    .if_write( A_5_681_write ),
    .if_dout( A_5_681_dout ),
    .if_empty_n( A_5_681_empty_n ),
    .if_read( A_5_681_read )
);

FIFO_DCT_MAT_Multiply_A_1_582 A_1_582_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_1_582_U_ap_dummy_ce ),
    .if_write_ce( A_1_582_U_ap_dummy_ce ),
    .if_din( A_1_582_din ),
    .if_full_n( A_1_582_full_n ),
    .if_write( A_1_582_write ),
    .if_dout( A_1_582_dout ),
    .if_empty_n( A_1_582_empty_n ),
    .if_read( A_1_582_read )
);

FIFO_DCT_MAT_Multiply_A_6_483 A_6_483_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_6_483_U_ap_dummy_ce ),
    .if_write_ce( A_6_483_U_ap_dummy_ce ),
    .if_din( A_6_483_din ),
    .if_full_n( A_6_483_full_n ),
    .if_write( A_6_483_write ),
    .if_dout( A_6_483_dout ),
    .if_empty_n( A_6_483_empty_n ),
    .if_read( A_6_483_read )
);

FIFO_DCT_MAT_Multiply_A_4_784 A_4_784_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_4_784_U_ap_dummy_ce ),
    .if_write_ce( A_4_784_U_ap_dummy_ce ),
    .if_din( A_4_784_din ),
    .if_full_n( A_4_784_full_n ),
    .if_write( A_4_784_write ),
    .if_dout( A_4_784_dout ),
    .if_empty_n( A_4_784_empty_n ),
    .if_read( A_4_784_read )
);

FIFO_DCT_MAT_Multiply_A_0_785 A_0_785_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_0_785_U_ap_dummy_ce ),
    .if_write_ce( A_0_785_U_ap_dummy_ce ),
    .if_din( A_0_785_din ),
    .if_full_n( A_0_785_full_n ),
    .if_write( A_0_785_write ),
    .if_dout( A_0_785_dout ),
    .if_empty_n( A_0_785_empty_n ),
    .if_read( A_0_785_read )
);

FIFO_DCT_MAT_Multiply_A_7_586 A_7_586_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_7_586_U_ap_dummy_ce ),
    .if_write_ce( A_7_586_U_ap_dummy_ce ),
    .if_din( A_7_586_din ),
    .if_full_n( A_7_586_full_n ),
    .if_write( A_7_586_write ),
    .if_dout( A_7_586_dout ),
    .if_empty_n( A_7_586_empty_n ),
    .if_read( A_7_586_read )
);

FIFO_DCT_MAT_Multiply_A_2_087 A_2_087_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_2_087_U_ap_dummy_ce ),
    .if_write_ce( A_2_087_U_ap_dummy_ce ),
    .if_din( A_2_087_din ),
    .if_full_n( A_2_087_full_n ),
    .if_write( A_2_087_write ),
    .if_dout( A_2_087_dout ),
    .if_empty_n( A_2_087_empty_n ),
    .if_read( A_2_087_read )
);

FIFO_DCT_MAT_Multiply_A_1_488 A_1_488_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_1_488_U_ap_dummy_ce ),
    .if_write_ce( A_1_488_U_ap_dummy_ce ),
    .if_din( A_1_488_din ),
    .if_full_n( A_1_488_full_n ),
    .if_write( A_1_488_write ),
    .if_dout( A_1_488_dout ),
    .if_empty_n( A_1_488_empty_n ),
    .if_read( A_1_488_read )
);

FIFO_DCT_MAT_Multiply_A_0_189 A_0_189_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_0_189_U_ap_dummy_ce ),
    .if_write_ce( A_0_189_U_ap_dummy_ce ),
    .if_din( A_0_189_din ),
    .if_full_n( A_0_189_full_n ),
    .if_write( A_0_189_write ),
    .if_dout( A_0_189_dout ),
    .if_empty_n( A_0_189_empty_n ),
    .if_read( A_0_189_read )
);

FIFO_DCT_MAT_Multiply_A_0_690 A_0_690_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_0_690_U_ap_dummy_ce ),
    .if_write_ce( A_0_690_U_ap_dummy_ce ),
    .if_din( A_0_690_din ),
    .if_full_n( A_0_690_full_n ),
    .if_write( A_0_690_write ),
    .if_dout( A_0_690_dout ),
    .if_empty_n( A_0_690_empty_n ),
    .if_read( A_0_690_read )
);

FIFO_DCT_MAT_Multiply_A_0_091 A_0_091_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_0_091_U_ap_dummy_ce ),
    .if_write_ce( A_0_091_U_ap_dummy_ce ),
    .if_din( A_0_091_din ),
    .if_full_n( A_0_091_full_n ),
    .if_write( A_0_091_write ),
    .if_dout( A_0_091_dout ),
    .if_empty_n( A_0_091_empty_n ),
    .if_read( A_0_091_read )
);

FIFO_DCT_MAT_Multiply_A_0_592 A_0_592_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_0_592_U_ap_dummy_ce ),
    .if_write_ce( A_0_592_U_ap_dummy_ce ),
    .if_din( A_0_592_din ),
    .if_full_n( A_0_592_full_n ),
    .if_write( A_0_592_write ),
    .if_dout( A_0_592_dout ),
    .if_empty_n( A_0_592_empty_n ),
    .if_read( A_0_592_read )
);

FIFO_DCT_MAT_Multiply_A_5_393 A_5_393_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_5_393_U_ap_dummy_ce ),
    .if_write_ce( A_5_393_U_ap_dummy_ce ),
    .if_din( A_5_393_din ),
    .if_full_n( A_5_393_full_n ),
    .if_write( A_5_393_write ),
    .if_dout( A_5_393_dout ),
    .if_empty_n( A_5_393_empty_n ),
    .if_read( A_5_393_read )
);

FIFO_DCT_MAT_Multiply_A_4_394 A_4_394_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_4_394_U_ap_dummy_ce ),
    .if_write_ce( A_4_394_U_ap_dummy_ce ),
    .if_din( A_4_394_din ),
    .if_full_n( A_4_394_full_n ),
    .if_write( A_4_394_write ),
    .if_dout( A_4_394_dout ),
    .if_empty_n( A_4_394_empty_n ),
    .if_read( A_4_394_read )
);

FIFO_DCT_MAT_Multiply_A_4_295 A_4_295_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_4_295_U_ap_dummy_ce ),
    .if_write_ce( A_4_295_U_ap_dummy_ce ),
    .if_din( A_4_295_din ),
    .if_full_n( A_4_295_full_n ),
    .if_write( A_4_295_write ),
    .if_dout( A_4_295_dout ),
    .if_empty_n( A_4_295_empty_n ),
    .if_read( A_4_295_read )
);

FIFO_DCT_MAT_Multiply_A_2_596 A_2_596_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_2_596_U_ap_dummy_ce ),
    .if_write_ce( A_2_596_U_ap_dummy_ce ),
    .if_din( A_2_596_din ),
    .if_full_n( A_2_596_full_n ),
    .if_write( A_2_596_write ),
    .if_dout( A_2_596_dout ),
    .if_empty_n( A_2_596_empty_n ),
    .if_read( A_2_596_read )
);

FIFO_DCT_MAT_Multiply_A_5_497 A_5_497_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_5_497_U_ap_dummy_ce ),
    .if_write_ce( A_5_497_U_ap_dummy_ce ),
    .if_din( A_5_497_din ),
    .if_full_n( A_5_497_full_n ),
    .if_write( A_5_497_write ),
    .if_dout( A_5_497_dout ),
    .if_empty_n( A_5_497_empty_n ),
    .if_read( A_5_497_read )
);

FIFO_DCT_MAT_Multiply_A_4_498 A_4_498_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_4_498_U_ap_dummy_ce ),
    .if_write_ce( A_4_498_U_ap_dummy_ce ),
    .if_din( A_4_498_din ),
    .if_full_n( A_4_498_full_n ),
    .if_write( A_4_498_write ),
    .if_dout( A_4_498_dout ),
    .if_empty_n( A_4_498_empty_n ),
    .if_read( A_4_498_read )
);

FIFO_DCT_MAT_Multiply_A_5_799 A_5_799_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_5_799_U_ap_dummy_ce ),
    .if_write_ce( A_5_799_U_ap_dummy_ce ),
    .if_din( A_5_799_din ),
    .if_full_n( A_5_799_full_n ),
    .if_write( A_5_799_write ),
    .if_dout( A_5_799_dout ),
    .if_empty_n( A_5_799_empty_n ),
    .if_read( A_5_799_read )
);

FIFO_DCT_MAT_Multiply_A_6_3100 A_6_3100_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_6_3100_U_ap_dummy_ce ),
    .if_write_ce( A_6_3100_U_ap_dummy_ce ),
    .if_din( A_6_3100_din ),
    .if_full_n( A_6_3100_full_n ),
    .if_write( A_6_3100_write ),
    .if_dout( A_6_3100_dout ),
    .if_empty_n( A_6_3100_empty_n ),
    .if_read( A_6_3100_read )
);

FIFO_DCT_MAT_Multiply_A_1_7101 A_1_7101_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_1_7101_U_ap_dummy_ce ),
    .if_write_ce( A_1_7101_U_ap_dummy_ce ),
    .if_din( A_1_7101_din ),
    .if_full_n( A_1_7101_full_n ),
    .if_write( A_1_7101_write ),
    .if_dout( A_1_7101_dout ),
    .if_empty_n( A_1_7101_empty_n ),
    .if_read( A_1_7101_read )
);

FIFO_DCT_MAT_Multiply_A_6_5102 A_6_5102_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_6_5102_U_ap_dummy_ce ),
    .if_write_ce( A_6_5102_U_ap_dummy_ce ),
    .if_din( A_6_5102_din ),
    .if_full_n( A_6_5102_full_n ),
    .if_write( A_6_5102_write ),
    .if_dout( A_6_5102_dout ),
    .if_empty_n( A_6_5102_empty_n ),
    .if_read( A_6_5102_read )
);

FIFO_DCT_MAT_Multiply_A_6_7103 A_6_7103_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_6_7103_U_ap_dummy_ce ),
    .if_write_ce( A_6_7103_U_ap_dummy_ce ),
    .if_din( A_6_7103_din ),
    .if_full_n( A_6_7103_full_n ),
    .if_write( A_6_7103_write ),
    .if_dout( A_6_7103_dout ),
    .if_empty_n( A_6_7103_empty_n ),
    .if_read( A_6_7103_read )
);

FIFO_DCT_MAT_Multiply_A_5_2104 A_5_2104_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_5_2104_U_ap_dummy_ce ),
    .if_write_ce( A_5_2104_U_ap_dummy_ce ),
    .if_din( A_5_2104_din ),
    .if_full_n( A_5_2104_full_n ),
    .if_write( A_5_2104_write ),
    .if_dout( A_5_2104_dout ),
    .if_empty_n( A_5_2104_empty_n ),
    .if_read( A_5_2104_read )
);

FIFO_DCT_MAT_Multiply_A_6_0105 A_6_0105_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_6_0105_U_ap_dummy_ce ),
    .if_write_ce( A_6_0105_U_ap_dummy_ce ),
    .if_din( A_6_0105_din ),
    .if_full_n( A_6_0105_full_n ),
    .if_write( A_6_0105_write ),
    .if_dout( A_6_0105_dout ),
    .if_empty_n( A_6_0105_empty_n ),
    .if_read( A_6_0105_read )
);

FIFO_DCT_MAT_Multiply_A_0_2106 A_0_2106_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_0_2106_U_ap_dummy_ce ),
    .if_write_ce( A_0_2106_U_ap_dummy_ce ),
    .if_din( A_0_2106_din ),
    .if_full_n( A_0_2106_full_n ),
    .if_write( A_0_2106_write ),
    .if_dout( A_0_2106_dout ),
    .if_empty_n( A_0_2106_empty_n ),
    .if_read( A_0_2106_read )
);

FIFO_DCT_MAT_Multiply_A_7_2107 A_7_2107_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_7_2107_U_ap_dummy_ce ),
    .if_write_ce( A_7_2107_U_ap_dummy_ce ),
    .if_din( A_7_2107_din ),
    .if_full_n( A_7_2107_full_n ),
    .if_write( A_7_2107_write ),
    .if_dout( A_7_2107_dout ),
    .if_empty_n( A_7_2107_empty_n ),
    .if_read( A_7_2107_read )
);

FIFO_DCT_MAT_Multiply_A_0_3108 A_0_3108_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_0_3108_U_ap_dummy_ce ),
    .if_write_ce( A_0_3108_U_ap_dummy_ce ),
    .if_din( A_0_3108_din ),
    .if_full_n( A_0_3108_full_n ),
    .if_write( A_0_3108_write ),
    .if_dout( A_0_3108_dout ),
    .if_empty_n( A_0_3108_empty_n ),
    .if_read( A_0_3108_read )
);

FIFO_DCT_MAT_Multiply_A_7_3109 A_7_3109_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_7_3109_U_ap_dummy_ce ),
    .if_write_ce( A_7_3109_U_ap_dummy_ce ),
    .if_din( A_7_3109_din ),
    .if_full_n( A_7_3109_full_n ),
    .if_write( A_7_3109_write ),
    .if_dout( A_7_3109_dout ),
    .if_empty_n( A_7_3109_empty_n ),
    .if_read( A_7_3109_read )
);

FIFO_DCT_MAT_Multiply_A_2_4110 A_2_4110_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_2_4110_U_ap_dummy_ce ),
    .if_write_ce( A_2_4110_U_ap_dummy_ce ),
    .if_din( A_2_4110_din ),
    .if_full_n( A_2_4110_full_n ),
    .if_write( A_2_4110_write ),
    .if_dout( A_2_4110_dout ),
    .if_empty_n( A_2_4110_empty_n ),
    .if_read( A_2_4110_read )
);

FIFO_DCT_MAT_Multiply_A_4_6111 A_4_6111_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_4_6111_U_ap_dummy_ce ),
    .if_write_ce( A_4_6111_U_ap_dummy_ce ),
    .if_din( A_4_6111_din ),
    .if_full_n( A_4_6111_full_n ),
    .if_write( A_4_6111_write ),
    .if_dout( A_4_6111_dout ),
    .if_empty_n( A_4_6111_empty_n ),
    .if_read( A_4_6111_read )
);

FIFO_DCT_MAT_Multiply_A_0_4112 A_0_4112_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_0_4112_U_ap_dummy_ce ),
    .if_write_ce( A_0_4112_U_ap_dummy_ce ),
    .if_din( A_0_4112_din ),
    .if_full_n( A_0_4112_full_n ),
    .if_write( A_0_4112_write ),
    .if_dout( A_0_4112_dout ),
    .if_empty_n( A_0_4112_empty_n ),
    .if_read( A_0_4112_read )
);

FIFO_DCT_MAT_Multiply_A_7_4113 A_7_4113_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_7_4113_U_ap_dummy_ce ),
    .if_write_ce( A_7_4113_U_ap_dummy_ce ),
    .if_din( A_7_4113_din ),
    .if_full_n( A_7_4113_full_n ),
    .if_write( A_7_4113_write ),
    .if_dout( A_7_4113_dout ),
    .if_empty_n( A_7_4113_empty_n ),
    .if_read( A_7_4113_read )
);

FIFO_DCT_MAT_Multiply_A_3_1114 A_3_1114_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_3_1114_U_ap_dummy_ce ),
    .if_write_ce( A_3_1114_U_ap_dummy_ce ),
    .if_din( A_3_1114_din ),
    .if_full_n( A_3_1114_full_n ),
    .if_write( A_3_1114_write ),
    .if_dout( A_3_1114_dout ),
    .if_empty_n( A_3_1114_empty_n ),
    .if_read( A_3_1114_read )
);

FIFO_DCT_MAT_Multiply_A_2_1115 A_2_1115_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_2_1115_U_ap_dummy_ce ),
    .if_write_ce( A_2_1115_U_ap_dummy_ce ),
    .if_din( A_2_1115_din ),
    .if_full_n( A_2_1115_full_n ),
    .if_write( A_2_1115_write ),
    .if_dout( A_2_1115_dout ),
    .if_empty_n( A_2_1115_empty_n ),
    .if_read( A_2_1115_read )
);

FIFO_DCT_MAT_Multiply_A_7_6116 A_7_6116_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_7_6116_U_ap_dummy_ce ),
    .if_write_ce( A_7_6116_U_ap_dummy_ce ),
    .if_din( A_7_6116_din ),
    .if_full_n( A_7_6116_full_n ),
    .if_write( A_7_6116_write ),
    .if_dout( A_7_6116_dout ),
    .if_empty_n( A_7_6116_empty_n ),
    .if_read( A_7_6116_read )
);

FIFO_DCT_MAT_Multiply_A_3_2117 A_3_2117_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_3_2117_U_ap_dummy_ce ),
    .if_write_ce( A_3_2117_U_ap_dummy_ce ),
    .if_din( A_3_2117_din ),
    .if_full_n( A_3_2117_full_n ),
    .if_write( A_3_2117_write ),
    .if_dout( A_3_2117_dout ),
    .if_empty_n( A_3_2117_empty_n ),
    .if_read( A_3_2117_read )
);

FIFO_DCT_MAT_Multiply_A_7_1118 A_7_1118_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_7_1118_U_ap_dummy_ce ),
    .if_write_ce( A_7_1118_U_ap_dummy_ce ),
    .if_din( A_7_1118_din ),
    .if_full_n( A_7_1118_full_n ),
    .if_write( A_7_1118_write ),
    .if_dout( A_7_1118_dout ),
    .if_empty_n( A_7_1118_empty_n ),
    .if_read( A_7_1118_read )
);

FIFO_DCT_MAT_Multiply_A_1_3119 A_1_3119_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_1_3119_U_ap_dummy_ce ),
    .if_write_ce( A_1_3119_U_ap_dummy_ce ),
    .if_din( A_1_3119_din ),
    .if_full_n( A_1_3119_full_n ),
    .if_write( A_1_3119_write ),
    .if_dout( A_1_3119_dout ),
    .if_empty_n( A_1_3119_empty_n ),
    .if_read( A_1_3119_read )
);

FIFO_DCT_MAT_Multiply_A_6_1120 A_6_1120_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_6_1120_U_ap_dummy_ce ),
    .if_write_ce( A_6_1120_U_ap_dummy_ce ),
    .if_din( A_6_1120_din ),
    .if_full_n( A_6_1120_full_n ),
    .if_write( A_6_1120_write ),
    .if_dout( A_6_1120_dout ),
    .if_empty_n( A_6_1120_empty_n ),
    .if_read( A_6_1120_read )
);

FIFO_DCT_MAT_Multiply_A_7_0121 A_7_0121_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_7_0121_U_ap_dummy_ce ),
    .if_write_ce( A_7_0121_U_ap_dummy_ce ),
    .if_din( A_7_0121_din ),
    .if_full_n( A_7_0121_full_n ),
    .if_write( A_7_0121_write ),
    .if_dout( A_7_0121_dout ),
    .if_empty_n( A_7_0121_empty_n ),
    .if_read( A_7_0121_read )
);

FIFO_DCT_MAT_Multiply_A_2_6122 A_2_6122_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_2_6122_U_ap_dummy_ce ),
    .if_write_ce( A_2_6122_U_ap_dummy_ce ),
    .if_din( A_2_6122_din ),
    .if_full_n( A_2_6122_full_n ),
    .if_write( A_2_6122_write ),
    .if_dout( A_2_6122_dout ),
    .if_empty_n( A_2_6122_empty_n ),
    .if_read( A_2_6122_read )
);

FIFO_DCT_MAT_Multiply_A_3_0123 A_3_0123_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_3_0123_U_ap_dummy_ce ),
    .if_write_ce( A_3_0123_U_ap_dummy_ce ),
    .if_din( A_3_0123_din ),
    .if_full_n( A_3_0123_full_n ),
    .if_write( A_3_0123_write ),
    .if_dout( A_3_0123_dout ),
    .if_empty_n( A_3_0123_empty_n ),
    .if_read( A_3_0123_read )
);

FIFO_DCT_MAT_Multiply_A_3_7124 A_3_7124_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_3_7124_U_ap_dummy_ce ),
    .if_write_ce( A_3_7124_U_ap_dummy_ce ),
    .if_din( A_3_7124_din ),
    .if_full_n( A_3_7124_full_n ),
    .if_write( A_3_7124_write ),
    .if_dout( A_3_7124_dout ),
    .if_empty_n( A_3_7124_empty_n ),
    .if_read( A_3_7124_read )
);

FIFO_DCT_MAT_Multiply_A_1_6125 A_1_6125_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_1_6125_U_ap_dummy_ce ),
    .if_write_ce( A_1_6125_U_ap_dummy_ce ),
    .if_din( A_1_6125_din ),
    .if_full_n( A_1_6125_full_n ),
    .if_write( A_1_6125_write ),
    .if_dout( A_1_6125_dout ),
    .if_empty_n( A_1_6125_empty_n ),
    .if_read( A_1_6125_read )
);

FIFO_DCT_MAT_Multiply_A_1_0126 A_1_0126_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_1_0126_U_ap_dummy_ce ),
    .if_write_ce( A_1_0126_U_ap_dummy_ce ),
    .if_din( A_1_0126_din ),
    .if_full_n( A_1_0126_full_n ),
    .if_write( A_1_0126_write ),
    .if_dout( A_1_0126_dout ),
    .if_empty_n( A_1_0126_empty_n ),
    .if_read( A_1_0126_read )
);

FIFO_DCT_MAT_Multiply_A_2_7127 A_2_7127_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_2_7127_U_ap_dummy_ce ),
    .if_write_ce( A_2_7127_U_ap_dummy_ce ),
    .if_din( A_2_7127_din ),
    .if_full_n( A_2_7127_full_n ),
    .if_write( A_2_7127_write ),
    .if_dout( A_2_7127_dout ),
    .if_empty_n( A_2_7127_empty_n ),
    .if_read( A_2_7127_read )
);

FIFO_DCT_MAT_Multiply_A_3_5128 A_3_5128_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_3_5128_U_ap_dummy_ce ),
    .if_write_ce( A_3_5128_U_ap_dummy_ce ),
    .if_din( A_3_5128_din ),
    .if_full_n( A_3_5128_full_n ),
    .if_write( A_3_5128_write ),
    .if_dout( A_3_5128_dout ),
    .if_empty_n( A_3_5128_empty_n ),
    .if_read( A_3_5128_read )
);

FIFO_DCT_MAT_Multiply_A_3_4129 A_3_4129_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_3_4129_U_ap_dummy_ce ),
    .if_write_ce( A_3_4129_U_ap_dummy_ce ),
    .if_din( A_3_4129_din ),
    .if_full_n( A_3_4129_full_n ),
    .if_write( A_3_4129_write ),
    .if_dout( A_3_4129_dout ),
    .if_empty_n( A_3_4129_empty_n ),
    .if_read( A_3_4129_read )
);

FIFO_DCT_MAT_Multiply_A_3_3130 A_3_3130_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_3_3130_U_ap_dummy_ce ),
    .if_write_ce( A_3_3130_U_ap_dummy_ce ),
    .if_din( A_3_3130_din ),
    .if_full_n( A_3_3130_full_n ),
    .if_write( A_3_3130_write ),
    .if_dout( A_3_3130_dout ),
    .if_empty_n( A_3_3130_empty_n ),
    .if_read( A_3_3130_read )
);

FIFO_DCT_MAT_Multiply_A_2_3131 A_2_3131_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_2_3131_U_ap_dummy_ce ),
    .if_write_ce( A_2_3131_U_ap_dummy_ce ),
    .if_din( A_2_3131_din ),
    .if_full_n( A_2_3131_full_n ),
    .if_write( A_2_3131_write ),
    .if_dout( A_2_3131_dout ),
    .if_empty_n( A_2_3131_empty_n ),
    .if_read( A_2_3131_read )
);

FIFO_DCT_MAT_Multiply_A_5_5132 A_5_5132_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_5_5132_U_ap_dummy_ce ),
    .if_write_ce( A_5_5132_U_ap_dummy_ce ),
    .if_din( A_5_5132_din ),
    .if_full_n( A_5_5132_full_n ),
    .if_write( A_5_5132_write ),
    .if_dout( A_5_5132_dout ),
    .if_empty_n( A_5_5132_empty_n ),
    .if_read( A_5_5132_read )
);

FIFO_DCT_MAT_Multiply_A_4_5133 A_4_5133_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_4_5133_U_ap_dummy_ce ),
    .if_write_ce( A_4_5133_U_ap_dummy_ce ),
    .if_din( A_4_5133_din ),
    .if_full_n( A_4_5133_full_n ),
    .if_write( A_4_5133_write ),
    .if_dout( A_4_5133_dout ),
    .if_empty_n( A_4_5133_empty_n ),
    .if_read( A_4_5133_read )
);

FIFO_DCT_MAT_Multiply_A_2_2134 A_2_2134_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( A_2_2134_U_ap_dummy_ce ),
    .if_write_ce( A_2_2134_U_ap_dummy_ce ),
    .if_din( A_2_2134_din ),
    .if_full_n( A_2_2134_full_n ),
    .if_write( A_2_2134_write ),
    .if_dout( A_2_2134_dout ),
    .if_empty_n( A_2_2134_empty_n ),
    .if_read( A_2_2134_read )
);

FIFO_DCT_MAT_Multiply_B_cached_0_0_channel B_cached_0_0_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_0_0_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_0_0_channel_U_ap_dummy_ce ),
    .if_din( B_cached_0_0_channel_din ),
    .if_full_n( B_cached_0_0_channel_full_n ),
    .if_write( B_cached_0_0_channel_write ),
    .if_dout( B_cached_0_0_channel_dout ),
    .if_empty_n( B_cached_0_0_channel_empty_n ),
    .if_read( B_cached_0_0_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_0_1_channel B_cached_0_1_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_0_1_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_0_1_channel_U_ap_dummy_ce ),
    .if_din( B_cached_0_1_channel_din ),
    .if_full_n( B_cached_0_1_channel_full_n ),
    .if_write( B_cached_0_1_channel_write ),
    .if_dout( B_cached_0_1_channel_dout ),
    .if_empty_n( B_cached_0_1_channel_empty_n ),
    .if_read( B_cached_0_1_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_0_2_channel B_cached_0_2_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_0_2_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_0_2_channel_U_ap_dummy_ce ),
    .if_din( B_cached_0_2_channel_din ),
    .if_full_n( B_cached_0_2_channel_full_n ),
    .if_write( B_cached_0_2_channel_write ),
    .if_dout( B_cached_0_2_channel_dout ),
    .if_empty_n( B_cached_0_2_channel_empty_n ),
    .if_read( B_cached_0_2_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_0_3_channel B_cached_0_3_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_0_3_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_0_3_channel_U_ap_dummy_ce ),
    .if_din( B_cached_0_3_channel_din ),
    .if_full_n( B_cached_0_3_channel_full_n ),
    .if_write( B_cached_0_3_channel_write ),
    .if_dout( B_cached_0_3_channel_dout ),
    .if_empty_n( B_cached_0_3_channel_empty_n ),
    .if_read( B_cached_0_3_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_0_4_channel B_cached_0_4_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_0_4_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_0_4_channel_U_ap_dummy_ce ),
    .if_din( B_cached_0_4_channel_din ),
    .if_full_n( B_cached_0_4_channel_full_n ),
    .if_write( B_cached_0_4_channel_write ),
    .if_dout( B_cached_0_4_channel_dout ),
    .if_empty_n( B_cached_0_4_channel_empty_n ),
    .if_read( B_cached_0_4_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_0_5_channel B_cached_0_5_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_0_5_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_0_5_channel_U_ap_dummy_ce ),
    .if_din( B_cached_0_5_channel_din ),
    .if_full_n( B_cached_0_5_channel_full_n ),
    .if_write( B_cached_0_5_channel_write ),
    .if_dout( B_cached_0_5_channel_dout ),
    .if_empty_n( B_cached_0_5_channel_empty_n ),
    .if_read( B_cached_0_5_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_0_6_channel B_cached_0_6_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_0_6_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_0_6_channel_U_ap_dummy_ce ),
    .if_din( B_cached_0_6_channel_din ),
    .if_full_n( B_cached_0_6_channel_full_n ),
    .if_write( B_cached_0_6_channel_write ),
    .if_dout( B_cached_0_6_channel_dout ),
    .if_empty_n( B_cached_0_6_channel_empty_n ),
    .if_read( B_cached_0_6_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_0_7_channel B_cached_0_7_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_0_7_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_0_7_channel_U_ap_dummy_ce ),
    .if_din( B_cached_0_7_channel_din ),
    .if_full_n( B_cached_0_7_channel_full_n ),
    .if_write( B_cached_0_7_channel_write ),
    .if_dout( B_cached_0_7_channel_dout ),
    .if_empty_n( B_cached_0_7_channel_empty_n ),
    .if_read( B_cached_0_7_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_1_0_channel B_cached_1_0_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_1_0_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_1_0_channel_U_ap_dummy_ce ),
    .if_din( B_cached_1_0_channel_din ),
    .if_full_n( B_cached_1_0_channel_full_n ),
    .if_write( B_cached_1_0_channel_write ),
    .if_dout( B_cached_1_0_channel_dout ),
    .if_empty_n( B_cached_1_0_channel_empty_n ),
    .if_read( B_cached_1_0_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_1_1_channel B_cached_1_1_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_1_1_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_1_1_channel_U_ap_dummy_ce ),
    .if_din( B_cached_1_1_channel_din ),
    .if_full_n( B_cached_1_1_channel_full_n ),
    .if_write( B_cached_1_1_channel_write ),
    .if_dout( B_cached_1_1_channel_dout ),
    .if_empty_n( B_cached_1_1_channel_empty_n ),
    .if_read( B_cached_1_1_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_1_2_channel B_cached_1_2_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_1_2_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_1_2_channel_U_ap_dummy_ce ),
    .if_din( B_cached_1_2_channel_din ),
    .if_full_n( B_cached_1_2_channel_full_n ),
    .if_write( B_cached_1_2_channel_write ),
    .if_dout( B_cached_1_2_channel_dout ),
    .if_empty_n( B_cached_1_2_channel_empty_n ),
    .if_read( B_cached_1_2_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_1_3_channel B_cached_1_3_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_1_3_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_1_3_channel_U_ap_dummy_ce ),
    .if_din( B_cached_1_3_channel_din ),
    .if_full_n( B_cached_1_3_channel_full_n ),
    .if_write( B_cached_1_3_channel_write ),
    .if_dout( B_cached_1_3_channel_dout ),
    .if_empty_n( B_cached_1_3_channel_empty_n ),
    .if_read( B_cached_1_3_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_1_4_channel B_cached_1_4_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_1_4_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_1_4_channel_U_ap_dummy_ce ),
    .if_din( B_cached_1_4_channel_din ),
    .if_full_n( B_cached_1_4_channel_full_n ),
    .if_write( B_cached_1_4_channel_write ),
    .if_dout( B_cached_1_4_channel_dout ),
    .if_empty_n( B_cached_1_4_channel_empty_n ),
    .if_read( B_cached_1_4_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_1_5_channel B_cached_1_5_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_1_5_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_1_5_channel_U_ap_dummy_ce ),
    .if_din( B_cached_1_5_channel_din ),
    .if_full_n( B_cached_1_5_channel_full_n ),
    .if_write( B_cached_1_5_channel_write ),
    .if_dout( B_cached_1_5_channel_dout ),
    .if_empty_n( B_cached_1_5_channel_empty_n ),
    .if_read( B_cached_1_5_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_1_6_channel B_cached_1_6_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_1_6_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_1_6_channel_U_ap_dummy_ce ),
    .if_din( B_cached_1_6_channel_din ),
    .if_full_n( B_cached_1_6_channel_full_n ),
    .if_write( B_cached_1_6_channel_write ),
    .if_dout( B_cached_1_6_channel_dout ),
    .if_empty_n( B_cached_1_6_channel_empty_n ),
    .if_read( B_cached_1_6_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_1_7_channel B_cached_1_7_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_1_7_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_1_7_channel_U_ap_dummy_ce ),
    .if_din( B_cached_1_7_channel_din ),
    .if_full_n( B_cached_1_7_channel_full_n ),
    .if_write( B_cached_1_7_channel_write ),
    .if_dout( B_cached_1_7_channel_dout ),
    .if_empty_n( B_cached_1_7_channel_empty_n ),
    .if_read( B_cached_1_7_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_2_0_channel B_cached_2_0_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_2_0_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_2_0_channel_U_ap_dummy_ce ),
    .if_din( B_cached_2_0_channel_din ),
    .if_full_n( B_cached_2_0_channel_full_n ),
    .if_write( B_cached_2_0_channel_write ),
    .if_dout( B_cached_2_0_channel_dout ),
    .if_empty_n( B_cached_2_0_channel_empty_n ),
    .if_read( B_cached_2_0_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_2_1_channel B_cached_2_1_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_2_1_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_2_1_channel_U_ap_dummy_ce ),
    .if_din( B_cached_2_1_channel_din ),
    .if_full_n( B_cached_2_1_channel_full_n ),
    .if_write( B_cached_2_1_channel_write ),
    .if_dout( B_cached_2_1_channel_dout ),
    .if_empty_n( B_cached_2_1_channel_empty_n ),
    .if_read( B_cached_2_1_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_2_2_channel B_cached_2_2_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_2_2_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_2_2_channel_U_ap_dummy_ce ),
    .if_din( B_cached_2_2_channel_din ),
    .if_full_n( B_cached_2_2_channel_full_n ),
    .if_write( B_cached_2_2_channel_write ),
    .if_dout( B_cached_2_2_channel_dout ),
    .if_empty_n( B_cached_2_2_channel_empty_n ),
    .if_read( B_cached_2_2_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_2_3_channel B_cached_2_3_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_2_3_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_2_3_channel_U_ap_dummy_ce ),
    .if_din( B_cached_2_3_channel_din ),
    .if_full_n( B_cached_2_3_channel_full_n ),
    .if_write( B_cached_2_3_channel_write ),
    .if_dout( B_cached_2_3_channel_dout ),
    .if_empty_n( B_cached_2_3_channel_empty_n ),
    .if_read( B_cached_2_3_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_2_4_channel B_cached_2_4_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_2_4_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_2_4_channel_U_ap_dummy_ce ),
    .if_din( B_cached_2_4_channel_din ),
    .if_full_n( B_cached_2_4_channel_full_n ),
    .if_write( B_cached_2_4_channel_write ),
    .if_dout( B_cached_2_4_channel_dout ),
    .if_empty_n( B_cached_2_4_channel_empty_n ),
    .if_read( B_cached_2_4_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_2_5_channel B_cached_2_5_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_2_5_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_2_5_channel_U_ap_dummy_ce ),
    .if_din( B_cached_2_5_channel_din ),
    .if_full_n( B_cached_2_5_channel_full_n ),
    .if_write( B_cached_2_5_channel_write ),
    .if_dout( B_cached_2_5_channel_dout ),
    .if_empty_n( B_cached_2_5_channel_empty_n ),
    .if_read( B_cached_2_5_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_2_6_channel B_cached_2_6_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_2_6_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_2_6_channel_U_ap_dummy_ce ),
    .if_din( B_cached_2_6_channel_din ),
    .if_full_n( B_cached_2_6_channel_full_n ),
    .if_write( B_cached_2_6_channel_write ),
    .if_dout( B_cached_2_6_channel_dout ),
    .if_empty_n( B_cached_2_6_channel_empty_n ),
    .if_read( B_cached_2_6_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_2_7_channel B_cached_2_7_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_2_7_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_2_7_channel_U_ap_dummy_ce ),
    .if_din( B_cached_2_7_channel_din ),
    .if_full_n( B_cached_2_7_channel_full_n ),
    .if_write( B_cached_2_7_channel_write ),
    .if_dout( B_cached_2_7_channel_dout ),
    .if_empty_n( B_cached_2_7_channel_empty_n ),
    .if_read( B_cached_2_7_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_3_0_channel B_cached_3_0_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_3_0_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_3_0_channel_U_ap_dummy_ce ),
    .if_din( B_cached_3_0_channel_din ),
    .if_full_n( B_cached_3_0_channel_full_n ),
    .if_write( B_cached_3_0_channel_write ),
    .if_dout( B_cached_3_0_channel_dout ),
    .if_empty_n( B_cached_3_0_channel_empty_n ),
    .if_read( B_cached_3_0_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_3_1_channel B_cached_3_1_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_3_1_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_3_1_channel_U_ap_dummy_ce ),
    .if_din( B_cached_3_1_channel_din ),
    .if_full_n( B_cached_3_1_channel_full_n ),
    .if_write( B_cached_3_1_channel_write ),
    .if_dout( B_cached_3_1_channel_dout ),
    .if_empty_n( B_cached_3_1_channel_empty_n ),
    .if_read( B_cached_3_1_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_3_2_channel B_cached_3_2_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_3_2_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_3_2_channel_U_ap_dummy_ce ),
    .if_din( B_cached_3_2_channel_din ),
    .if_full_n( B_cached_3_2_channel_full_n ),
    .if_write( B_cached_3_2_channel_write ),
    .if_dout( B_cached_3_2_channel_dout ),
    .if_empty_n( B_cached_3_2_channel_empty_n ),
    .if_read( B_cached_3_2_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_3_3_channel B_cached_3_3_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_3_3_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_3_3_channel_U_ap_dummy_ce ),
    .if_din( B_cached_3_3_channel_din ),
    .if_full_n( B_cached_3_3_channel_full_n ),
    .if_write( B_cached_3_3_channel_write ),
    .if_dout( B_cached_3_3_channel_dout ),
    .if_empty_n( B_cached_3_3_channel_empty_n ),
    .if_read( B_cached_3_3_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_3_4_channel B_cached_3_4_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_3_4_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_3_4_channel_U_ap_dummy_ce ),
    .if_din( B_cached_3_4_channel_din ),
    .if_full_n( B_cached_3_4_channel_full_n ),
    .if_write( B_cached_3_4_channel_write ),
    .if_dout( B_cached_3_4_channel_dout ),
    .if_empty_n( B_cached_3_4_channel_empty_n ),
    .if_read( B_cached_3_4_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_3_5_channel B_cached_3_5_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_3_5_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_3_5_channel_U_ap_dummy_ce ),
    .if_din( B_cached_3_5_channel_din ),
    .if_full_n( B_cached_3_5_channel_full_n ),
    .if_write( B_cached_3_5_channel_write ),
    .if_dout( B_cached_3_5_channel_dout ),
    .if_empty_n( B_cached_3_5_channel_empty_n ),
    .if_read( B_cached_3_5_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_3_6_channel B_cached_3_6_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_3_6_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_3_6_channel_U_ap_dummy_ce ),
    .if_din( B_cached_3_6_channel_din ),
    .if_full_n( B_cached_3_6_channel_full_n ),
    .if_write( B_cached_3_6_channel_write ),
    .if_dout( B_cached_3_6_channel_dout ),
    .if_empty_n( B_cached_3_6_channel_empty_n ),
    .if_read( B_cached_3_6_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_3_7_channel B_cached_3_7_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_3_7_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_3_7_channel_U_ap_dummy_ce ),
    .if_din( B_cached_3_7_channel_din ),
    .if_full_n( B_cached_3_7_channel_full_n ),
    .if_write( B_cached_3_7_channel_write ),
    .if_dout( B_cached_3_7_channel_dout ),
    .if_empty_n( B_cached_3_7_channel_empty_n ),
    .if_read( B_cached_3_7_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_4_0_channel B_cached_4_0_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_4_0_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_4_0_channel_U_ap_dummy_ce ),
    .if_din( B_cached_4_0_channel_din ),
    .if_full_n( B_cached_4_0_channel_full_n ),
    .if_write( B_cached_4_0_channel_write ),
    .if_dout( B_cached_4_0_channel_dout ),
    .if_empty_n( B_cached_4_0_channel_empty_n ),
    .if_read( B_cached_4_0_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_4_1_channel B_cached_4_1_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_4_1_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_4_1_channel_U_ap_dummy_ce ),
    .if_din( B_cached_4_1_channel_din ),
    .if_full_n( B_cached_4_1_channel_full_n ),
    .if_write( B_cached_4_1_channel_write ),
    .if_dout( B_cached_4_1_channel_dout ),
    .if_empty_n( B_cached_4_1_channel_empty_n ),
    .if_read( B_cached_4_1_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_4_2_channel B_cached_4_2_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_4_2_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_4_2_channel_U_ap_dummy_ce ),
    .if_din( B_cached_4_2_channel_din ),
    .if_full_n( B_cached_4_2_channel_full_n ),
    .if_write( B_cached_4_2_channel_write ),
    .if_dout( B_cached_4_2_channel_dout ),
    .if_empty_n( B_cached_4_2_channel_empty_n ),
    .if_read( B_cached_4_2_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_4_3_channel B_cached_4_3_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_4_3_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_4_3_channel_U_ap_dummy_ce ),
    .if_din( B_cached_4_3_channel_din ),
    .if_full_n( B_cached_4_3_channel_full_n ),
    .if_write( B_cached_4_3_channel_write ),
    .if_dout( B_cached_4_3_channel_dout ),
    .if_empty_n( B_cached_4_3_channel_empty_n ),
    .if_read( B_cached_4_3_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_4_4_channel B_cached_4_4_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_4_4_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_4_4_channel_U_ap_dummy_ce ),
    .if_din( B_cached_4_4_channel_din ),
    .if_full_n( B_cached_4_4_channel_full_n ),
    .if_write( B_cached_4_4_channel_write ),
    .if_dout( B_cached_4_4_channel_dout ),
    .if_empty_n( B_cached_4_4_channel_empty_n ),
    .if_read( B_cached_4_4_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_4_5_channel B_cached_4_5_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_4_5_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_4_5_channel_U_ap_dummy_ce ),
    .if_din( B_cached_4_5_channel_din ),
    .if_full_n( B_cached_4_5_channel_full_n ),
    .if_write( B_cached_4_5_channel_write ),
    .if_dout( B_cached_4_5_channel_dout ),
    .if_empty_n( B_cached_4_5_channel_empty_n ),
    .if_read( B_cached_4_5_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_4_6_channel B_cached_4_6_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_4_6_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_4_6_channel_U_ap_dummy_ce ),
    .if_din( B_cached_4_6_channel_din ),
    .if_full_n( B_cached_4_6_channel_full_n ),
    .if_write( B_cached_4_6_channel_write ),
    .if_dout( B_cached_4_6_channel_dout ),
    .if_empty_n( B_cached_4_6_channel_empty_n ),
    .if_read( B_cached_4_6_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_4_7_channel B_cached_4_7_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_4_7_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_4_7_channel_U_ap_dummy_ce ),
    .if_din( B_cached_4_7_channel_din ),
    .if_full_n( B_cached_4_7_channel_full_n ),
    .if_write( B_cached_4_7_channel_write ),
    .if_dout( B_cached_4_7_channel_dout ),
    .if_empty_n( B_cached_4_7_channel_empty_n ),
    .if_read( B_cached_4_7_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_5_0_channel B_cached_5_0_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_5_0_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_5_0_channel_U_ap_dummy_ce ),
    .if_din( B_cached_5_0_channel_din ),
    .if_full_n( B_cached_5_0_channel_full_n ),
    .if_write( B_cached_5_0_channel_write ),
    .if_dout( B_cached_5_0_channel_dout ),
    .if_empty_n( B_cached_5_0_channel_empty_n ),
    .if_read( B_cached_5_0_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_5_1_channel B_cached_5_1_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_5_1_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_5_1_channel_U_ap_dummy_ce ),
    .if_din( B_cached_5_1_channel_din ),
    .if_full_n( B_cached_5_1_channel_full_n ),
    .if_write( B_cached_5_1_channel_write ),
    .if_dout( B_cached_5_1_channel_dout ),
    .if_empty_n( B_cached_5_1_channel_empty_n ),
    .if_read( B_cached_5_1_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_5_2_channel B_cached_5_2_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_5_2_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_5_2_channel_U_ap_dummy_ce ),
    .if_din( B_cached_5_2_channel_din ),
    .if_full_n( B_cached_5_2_channel_full_n ),
    .if_write( B_cached_5_2_channel_write ),
    .if_dout( B_cached_5_2_channel_dout ),
    .if_empty_n( B_cached_5_2_channel_empty_n ),
    .if_read( B_cached_5_2_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_5_3_channel B_cached_5_3_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_5_3_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_5_3_channel_U_ap_dummy_ce ),
    .if_din( B_cached_5_3_channel_din ),
    .if_full_n( B_cached_5_3_channel_full_n ),
    .if_write( B_cached_5_3_channel_write ),
    .if_dout( B_cached_5_3_channel_dout ),
    .if_empty_n( B_cached_5_3_channel_empty_n ),
    .if_read( B_cached_5_3_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_5_4_channel B_cached_5_4_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_5_4_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_5_4_channel_U_ap_dummy_ce ),
    .if_din( B_cached_5_4_channel_din ),
    .if_full_n( B_cached_5_4_channel_full_n ),
    .if_write( B_cached_5_4_channel_write ),
    .if_dout( B_cached_5_4_channel_dout ),
    .if_empty_n( B_cached_5_4_channel_empty_n ),
    .if_read( B_cached_5_4_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_5_5_channel B_cached_5_5_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_5_5_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_5_5_channel_U_ap_dummy_ce ),
    .if_din( B_cached_5_5_channel_din ),
    .if_full_n( B_cached_5_5_channel_full_n ),
    .if_write( B_cached_5_5_channel_write ),
    .if_dout( B_cached_5_5_channel_dout ),
    .if_empty_n( B_cached_5_5_channel_empty_n ),
    .if_read( B_cached_5_5_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_5_6_channel B_cached_5_6_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_5_6_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_5_6_channel_U_ap_dummy_ce ),
    .if_din( B_cached_5_6_channel_din ),
    .if_full_n( B_cached_5_6_channel_full_n ),
    .if_write( B_cached_5_6_channel_write ),
    .if_dout( B_cached_5_6_channel_dout ),
    .if_empty_n( B_cached_5_6_channel_empty_n ),
    .if_read( B_cached_5_6_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_5_7_channel B_cached_5_7_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_5_7_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_5_7_channel_U_ap_dummy_ce ),
    .if_din( B_cached_5_7_channel_din ),
    .if_full_n( B_cached_5_7_channel_full_n ),
    .if_write( B_cached_5_7_channel_write ),
    .if_dout( B_cached_5_7_channel_dout ),
    .if_empty_n( B_cached_5_7_channel_empty_n ),
    .if_read( B_cached_5_7_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_6_0_channel B_cached_6_0_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_6_0_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_6_0_channel_U_ap_dummy_ce ),
    .if_din( B_cached_6_0_channel_din ),
    .if_full_n( B_cached_6_0_channel_full_n ),
    .if_write( B_cached_6_0_channel_write ),
    .if_dout( B_cached_6_0_channel_dout ),
    .if_empty_n( B_cached_6_0_channel_empty_n ),
    .if_read( B_cached_6_0_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_6_1_channel B_cached_6_1_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_6_1_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_6_1_channel_U_ap_dummy_ce ),
    .if_din( B_cached_6_1_channel_din ),
    .if_full_n( B_cached_6_1_channel_full_n ),
    .if_write( B_cached_6_1_channel_write ),
    .if_dout( B_cached_6_1_channel_dout ),
    .if_empty_n( B_cached_6_1_channel_empty_n ),
    .if_read( B_cached_6_1_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_6_2_channel B_cached_6_2_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_6_2_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_6_2_channel_U_ap_dummy_ce ),
    .if_din( B_cached_6_2_channel_din ),
    .if_full_n( B_cached_6_2_channel_full_n ),
    .if_write( B_cached_6_2_channel_write ),
    .if_dout( B_cached_6_2_channel_dout ),
    .if_empty_n( B_cached_6_2_channel_empty_n ),
    .if_read( B_cached_6_2_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_6_3_channel B_cached_6_3_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_6_3_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_6_3_channel_U_ap_dummy_ce ),
    .if_din( B_cached_6_3_channel_din ),
    .if_full_n( B_cached_6_3_channel_full_n ),
    .if_write( B_cached_6_3_channel_write ),
    .if_dout( B_cached_6_3_channel_dout ),
    .if_empty_n( B_cached_6_3_channel_empty_n ),
    .if_read( B_cached_6_3_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_6_4_channel B_cached_6_4_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_6_4_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_6_4_channel_U_ap_dummy_ce ),
    .if_din( B_cached_6_4_channel_din ),
    .if_full_n( B_cached_6_4_channel_full_n ),
    .if_write( B_cached_6_4_channel_write ),
    .if_dout( B_cached_6_4_channel_dout ),
    .if_empty_n( B_cached_6_4_channel_empty_n ),
    .if_read( B_cached_6_4_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_6_5_channel B_cached_6_5_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_6_5_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_6_5_channel_U_ap_dummy_ce ),
    .if_din( B_cached_6_5_channel_din ),
    .if_full_n( B_cached_6_5_channel_full_n ),
    .if_write( B_cached_6_5_channel_write ),
    .if_dout( B_cached_6_5_channel_dout ),
    .if_empty_n( B_cached_6_5_channel_empty_n ),
    .if_read( B_cached_6_5_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_6_6_channel B_cached_6_6_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_6_6_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_6_6_channel_U_ap_dummy_ce ),
    .if_din( B_cached_6_6_channel_din ),
    .if_full_n( B_cached_6_6_channel_full_n ),
    .if_write( B_cached_6_6_channel_write ),
    .if_dout( B_cached_6_6_channel_dout ),
    .if_empty_n( B_cached_6_6_channel_empty_n ),
    .if_read( B_cached_6_6_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_6_7_channel B_cached_6_7_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_6_7_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_6_7_channel_U_ap_dummy_ce ),
    .if_din( B_cached_6_7_channel_din ),
    .if_full_n( B_cached_6_7_channel_full_n ),
    .if_write( B_cached_6_7_channel_write ),
    .if_dout( B_cached_6_7_channel_dout ),
    .if_empty_n( B_cached_6_7_channel_empty_n ),
    .if_read( B_cached_6_7_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_7_0_channel B_cached_7_0_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_7_0_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_7_0_channel_U_ap_dummy_ce ),
    .if_din( B_cached_7_0_channel_din ),
    .if_full_n( B_cached_7_0_channel_full_n ),
    .if_write( B_cached_7_0_channel_write ),
    .if_dout( B_cached_7_0_channel_dout ),
    .if_empty_n( B_cached_7_0_channel_empty_n ),
    .if_read( B_cached_7_0_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_7_1_channel B_cached_7_1_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_7_1_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_7_1_channel_U_ap_dummy_ce ),
    .if_din( B_cached_7_1_channel_din ),
    .if_full_n( B_cached_7_1_channel_full_n ),
    .if_write( B_cached_7_1_channel_write ),
    .if_dout( B_cached_7_1_channel_dout ),
    .if_empty_n( B_cached_7_1_channel_empty_n ),
    .if_read( B_cached_7_1_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_7_2_channel B_cached_7_2_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_7_2_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_7_2_channel_U_ap_dummy_ce ),
    .if_din( B_cached_7_2_channel_din ),
    .if_full_n( B_cached_7_2_channel_full_n ),
    .if_write( B_cached_7_2_channel_write ),
    .if_dout( B_cached_7_2_channel_dout ),
    .if_empty_n( B_cached_7_2_channel_empty_n ),
    .if_read( B_cached_7_2_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_7_3_channel B_cached_7_3_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_7_3_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_7_3_channel_U_ap_dummy_ce ),
    .if_din( B_cached_7_3_channel_din ),
    .if_full_n( B_cached_7_3_channel_full_n ),
    .if_write( B_cached_7_3_channel_write ),
    .if_dout( B_cached_7_3_channel_dout ),
    .if_empty_n( B_cached_7_3_channel_empty_n ),
    .if_read( B_cached_7_3_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_7_4_channel B_cached_7_4_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_7_4_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_7_4_channel_U_ap_dummy_ce ),
    .if_din( B_cached_7_4_channel_din ),
    .if_full_n( B_cached_7_4_channel_full_n ),
    .if_write( B_cached_7_4_channel_write ),
    .if_dout( B_cached_7_4_channel_dout ),
    .if_empty_n( B_cached_7_4_channel_empty_n ),
    .if_read( B_cached_7_4_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_7_5_channel B_cached_7_5_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_7_5_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_7_5_channel_U_ap_dummy_ce ),
    .if_din( B_cached_7_5_channel_din ),
    .if_full_n( B_cached_7_5_channel_full_n ),
    .if_write( B_cached_7_5_channel_write ),
    .if_dout( B_cached_7_5_channel_dout ),
    .if_empty_n( B_cached_7_5_channel_empty_n ),
    .if_read( B_cached_7_5_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_7_6_channel B_cached_7_6_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_7_6_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_7_6_channel_U_ap_dummy_ce ),
    .if_din( B_cached_7_6_channel_din ),
    .if_full_n( B_cached_7_6_channel_full_n ),
    .if_write( B_cached_7_6_channel_write ),
    .if_dout( B_cached_7_6_channel_dout ),
    .if_empty_n( B_cached_7_6_channel_empty_n ),
    .if_read( B_cached_7_6_channel_read )
);

FIFO_DCT_MAT_Multiply_B_cached_7_7_channel B_cached_7_7_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( B_cached_7_7_channel_U_ap_dummy_ce ),
    .if_write_ce( B_cached_7_7_channel_U_ap_dummy_ce ),
    .if_din( B_cached_7_7_channel_din ),
    .if_full_n( B_cached_7_7_channel_full_n ),
    .if_write( B_cached_7_7_channel_write ),
    .if_dout( B_cached_7_7_channel_dout ),
    .if_empty_n( B_cached_7_7_channel_empty_n ),
    .if_read( B_cached_7_7_channel_read )
);



/// ap_reg_procdone_DCT_MAT_Multiply_Loop_LoadRow_proc_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_DCT_MAT_Multiply_Loop_LoadRow_proc_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_DCT_MAT_Multiply_Loop_LoadRow_proc_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_DCT_MAT_Multiply_Loop_LoadRow_proc_U0 <= ap_const_logic_0;
        end else if ((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1)) begin
            ap_reg_procdone_DCT_MAT_Multiply_Loop_LoadRow_proc_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_DCT_MAT_Multiply_Loop_Row_proc440_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_DCT_MAT_Multiply_Loop_Row_proc440_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_DCT_MAT_Multiply_Loop_Row_proc440_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_DCT_MAT_Multiply_Loop_Row_proc440_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_done)) begin
            ap_reg_procdone_DCT_MAT_Multiply_Loop_Row_proc440_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_0_0_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_0_0_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_0_0_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_0_0_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_0_0_channel_full_n))) begin
            ap_reg_ready_B_cached_0_0_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_0_1_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_0_1_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_0_1_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_0_1_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_0_1_channel_full_n))) begin
            ap_reg_ready_B_cached_0_1_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_0_2_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_0_2_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_0_2_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_0_2_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_0_2_channel_full_n))) begin
            ap_reg_ready_B_cached_0_2_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_0_3_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_0_3_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_0_3_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_0_3_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_0_3_channel_full_n))) begin
            ap_reg_ready_B_cached_0_3_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_0_4_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_0_4_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_0_4_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_0_4_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_0_4_channel_full_n))) begin
            ap_reg_ready_B_cached_0_4_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_0_5_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_0_5_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_0_5_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_0_5_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_0_5_channel_full_n))) begin
            ap_reg_ready_B_cached_0_5_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_0_6_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_0_6_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_0_6_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_0_6_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_0_6_channel_full_n))) begin
            ap_reg_ready_B_cached_0_6_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_0_7_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_0_7_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_0_7_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_0_7_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_0_7_channel_full_n))) begin
            ap_reg_ready_B_cached_0_7_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_1_0_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_1_0_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_1_0_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_1_0_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_1_0_channel_full_n))) begin
            ap_reg_ready_B_cached_1_0_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_1_1_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_1_1_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_1_1_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_1_1_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_1_1_channel_full_n))) begin
            ap_reg_ready_B_cached_1_1_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_1_2_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_1_2_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_1_2_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_1_2_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_1_2_channel_full_n))) begin
            ap_reg_ready_B_cached_1_2_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_1_3_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_1_3_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_1_3_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_1_3_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_1_3_channel_full_n))) begin
            ap_reg_ready_B_cached_1_3_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_1_4_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_1_4_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_1_4_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_1_4_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_1_4_channel_full_n))) begin
            ap_reg_ready_B_cached_1_4_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_1_5_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_1_5_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_1_5_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_1_5_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_1_5_channel_full_n))) begin
            ap_reg_ready_B_cached_1_5_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_1_6_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_1_6_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_1_6_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_1_6_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_1_6_channel_full_n))) begin
            ap_reg_ready_B_cached_1_6_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_1_7_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_1_7_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_1_7_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_1_7_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_1_7_channel_full_n))) begin
            ap_reg_ready_B_cached_1_7_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_2_0_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_2_0_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_2_0_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_2_0_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_2_0_channel_full_n))) begin
            ap_reg_ready_B_cached_2_0_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_2_1_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_2_1_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_2_1_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_2_1_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_2_1_channel_full_n))) begin
            ap_reg_ready_B_cached_2_1_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_2_2_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_2_2_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_2_2_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_2_2_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_2_2_channel_full_n))) begin
            ap_reg_ready_B_cached_2_2_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_2_3_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_2_3_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_2_3_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_2_3_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_2_3_channel_full_n))) begin
            ap_reg_ready_B_cached_2_3_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_2_4_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_2_4_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_2_4_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_2_4_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_2_4_channel_full_n))) begin
            ap_reg_ready_B_cached_2_4_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_2_5_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_2_5_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_2_5_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_2_5_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_2_5_channel_full_n))) begin
            ap_reg_ready_B_cached_2_5_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_2_6_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_2_6_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_2_6_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_2_6_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_2_6_channel_full_n))) begin
            ap_reg_ready_B_cached_2_6_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_2_7_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_2_7_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_2_7_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_2_7_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_2_7_channel_full_n))) begin
            ap_reg_ready_B_cached_2_7_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_3_0_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_3_0_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_3_0_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_3_0_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_3_0_channel_full_n))) begin
            ap_reg_ready_B_cached_3_0_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_3_1_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_3_1_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_3_1_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_3_1_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_3_1_channel_full_n))) begin
            ap_reg_ready_B_cached_3_1_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_3_2_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_3_2_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_3_2_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_3_2_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_3_2_channel_full_n))) begin
            ap_reg_ready_B_cached_3_2_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_3_3_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_3_3_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_3_3_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_3_3_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_3_3_channel_full_n))) begin
            ap_reg_ready_B_cached_3_3_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_3_4_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_3_4_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_3_4_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_3_4_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_3_4_channel_full_n))) begin
            ap_reg_ready_B_cached_3_4_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_3_5_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_3_5_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_3_5_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_3_5_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_3_5_channel_full_n))) begin
            ap_reg_ready_B_cached_3_5_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_3_6_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_3_6_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_3_6_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_3_6_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_3_6_channel_full_n))) begin
            ap_reg_ready_B_cached_3_6_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_3_7_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_3_7_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_3_7_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_3_7_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_3_7_channel_full_n))) begin
            ap_reg_ready_B_cached_3_7_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_4_0_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_4_0_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_4_0_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_4_0_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_4_0_channel_full_n))) begin
            ap_reg_ready_B_cached_4_0_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_4_1_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_4_1_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_4_1_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_4_1_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_4_1_channel_full_n))) begin
            ap_reg_ready_B_cached_4_1_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_4_2_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_4_2_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_4_2_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_4_2_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_4_2_channel_full_n))) begin
            ap_reg_ready_B_cached_4_2_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_4_3_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_4_3_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_4_3_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_4_3_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_4_3_channel_full_n))) begin
            ap_reg_ready_B_cached_4_3_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_4_4_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_4_4_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_4_4_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_4_4_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_4_4_channel_full_n))) begin
            ap_reg_ready_B_cached_4_4_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_4_5_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_4_5_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_4_5_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_4_5_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_4_5_channel_full_n))) begin
            ap_reg_ready_B_cached_4_5_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_4_6_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_4_6_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_4_6_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_4_6_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_4_6_channel_full_n))) begin
            ap_reg_ready_B_cached_4_6_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_4_7_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_4_7_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_4_7_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_4_7_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_4_7_channel_full_n))) begin
            ap_reg_ready_B_cached_4_7_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_5_0_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_5_0_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_5_0_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_5_0_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_5_0_channel_full_n))) begin
            ap_reg_ready_B_cached_5_0_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_5_1_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_5_1_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_5_1_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_5_1_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_5_1_channel_full_n))) begin
            ap_reg_ready_B_cached_5_1_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_5_2_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_5_2_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_5_2_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_5_2_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_5_2_channel_full_n))) begin
            ap_reg_ready_B_cached_5_2_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_5_3_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_5_3_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_5_3_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_5_3_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_5_3_channel_full_n))) begin
            ap_reg_ready_B_cached_5_3_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_5_4_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_5_4_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_5_4_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_5_4_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_5_4_channel_full_n))) begin
            ap_reg_ready_B_cached_5_4_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_5_5_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_5_5_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_5_5_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_5_5_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_5_5_channel_full_n))) begin
            ap_reg_ready_B_cached_5_5_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_5_6_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_5_6_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_5_6_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_5_6_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_5_6_channel_full_n))) begin
            ap_reg_ready_B_cached_5_6_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_5_7_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_5_7_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_5_7_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_5_7_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_5_7_channel_full_n))) begin
            ap_reg_ready_B_cached_5_7_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_6_0_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_6_0_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_6_0_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_6_0_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_6_0_channel_full_n))) begin
            ap_reg_ready_B_cached_6_0_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_6_1_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_6_1_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_6_1_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_6_1_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_6_1_channel_full_n))) begin
            ap_reg_ready_B_cached_6_1_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_6_2_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_6_2_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_6_2_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_6_2_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_6_2_channel_full_n))) begin
            ap_reg_ready_B_cached_6_2_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_6_3_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_6_3_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_6_3_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_6_3_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_6_3_channel_full_n))) begin
            ap_reg_ready_B_cached_6_3_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_6_4_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_6_4_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_6_4_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_6_4_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_6_4_channel_full_n))) begin
            ap_reg_ready_B_cached_6_4_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_6_5_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_6_5_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_6_5_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_6_5_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_6_5_channel_full_n))) begin
            ap_reg_ready_B_cached_6_5_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_6_6_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_6_6_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_6_6_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_6_6_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_6_6_channel_full_n))) begin
            ap_reg_ready_B_cached_6_6_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_6_7_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_6_7_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_6_7_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_6_7_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_6_7_channel_full_n))) begin
            ap_reg_ready_B_cached_6_7_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_7_0_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_7_0_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_7_0_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_7_0_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_7_0_channel_full_n))) begin
            ap_reg_ready_B_cached_7_0_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_7_1_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_7_1_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_7_1_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_7_1_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_7_1_channel_full_n))) begin
            ap_reg_ready_B_cached_7_1_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_7_2_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_7_2_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_7_2_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_7_2_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_7_2_channel_full_n))) begin
            ap_reg_ready_B_cached_7_2_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_7_3_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_7_3_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_7_3_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_7_3_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_7_3_channel_full_n))) begin
            ap_reg_ready_B_cached_7_3_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_7_4_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_7_4_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_7_4_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_7_4_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_7_4_channel_full_n))) begin
            ap_reg_ready_B_cached_7_4_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_7_5_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_7_5_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_7_5_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_7_5_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_7_5_channel_full_n))) begin
            ap_reg_ready_B_cached_7_5_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_7_6_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_7_6_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_7_6_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_7_6_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_7_6_channel_full_n))) begin
            ap_reg_ready_B_cached_7_6_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_B_cached_7_7_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_B_cached_7_7_channel_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_B_cached_7_7_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_B_cached_7_7_channel_full_n <= ap_const_logic_0;
        end else if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == B_cached_7_7_channel_full_n))) begin
            ap_reg_ready_B_cached_7_7_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    ap_CS <= ap_const_logic_0;
end

/// DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue assign process. ///
always @ (ap_sig_ready_B_cached_2_6_channel_full_n or ap_sig_ready_B_cached_6_4_channel_full_n or ap_sig_ready_B_cached_0_4_channel_full_n or ap_sig_ready_B_cached_1_2_channel_full_n or ap_sig_ready_B_cached_1_5_channel_full_n or ap_sig_ready_B_cached_0_2_channel_full_n or ap_sig_ready_B_cached_6_5_channel_full_n or ap_sig_ready_B_cached_0_6_channel_full_n or ap_sig_ready_B_cached_0_1_channel_full_n or ap_sig_ready_B_cached_3_6_channel_full_n or ap_sig_ready_B_cached_4_3_channel_full_n or ap_sig_ready_B_cached_0_5_channel_full_n or ap_sig_ready_B_cached_4_5_channel_full_n or ap_sig_ready_B_cached_5_5_channel_full_n or ap_sig_ready_B_cached_1_1_channel_full_n or ap_sig_ready_B_cached_1_7_channel_full_n or ap_sig_ready_B_cached_2_1_channel_full_n or ap_sig_ready_B_cached_6_6_channel_full_n or ap_sig_ready_B_cached_6_7_channel_full_n or ap_sig_ready_B_cached_7_2_channel_full_n or ap_sig_ready_B_cached_7_3_channel_full_n or ap_sig_ready_B_cached_5_2_channel_full_n or ap_sig_ready_B_cached_6_3_channel_full_n or ap_sig_ready_B_cached_7_6_channel_full_n or ap_sig_ready_B_cached_4_1_channel_full_n or ap_sig_ready_B_cached_5_1_channel_full_n or ap_sig_ready_B_cached_4_7_channel_full_n or ap_sig_ready_B_cached_7_5_channel_full_n or ap_sig_ready_B_cached_7_7_channel_full_n or ap_sig_ready_B_cached_5_6_channel_full_n or ap_sig_ready_B_cached_2_3_channel_full_n or ap_sig_ready_B_cached_3_2_channel_full_n or ap_sig_ready_B_cached_4_0_channel_full_n or ap_sig_ready_B_cached_2_0_channel_full_n or ap_sig_ready_B_cached_3_7_channel_full_n or ap_sig_ready_B_cached_5_0_channel_full_n or ap_sig_ready_B_cached_4_4_channel_full_n or ap_sig_ready_B_cached_4_6_channel_full_n or ap_sig_ready_B_cached_2_4_channel_full_n or ap_sig_ready_B_cached_7_0_channel_full_n or ap_sig_ready_B_cached_0_3_channel_full_n or ap_sig_ready_B_cached_1_4_channel_full_n or ap_sig_ready_B_cached_4_2_channel_full_n or ap_sig_ready_B_cached_6_0_channel_full_n or ap_sig_ready_B_cached_7_1_channel_full_n or ap_sig_ready_B_cached_3_4_channel_full_n or ap_sig_ready_B_cached_7_4_channel_full_n or ap_sig_ready_B_cached_1_0_channel_full_n or ap_sig_ready_B_cached_2_5_channel_full_n or ap_sig_ready_B_cached_3_1_channel_full_n or ap_sig_ready_B_cached_1_6_channel_full_n or ap_sig_ready_B_cached_3_3_channel_full_n or ap_sig_ready_B_cached_3_5_channel_full_n or ap_sig_ready_B_cached_0_7_channel_full_n or ap_sig_ready_B_cached_5_4_channel_full_n or ap_sig_ready_B_cached_0_0_channel_full_n or ap_sig_ready_B_cached_2_2_channel_full_n or ap_sig_ready_B_cached_1_3_channel_full_n or ap_sig_ready_B_cached_3_0_channel_full_n or ap_sig_ready_B_cached_2_7_channel_full_n or ap_sig_ready_B_cached_5_3_channel_full_n or ap_sig_ready_B_cached_6_1_channel_full_n or ap_sig_ready_B_cached_6_2_channel_full_n or ap_sig_ready_B_cached_5_7_channel_full_n)
begin
    if (((ap_const_logic_1 == ap_sig_ready_B_cached_2_6_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_6_4_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_0_4_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_1_2_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_1_5_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_0_2_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_6_5_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_0_6_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_0_1_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_3_6_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_4_3_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_0_5_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_4_5_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_5_5_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_1_1_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_1_7_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_2_1_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_6_6_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_6_7_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_7_2_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_7_3_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_5_2_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_6_3_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_7_6_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_4_1_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_5_1_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_4_7_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_7_5_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_7_7_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_5_6_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_2_3_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_3_2_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_4_0_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_2_0_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_3_7_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_5_0_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_4_4_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_4_6_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_2_4_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_7_0_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_0_3_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_1_4_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_4_2_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_6_0_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_7_1_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_3_4_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_7_4_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_1_0_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_2_5_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_3_1_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_1_6_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_3_3_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_3_5_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_0_7_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_5_4_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_0_0_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_2_2_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_1_3_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_3_0_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_2_7_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_5_3_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_6_1_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_6_2_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_B_cached_5_7_channel_full_n))) begin
        DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue = ap_const_logic_1;
    end else begin
        DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_continue = ap_const_logic_0;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_0_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_0_0_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_0_0_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_0_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_0_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_1_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_0_1_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_0_1_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_1_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_1_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_2_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_0_2_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_0_2_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_2_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_2_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_3_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_0_3_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_0_3_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_3_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_3_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_4_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_0_4_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_0_4_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_4_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_4_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_5_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_0_5_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_0_5_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_5_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_5_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_6_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_0_6_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_0_6_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_6_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_6_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_7_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_0_7_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_0_7_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_7_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_7_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_0_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_1_0_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_1_0_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_0_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_0_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_1_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_1_1_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_1_1_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_1_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_1_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_2_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_1_2_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_1_2_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_2_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_2_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_3_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_1_3_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_1_3_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_3_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_3_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_4_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_1_4_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_1_4_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_4_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_4_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_5_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_1_5_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_1_5_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_5_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_5_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_6_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_1_6_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_1_6_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_6_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_6_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_7_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_1_7_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_1_7_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_7_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_7_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_0_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_2_0_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_2_0_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_0_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_0_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_1_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_2_1_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_2_1_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_1_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_1_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_2_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_2_2_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_2_2_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_2_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_2_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_3_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_2_3_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_2_3_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_3_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_3_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_4_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_2_4_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_2_4_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_4_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_4_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_5_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_2_5_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_2_5_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_5_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_5_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_6_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_2_6_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_2_6_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_6_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_6_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_7_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_2_7_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_2_7_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_7_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_7_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_0_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_3_0_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_3_0_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_0_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_0_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_1_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_3_1_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_3_1_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_1_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_1_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_2_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_3_2_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_3_2_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_2_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_2_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_3_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_3_3_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_3_3_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_3_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_3_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_4_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_3_4_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_3_4_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_4_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_4_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_5_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_3_5_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_3_5_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_5_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_5_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_6_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_3_6_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_3_6_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_6_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_6_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_7_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_3_7_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_3_7_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_7_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_7_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_0_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_4_0_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_4_0_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_0_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_0_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_1_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_4_1_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_4_1_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_1_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_1_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_2_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_4_2_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_4_2_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_2_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_2_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_3_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_4_3_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_4_3_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_3_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_3_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_4_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_4_4_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_4_4_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_4_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_4_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_5_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_4_5_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_4_5_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_5_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_5_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_6_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_4_6_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_4_6_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_6_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_6_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_7_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_4_7_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_4_7_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_7_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_7_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_0_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_5_0_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_5_0_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_0_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_0_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_1_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_5_1_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_5_1_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_1_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_1_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_2_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_5_2_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_5_2_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_2_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_2_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_3_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_5_3_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_5_3_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_3_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_3_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_4_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_5_4_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_5_4_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_4_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_4_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_5_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_5_5_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_5_5_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_5_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_5_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_6_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_5_6_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_5_6_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_6_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_6_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_7_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_5_7_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_5_7_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_7_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_7_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_0_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_6_0_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_6_0_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_0_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_0_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_1_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_6_1_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_6_1_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_1_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_1_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_2_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_6_2_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_6_2_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_2_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_2_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_3_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_6_3_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_6_3_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_3_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_3_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_4_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_6_4_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_6_4_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_4_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_4_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_5_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_6_5_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_6_5_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_5_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_5_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_6_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_6_6_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_6_6_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_6_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_6_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_7_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_6_7_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_6_7_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_7_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_7_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_0_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_7_0_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_7_0_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_0_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_0_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_1_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_7_1_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_7_1_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_1_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_1_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_2_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_7_2_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_7_2_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_2_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_2_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_3_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_7_3_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_7_3_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_3_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_3_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_4_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_7_4_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_7_4_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_4_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_4_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_5_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_7_5_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_7_5_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_5_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_5_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_6_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_7_6_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_7_6_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_6_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_6_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_7_channel assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done or ap_reg_ready_B_cached_7_7_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_B_cached_7_7_channel_full_n)) begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_7_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_7_channel = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_done;
    end
end

/// ap_idle assign process. ///
always @ (DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_idle or DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_idle or B_cached_0_0_channel_empty_n or B_cached_0_1_channel_empty_n or B_cached_0_2_channel_empty_n or B_cached_0_3_channel_empty_n or B_cached_0_4_channel_empty_n or B_cached_0_5_channel_empty_n or B_cached_0_6_channel_empty_n or B_cached_0_7_channel_empty_n or B_cached_1_0_channel_empty_n or B_cached_1_1_channel_empty_n or B_cached_1_2_channel_empty_n or B_cached_1_3_channel_empty_n or B_cached_1_4_channel_empty_n or B_cached_1_5_channel_empty_n or B_cached_1_6_channel_empty_n or B_cached_1_7_channel_empty_n or B_cached_2_0_channel_empty_n or B_cached_2_1_channel_empty_n or B_cached_2_2_channel_empty_n or B_cached_2_3_channel_empty_n or B_cached_2_4_channel_empty_n or B_cached_2_5_channel_empty_n or B_cached_2_6_channel_empty_n or B_cached_2_7_channel_empty_n or B_cached_3_0_channel_empty_n or B_cached_3_1_channel_empty_n or B_cached_3_2_channel_empty_n or B_cached_3_3_channel_empty_n or B_cached_3_4_channel_empty_n or B_cached_3_5_channel_empty_n or B_cached_3_6_channel_empty_n or B_cached_3_7_channel_empty_n or B_cached_4_0_channel_empty_n or B_cached_4_1_channel_empty_n or B_cached_4_2_channel_empty_n or B_cached_4_3_channel_empty_n or B_cached_4_4_channel_empty_n or B_cached_4_5_channel_empty_n or B_cached_4_6_channel_empty_n or B_cached_4_7_channel_empty_n or B_cached_5_0_channel_empty_n or B_cached_5_1_channel_empty_n or B_cached_5_2_channel_empty_n or B_cached_5_3_channel_empty_n or B_cached_5_4_channel_empty_n or B_cached_5_5_channel_empty_n or B_cached_5_6_channel_empty_n or B_cached_5_7_channel_empty_n or B_cached_6_0_channel_empty_n or B_cached_6_1_channel_empty_n or B_cached_6_2_channel_empty_n or B_cached_6_3_channel_empty_n or B_cached_6_4_channel_empty_n or B_cached_6_5_channel_empty_n or B_cached_6_6_channel_empty_n or B_cached_6_7_channel_empty_n or B_cached_7_0_channel_empty_n or B_cached_7_1_channel_empty_n or B_cached_7_2_channel_empty_n or B_cached_7_3_channel_empty_n or B_cached_7_4_channel_empty_n or B_cached_7_5_channel_empty_n or B_cached_7_6_channel_empty_n or B_cached_7_7_channel_empty_n)
begin
    if (((DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_idle == ap_const_logic_1) & (ap_const_logic_1 == DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_idle) & (ap_const_logic_0 == B_cached_0_0_channel_empty_n) & (ap_const_logic_0 == B_cached_0_1_channel_empty_n) & (ap_const_logic_0 == B_cached_0_2_channel_empty_n) & (ap_const_logic_0 == B_cached_0_3_channel_empty_n) & (ap_const_logic_0 == B_cached_0_4_channel_empty_n) & (ap_const_logic_0 == B_cached_0_5_channel_empty_n) & (ap_const_logic_0 == B_cached_0_6_channel_empty_n) & (ap_const_logic_0 == B_cached_0_7_channel_empty_n) & (ap_const_logic_0 == B_cached_1_0_channel_empty_n) & (ap_const_logic_0 == B_cached_1_1_channel_empty_n) & (ap_const_logic_0 == B_cached_1_2_channel_empty_n) & (ap_const_logic_0 == B_cached_1_3_channel_empty_n) & (ap_const_logic_0 == B_cached_1_4_channel_empty_n) & (ap_const_logic_0 == B_cached_1_5_channel_empty_n) & (ap_const_logic_0 == B_cached_1_6_channel_empty_n) & (ap_const_logic_0 == B_cached_1_7_channel_empty_n) & (ap_const_logic_0 == B_cached_2_0_channel_empty_n) & (ap_const_logic_0 == B_cached_2_1_channel_empty_n) & (ap_const_logic_0 == B_cached_2_2_channel_empty_n) & (ap_const_logic_0 == B_cached_2_3_channel_empty_n) & (ap_const_logic_0 == B_cached_2_4_channel_empty_n) & (ap_const_logic_0 == B_cached_2_5_channel_empty_n) & (ap_const_logic_0 == B_cached_2_6_channel_empty_n) & (ap_const_logic_0 == B_cached_2_7_channel_empty_n) & (ap_const_logic_0 == B_cached_3_0_channel_empty_n) & (ap_const_logic_0 == B_cached_3_1_channel_empty_n) & (ap_const_logic_0 == B_cached_3_2_channel_empty_n) & (ap_const_logic_0 == B_cached_3_3_channel_empty_n) & (ap_const_logic_0 == B_cached_3_4_channel_empty_n) & (ap_const_logic_0 == B_cached_3_5_channel_empty_n) & (ap_const_logic_0 == B_cached_3_6_channel_empty_n) & (ap_const_logic_0 == B_cached_3_7_channel_empty_n) & (ap_const_logic_0 == B_cached_4_0_channel_empty_n) & (ap_const_logic_0 == B_cached_4_1_channel_empty_n) & (ap_const_logic_0 == B_cached_4_2_channel_empty_n) & (ap_const_logic_0 == B_cached_4_3_channel_empty_n) & (ap_const_logic_0 == B_cached_4_4_channel_empty_n) & (ap_const_logic_0 == B_cached_4_5_channel_empty_n) & (ap_const_logic_0 == B_cached_4_6_channel_empty_n) & (ap_const_logic_0 == B_cached_4_7_channel_empty_n) & (ap_const_logic_0 == B_cached_5_0_channel_empty_n) & (ap_const_logic_0 == B_cached_5_1_channel_empty_n) & (ap_const_logic_0 == B_cached_5_2_channel_empty_n) & (ap_const_logic_0 == B_cached_5_3_channel_empty_n) & (ap_const_logic_0 == B_cached_5_4_channel_empty_n) & (ap_const_logic_0 == B_cached_5_5_channel_empty_n) & (ap_const_logic_0 == B_cached_5_6_channel_empty_n) & (ap_const_logic_0 == B_cached_5_7_channel_empty_n) & (ap_const_logic_0 == B_cached_6_0_channel_empty_n) & (ap_const_logic_0 == B_cached_6_1_channel_empty_n) & (ap_const_logic_0 == B_cached_6_2_channel_empty_n) & (ap_const_logic_0 == B_cached_6_3_channel_empty_n) & (ap_const_logic_0 == B_cached_6_4_channel_empty_n) & (ap_const_logic_0 == B_cached_6_5_channel_empty_n) & (ap_const_logic_0 == B_cached_6_6_channel_empty_n) & (ap_const_logic_0 == B_cached_6_7_channel_empty_n) & (ap_const_logic_0 == B_cached_7_0_channel_empty_n) & (ap_const_logic_0 == B_cached_7_1_channel_empty_n) & (ap_const_logic_0 == B_cached_7_2_channel_empty_n) & (ap_const_logic_0 == B_cached_7_3_channel_empty_n) & (ap_const_logic_0 == B_cached_7_4_channel_empty_n) & (ap_const_logic_0 == B_cached_7_5_channel_empty_n) & (ap_const_logic_0 == B_cached_7_6_channel_empty_n) & (ap_const_logic_0 == B_cached_7_7_channel_empty_n))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_sig_hs_done assign process. ///
always @ (DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_done)
begin
    if ((ap_const_logic_1 == DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_done)) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end

/// ap_sig_ready_B_cached_0_0_channel_full_n assign process. ///
always @ (B_cached_0_0_channel_full_n or ap_reg_ready_B_cached_0_0_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_0_0_channel_full_n)) begin
        ap_sig_ready_B_cached_0_0_channel_full_n = B_cached_0_0_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_0_0_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_0_1_channel_full_n assign process. ///
always @ (B_cached_0_1_channel_full_n or ap_reg_ready_B_cached_0_1_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_0_1_channel_full_n)) begin
        ap_sig_ready_B_cached_0_1_channel_full_n = B_cached_0_1_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_0_1_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_0_2_channel_full_n assign process. ///
always @ (B_cached_0_2_channel_full_n or ap_reg_ready_B_cached_0_2_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_0_2_channel_full_n)) begin
        ap_sig_ready_B_cached_0_2_channel_full_n = B_cached_0_2_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_0_2_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_0_3_channel_full_n assign process. ///
always @ (B_cached_0_3_channel_full_n or ap_reg_ready_B_cached_0_3_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_0_3_channel_full_n)) begin
        ap_sig_ready_B_cached_0_3_channel_full_n = B_cached_0_3_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_0_3_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_0_4_channel_full_n assign process. ///
always @ (B_cached_0_4_channel_full_n or ap_reg_ready_B_cached_0_4_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_0_4_channel_full_n)) begin
        ap_sig_ready_B_cached_0_4_channel_full_n = B_cached_0_4_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_0_4_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_0_5_channel_full_n assign process. ///
always @ (B_cached_0_5_channel_full_n or ap_reg_ready_B_cached_0_5_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_0_5_channel_full_n)) begin
        ap_sig_ready_B_cached_0_5_channel_full_n = B_cached_0_5_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_0_5_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_0_6_channel_full_n assign process. ///
always @ (B_cached_0_6_channel_full_n or ap_reg_ready_B_cached_0_6_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_0_6_channel_full_n)) begin
        ap_sig_ready_B_cached_0_6_channel_full_n = B_cached_0_6_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_0_6_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_0_7_channel_full_n assign process. ///
always @ (B_cached_0_7_channel_full_n or ap_reg_ready_B_cached_0_7_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_0_7_channel_full_n)) begin
        ap_sig_ready_B_cached_0_7_channel_full_n = B_cached_0_7_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_0_7_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_1_0_channel_full_n assign process. ///
always @ (B_cached_1_0_channel_full_n or ap_reg_ready_B_cached_1_0_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_1_0_channel_full_n)) begin
        ap_sig_ready_B_cached_1_0_channel_full_n = B_cached_1_0_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_1_0_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_1_1_channel_full_n assign process. ///
always @ (B_cached_1_1_channel_full_n or ap_reg_ready_B_cached_1_1_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_1_1_channel_full_n)) begin
        ap_sig_ready_B_cached_1_1_channel_full_n = B_cached_1_1_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_1_1_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_1_2_channel_full_n assign process. ///
always @ (B_cached_1_2_channel_full_n or ap_reg_ready_B_cached_1_2_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_1_2_channel_full_n)) begin
        ap_sig_ready_B_cached_1_2_channel_full_n = B_cached_1_2_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_1_2_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_1_3_channel_full_n assign process. ///
always @ (B_cached_1_3_channel_full_n or ap_reg_ready_B_cached_1_3_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_1_3_channel_full_n)) begin
        ap_sig_ready_B_cached_1_3_channel_full_n = B_cached_1_3_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_1_3_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_1_4_channel_full_n assign process. ///
always @ (B_cached_1_4_channel_full_n or ap_reg_ready_B_cached_1_4_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_1_4_channel_full_n)) begin
        ap_sig_ready_B_cached_1_4_channel_full_n = B_cached_1_4_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_1_4_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_1_5_channel_full_n assign process. ///
always @ (B_cached_1_5_channel_full_n or ap_reg_ready_B_cached_1_5_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_1_5_channel_full_n)) begin
        ap_sig_ready_B_cached_1_5_channel_full_n = B_cached_1_5_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_1_5_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_1_6_channel_full_n assign process. ///
always @ (B_cached_1_6_channel_full_n or ap_reg_ready_B_cached_1_6_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_1_6_channel_full_n)) begin
        ap_sig_ready_B_cached_1_6_channel_full_n = B_cached_1_6_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_1_6_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_1_7_channel_full_n assign process. ///
always @ (B_cached_1_7_channel_full_n or ap_reg_ready_B_cached_1_7_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_1_7_channel_full_n)) begin
        ap_sig_ready_B_cached_1_7_channel_full_n = B_cached_1_7_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_1_7_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_2_0_channel_full_n assign process. ///
always @ (B_cached_2_0_channel_full_n or ap_reg_ready_B_cached_2_0_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_2_0_channel_full_n)) begin
        ap_sig_ready_B_cached_2_0_channel_full_n = B_cached_2_0_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_2_0_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_2_1_channel_full_n assign process. ///
always @ (B_cached_2_1_channel_full_n or ap_reg_ready_B_cached_2_1_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_2_1_channel_full_n)) begin
        ap_sig_ready_B_cached_2_1_channel_full_n = B_cached_2_1_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_2_1_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_2_2_channel_full_n assign process. ///
always @ (B_cached_2_2_channel_full_n or ap_reg_ready_B_cached_2_2_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_2_2_channel_full_n)) begin
        ap_sig_ready_B_cached_2_2_channel_full_n = B_cached_2_2_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_2_2_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_2_3_channel_full_n assign process. ///
always @ (B_cached_2_3_channel_full_n or ap_reg_ready_B_cached_2_3_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_2_3_channel_full_n)) begin
        ap_sig_ready_B_cached_2_3_channel_full_n = B_cached_2_3_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_2_3_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_2_4_channel_full_n assign process. ///
always @ (B_cached_2_4_channel_full_n or ap_reg_ready_B_cached_2_4_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_2_4_channel_full_n)) begin
        ap_sig_ready_B_cached_2_4_channel_full_n = B_cached_2_4_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_2_4_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_2_5_channel_full_n assign process. ///
always @ (B_cached_2_5_channel_full_n or ap_reg_ready_B_cached_2_5_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_2_5_channel_full_n)) begin
        ap_sig_ready_B_cached_2_5_channel_full_n = B_cached_2_5_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_2_5_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_2_6_channel_full_n assign process. ///
always @ (B_cached_2_6_channel_full_n or ap_reg_ready_B_cached_2_6_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_2_6_channel_full_n)) begin
        ap_sig_ready_B_cached_2_6_channel_full_n = B_cached_2_6_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_2_6_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_2_7_channel_full_n assign process. ///
always @ (B_cached_2_7_channel_full_n or ap_reg_ready_B_cached_2_7_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_2_7_channel_full_n)) begin
        ap_sig_ready_B_cached_2_7_channel_full_n = B_cached_2_7_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_2_7_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_3_0_channel_full_n assign process. ///
always @ (B_cached_3_0_channel_full_n or ap_reg_ready_B_cached_3_0_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_3_0_channel_full_n)) begin
        ap_sig_ready_B_cached_3_0_channel_full_n = B_cached_3_0_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_3_0_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_3_1_channel_full_n assign process. ///
always @ (B_cached_3_1_channel_full_n or ap_reg_ready_B_cached_3_1_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_3_1_channel_full_n)) begin
        ap_sig_ready_B_cached_3_1_channel_full_n = B_cached_3_1_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_3_1_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_3_2_channel_full_n assign process. ///
always @ (B_cached_3_2_channel_full_n or ap_reg_ready_B_cached_3_2_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_3_2_channel_full_n)) begin
        ap_sig_ready_B_cached_3_2_channel_full_n = B_cached_3_2_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_3_2_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_3_3_channel_full_n assign process. ///
always @ (B_cached_3_3_channel_full_n or ap_reg_ready_B_cached_3_3_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_3_3_channel_full_n)) begin
        ap_sig_ready_B_cached_3_3_channel_full_n = B_cached_3_3_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_3_3_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_3_4_channel_full_n assign process. ///
always @ (B_cached_3_4_channel_full_n or ap_reg_ready_B_cached_3_4_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_3_4_channel_full_n)) begin
        ap_sig_ready_B_cached_3_4_channel_full_n = B_cached_3_4_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_3_4_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_3_5_channel_full_n assign process. ///
always @ (B_cached_3_5_channel_full_n or ap_reg_ready_B_cached_3_5_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_3_5_channel_full_n)) begin
        ap_sig_ready_B_cached_3_5_channel_full_n = B_cached_3_5_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_3_5_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_3_6_channel_full_n assign process. ///
always @ (B_cached_3_6_channel_full_n or ap_reg_ready_B_cached_3_6_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_3_6_channel_full_n)) begin
        ap_sig_ready_B_cached_3_6_channel_full_n = B_cached_3_6_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_3_6_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_3_7_channel_full_n assign process. ///
always @ (B_cached_3_7_channel_full_n or ap_reg_ready_B_cached_3_7_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_3_7_channel_full_n)) begin
        ap_sig_ready_B_cached_3_7_channel_full_n = B_cached_3_7_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_3_7_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_4_0_channel_full_n assign process. ///
always @ (B_cached_4_0_channel_full_n or ap_reg_ready_B_cached_4_0_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_4_0_channel_full_n)) begin
        ap_sig_ready_B_cached_4_0_channel_full_n = B_cached_4_0_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_4_0_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_4_1_channel_full_n assign process. ///
always @ (B_cached_4_1_channel_full_n or ap_reg_ready_B_cached_4_1_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_4_1_channel_full_n)) begin
        ap_sig_ready_B_cached_4_1_channel_full_n = B_cached_4_1_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_4_1_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_4_2_channel_full_n assign process. ///
always @ (B_cached_4_2_channel_full_n or ap_reg_ready_B_cached_4_2_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_4_2_channel_full_n)) begin
        ap_sig_ready_B_cached_4_2_channel_full_n = B_cached_4_2_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_4_2_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_4_3_channel_full_n assign process. ///
always @ (B_cached_4_3_channel_full_n or ap_reg_ready_B_cached_4_3_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_4_3_channel_full_n)) begin
        ap_sig_ready_B_cached_4_3_channel_full_n = B_cached_4_3_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_4_3_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_4_4_channel_full_n assign process. ///
always @ (B_cached_4_4_channel_full_n or ap_reg_ready_B_cached_4_4_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_4_4_channel_full_n)) begin
        ap_sig_ready_B_cached_4_4_channel_full_n = B_cached_4_4_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_4_4_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_4_5_channel_full_n assign process. ///
always @ (B_cached_4_5_channel_full_n or ap_reg_ready_B_cached_4_5_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_4_5_channel_full_n)) begin
        ap_sig_ready_B_cached_4_5_channel_full_n = B_cached_4_5_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_4_5_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_4_6_channel_full_n assign process. ///
always @ (B_cached_4_6_channel_full_n or ap_reg_ready_B_cached_4_6_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_4_6_channel_full_n)) begin
        ap_sig_ready_B_cached_4_6_channel_full_n = B_cached_4_6_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_4_6_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_4_7_channel_full_n assign process. ///
always @ (B_cached_4_7_channel_full_n or ap_reg_ready_B_cached_4_7_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_4_7_channel_full_n)) begin
        ap_sig_ready_B_cached_4_7_channel_full_n = B_cached_4_7_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_4_7_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_5_0_channel_full_n assign process. ///
always @ (B_cached_5_0_channel_full_n or ap_reg_ready_B_cached_5_0_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_5_0_channel_full_n)) begin
        ap_sig_ready_B_cached_5_0_channel_full_n = B_cached_5_0_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_5_0_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_5_1_channel_full_n assign process. ///
always @ (B_cached_5_1_channel_full_n or ap_reg_ready_B_cached_5_1_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_5_1_channel_full_n)) begin
        ap_sig_ready_B_cached_5_1_channel_full_n = B_cached_5_1_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_5_1_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_5_2_channel_full_n assign process. ///
always @ (B_cached_5_2_channel_full_n or ap_reg_ready_B_cached_5_2_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_5_2_channel_full_n)) begin
        ap_sig_ready_B_cached_5_2_channel_full_n = B_cached_5_2_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_5_2_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_5_3_channel_full_n assign process. ///
always @ (B_cached_5_3_channel_full_n or ap_reg_ready_B_cached_5_3_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_5_3_channel_full_n)) begin
        ap_sig_ready_B_cached_5_3_channel_full_n = B_cached_5_3_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_5_3_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_5_4_channel_full_n assign process. ///
always @ (B_cached_5_4_channel_full_n or ap_reg_ready_B_cached_5_4_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_5_4_channel_full_n)) begin
        ap_sig_ready_B_cached_5_4_channel_full_n = B_cached_5_4_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_5_4_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_5_5_channel_full_n assign process. ///
always @ (B_cached_5_5_channel_full_n or ap_reg_ready_B_cached_5_5_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_5_5_channel_full_n)) begin
        ap_sig_ready_B_cached_5_5_channel_full_n = B_cached_5_5_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_5_5_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_5_6_channel_full_n assign process. ///
always @ (B_cached_5_6_channel_full_n or ap_reg_ready_B_cached_5_6_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_5_6_channel_full_n)) begin
        ap_sig_ready_B_cached_5_6_channel_full_n = B_cached_5_6_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_5_6_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_5_7_channel_full_n assign process. ///
always @ (B_cached_5_7_channel_full_n or ap_reg_ready_B_cached_5_7_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_5_7_channel_full_n)) begin
        ap_sig_ready_B_cached_5_7_channel_full_n = B_cached_5_7_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_5_7_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_6_0_channel_full_n assign process. ///
always @ (B_cached_6_0_channel_full_n or ap_reg_ready_B_cached_6_0_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_6_0_channel_full_n)) begin
        ap_sig_ready_B_cached_6_0_channel_full_n = B_cached_6_0_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_6_0_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_6_1_channel_full_n assign process. ///
always @ (B_cached_6_1_channel_full_n or ap_reg_ready_B_cached_6_1_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_6_1_channel_full_n)) begin
        ap_sig_ready_B_cached_6_1_channel_full_n = B_cached_6_1_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_6_1_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_6_2_channel_full_n assign process. ///
always @ (B_cached_6_2_channel_full_n or ap_reg_ready_B_cached_6_2_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_6_2_channel_full_n)) begin
        ap_sig_ready_B_cached_6_2_channel_full_n = B_cached_6_2_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_6_2_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_6_3_channel_full_n assign process. ///
always @ (B_cached_6_3_channel_full_n or ap_reg_ready_B_cached_6_3_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_6_3_channel_full_n)) begin
        ap_sig_ready_B_cached_6_3_channel_full_n = B_cached_6_3_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_6_3_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_6_4_channel_full_n assign process. ///
always @ (B_cached_6_4_channel_full_n or ap_reg_ready_B_cached_6_4_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_6_4_channel_full_n)) begin
        ap_sig_ready_B_cached_6_4_channel_full_n = B_cached_6_4_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_6_4_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_6_5_channel_full_n assign process. ///
always @ (B_cached_6_5_channel_full_n or ap_reg_ready_B_cached_6_5_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_6_5_channel_full_n)) begin
        ap_sig_ready_B_cached_6_5_channel_full_n = B_cached_6_5_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_6_5_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_6_6_channel_full_n assign process. ///
always @ (B_cached_6_6_channel_full_n or ap_reg_ready_B_cached_6_6_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_6_6_channel_full_n)) begin
        ap_sig_ready_B_cached_6_6_channel_full_n = B_cached_6_6_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_6_6_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_6_7_channel_full_n assign process. ///
always @ (B_cached_6_7_channel_full_n or ap_reg_ready_B_cached_6_7_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_6_7_channel_full_n)) begin
        ap_sig_ready_B_cached_6_7_channel_full_n = B_cached_6_7_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_6_7_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_7_0_channel_full_n assign process. ///
always @ (B_cached_7_0_channel_full_n or ap_reg_ready_B_cached_7_0_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_7_0_channel_full_n)) begin
        ap_sig_ready_B_cached_7_0_channel_full_n = B_cached_7_0_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_7_0_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_7_1_channel_full_n assign process. ///
always @ (B_cached_7_1_channel_full_n or ap_reg_ready_B_cached_7_1_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_7_1_channel_full_n)) begin
        ap_sig_ready_B_cached_7_1_channel_full_n = B_cached_7_1_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_7_1_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_7_2_channel_full_n assign process. ///
always @ (B_cached_7_2_channel_full_n or ap_reg_ready_B_cached_7_2_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_7_2_channel_full_n)) begin
        ap_sig_ready_B_cached_7_2_channel_full_n = B_cached_7_2_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_7_2_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_7_3_channel_full_n assign process. ///
always @ (B_cached_7_3_channel_full_n or ap_reg_ready_B_cached_7_3_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_7_3_channel_full_n)) begin
        ap_sig_ready_B_cached_7_3_channel_full_n = B_cached_7_3_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_7_3_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_7_4_channel_full_n assign process. ///
always @ (B_cached_7_4_channel_full_n or ap_reg_ready_B_cached_7_4_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_7_4_channel_full_n)) begin
        ap_sig_ready_B_cached_7_4_channel_full_n = B_cached_7_4_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_7_4_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_7_5_channel_full_n assign process. ///
always @ (B_cached_7_5_channel_full_n or ap_reg_ready_B_cached_7_5_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_7_5_channel_full_n)) begin
        ap_sig_ready_B_cached_7_5_channel_full_n = B_cached_7_5_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_7_5_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_7_6_channel_full_n assign process. ///
always @ (B_cached_7_6_channel_full_n or ap_reg_ready_B_cached_7_6_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_7_6_channel_full_n)) begin
        ap_sig_ready_B_cached_7_6_channel_full_n = B_cached_7_6_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_7_6_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_B_cached_7_7_channel_full_n assign process. ///
always @ (B_cached_7_7_channel_full_n or ap_reg_ready_B_cached_7_7_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_B_cached_7_7_channel_full_n)) begin
        ap_sig_ready_B_cached_7_7_channel_full_n = B_cached_7_7_channel_full_n;
    end else begin
        ap_sig_ready_B_cached_7_7_channel_full_n = ap_const_logic_1;
    end
end
assign A_0_091_U_ap_dummy_ce = ap_const_logic_1;
assign A_0_091_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_0_out_din;
assign A_0_091_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_0_read;
assign A_0_091_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_0_out_write;
assign A_0_189_U_ap_dummy_ce = ap_const_logic_1;
assign A_0_189_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_1_out_din;
assign A_0_189_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_1_read;
assign A_0_189_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_1_out_write;
assign A_0_1_read_ap_ack = ap_const_logic_1;
assign A_0_2106_U_ap_dummy_ce = ap_const_logic_1;
assign A_0_2106_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_2_out_din;
assign A_0_2106_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_2_read;
assign A_0_2106_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_2_out_write;
assign A_0_2_read_ap_ack = ap_const_logic_1;
assign A_0_3108_U_ap_dummy_ce = ap_const_logic_1;
assign A_0_3108_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_3_out_din;
assign A_0_3108_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_3_read;
assign A_0_3108_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_3_out_write;
assign A_0_3_read_ap_ack = ap_const_logic_1;
assign A_0_4112_U_ap_dummy_ce = ap_const_logic_1;
assign A_0_4112_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_4_out_din;
assign A_0_4112_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_4_read;
assign A_0_4112_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_4_out_write;
assign A_0_592_U_ap_dummy_ce = ap_const_logic_1;
assign A_0_592_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_5_out_din;
assign A_0_592_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_5_read;
assign A_0_592_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_5_out_write;
assign A_0_5_read_ap_ack = ap_const_logic_1;
assign A_0_690_U_ap_dummy_ce = ap_const_logic_1;
assign A_0_690_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_6_out_din;
assign A_0_690_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_6_read;
assign A_0_690_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_6_out_write;
assign A_0_6_read_ap_ack = ap_const_logic_1;
assign A_0_785_U_ap_dummy_ce = ap_const_logic_1;
assign A_0_785_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_7_out_din;
assign A_0_785_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_7_read;
assign A_0_785_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_7_out_write;
assign A_0_7_read_ap_ack = ap_const_logic_1;
assign A_1_0126_U_ap_dummy_ce = ap_const_logic_1;
assign A_1_0126_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_0_out_din;
assign A_1_0126_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_0_read;
assign A_1_0126_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_0_out_write;
assign A_1_0_read_ap_ack = ap_const_logic_1;
assign A_1_178_U_ap_dummy_ce = ap_const_logic_1;
assign A_1_178_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_1_out_din;
assign A_1_178_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_1_read;
assign A_1_178_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_1_out_write;
assign A_1_277_U_ap_dummy_ce = ap_const_logic_1;
assign A_1_277_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_2_out_din;
assign A_1_277_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_2_read;
assign A_1_277_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_2_out_write;
assign A_1_2_read_ap_ack = ap_const_logic_1;
assign A_1_3119_U_ap_dummy_ce = ap_const_logic_1;
assign A_1_3119_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_3_out_din;
assign A_1_3119_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_3_read;
assign A_1_3119_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_3_out_write;
assign A_1_3_read_ap_ack = ap_const_logic_1;
assign A_1_488_U_ap_dummy_ce = ap_const_logic_1;
assign A_1_488_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_4_out_din;
assign A_1_488_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_4_read;
assign A_1_488_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_4_out_write;
assign A_1_4_read_ap_ack = ap_const_logic_1;
assign A_1_582_U_ap_dummy_ce = ap_const_logic_1;
assign A_1_582_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_5_out_din;
assign A_1_582_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_5_read;
assign A_1_582_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_5_out_write;
assign A_1_5_read_ap_ack = ap_const_logic_1;
assign A_1_6125_U_ap_dummy_ce = ap_const_logic_1;
assign A_1_6125_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_6_out_din;
assign A_1_6125_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_6_read;
assign A_1_6125_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_6_out_write;
assign A_1_6_read_ap_ack = ap_const_logic_1;
assign A_1_7101_U_ap_dummy_ce = ap_const_logic_1;
assign A_1_7101_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_7_out_din;
assign A_1_7101_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_7_read;
assign A_1_7101_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_7_out_write;
assign A_1_7_read_ap_ack = ap_const_logic_1;
assign A_2_087_U_ap_dummy_ce = ap_const_logic_1;
assign A_2_087_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_0_out_din;
assign A_2_087_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_0_read;
assign A_2_087_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_0_out_write;
assign A_2_0_read_ap_ack = ap_const_logic_1;
assign A_2_1115_U_ap_dummy_ce = ap_const_logic_1;
assign A_2_1115_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_1_out_din;
assign A_2_1115_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_1_read;
assign A_2_1115_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_1_out_write;
assign A_2_1_read_ap_ack = ap_const_logic_1;
assign A_2_2134_U_ap_dummy_ce = ap_const_logic_1;
assign A_2_2134_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_2_out_din;
assign A_2_2134_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_2_read;
assign A_2_2134_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_2_out_write;
assign A_2_3131_U_ap_dummy_ce = ap_const_logic_1;
assign A_2_3131_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_3_out_din;
assign A_2_3131_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_3_read;
assign A_2_3131_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_3_out_write;
assign A_2_3_read_ap_ack = ap_const_logic_1;
assign A_2_4110_U_ap_dummy_ce = ap_const_logic_1;
assign A_2_4110_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_4_out_din;
assign A_2_4110_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_4_read;
assign A_2_4110_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_4_out_write;
assign A_2_4_read_ap_ack = ap_const_logic_1;
assign A_2_596_U_ap_dummy_ce = ap_const_logic_1;
assign A_2_596_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_5_out_din;
assign A_2_596_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_5_read;
assign A_2_596_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_5_out_write;
assign A_2_5_read_ap_ack = ap_const_logic_1;
assign A_2_6122_U_ap_dummy_ce = ap_const_logic_1;
assign A_2_6122_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_6_out_din;
assign A_2_6122_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_6_read;
assign A_2_6122_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_6_out_write;
assign A_2_6_read_ap_ack = ap_const_logic_1;
assign A_2_7127_U_ap_dummy_ce = ap_const_logic_1;
assign A_2_7127_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_7_out_din;
assign A_2_7127_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_7_read;
assign A_2_7127_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_7_out_write;
assign A_2_7_read_ap_ack = ap_const_logic_1;
assign A_3_0123_U_ap_dummy_ce = ap_const_logic_1;
assign A_3_0123_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_0_out_din;
assign A_3_0123_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_0_read;
assign A_3_0123_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_0_out_write;
assign A_3_0_read_ap_ack = ap_const_logic_1;
assign A_3_1114_U_ap_dummy_ce = ap_const_logic_1;
assign A_3_1114_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_1_out_din;
assign A_3_1114_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_1_read;
assign A_3_1114_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_1_out_write;
assign A_3_1_read_ap_ack = ap_const_logic_1;
assign A_3_2117_U_ap_dummy_ce = ap_const_logic_1;
assign A_3_2117_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_2_out_din;
assign A_3_2117_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_2_read;
assign A_3_2117_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_2_out_write;
assign A_3_2_read_ap_ack = ap_const_logic_1;
assign A_3_3130_U_ap_dummy_ce = ap_const_logic_1;
assign A_3_3130_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_3_out_din;
assign A_3_3130_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_3_read;
assign A_3_3130_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_3_out_write;
assign A_3_4129_U_ap_dummy_ce = ap_const_logic_1;
assign A_3_4129_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_4_out_din;
assign A_3_4129_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_4_read;
assign A_3_4129_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_4_out_write;
assign A_3_4_read_ap_ack = ap_const_logic_1;
assign A_3_5128_U_ap_dummy_ce = ap_const_logic_1;
assign A_3_5128_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_5_out_din;
assign A_3_5128_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_5_read;
assign A_3_5128_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_5_out_write;
assign A_3_5_read_ap_ack = ap_const_logic_1;
assign A_3_680_U_ap_dummy_ce = ap_const_logic_1;
assign A_3_680_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_6_out_din;
assign A_3_680_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_6_read;
assign A_3_680_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_6_out_write;
assign A_3_6_read_ap_ack = ap_const_logic_1;
assign A_3_7124_U_ap_dummy_ce = ap_const_logic_1;
assign A_3_7124_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_7_out_din;
assign A_3_7124_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_7_read;
assign A_3_7124_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_7_out_write;
assign A_3_7_read_ap_ack = ap_const_logic_1;
assign A_4_076_U_ap_dummy_ce = ap_const_logic_1;
assign A_4_076_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_0_out_din;
assign A_4_076_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_0_read;
assign A_4_076_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_0_out_write;
assign A_4_173_U_ap_dummy_ce = ap_const_logic_1;
assign A_4_173_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_1_out_din;
assign A_4_173_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_1_read;
assign A_4_173_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_1_out_write;
assign A_4_1_read_ap_ack = ap_const_logic_1;
assign A_4_295_U_ap_dummy_ce = ap_const_logic_1;
assign A_4_295_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_2_out_din;
assign A_4_295_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_2_read;
assign A_4_295_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_2_out_write;
assign A_4_2_read_ap_ack = ap_const_logic_1;
assign A_4_394_U_ap_dummy_ce = ap_const_logic_1;
assign A_4_394_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_3_out_din;
assign A_4_394_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_3_read;
assign A_4_394_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_3_out_write;
assign A_4_3_read_ap_ack = ap_const_logic_1;
assign A_4_498_U_ap_dummy_ce = ap_const_logic_1;
assign A_4_498_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_4_out_din;
assign A_4_498_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_4_read;
assign A_4_498_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_4_out_write;
assign A_4_5133_U_ap_dummy_ce = ap_const_logic_1;
assign A_4_5133_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_5_out_din;
assign A_4_5133_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_5_read;
assign A_4_5133_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_5_out_write;
assign A_4_5_read_ap_ack = ap_const_logic_1;
assign A_4_6111_U_ap_dummy_ce = ap_const_logic_1;
assign A_4_6111_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_6_out_din;
assign A_4_6111_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_6_read;
assign A_4_6111_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_6_out_write;
assign A_4_6_read_ap_ack = ap_const_logic_1;
assign A_4_784_U_ap_dummy_ce = ap_const_logic_1;
assign A_4_784_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_7_out_din;
assign A_4_784_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_7_read;
assign A_4_784_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_7_out_write;
assign A_4_7_read_ap_ack = ap_const_logic_1;
assign A_5_074_U_ap_dummy_ce = ap_const_logic_1;
assign A_5_074_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_0_out_din;
assign A_5_074_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_0_read;
assign A_5_074_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_0_out_write;
assign A_5_0_read_ap_ack = ap_const_logic_1;
assign A_5_171_U_ap_dummy_ce = ap_const_logic_1;
assign A_5_171_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_1_out_din;
assign A_5_171_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_1_read;
assign A_5_171_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_1_out_write;
assign A_5_1_read_ap_ack = ap_const_logic_1;
assign A_5_2104_U_ap_dummy_ce = ap_const_logic_1;
assign A_5_2104_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_2_out_din;
assign A_5_2104_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_2_read;
assign A_5_2104_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_2_out_write;
assign A_5_2_read_ap_ack = ap_const_logic_1;
assign A_5_393_U_ap_dummy_ce = ap_const_logic_1;
assign A_5_393_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_3_out_din;
assign A_5_393_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_3_read;
assign A_5_393_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_3_out_write;
assign A_5_3_read_ap_ack = ap_const_logic_1;
assign A_5_497_U_ap_dummy_ce = ap_const_logic_1;
assign A_5_497_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_4_out_din;
assign A_5_497_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_4_read;
assign A_5_497_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_4_out_write;
assign A_5_4_read_ap_ack = ap_const_logic_1;
assign A_5_5132_U_ap_dummy_ce = ap_const_logic_1;
assign A_5_5132_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_5_out_din;
assign A_5_5132_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_5_read;
assign A_5_5132_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_5_out_write;
assign A_5_681_U_ap_dummy_ce = ap_const_logic_1;
assign A_5_681_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_6_out_din;
assign A_5_681_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_6_read;
assign A_5_681_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_6_out_write;
assign A_5_6_read_ap_ack = ap_const_logic_1;
assign A_5_799_U_ap_dummy_ce = ap_const_logic_1;
assign A_5_799_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_7_out_din;
assign A_5_799_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_7_read;
assign A_5_799_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_7_out_write;
assign A_5_7_read_ap_ack = ap_const_logic_1;
assign A_6_0105_U_ap_dummy_ce = ap_const_logic_1;
assign A_6_0105_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_0_out_din;
assign A_6_0105_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_0_read;
assign A_6_0105_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_0_out_write;
assign A_6_0_read_ap_ack = ap_const_logic_1;
assign A_6_1120_U_ap_dummy_ce = ap_const_logic_1;
assign A_6_1120_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_1_out_din;
assign A_6_1120_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_1_read;
assign A_6_1120_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_1_out_write;
assign A_6_1_read_ap_ack = ap_const_logic_1;
assign A_6_272_U_ap_dummy_ce = ap_const_logic_1;
assign A_6_272_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_2_out_din;
assign A_6_272_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_2_read;
assign A_6_272_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_2_out_write;
assign A_6_2_read_ap_ack = ap_const_logic_1;
assign A_6_3100_U_ap_dummy_ce = ap_const_logic_1;
assign A_6_3100_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_3_out_din;
assign A_6_3100_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_3_read;
assign A_6_3100_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_3_out_write;
assign A_6_3_read_ap_ack = ap_const_logic_1;
assign A_6_483_U_ap_dummy_ce = ap_const_logic_1;
assign A_6_483_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_4_out_din;
assign A_6_483_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_4_read;
assign A_6_483_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_4_out_write;
assign A_6_4_read_ap_ack = ap_const_logic_1;
assign A_6_5102_U_ap_dummy_ce = ap_const_logic_1;
assign A_6_5102_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_5_out_din;
assign A_6_5102_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_5_read;
assign A_6_5102_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_5_out_write;
assign A_6_5_read_ap_ack = ap_const_logic_1;
assign A_6_675_U_ap_dummy_ce = ap_const_logic_1;
assign A_6_675_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_6_out_din;
assign A_6_675_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_6_read;
assign A_6_675_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_6_out_write;
assign A_6_7103_U_ap_dummy_ce = ap_const_logic_1;
assign A_6_7103_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_7_out_din;
assign A_6_7103_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_7_read;
assign A_6_7103_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_7_out_write;
assign A_6_7_read_ap_ack = ap_const_logic_1;
assign A_7_0121_U_ap_dummy_ce = ap_const_logic_1;
assign A_7_0121_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_0_out_din;
assign A_7_0121_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_0_read;
assign A_7_0121_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_0_out_write;
assign A_7_0_read_ap_ack = ap_const_logic_1;
assign A_7_1118_U_ap_dummy_ce = ap_const_logic_1;
assign A_7_1118_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_1_out_din;
assign A_7_1118_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_1_read;
assign A_7_1118_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_1_out_write;
assign A_7_1_read_ap_ack = ap_const_logic_1;
assign A_7_2107_U_ap_dummy_ce = ap_const_logic_1;
assign A_7_2107_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_2_out_din;
assign A_7_2107_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_2_read;
assign A_7_2107_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_2_out_write;
assign A_7_2_read_ap_ack = ap_const_logic_1;
assign A_7_3109_U_ap_dummy_ce = ap_const_logic_1;
assign A_7_3109_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_3_out_din;
assign A_7_3109_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_3_read;
assign A_7_3109_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_3_out_write;
assign A_7_3_read_ap_ack = ap_const_logic_1;
assign A_7_4113_U_ap_dummy_ce = ap_const_logic_1;
assign A_7_4113_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_4_out_din;
assign A_7_4113_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_4_read;
assign A_7_4113_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_4_out_write;
assign A_7_4_read_ap_ack = ap_const_logic_1;
assign A_7_586_U_ap_dummy_ce = ap_const_logic_1;
assign A_7_586_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_5_out_din;
assign A_7_586_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_5_read;
assign A_7_586_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_5_out_write;
assign A_7_5_read_ap_ack = ap_const_logic_1;
assign A_7_6116_U_ap_dummy_ce = ap_const_logic_1;
assign A_7_6116_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_6_out_din;
assign A_7_6116_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_6_read;
assign A_7_6116_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_6_out_write;
assign A_7_6_read_ap_ack = ap_const_logic_1;
assign A_7_779_U_ap_dummy_ce = ap_const_logic_1;
assign A_7_779_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_7_out_din;
assign A_7_779_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_7_read;
assign A_7_779_write = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_7_out_write;
assign B_cached_0_0_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_0_0_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_0;
assign B_cached_0_0_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_0_0_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_0_channel;
assign B_cached_0_1_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_0_1_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_1;
assign B_cached_0_1_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_0_1_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_1_channel;
assign B_cached_0_2_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_0_2_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_2;
assign B_cached_0_2_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_0_2_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_2_channel;
assign B_cached_0_3_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_0_3_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_3;
assign B_cached_0_3_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_0_3_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_3_channel;
assign B_cached_0_4_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_0_4_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_4;
assign B_cached_0_4_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_0_4_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_4_channel;
assign B_cached_0_5_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_0_5_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_5;
assign B_cached_0_5_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_0_5_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_5_channel;
assign B_cached_0_6_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_0_6_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_6;
assign B_cached_0_6_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_0_6_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_6_channel;
assign B_cached_0_7_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_0_7_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_7;
assign B_cached_0_7_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_0_7_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_0_7_channel;
assign B_cached_1_0_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_1_0_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_8;
assign B_cached_1_0_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_1_0_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_0_channel;
assign B_cached_1_1_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_1_1_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_9;
assign B_cached_1_1_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_1_1_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_1_channel;
assign B_cached_1_2_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_1_2_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_10;
assign B_cached_1_2_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_1_2_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_2_channel;
assign B_cached_1_3_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_1_3_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_11;
assign B_cached_1_3_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_1_3_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_3_channel;
assign B_cached_1_4_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_1_4_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_12;
assign B_cached_1_4_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_1_4_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_4_channel;
assign B_cached_1_5_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_1_5_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_13;
assign B_cached_1_5_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_1_5_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_5_channel;
assign B_cached_1_6_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_1_6_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_14;
assign B_cached_1_6_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_1_6_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_6_channel;
assign B_cached_1_7_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_1_7_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_15;
assign B_cached_1_7_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_1_7_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_1_7_channel;
assign B_cached_2_0_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_2_0_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_16;
assign B_cached_2_0_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_2_0_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_0_channel;
assign B_cached_2_1_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_2_1_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_17;
assign B_cached_2_1_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_2_1_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_1_channel;
assign B_cached_2_2_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_2_2_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_18;
assign B_cached_2_2_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_2_2_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_2_channel;
assign B_cached_2_3_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_2_3_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_19;
assign B_cached_2_3_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_2_3_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_3_channel;
assign B_cached_2_4_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_2_4_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_20;
assign B_cached_2_4_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_2_4_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_4_channel;
assign B_cached_2_5_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_2_5_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_21;
assign B_cached_2_5_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_2_5_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_5_channel;
assign B_cached_2_6_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_2_6_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_22;
assign B_cached_2_6_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_2_6_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_6_channel;
assign B_cached_2_7_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_2_7_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_23;
assign B_cached_2_7_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_2_7_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_2_7_channel;
assign B_cached_3_0_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_3_0_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_24;
assign B_cached_3_0_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_3_0_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_0_channel;
assign B_cached_3_1_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_3_1_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_25;
assign B_cached_3_1_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_3_1_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_1_channel;
assign B_cached_3_2_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_3_2_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_26;
assign B_cached_3_2_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_3_2_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_2_channel;
assign B_cached_3_3_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_3_3_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_27;
assign B_cached_3_3_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_3_3_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_3_channel;
assign B_cached_3_4_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_3_4_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_28;
assign B_cached_3_4_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_3_4_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_4_channel;
assign B_cached_3_5_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_3_5_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_29;
assign B_cached_3_5_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_3_5_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_5_channel;
assign B_cached_3_6_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_3_6_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_30;
assign B_cached_3_6_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_3_6_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_6_channel;
assign B_cached_3_7_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_3_7_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_31;
assign B_cached_3_7_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_3_7_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_3_7_channel;
assign B_cached_4_0_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_4_0_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_32;
assign B_cached_4_0_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_4_0_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_0_channel;
assign B_cached_4_1_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_4_1_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_33;
assign B_cached_4_1_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_4_1_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_1_channel;
assign B_cached_4_2_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_4_2_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_34;
assign B_cached_4_2_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_4_2_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_2_channel;
assign B_cached_4_3_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_4_3_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_35;
assign B_cached_4_3_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_4_3_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_3_channel;
assign B_cached_4_4_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_4_4_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_36;
assign B_cached_4_4_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_4_4_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_4_channel;
assign B_cached_4_5_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_4_5_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_37;
assign B_cached_4_5_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_4_5_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_5_channel;
assign B_cached_4_6_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_4_6_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_38;
assign B_cached_4_6_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_4_6_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_6_channel;
assign B_cached_4_7_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_4_7_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_39;
assign B_cached_4_7_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_4_7_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_4_7_channel;
assign B_cached_5_0_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_5_0_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_40;
assign B_cached_5_0_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_5_0_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_0_channel;
assign B_cached_5_1_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_5_1_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_41;
assign B_cached_5_1_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_5_1_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_1_channel;
assign B_cached_5_2_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_5_2_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_42;
assign B_cached_5_2_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_5_2_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_2_channel;
assign B_cached_5_3_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_5_3_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_43;
assign B_cached_5_3_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_5_3_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_3_channel;
assign B_cached_5_4_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_5_4_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_44;
assign B_cached_5_4_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_5_4_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_4_channel;
assign B_cached_5_5_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_5_5_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_45;
assign B_cached_5_5_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_5_5_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_5_channel;
assign B_cached_5_6_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_5_6_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_46;
assign B_cached_5_6_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_5_6_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_6_channel;
assign B_cached_5_7_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_5_7_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_47;
assign B_cached_5_7_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_5_7_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_5_7_channel;
assign B_cached_6_0_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_6_0_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_48;
assign B_cached_6_0_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_6_0_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_0_channel;
assign B_cached_6_1_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_6_1_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_49;
assign B_cached_6_1_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_6_1_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_1_channel;
assign B_cached_6_2_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_6_2_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_50;
assign B_cached_6_2_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_6_2_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_2_channel;
assign B_cached_6_3_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_6_3_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_51;
assign B_cached_6_3_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_6_3_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_3_channel;
assign B_cached_6_4_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_6_4_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_52;
assign B_cached_6_4_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_6_4_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_4_channel;
assign B_cached_6_5_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_6_5_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_53;
assign B_cached_6_5_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_6_5_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_5_channel;
assign B_cached_6_6_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_6_6_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_54;
assign B_cached_6_6_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_6_6_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_6_channel;
assign B_cached_6_7_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_6_7_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_55;
assign B_cached_6_7_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_6_7_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_6_7_channel;
assign B_cached_7_0_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_7_0_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_56;
assign B_cached_7_0_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_7_0_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_0_channel;
assign B_cached_7_1_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_7_1_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_57;
assign B_cached_7_1_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_7_1_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_1_channel;
assign B_cached_7_2_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_7_2_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_58;
assign B_cached_7_2_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_7_2_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_2_channel;
assign B_cached_7_3_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_7_3_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_59;
assign B_cached_7_3_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_7_3_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_3_channel;
assign B_cached_7_4_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_7_4_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_60;
assign B_cached_7_4_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_7_4_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_4_channel;
assign B_cached_7_5_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_7_5_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_61;
assign B_cached_7_5_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_7_5_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_5_channel;
assign B_cached_7_6_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_7_6_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_62;
assign B_cached_7_6_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_7_6_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_6_channel;
assign B_cached_7_7_channel_U_ap_dummy_ce = ap_const_logic_1;
assign B_cached_7_7_channel_din = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_return_63;
assign B_cached_7_7_channel_read = DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_ready;
assign B_cached_7_7_channel_write = ap_chn_write_DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_cached_7_7_channel;
assign B_read = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_read;
assign C_address0 = DCT_MAT_Multiply_Loop_Row_proc440_U0_C_address0;
assign C_address1 = ap_const_lv6_0;
assign C_ce0 = DCT_MAT_Multiply_Loop_Row_proc440_U0_C_ce0;
assign C_ce1 = ap_const_logic_0;
assign C_d0 = DCT_MAT_Multiply_Loop_Row_proc440_U0_C_d0;
assign C_d1 = ap_const_lv32_0;
assign C_we0 = DCT_MAT_Multiply_Loop_Row_proc440_U0_C_we0;
assign C_we1 = ap_const_logic_0;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_0_out_full_n = A_0_091_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_1_out_full_n = A_0_189_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_2_out_full_n = A_0_2106_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_3_out_full_n = A_0_3108_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_4_out_full_n = A_0_4112_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_5_out_full_n = A_0_592_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_6_out_full_n = A_0_690_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_0_7_out_full_n = A_0_785_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_0_out_full_n = A_1_0126_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_1_out_full_n = A_1_178_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_2_out_full_n = A_1_277_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_3_out_full_n = A_1_3119_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_4_out_full_n = A_1_488_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_5_out_full_n = A_1_582_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_6_out_full_n = A_1_6125_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_1_7_out_full_n = A_1_7101_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_0_out_full_n = A_2_087_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_1_out_full_n = A_2_1115_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_2_out_full_n = A_2_2134_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_3_out_full_n = A_2_3131_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_4_out_full_n = A_2_4110_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_5_out_full_n = A_2_596_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_6_out_full_n = A_2_6122_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_2_7_out_full_n = A_2_7127_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_0_out_full_n = A_3_0123_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_1_out_full_n = A_3_1114_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_2_out_full_n = A_3_2117_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_3_out_full_n = A_3_3130_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_4_out_full_n = A_3_4129_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_5_out_full_n = A_3_5128_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_6_out_full_n = A_3_680_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_3_7_out_full_n = A_3_7124_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_0_out_full_n = A_4_076_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_1_out_full_n = A_4_173_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_2_out_full_n = A_4_295_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_3_out_full_n = A_4_394_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_4_out_full_n = A_4_498_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_5_out_full_n = A_4_5133_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_6_out_full_n = A_4_6111_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_4_7_out_full_n = A_4_784_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_0_out_full_n = A_5_074_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_1_out_full_n = A_5_171_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_2_out_full_n = A_5_2104_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_3_out_full_n = A_5_393_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_4_out_full_n = A_5_497_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_5_out_full_n = A_5_5132_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_6_out_full_n = A_5_681_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_5_7_out_full_n = A_5_799_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_0_out_full_n = A_6_0105_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_1_out_full_n = A_6_1120_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_2_out_full_n = A_6_272_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_3_out_full_n = A_6_3100_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_4_out_full_n = A_6_483_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_5_out_full_n = A_6_5102_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_6_out_full_n = A_6_675_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_6_7_out_full_n = A_6_7103_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_0_out_full_n = A_7_0121_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_1_out_full_n = A_7_1118_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_2_out_full_n = A_7_2107_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_3_out_full_n = A_7_3109_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_4_out_full_n = A_7_4113_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_5_out_full_n = A_7_586_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_6_out_full_n = A_7_6116_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_A_7_7_out_full_n = A_7_779_full_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_dout = B_dout;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_B_empty_n = B_empty_n;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_start = ap_start;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read191 = A_6_2_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read192 = A_4_1_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read193 = A_5_0_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read196 = A_1_2_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read199 = A_3_6_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read200 = A_5_6_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read201 = A_1_5_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read202 = A_6_4_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read203 = A_4_7_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read204 = A_0_7_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read205 = A_7_5_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read206 = A_2_0_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read207 = A_1_4_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read208 = A_0_1_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read209 = A_0_6_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read211 = A_0_5_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read212 = A_5_3_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read213 = A_4_3_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read214 = A_4_2_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read215 = A_2_5_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read216 = A_5_4_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read218 = A_5_7_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read219 = A_6_3_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read220 = A_1_7_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read221 = A_6_5_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read222 = A_6_7_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read223 = A_5_2_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read224 = A_6_0_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read225 = A_0_2_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read226 = A_7_2_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read227 = A_0_3_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read228 = A_7_3_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read229 = A_2_4_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read230 = A_4_6_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read232 = A_7_4_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read233 = A_3_1_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read234 = A_2_1_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read235 = A_7_6_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read236 = A_3_2_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read237 = A_7_1_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read238 = A_1_3_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read239 = A_6_1_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read240 = A_7_0_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read241 = A_2_6_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read242 = A_3_0_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read243 = A_3_7_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read244 = A_1_6_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read245 = A_1_0_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read246 = A_2_7_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read247 = A_3_5_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read248 = A_3_4_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read250 = A_2_3_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read252 = A_4_5_read;
assign DCT_MAT_Multiply_Loop_LoadRow_proc_U0_p_read64 = A_5_1_read;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_0_dout = A_0_091_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_0_empty_n = A_0_091_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_1_dout = A_0_189_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_1_empty_n = A_0_189_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_2_dout = A_0_2106_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_2_empty_n = A_0_2106_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_3_dout = A_0_3108_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_3_empty_n = A_0_3108_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_4_dout = A_0_4112_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_4_empty_n = A_0_4112_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_5_dout = A_0_592_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_5_empty_n = A_0_592_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_6_dout = A_0_690_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_6_empty_n = A_0_690_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_7_dout = A_0_785_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_0_7_empty_n = A_0_785_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_0_dout = A_1_0126_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_0_empty_n = A_1_0126_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_1_dout = A_1_178_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_1_empty_n = A_1_178_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_2_dout = A_1_277_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_2_empty_n = A_1_277_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_3_dout = A_1_3119_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_3_empty_n = A_1_3119_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_4_dout = A_1_488_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_4_empty_n = A_1_488_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_5_dout = A_1_582_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_5_empty_n = A_1_582_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_6_dout = A_1_6125_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_6_empty_n = A_1_6125_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_7_dout = A_1_7101_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_1_7_empty_n = A_1_7101_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_0_dout = A_2_087_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_0_empty_n = A_2_087_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_1_dout = A_2_1115_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_1_empty_n = A_2_1115_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_2_dout = A_2_2134_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_2_empty_n = A_2_2134_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_3_dout = A_2_3131_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_3_empty_n = A_2_3131_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_4_dout = A_2_4110_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_4_empty_n = A_2_4110_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_5_dout = A_2_596_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_5_empty_n = A_2_596_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_6_dout = A_2_6122_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_6_empty_n = A_2_6122_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_7_dout = A_2_7127_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_2_7_empty_n = A_2_7127_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_0_dout = A_3_0123_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_0_empty_n = A_3_0123_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_1_dout = A_3_1114_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_1_empty_n = A_3_1114_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_2_dout = A_3_2117_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_2_empty_n = A_3_2117_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_3_dout = A_3_3130_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_3_empty_n = A_3_3130_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_4_dout = A_3_4129_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_4_empty_n = A_3_4129_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_5_dout = A_3_5128_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_5_empty_n = A_3_5128_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_6_dout = A_3_680_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_6_empty_n = A_3_680_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_7_dout = A_3_7124_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_3_7_empty_n = A_3_7124_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_0_dout = A_4_076_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_0_empty_n = A_4_076_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_1_dout = A_4_173_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_1_empty_n = A_4_173_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_2_dout = A_4_295_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_2_empty_n = A_4_295_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_3_dout = A_4_394_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_3_empty_n = A_4_394_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_4_dout = A_4_498_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_4_empty_n = A_4_498_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_5_dout = A_4_5133_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_5_empty_n = A_4_5133_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_6_dout = A_4_6111_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_6_empty_n = A_4_6111_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_7_dout = A_4_784_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_4_7_empty_n = A_4_784_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_0_dout = A_5_074_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_0_empty_n = A_5_074_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_1_dout = A_5_171_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_1_empty_n = A_5_171_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_2_dout = A_5_2104_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_2_empty_n = A_5_2104_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_3_dout = A_5_393_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_3_empty_n = A_5_393_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_4_dout = A_5_497_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_4_empty_n = A_5_497_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_5_dout = A_5_5132_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_5_empty_n = A_5_5132_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_6_dout = A_5_681_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_6_empty_n = A_5_681_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_7_dout = A_5_799_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_5_7_empty_n = A_5_799_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_0_dout = A_6_0105_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_0_empty_n = A_6_0105_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_1_dout = A_6_1120_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_1_empty_n = A_6_1120_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_2_dout = A_6_272_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_2_empty_n = A_6_272_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_3_dout = A_6_3100_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_3_empty_n = A_6_3100_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_4_dout = A_6_483_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_4_empty_n = A_6_483_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_5_dout = A_6_5102_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_5_empty_n = A_6_5102_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_6_dout = A_6_675_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_6_empty_n = A_6_675_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_7_dout = A_6_7103_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_6_7_empty_n = A_6_7103_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_0_dout = A_7_0121_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_0_empty_n = A_7_0121_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_1_dout = A_7_1118_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_1_empty_n = A_7_1118_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_2_dout = A_7_2107_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_2_empty_n = A_7_2107_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_3_dout = A_7_3109_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_3_empty_n = A_7_3109_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_4_dout = A_7_4113_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_4_empty_n = A_7_4113_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_5_dout = A_7_586_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_5_empty_n = A_7_586_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_6_dout = A_7_6116_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_6_empty_n = A_7_6116_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_7_dout = A_7_779_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_A_7_7_empty_n = A_7_779_empty_n;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_continue = ap_sig_hs_continue;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_ap_start = (B_cached_0_0_channel_empty_n & B_cached_0_1_channel_empty_n & B_cached_0_2_channel_empty_n & B_cached_0_3_channel_empty_n & B_cached_0_4_channel_empty_n & B_cached_0_5_channel_empty_n & B_cached_0_6_channel_empty_n & B_cached_0_7_channel_empty_n & B_cached_1_0_channel_empty_n & B_cached_1_1_channel_empty_n & B_cached_1_2_channel_empty_n & B_cached_1_3_channel_empty_n & B_cached_1_4_channel_empty_n & B_cached_1_5_channel_empty_n & B_cached_1_6_channel_empty_n & B_cached_1_7_channel_empty_n & B_cached_2_0_channel_empty_n & B_cached_2_1_channel_empty_n & B_cached_2_2_channel_empty_n & B_cached_2_3_channel_empty_n & B_cached_2_4_channel_empty_n & B_cached_2_5_channel_empty_n & B_cached_2_6_channel_empty_n & B_cached_2_7_channel_empty_n & B_cached_3_0_channel_empty_n & B_cached_3_1_channel_empty_n & B_cached_3_2_channel_empty_n & B_cached_3_3_channel_empty_n & B_cached_3_4_channel_empty_n & B_cached_3_5_channel_empty_n & B_cached_3_6_channel_empty_n & B_cached_3_7_channel_empty_n & B_cached_4_0_channel_empty_n & B_cached_4_1_channel_empty_n & B_cached_4_2_channel_empty_n & B_cached_4_3_channel_empty_n & B_cached_4_4_channel_empty_n & B_cached_4_5_channel_empty_n & B_cached_4_6_channel_empty_n & B_cached_4_7_channel_empty_n & B_cached_5_0_channel_empty_n & B_cached_5_1_channel_empty_n & B_cached_5_2_channel_empty_n & B_cached_5_3_channel_empty_n & B_cached_5_4_channel_empty_n & B_cached_5_5_channel_empty_n & B_cached_5_6_channel_empty_n & B_cached_5_7_channel_empty_n & B_cached_6_0_channel_empty_n & B_cached_6_1_channel_empty_n & B_cached_6_2_channel_empty_n & B_cached_6_3_channel_empty_n & B_cached_6_4_channel_empty_n & B_cached_6_5_channel_empty_n & B_cached_6_6_channel_empty_n & B_cached_6_7_channel_empty_n & B_cached_7_0_channel_empty_n & B_cached_7_1_channel_empty_n & B_cached_7_2_channel_empty_n & B_cached_7_3_channel_empty_n & B_cached_7_4_channel_empty_n & B_cached_7_5_channel_empty_n & B_cached_7_6_channel_empty_n & B_cached_7_7_channel_empty_n);
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read = B_cached_0_0_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read1 = B_cached_0_1_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read10 = B_cached_1_2_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read11 = B_cached_1_3_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read12 = B_cached_1_4_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read13 = B_cached_1_5_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read14 = B_cached_1_6_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read15 = B_cached_1_7_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read16 = B_cached_2_0_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read17 = B_cached_2_1_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read18 = B_cached_2_2_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read19 = B_cached_2_3_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read2 = B_cached_0_2_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read20 = B_cached_2_4_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read21 = B_cached_2_5_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read22 = B_cached_2_6_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read23 = B_cached_2_7_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read24 = B_cached_3_0_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read25 = B_cached_3_1_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read26 = B_cached_3_2_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read27 = B_cached_3_3_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read28 = B_cached_3_4_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read29 = B_cached_3_5_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read3 = B_cached_0_3_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read30 = B_cached_3_6_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read31 = B_cached_3_7_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read32 = B_cached_4_0_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read33 = B_cached_4_1_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read34 = B_cached_4_2_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read35 = B_cached_4_3_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read36 = B_cached_4_4_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read37 = B_cached_4_5_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read38 = B_cached_4_6_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read39 = B_cached_4_7_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read4 = B_cached_0_4_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read40 = B_cached_5_0_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read41 = B_cached_5_1_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read42 = B_cached_5_2_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read43 = B_cached_5_3_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read44 = B_cached_5_4_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read45 = B_cached_5_5_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read46 = B_cached_5_6_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read47 = B_cached_5_7_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read48 = B_cached_6_0_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read49 = B_cached_6_1_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read5 = B_cached_0_5_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read50 = B_cached_6_2_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read51 = B_cached_6_3_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read52 = B_cached_6_4_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read53 = B_cached_6_5_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read54 = B_cached_6_6_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read55 = B_cached_6_7_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read56 = B_cached_7_0_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read57 = B_cached_7_1_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read58 = B_cached_7_2_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read59 = B_cached_7_3_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read6 = B_cached_0_6_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read60 = B_cached_7_4_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read61 = B_cached_7_5_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read62 = B_cached_7_6_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read63 = B_cached_7_7_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read7 = B_cached_0_7_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read8 = B_cached_1_0_channel_dout;
assign DCT_MAT_Multiply_Loop_Row_proc440_U0_p_read9 = B_cached_1_1_channel_dout;
assign ap_done = ap_sig_hs_done;
assign ap_ready = ap_sig_top_allready;
assign ap_sig_hs_continue = ap_const_logic_1;
assign ap_sig_top_allready = DCT_MAT_Multiply_Loop_LoadRow_proc_U0_ap_ready;


endmodule //DCT_MAT_Multiply

