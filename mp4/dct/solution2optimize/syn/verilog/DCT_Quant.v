// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module DCT_Quant (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        X_address0,
        X_ce0,
        X_q0,
        function_r,
        Y_address0,
        Y_ce0,
        Y_we0,
        Y_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 26'b1;
parameter    ap_ST_st2_fsm_1 = 26'b10;
parameter    ap_ST_st3_fsm_2 = 26'b100;
parameter    ap_ST_st4_fsm_3 = 26'b1000;
parameter    ap_ST_st5_fsm_4 = 26'b10000;
parameter    ap_ST_st6_fsm_5 = 26'b100000;
parameter    ap_ST_st7_fsm_6 = 26'b1000000;
parameter    ap_ST_st8_fsm_7 = 26'b10000000;
parameter    ap_ST_st9_fsm_8 = 26'b100000000;
parameter    ap_ST_st10_fsm_9 = 26'b1000000000;
parameter    ap_ST_st11_fsm_10 = 26'b10000000000;
parameter    ap_ST_st12_fsm_11 = 26'b100000000000;
parameter    ap_ST_st13_fsm_12 = 26'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 26'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 26'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 26'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 26'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 26'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 26'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 26'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 26'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 26'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 26'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 26'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 26'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 26'b10000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] X_address0;
output   X_ce0;
input  [31:0] X_q0;
input  [0:0] function_r;
output  [5:0] Y_address0;
output   Y_ce0;
output   Y_we0;
output  [31:0] Y_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] X_address0;
reg X_ce0;
reg[5:0] Y_address0;
reg Y_ce0;
reg Y_we0;
reg[31:0] Y_d0;
(* fsm_encoding = "none" *) reg   [25:0] ap_CS_fsm = 26'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_44;
reg   [5:0] QMatrix_address0;
reg    QMatrix_ce0;
wire   [31:0] QMatrix_q0;
reg   [31:0] reg_159;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_76;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_bdd_83;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_92;
wire   [0:0] function_read_read_fu_36_p2;
wire   [3:0] i_1_fu_177_p2;
reg   [3:0] i_1_reg_279;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_107;
wire   [7:0] p_addr_cast_fu_191_p1;
reg   [7:0] p_addr_cast_reg_284;
wire   [0:0] exitcond1_i3_fu_171_p2;
wire   [3:0] i_fu_201_p2;
reg   [3:0] i_reg_292;
wire   [7:0] p_addr2_cast_fu_215_p1;
reg   [7:0] p_addr2_cast_reg_297;
wire   [0:0] exitcond1_i_fu_195_p2;
wire   [3:0] j_1_fu_225_p2;
reg   [3:0] j_1_reg_305;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_135;
wire   [63:0] tmp_3_fu_240_p1;
reg   [63:0] tmp_3_reg_310;
wire   [0:0] exitcond_i6_fu_219_p2;
wire   [31:0] grp_fu_154_p2;
reg   [31:0] tmp_3_i1_reg_326;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_153;
wire   [3:0] j_fu_251_p2;
reg   [3:0] j_reg_334;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_bdd_162;
wire   [63:0] tmp_2_fu_266_p1;
reg   [63:0] tmp_2_reg_339;
wire   [0:0] exitcond_i_fu_245_p2;
reg   [3:0] i_i2_reg_102;
reg   [3:0] i_i_reg_113;
reg   [3:0] j_i5_reg_124;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_191;
reg   [3:0] j_i_reg_135;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_bdd_200;
wire   [31:0] grp_fu_147_p2;
wire   [31:0] grp_fu_147_p0;
wire   [31:0] grp_fu_147_p1;
wire   [31:0] grp_fu_154_p0;
wire   [31:0] grp_fu_154_p1;
wire   [6:0] tmp_1_fu_183_p3;
wire   [6:0] tmp_fu_207_p3;
wire   [7:0] tmp_i7_trn_cast_fu_231_p1;
wire   [7:0] p_addr1_fu_235_p2;
wire   [7:0] tmp_i_trn_cast_fu_257_p1;
wire   [7:0] p_addr3_fu_261_p2;
wire    grp_fu_147_ce;
wire    grp_fu_154_ce;
reg   [25:0] ap_NS_fsm;


DCT_Quant_QMatrix #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
QMatrix_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( QMatrix_address0 ),
    .ce0( QMatrix_ce0 ),
    .q0( QMatrix_q0 )
);

DCT_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fmul_32ns_32ns_32_4_max_dsp_U4(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_147_p0 ),
    .din1( grp_fu_147_p1 ),
    .ce( grp_fu_147_ce ),
    .dout( grp_fu_147_p2 )
);

DCT_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fdiv_32ns_32ns_32_16_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_154_p0 ),
    .din1( grp_fu_154_p1 ),
    .ce( grp_fu_154_ce ),
    .dout( grp_fu_154_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0) & (function_read_read_fu_36_p2 == ap_const_lv1_0))) begin
        i_i2_reg_102 <= ap_const_lv4_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond_i6_fu_219_p2))) begin
        i_i2_reg_102 <= i_1_reg_279;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0) & ~(function_read_read_fu_36_p2 == ap_const_lv1_0))) begin
        i_i_reg_113 <= ap_const_lv4_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & ~(ap_const_lv1_0 == exitcond_i_fu_245_p2))) begin
        i_i_reg_113 <= i_reg_292;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        j_i5_reg_124 <= j_1_reg_305;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (function_read_read_fu_36_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond1_i3_fu_171_p2))) begin
        j_i5_reg_124 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        j_i_reg_135 <= j_reg_334;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(function_read_read_fu_36_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond1_i_fu_195_p2))) begin
        j_i_reg_135 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (function_read_read_fu_36_p2 == ap_const_lv1_0))) begin
        i_1_reg_279 <= i_1_fu_177_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(function_read_read_fu_36_p2 == ap_const_lv1_0))) begin
        i_reg_292 <= i_fu_201_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        j_1_reg_305 <= j_1_fu_225_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        j_reg_334 <= j_fu_251_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(function_read_read_fu_36_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond1_i_fu_195_p2))) begin
        p_addr2_cast_reg_297[6 : 3] <= p_addr2_cast_fu_215_p1[6 : 3];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (function_read_read_fu_36_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond1_i3_fu_171_p2))) begin
        p_addr_cast_reg_284[6 : 3] <= p_addr_cast_fu_191_p1[6 : 3];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22))) begin
        reg_159 <= X_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) & (ap_const_lv1_0 == exitcond_i_fu_245_p2))) begin
        tmp_2_reg_339[7 : 0] <= tmp_2_fu_266_p1[7 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        tmp_3_i1_reg_326 <= grp_fu_154_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond_i6_fu_219_p2))) begin
        tmp_3_reg_310[7 : 0] <= tmp_3_fu_240_p1[7 : 0];
    end
end

/// QMatrix_address0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3 or tmp_3_reg_310 or ap_sig_cseq_ST_st22_fsm_21 or tmp_2_fu_266_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        QMatrix_address0 = tmp_2_fu_266_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        QMatrix_address0 = tmp_3_reg_310;
    end else begin
        QMatrix_address0 = 'bx;
    end
end

/// QMatrix_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st22_fsm_21)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21))) begin
        QMatrix_ce0 = ap_const_logic_1;
    end else begin
        QMatrix_ce0 = ap_const_logic_0;
    end
end

/// X_address0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or tmp_3_fu_240_p1 or ap_sig_cseq_ST_st22_fsm_21 or tmp_2_fu_266_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        X_address0 = tmp_2_fu_266_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        X_address0 = tmp_3_fu_240_p1;
    end else begin
        X_address0 = 'bx;
    end
end

/// X_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st22_fsm_21)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21))) begin
        X_ce0 = ap_const_logic_1;
    end else begin
        X_ce0 = ap_const_logic_0;
    end
end

/// Y_address0 assign process. ///
always @ (tmp_3_reg_310 or tmp_2_reg_339 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st26_fsm_25)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        Y_address0 = tmp_2_reg_339;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        Y_address0 = tmp_3_reg_310;
    end else begin
        Y_address0 = 'bx;
    end
end

/// Y_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st26_fsm_25)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25))) begin
        Y_ce0 = ap_const_logic_1;
    end else begin
        Y_ce0 = ap_const_logic_0;
    end
end

/// Y_d0 assign process. ///
always @ (tmp_3_i1_reg_326 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st26_fsm_25 or grp_fu_147_p2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        Y_d0 = grp_fu_147_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        Y_d0 = tmp_3_i1_reg_326;
    end else begin
        Y_d0 = 'bx;
    end
end

/// Y_we0 assign process. ///
always @ (ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st26_fsm_25)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25))) begin
        Y_we0 = ap_const_logic_1;
    end else begin
        Y_we0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or function_read_read_fu_36_p2 or ap_sig_cseq_ST_st2_fsm_1 or exitcond1_i3_fu_171_p2 or exitcond1_i_fu_195_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (((function_read_read_fu_36_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == exitcond1_i3_fu_171_p2)) | (~(function_read_read_fu_36_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == exitcond1_i_fu_195_p2)))))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (function_read_read_fu_36_p2 or ap_sig_cseq_ST_st2_fsm_1 or exitcond1_i3_fu_171_p2 or exitcond1_i_fu_195_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (((function_read_read_fu_36_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == exitcond1_i3_fu_171_p2)) | (~(function_read_read_fu_36_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == exitcond1_i_fu_195_p2))))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_44)
begin
    if (ap_sig_bdd_44) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_153)
begin
    if (ap_sig_bdd_153) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_191)
begin
    if (ap_sig_bdd_191) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st22_fsm_21 assign process. ///
always @ (ap_sig_bdd_162)
begin
    if (ap_sig_bdd_162) begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st23_fsm_22 assign process. ///
always @ (ap_sig_bdd_83)
begin
    if (ap_sig_bdd_83) begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st26_fsm_25 assign process. ///
always @ (ap_sig_bdd_200)
begin
    if (ap_sig_bdd_200) begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_107)
begin
    if (ap_sig_bdd_107) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_135)
begin
    if (ap_sig_bdd_135) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_76)
begin
    if (ap_sig_bdd_76) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_92)
begin
    if (ap_sig_bdd_92) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or function_read_read_fu_36_p2 or exitcond1_i3_fu_171_p2 or exitcond1_i_fu_195_p2 or exitcond_i6_fu_219_p2 or exitcond_i_fu_245_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((((function_read_read_fu_36_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == exitcond1_i3_fu_171_p2)) | (~(function_read_read_fu_36_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == exitcond1_i_fu_195_p2)))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if ((~(function_read_read_fu_36_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == exitcond1_i_fu_195_p2))) begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_i6_fu_219_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st22_fsm_21 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_i_fu_245_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_107 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_107 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_135 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_135 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_153 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_153 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_162 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_162 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end

/// ap_sig_bdd_191 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_191 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_200 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_200 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end

/// ap_sig_bdd_44 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_44 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_76 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_76 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_83 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_83 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end

/// ap_sig_bdd_92 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_92 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end
assign exitcond1_i3_fu_171_p2 = (i_i2_reg_102 == ap_const_lv4_8? 1'b1: 1'b0);
assign exitcond1_i_fu_195_p2 = (i_i_reg_113 == ap_const_lv4_8? 1'b1: 1'b0);
assign exitcond_i6_fu_219_p2 = (j_i5_reg_124 == ap_const_lv4_8? 1'b1: 1'b0);
assign exitcond_i_fu_245_p2 = (j_i_reg_135 == ap_const_lv4_8? 1'b1: 1'b0);
assign function_read_read_fu_36_p2 = function_r;
assign grp_fu_147_ce = ap_const_logic_1;
assign grp_fu_147_p0 = X_q0;
assign grp_fu_147_p1 = QMatrix_q0;
assign grp_fu_154_ce = ap_const_logic_1;
assign grp_fu_154_p0 = reg_159;
assign grp_fu_154_p1 = QMatrix_q0;
assign i_1_fu_177_p2 = (i_i2_reg_102 + ap_const_lv4_1);
assign i_fu_201_p2 = (i_i_reg_113 + ap_const_lv4_1);
assign j_1_fu_225_p2 = (j_i5_reg_124 + ap_const_lv4_1);
assign j_fu_251_p2 = (j_i_reg_135 + ap_const_lv4_1);
assign p_addr1_fu_235_p2 = (tmp_i7_trn_cast_fu_231_p1 + p_addr_cast_reg_284);
assign p_addr2_cast_fu_215_p1 = tmp_fu_207_p3;
assign p_addr3_fu_261_p2 = (tmp_i_trn_cast_fu_257_p1 + p_addr2_cast_reg_297);
assign p_addr_cast_fu_191_p1 = tmp_1_fu_183_p3;
assign tmp_1_fu_183_p3 = {{i_i2_reg_102}, {ap_const_lv3_0}};
assign tmp_2_fu_266_p1 = p_addr3_fu_261_p2;
assign tmp_3_fu_240_p1 = p_addr1_fu_235_p2;
assign tmp_fu_207_p3 = {{i_i_reg_113}, {ap_const_lv3_0}};
assign tmp_i7_trn_cast_fu_231_p1 = j_i5_reg_124;
assign tmp_i_trn_cast_fu_257_p1 = j_i_reg_135;
always @ (posedge ap_clk)
begin
    p_addr_cast_reg_284[2:0] <= 3'b000;
    p_addr_cast_reg_284[7] <= 1'b0;
    p_addr2_cast_reg_297[2:0] <= 3'b000;
    p_addr2_cast_reg_297[7] <= 1'b0;
    tmp_3_reg_310[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_339[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end



endmodule //DCT_Quant

