// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module DCT_MAT_Multiply2_Loop_Row_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_q0,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b10;
parameter    ap_ST_st5_fsm_2 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_true = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv7_40 = 7'b1000000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_3 = 3'b11;
parameter    ap_const_lv3_2 = 3'b10;
parameter    ap_const_lv3_1 = 3'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [5:0] A_address0;
output   A_ce0;
input  [31:0] A_q0;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_ce0;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm = 3'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_22;
reg   [6:0] indvar_flatten_reg_102;
reg   [3:0] i_0_i_i_reg_113;
reg   [3:0] k_0_i_i_reg_124;
wire   [0:0] exitcond_flatten_fu_160_p2;
reg   [0:0] exitcond_flatten_reg_675;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_57;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_675_pp0_it1;
wire   [6:0] indvar_flatten_next_fu_166_p2;
wire   [3:0] i_0_i_i_mid2_fu_192_p3;
reg   [3:0] i_0_i_i_mid2_reg_684;
wire   [2:0] tmp_21_fu_227_p1;
reg   [2:0] tmp_21_reg_694;
reg   [2:0] ap_reg_ppstg_tmp_21_reg_694_pp0_it1;
wire   [3:0] k_fu_231_p2;
reg   [31:0] A_cached_row_0_reg_710;
wire   [0:0] sel_tmp_fu_237_p2;
reg   [0:0] sel_tmp_reg_722;
wire   [0:0] sel_tmp2_fu_242_p2;
reg   [0:0] sel_tmp2_reg_728;
reg    ap_sig_bdd_94;
reg   [3:0] i_0_i_i_phi_fu_117_p4;
wire   [63:0] tmp_19_fu_222_p1;
reg   [31:0] A_cached_row_7_36_fu_58;
wire   [31:0] A_cached_row_7_68_fu_532_p3;
reg    ap_sig_cseq_ST_st5_fsm_2;
reg    ap_sig_bdd_120;
reg   [31:0] A_cached_row_7_32_fu_62;
wire   [31:0] A_cached_row_7_67_fu_524_p3;
reg   [31:0] A_cached_row_7_27_fu_66;
wire   [31:0] A_cached_row_7_65_fu_509_p3;
reg   [31:0] A_cached_row_7_21_fu_70;
wire   [31:0] A_cached_row_7_62_fu_486_p3;
reg   [31:0] A_cached_row_7_14_fu_74;
wire   [31:0] A_cached_row_7_58_fu_455_p3;
reg   [31:0] A_cached_row_7_37_fu_78;
wire   [31:0] A_cached_row_7_53_fu_416_p3;
reg   [31:0] A_cached_row_7_38_fu_82;
wire   [31:0] A_cached_row_7_47_fu_370_p3;
reg   [31:0] A_cached_row_7_39_fu_86;
wire   [31:0] A_cached_row_7_6_fu_317_p3;
wire   [0:0] exitcond2_i_i5_fu_172_p2;
wire   [3:0] tmp_1_i_dup3_fu_186_p2;
wire   [3:0] k_0_i_i_mid2_fu_178_p3;
wire   [6:0] tmp_fu_204_p3;
wire   [7:0] p_addr_cast_fu_212_p1;
wire   [7:0] tmp_2_i_trn_cast_fu_200_p1;
wire   [7:0] p_addr1_fu_216_p2;
wire   [31:0] A_cached_row_7_fu_247_p3;
wire   [0:0] sel_tmp4_fu_260_p2;
wire   [31:0] A_cached_row_7_1_fu_253_p3;
wire   [0:0] sel_tmp6_fu_273_p2;
wire   [31:0] A_cached_row_7_2_fu_265_p3;
wire   [0:0] sel_tmp8_fu_286_p2;
wire   [31:0] A_cached_row_7_3_fu_278_p3;
wire   [0:0] sel_tmp1_fu_299_p2;
wire   [31:0] A_cached_row_7_4_fu_291_p3;
wire   [0:0] sel_tmp5_fu_312_p2;
wire   [31:0] A_cached_row_7_5_fu_304_p3;
wire   [31:0] A_cached_row_7_7_fu_325_p3;
wire   [31:0] A_cached_row_7_8_fu_331_p3;
wire   [31:0] A_cached_row_7_9_fu_338_p3;
wire   [31:0] A_cached_row_7_41_fu_346_p3;
wire   [31:0] A_cached_row_7_45_fu_354_p3;
wire   [31:0] A_cached_row_7_46_fu_362_p3;
wire   [31:0] A_cached_row_7_48_fu_378_p3;
wire   [31:0] A_cached_row_7_49_fu_384_p3;
wire   [31:0] A_cached_row_7_50_fu_392_p3;
wire   [31:0] A_cached_row_7_51_fu_400_p3;
wire   [31:0] A_cached_row_7_52_fu_408_p3;
wire   [31:0] A_cached_row_7_54_fu_424_p3;
wire   [31:0] A_cached_row_7_55_fu_431_p3;
wire   [31:0] A_cached_row_7_56_fu_439_p3;
wire   [31:0] A_cached_row_7_57_fu_447_p3;
wire   [31:0] A_cached_row_7_59_fu_463_p3;
wire   [31:0] A_cached_row_7_60_fu_470_p3;
wire   [31:0] A_cached_row_7_61_fu_478_p3;
wire   [31:0] A_cached_row_7_63_fu_494_p3;
wire   [31:0] A_cached_row_7_64_fu_501_p3;
wire   [31:0] A_cached_row_7_66_fu_517_p3;
reg   [2:0] ap_NS_fsm;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_2)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond_flatten_fu_160_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_94)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_fu_160_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_94) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond_flatten_fu_160_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_675 == ap_const_lv1_0))) begin
        i_0_i_i_reg_113 <= i_0_i_i_mid2_reg_684;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_94)) begin
        i_0_i_i_reg_113 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_160_p2 == ap_const_lv1_0))) begin
        indvar_flatten_reg_102 <= indvar_flatten_next_fu_166_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_94)) begin
        indvar_flatten_reg_102 <= ap_const_lv7_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_160_p2 == ap_const_lv1_0))) begin
        k_0_i_i_reg_124 <= k_fu_231_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_94)) begin
        k_0_i_i_reg_124 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_reg_675 == ap_const_lv1_0))) begin
        A_cached_row_0_reg_710 <= A_q0;
        sel_tmp2_reg_728 <= sel_tmp2_fu_242_p2;
        sel_tmp_reg_722 <= sel_tmp_fu_237_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond_flatten_reg_675_pp0_it1 == ap_const_lv1_0))) begin
        A_cached_row_7_14_fu_74 <= A_cached_row_7_58_fu_455_p3;
        A_cached_row_7_21_fu_70 <= A_cached_row_7_62_fu_486_p3;
        A_cached_row_7_27_fu_66 <= A_cached_row_7_65_fu_509_p3;
        A_cached_row_7_32_fu_62 <= A_cached_row_7_67_fu_524_p3;
        A_cached_row_7_36_fu_58 <= A_cached_row_7_68_fu_532_p3;
        A_cached_row_7_37_fu_78 <= A_cached_row_7_53_fu_416_p3;
        A_cached_row_7_38_fu_82 <= A_cached_row_7_47_fu_370_p3;
        A_cached_row_7_39_fu_86 <= A_cached_row_7_6_fu_317_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
        ap_reg_ppstg_exitcond_flatten_reg_675_pp0_it1 <= exitcond_flatten_reg_675;
        ap_reg_ppstg_tmp_21_reg_694_pp0_it1 <= tmp_21_reg_694;
        exitcond_flatten_reg_675 <= exitcond_flatten_fu_160_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_160_p2 == ap_const_lv1_0))) begin
        i_0_i_i_mid2_reg_684 <= i_0_i_i_mid2_fu_192_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_fu_160_p2 == ap_const_lv1_0))) begin
        tmp_21_reg_694 <= tmp_21_fu_227_p1;
    end
end

/// A_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        A_ce0 = ap_const_logic_1;
    end else begin
        A_ce0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st5_fsm_2)
begin
    if (((ap_const_logic_1 == ap_done_reg) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_2)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. ///
always @ (ap_sig_bdd_57)
begin
    if (ap_sig_bdd_57) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_22)
begin
    if (ap_sig_bdd_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_2 assign process. ///
always @ (ap_sig_bdd_120)
begin
    if (ap_sig_bdd_120) begin
        ap_sig_cseq_ST_st5_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_2 = ap_const_logic_0;
    end
end

/// i_0_i_i_phi_fu_117_p4 assign process. ///
always @ (i_0_i_i_reg_113 or exitcond_flatten_reg_675 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or i_0_i_i_mid2_reg_684)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_675 == ap_const_lv1_0))) begin
        i_0_i_i_phi_fu_117_p4 = i_0_i_i_mid2_reg_684;
    end else begin
        i_0_i_i_phi_fu_117_p4 = i_0_i_i_reg_113;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or exitcond_flatten_fu_160_p2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_94)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_94) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_flatten_fu_160_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_flatten_fu_160_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st5_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_2;
            end
        end
        ap_ST_st5_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_address0 = tmp_19_fu_222_p1;
assign A_cached_row_7_1_fu_253_p3 = ((sel_tmp2_reg_728[0:0]===1'b1)? A_cached_row_7_39_fu_86: A_cached_row_7_fu_247_p3);
assign A_cached_row_7_2_fu_265_p3 = ((sel_tmp4_fu_260_p2[0:0]===1'b1)? A_cached_row_7_39_fu_86: A_cached_row_7_1_fu_253_p3);
assign A_cached_row_7_3_fu_278_p3 = ((sel_tmp6_fu_273_p2[0:0]===1'b1)? A_cached_row_7_39_fu_86: A_cached_row_7_2_fu_265_p3);
assign A_cached_row_7_41_fu_346_p3 = ((sel_tmp6_fu_273_p2[0:0]===1'b1)? A_cached_row_7_38_fu_82: A_cached_row_7_9_fu_338_p3);
assign A_cached_row_7_45_fu_354_p3 = ((sel_tmp8_fu_286_p2[0:0]===1'b1)? A_cached_row_7_38_fu_82: A_cached_row_7_41_fu_346_p3);
assign A_cached_row_7_46_fu_362_p3 = ((sel_tmp1_fu_299_p2[0:0]===1'b1)? A_cached_row_7_38_fu_82: A_cached_row_7_45_fu_354_p3);
assign A_cached_row_7_47_fu_370_p3 = ((sel_tmp5_fu_312_p2[0:0]===1'b1)? A_cached_row_7_38_fu_82: A_cached_row_7_46_fu_362_p3);
assign A_cached_row_7_48_fu_378_p3 = ((sel_tmp2_reg_728[0:0]===1'b1)? A_cached_row_0_reg_710: A_cached_row_7_37_fu_78);
assign A_cached_row_7_49_fu_384_p3 = ((sel_tmp4_fu_260_p2[0:0]===1'b1)? A_cached_row_7_37_fu_78: A_cached_row_7_48_fu_378_p3);
assign A_cached_row_7_4_fu_291_p3 = ((sel_tmp8_fu_286_p2[0:0]===1'b1)? A_cached_row_7_39_fu_86: A_cached_row_7_3_fu_278_p3);
assign A_cached_row_7_50_fu_392_p3 = ((sel_tmp6_fu_273_p2[0:0]===1'b1)? A_cached_row_7_37_fu_78: A_cached_row_7_49_fu_384_p3);
assign A_cached_row_7_51_fu_400_p3 = ((sel_tmp8_fu_286_p2[0:0]===1'b1)? A_cached_row_7_37_fu_78: A_cached_row_7_50_fu_392_p3);
assign A_cached_row_7_52_fu_408_p3 = ((sel_tmp1_fu_299_p2[0:0]===1'b1)? A_cached_row_7_37_fu_78: A_cached_row_7_51_fu_400_p3);
assign A_cached_row_7_53_fu_416_p3 = ((sel_tmp5_fu_312_p2[0:0]===1'b1)? A_cached_row_7_37_fu_78: A_cached_row_7_52_fu_408_p3);
assign A_cached_row_7_54_fu_424_p3 = ((sel_tmp4_fu_260_p2[0:0]===1'b1)? A_cached_row_0_reg_710: A_cached_row_7_14_fu_74);
assign A_cached_row_7_55_fu_431_p3 = ((sel_tmp6_fu_273_p2[0:0]===1'b1)? A_cached_row_7_14_fu_74: A_cached_row_7_54_fu_424_p3);
assign A_cached_row_7_56_fu_439_p3 = ((sel_tmp8_fu_286_p2[0:0]===1'b1)? A_cached_row_7_14_fu_74: A_cached_row_7_55_fu_431_p3);
assign A_cached_row_7_57_fu_447_p3 = ((sel_tmp1_fu_299_p2[0:0]===1'b1)? A_cached_row_7_14_fu_74: A_cached_row_7_56_fu_439_p3);
assign A_cached_row_7_58_fu_455_p3 = ((sel_tmp5_fu_312_p2[0:0]===1'b1)? A_cached_row_7_14_fu_74: A_cached_row_7_57_fu_447_p3);
assign A_cached_row_7_59_fu_463_p3 = ((sel_tmp6_fu_273_p2[0:0]===1'b1)? A_cached_row_0_reg_710: A_cached_row_7_21_fu_70);
assign A_cached_row_7_5_fu_304_p3 = ((sel_tmp1_fu_299_p2[0:0]===1'b1)? A_cached_row_7_39_fu_86: A_cached_row_7_4_fu_291_p3);
assign A_cached_row_7_60_fu_470_p3 = ((sel_tmp8_fu_286_p2[0:0]===1'b1)? A_cached_row_7_21_fu_70: A_cached_row_7_59_fu_463_p3);
assign A_cached_row_7_61_fu_478_p3 = ((sel_tmp1_fu_299_p2[0:0]===1'b1)? A_cached_row_7_21_fu_70: A_cached_row_7_60_fu_470_p3);
assign A_cached_row_7_62_fu_486_p3 = ((sel_tmp5_fu_312_p2[0:0]===1'b1)? A_cached_row_7_21_fu_70: A_cached_row_7_61_fu_478_p3);
assign A_cached_row_7_63_fu_494_p3 = ((sel_tmp8_fu_286_p2[0:0]===1'b1)? A_cached_row_0_reg_710: A_cached_row_7_27_fu_66);
assign A_cached_row_7_64_fu_501_p3 = ((sel_tmp1_fu_299_p2[0:0]===1'b1)? A_cached_row_7_27_fu_66: A_cached_row_7_63_fu_494_p3);
assign A_cached_row_7_65_fu_509_p3 = ((sel_tmp5_fu_312_p2[0:0]===1'b1)? A_cached_row_7_27_fu_66: A_cached_row_7_64_fu_501_p3);
assign A_cached_row_7_66_fu_517_p3 = ((sel_tmp1_fu_299_p2[0:0]===1'b1)? A_cached_row_0_reg_710: A_cached_row_7_32_fu_62);
assign A_cached_row_7_67_fu_524_p3 = ((sel_tmp5_fu_312_p2[0:0]===1'b1)? A_cached_row_7_32_fu_62: A_cached_row_7_66_fu_517_p3);
assign A_cached_row_7_68_fu_532_p3 = ((sel_tmp5_fu_312_p2[0:0]===1'b1)? A_cached_row_0_reg_710: A_cached_row_7_36_fu_58);
assign A_cached_row_7_6_fu_317_p3 = ((sel_tmp5_fu_312_p2[0:0]===1'b1)? A_cached_row_7_39_fu_86: A_cached_row_7_5_fu_304_p3);
assign A_cached_row_7_7_fu_325_p3 = ((sel_tmp_reg_722[0:0]===1'b1)? A_cached_row_0_reg_710: A_cached_row_7_38_fu_82);
assign A_cached_row_7_8_fu_331_p3 = ((sel_tmp2_reg_728[0:0]===1'b1)? A_cached_row_7_38_fu_82: A_cached_row_7_7_fu_325_p3);
assign A_cached_row_7_9_fu_338_p3 = ((sel_tmp4_fu_260_p2[0:0]===1'b1)? A_cached_row_7_38_fu_82: A_cached_row_7_8_fu_331_p3);
assign A_cached_row_7_fu_247_p3 = ((sel_tmp_reg_722[0:0]===1'b1)? A_cached_row_7_39_fu_86: A_cached_row_0_reg_710);
assign ap_return_0 = A_cached_row_7_39_fu_86;
assign ap_return_1 = A_cached_row_7_38_fu_82;
assign ap_return_2 = A_cached_row_7_37_fu_78;
assign ap_return_3 = A_cached_row_7_14_fu_74;
assign ap_return_4 = A_cached_row_7_21_fu_70;
assign ap_return_5 = A_cached_row_7_27_fu_66;
assign ap_return_6 = A_cached_row_7_32_fu_62;
assign ap_return_7 = A_cached_row_7_36_fu_58;

/// ap_sig_bdd_120 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_120 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_22 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_22 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_57 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_57 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_94 assign process. ///
always @ (ap_start or ap_done_reg)
begin
    ap_sig_bdd_94 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end
assign exitcond2_i_i5_fu_172_p2 = (k_0_i_i_reg_124 == ap_const_lv4_8? 1'b1: 1'b0);
assign exitcond_flatten_fu_160_p2 = (indvar_flatten_reg_102 == ap_const_lv7_40? 1'b1: 1'b0);
assign i_0_i_i_mid2_fu_192_p3 = ((exitcond2_i_i5_fu_172_p2[0:0]===1'b1)? tmp_1_i_dup3_fu_186_p2: i_0_i_i_phi_fu_117_p4);
assign indvar_flatten_next_fu_166_p2 = (indvar_flatten_reg_102 + ap_const_lv7_1);
assign k_0_i_i_mid2_fu_178_p3 = ((exitcond2_i_i5_fu_172_p2[0:0]===1'b1)? ap_const_lv4_0: k_0_i_i_reg_124);
assign k_fu_231_p2 = (ap_const_lv4_1 + k_0_i_i_mid2_fu_178_p3);
assign p_addr1_fu_216_p2 = (p_addr_cast_fu_212_p1 + tmp_2_i_trn_cast_fu_200_p1);
assign p_addr_cast_fu_212_p1 = tmp_fu_204_p3;
assign sel_tmp1_fu_299_p2 = (ap_reg_ppstg_tmp_21_reg_694_pp0_it1 == ap_const_lv3_1? 1'b1: 1'b0);
assign sel_tmp2_fu_242_p2 = (tmp_21_reg_694 == ap_const_lv3_5? 1'b1: 1'b0);
assign sel_tmp4_fu_260_p2 = (ap_reg_ppstg_tmp_21_reg_694_pp0_it1 == ap_const_lv3_4? 1'b1: 1'b0);
assign sel_tmp5_fu_312_p2 = (ap_reg_ppstg_tmp_21_reg_694_pp0_it1 == ap_const_lv3_0? 1'b1: 1'b0);
assign sel_tmp6_fu_273_p2 = (ap_reg_ppstg_tmp_21_reg_694_pp0_it1 == ap_const_lv3_3? 1'b1: 1'b0);
assign sel_tmp8_fu_286_p2 = (ap_reg_ppstg_tmp_21_reg_694_pp0_it1 == ap_const_lv3_2? 1'b1: 1'b0);
assign sel_tmp_fu_237_p2 = (tmp_21_reg_694 == ap_const_lv3_6? 1'b1: 1'b0);
assign tmp_19_fu_222_p1 = p_addr1_fu_216_p2;
assign tmp_1_i_dup3_fu_186_p2 = (ap_const_lv4_1 + i_0_i_i_phi_fu_117_p4);
assign tmp_21_fu_227_p1 = k_0_i_i_mid2_fu_178_p3[2:0];
assign tmp_2_i_trn_cast_fu_200_p1 = k_0_i_i_mid2_fu_178_p3;
assign tmp_fu_204_p3 = {{i_0_i_i_mid2_fu_192_p3}, {ap_const_lv3_0}};


endmodule //DCT_MAT_Multiply2_Loop_Row_proc

