// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module DCT_MAT_Multiply2_Loop_Col_proc2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        B_0_address0,
        B_0_ce0,
        B_0_q0,
        p_read,
        B_1_address0,
        B_1_ce0,
        B_1_q0,
        p_read1,
        B_2_address0,
        B_2_ce0,
        B_2_q0,
        p_read2,
        B_3_address0,
        B_3_ce0,
        B_3_q0,
        p_read3,
        B_4_address0,
        B_4_ce0,
        B_4_q0,
        p_read4,
        B_5_address0,
        B_5_ce0,
        B_5_q0,
        p_read5,
        B_6_address0,
        B_6_ce0,
        B_6_q0,
        p_read6,
        B_7_address0,
        B_7_ce0,
        B_7_q0,
        p_read7,
        C_din,
        C_full_n,
        C_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b10;
parameter    ap_ST_st48_fsm_2 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [2:0] B_0_address0;
output   B_0_ce0;
input  [31:0] B_0_q0;
input  [31:0] p_read;
output  [2:0] B_1_address0;
output   B_1_ce0;
input  [31:0] B_1_q0;
input  [31:0] p_read1;
output  [2:0] B_2_address0;
output   B_2_ce0;
input  [31:0] B_2_q0;
input  [31:0] p_read2;
output  [2:0] B_3_address0;
output   B_3_ce0;
input  [31:0] B_3_q0;
input  [31:0] p_read3;
output  [2:0] B_4_address0;
output   B_4_ce0;
input  [31:0] B_4_q0;
input  [31:0] p_read4;
output  [2:0] B_5_address0;
output   B_5_ce0;
input  [31:0] B_5_q0;
input  [31:0] p_read5;
output  [2:0] B_6_address0;
output   B_6_ce0;
input  [31:0] B_6_q0;
input  [31:0] p_read6;
output  [2:0] B_7_address0;
output   B_7_ce0;
input  [31:0] B_7_q0;
input  [31:0] p_read7;
output  [31:0] C_din;
input   C_full_n;
output   C_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg B_0_ce0;
reg B_1_ce0;
reg B_2_ce0;
reg B_3_ce0;
reg B_4_ce0;
reg B_5_ce0;
reg B_6_ce0;
reg B_7_ce0;
reg C_write;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm = 3'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_22;
reg   [3:0] j_reg_225;
reg    ap_sig_bdd_96;
wire   [0:0] exitcond1_fu_310_p2;
reg   [0:0] exitcond1_reg_367;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_120;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg    ap_reg_ppiten_pp0_it9 = 1'b0;
reg    ap_reg_ppiten_pp0_it10 = 1'b0;
reg    ap_reg_ppiten_pp0_it11 = 1'b0;
reg    ap_reg_ppiten_pp0_it12 = 1'b0;
reg    ap_reg_ppiten_pp0_it13 = 1'b0;
reg    ap_reg_ppiten_pp0_it14 = 1'b0;
reg    ap_reg_ppiten_pp0_it15 = 1'b0;
reg    ap_reg_ppiten_pp0_it16 = 1'b0;
reg    ap_reg_ppiten_pp0_it17 = 1'b0;
reg    ap_reg_ppiten_pp0_it18 = 1'b0;
reg    ap_reg_ppiten_pp0_it19 = 1'b0;
reg    ap_reg_ppiten_pp0_it20 = 1'b0;
reg    ap_reg_ppiten_pp0_it21 = 1'b0;
reg    ap_reg_ppiten_pp0_it22 = 1'b0;
reg    ap_reg_ppiten_pp0_it23 = 1'b0;
reg    ap_reg_ppiten_pp0_it24 = 1'b0;
reg    ap_reg_ppiten_pp0_it25 = 1'b0;
reg    ap_reg_ppiten_pp0_it26 = 1'b0;
reg    ap_reg_ppiten_pp0_it27 = 1'b0;
reg    ap_reg_ppiten_pp0_it28 = 1'b0;
reg    ap_reg_ppiten_pp0_it29 = 1'b0;
reg    ap_reg_ppiten_pp0_it30 = 1'b0;
reg    ap_reg_ppiten_pp0_it31 = 1'b0;
reg    ap_reg_ppiten_pp0_it32 = 1'b0;
reg    ap_reg_ppiten_pp0_it33 = 1'b0;
reg    ap_reg_ppiten_pp0_it34 = 1'b0;
reg    ap_reg_ppiten_pp0_it35 = 1'b0;
reg    ap_reg_ppiten_pp0_it36 = 1'b0;
reg    ap_reg_ppiten_pp0_it37 = 1'b0;
reg    ap_reg_ppiten_pp0_it38 = 1'b0;
reg    ap_reg_ppiten_pp0_it39 = 1'b0;
reg    ap_reg_ppiten_pp0_it40 = 1'b0;
reg    ap_reg_ppiten_pp0_it41 = 1'b0;
reg    ap_reg_ppiten_pp0_it42 = 1'b0;
reg    ap_reg_ppiten_pp0_it43 = 1'b0;
reg    ap_reg_ppiten_pp0_it44 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it44;
reg    ap_sig_bdd_217;
reg    ap_reg_ppiten_pp0_it45 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it4;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it5;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it6;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it7;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it8;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it9;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it10;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it11;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it12;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it13;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it14;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it15;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it16;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it17;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it18;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it19;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it20;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it21;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it22;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it23;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it24;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it25;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it26;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it27;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it28;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it29;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it30;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it31;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it32;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it33;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it34;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it35;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it36;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it37;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it38;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it39;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it40;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it41;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it42;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_367_pp0_it43;
wire   [3:0] j_1_fu_316_p2;
wire   [63:0] tmp_s_fu_322_p1;
reg   [63:0] tmp_s_reg_376;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it1;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it2;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it3;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it4;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it5;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it6;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it7;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it8;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it9;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it10;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it11;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it12;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it13;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it14;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it15;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it16;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it17;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it18;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it19;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it20;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it21;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it22;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it23;
reg   [63:0] ap_reg_ppstg_tmp_s_reg_376_pp0_it24;
wire   [31:0] grp_fu_270_p2;
reg   [31:0] tmp_4_reg_397;
wire   [31:0] grp_fu_237_p2;
reg   [31:0] temp_2_reg_412;
wire   [31:0] grp_fu_275_p2;
reg   [31:0] tmp_4_1_reg_417;
wire   [31:0] grp_fu_242_p2;
reg   [31:0] temp_2_1_reg_432;
wire   [31:0] grp_fu_280_p2;
reg   [31:0] tmp_4_2_reg_437;
wire   [31:0] grp_fu_246_p2;
reg   [31:0] temp_2_2_reg_452;
wire   [31:0] grp_fu_285_p2;
reg   [31:0] tmp_4_3_reg_457;
wire   [31:0] grp_fu_250_p2;
reg   [31:0] temp_2_3_reg_472;
wire   [31:0] grp_fu_290_p2;
reg   [31:0] tmp_4_4_reg_477;
wire   [31:0] grp_fu_254_p2;
reg   [31:0] temp_2_4_reg_512;
wire   [31:0] grp_fu_295_p2;
reg   [31:0] tmp_4_5_reg_517;
wire   [31:0] grp_fu_300_p2;
reg   [31:0] tmp_4_6_reg_522;
reg   [31:0] ap_reg_ppstg_tmp_4_6_reg_522_pp0_it30;
reg   [31:0] ap_reg_ppstg_tmp_4_6_reg_522_pp0_it31;
reg   [31:0] ap_reg_ppstg_tmp_4_6_reg_522_pp0_it32;
reg   [31:0] ap_reg_ppstg_tmp_4_6_reg_522_pp0_it33;
reg   [31:0] ap_reg_ppstg_tmp_4_6_reg_522_pp0_it34;
wire   [31:0] grp_fu_305_p2;
reg   [31:0] tmp_4_7_reg_527;
reg   [31:0] ap_reg_ppstg_tmp_4_7_reg_527_pp0_it30;
reg   [31:0] ap_reg_ppstg_tmp_4_7_reg_527_pp0_it31;
reg   [31:0] ap_reg_ppstg_tmp_4_7_reg_527_pp0_it32;
reg   [31:0] ap_reg_ppstg_tmp_4_7_reg_527_pp0_it33;
reg   [31:0] ap_reg_ppstg_tmp_4_7_reg_527_pp0_it34;
reg   [31:0] ap_reg_ppstg_tmp_4_7_reg_527_pp0_it35;
reg   [31:0] ap_reg_ppstg_tmp_4_7_reg_527_pp0_it36;
reg   [31:0] ap_reg_ppstg_tmp_4_7_reg_527_pp0_it37;
reg   [31:0] ap_reg_ppstg_tmp_4_7_reg_527_pp0_it38;
reg   [31:0] ap_reg_ppstg_tmp_4_7_reg_527_pp0_it39;
wire   [31:0] grp_fu_258_p2;
reg   [31:0] temp_2_5_reg_532;
wire   [31:0] grp_fu_262_p2;
reg   [31:0] temp_2_6_reg_537;
wire   [31:0] grp_fu_266_p2;
reg   [31:0] temp_2_7_reg_542;
wire   [31:0] grp_fu_237_p0;
wire   [31:0] grp_fu_237_p1;
wire   [31:0] grp_fu_242_p0;
wire   [31:0] grp_fu_242_p1;
wire   [31:0] grp_fu_246_p0;
wire   [31:0] grp_fu_246_p1;
wire   [31:0] grp_fu_250_p0;
wire   [31:0] grp_fu_250_p1;
wire   [31:0] grp_fu_254_p0;
wire   [31:0] grp_fu_254_p1;
wire   [31:0] grp_fu_258_p0;
wire   [31:0] grp_fu_258_p1;
wire   [31:0] grp_fu_262_p0;
wire   [31:0] grp_fu_262_p1;
wire   [31:0] grp_fu_266_p0;
wire   [31:0] grp_fu_266_p1;
wire   [31:0] grp_fu_270_p0;
wire   [31:0] grp_fu_270_p1;
wire   [31:0] grp_fu_275_p0;
wire   [31:0] grp_fu_275_p1;
wire   [31:0] grp_fu_280_p0;
wire   [31:0] grp_fu_280_p1;
wire   [31:0] grp_fu_285_p0;
wire   [31:0] grp_fu_285_p1;
wire   [31:0] grp_fu_290_p0;
wire   [31:0] grp_fu_290_p1;
wire   [31:0] grp_fu_295_p0;
wire   [31:0] grp_fu_295_p1;
wire   [31:0] grp_fu_300_p0;
wire   [31:0] grp_fu_300_p1;
wire   [31:0] grp_fu_305_p0;
wire   [31:0] grp_fu_305_p1;
reg    grp_fu_237_ce;
reg    grp_fu_242_ce;
reg    grp_fu_246_ce;
reg    grp_fu_250_ce;
reg    grp_fu_254_ce;
reg    grp_fu_258_ce;
reg    grp_fu_262_ce;
reg    grp_fu_266_ce;
reg    grp_fu_270_ce;
reg    grp_fu_275_ce;
reg    grp_fu_280_ce;
reg    grp_fu_285_ce;
reg    grp_fu_290_ce;
reg    grp_fu_295_ce;
reg    grp_fu_300_ce;
reg    grp_fu_305_ce;
reg    ap_sig_cseq_ST_st48_fsm_2;
reg    ap_sig_bdd_686;
reg   [2:0] ap_NS_fsm;


DCT_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fadd_32ns_32ns_32_5_full_dsp_U163(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_237_p0 ),
    .din1( grp_fu_237_p1 ),
    .ce( grp_fu_237_ce ),
    .dout( grp_fu_237_p2 )
);

DCT_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fadd_32ns_32ns_32_5_full_dsp_U164(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_242_p0 ),
    .din1( grp_fu_242_p1 ),
    .ce( grp_fu_242_ce ),
    .dout( grp_fu_242_p2 )
);

DCT_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fadd_32ns_32ns_32_5_full_dsp_U165(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_246_p0 ),
    .din1( grp_fu_246_p1 ),
    .ce( grp_fu_246_ce ),
    .dout( grp_fu_246_p2 )
);

DCT_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fadd_32ns_32ns_32_5_full_dsp_U166(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_250_p0 ),
    .din1( grp_fu_250_p1 ),
    .ce( grp_fu_250_ce ),
    .dout( grp_fu_250_p2 )
);

DCT_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fadd_32ns_32ns_32_5_full_dsp_U167(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_254_p0 ),
    .din1( grp_fu_254_p1 ),
    .ce( grp_fu_254_ce ),
    .dout( grp_fu_254_p2 )
);

DCT_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fadd_32ns_32ns_32_5_full_dsp_U168(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_258_p0 ),
    .din1( grp_fu_258_p1 ),
    .ce( grp_fu_258_ce ),
    .dout( grp_fu_258_p2 )
);

DCT_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fadd_32ns_32ns_32_5_full_dsp_U169(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_262_p0 ),
    .din1( grp_fu_262_p1 ),
    .ce( grp_fu_262_ce ),
    .dout( grp_fu_262_p2 )
);

DCT_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fadd_32ns_32ns_32_5_full_dsp_U170(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_266_p0 ),
    .din1( grp_fu_266_p1 ),
    .ce( grp_fu_266_ce ),
    .dout( grp_fu_266_p2 )
);

DCT_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fmul_32ns_32ns_32_4_max_dsp_U171(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_270_p0 ),
    .din1( grp_fu_270_p1 ),
    .ce( grp_fu_270_ce ),
    .dout( grp_fu_270_p2 )
);

DCT_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fmul_32ns_32ns_32_4_max_dsp_U172(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_275_p0 ),
    .din1( grp_fu_275_p1 ),
    .ce( grp_fu_275_ce ),
    .dout( grp_fu_275_p2 )
);

DCT_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fmul_32ns_32ns_32_4_max_dsp_U173(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_280_p0 ),
    .din1( grp_fu_280_p1 ),
    .ce( grp_fu_280_ce ),
    .dout( grp_fu_280_p2 )
);

DCT_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fmul_32ns_32ns_32_4_max_dsp_U174(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_285_p0 ),
    .din1( grp_fu_285_p1 ),
    .ce( grp_fu_285_ce ),
    .dout( grp_fu_285_p2 )
);

DCT_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fmul_32ns_32ns_32_4_max_dsp_U175(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_290_p0 ),
    .din1( grp_fu_290_p1 ),
    .ce( grp_fu_290_ce ),
    .dout( grp_fu_290_p2 )
);

DCT_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fmul_32ns_32ns_32_4_max_dsp_U176(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_295_p0 ),
    .din1( grp_fu_295_p1 ),
    .ce( grp_fu_295_ce ),
    .dout( grp_fu_295_p2 )
);

DCT_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fmul_32ns_32ns_32_4_max_dsp_U177(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_300_p0 ),
    .din1( grp_fu_300_p1 ),
    .ce( grp_fu_300_ce ),
    .dout( grp_fu_300_p2 )
);

DCT_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fmul_32ns_32ns_32_4_max_dsp_U178(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_305_p0 ),
    .din1( grp_fu_305_p1 ),
    .ce( grp_fu_305_ce ),
    .dout( grp_fu_305_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_2)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) & ~(exitcond1_fu_310_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_96)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) & (exitcond1_fu_310_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_96) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) & ~(exitcond1_fu_310_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it10
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
        end
    end
end

/// ap_reg_ppiten_pp0_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it11
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
        end
    end
end

/// ap_reg_ppiten_pp0_it12 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it12
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
        end
    end
end

/// ap_reg_ppiten_pp0_it13 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it13
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
        end
    end
end

/// ap_reg_ppiten_pp0_it14 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it14
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
        end
    end
end

/// ap_reg_ppiten_pp0_it15 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it15
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
        end
    end
end

/// ap_reg_ppiten_pp0_it16 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it16
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
        end
    end
end

/// ap_reg_ppiten_pp0_it17 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it17
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
        end
    end
end

/// ap_reg_ppiten_pp0_it18 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it18
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
        end
    end
end

/// ap_reg_ppiten_pp0_it19 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it19
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

/// ap_reg_ppiten_pp0_it20 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it20
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
        end
    end
end

/// ap_reg_ppiten_pp0_it21 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it21
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
        end
    end
end

/// ap_reg_ppiten_pp0_it22 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it22
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
        end
    end
end

/// ap_reg_ppiten_pp0_it23 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it23
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
        end
    end
end

/// ap_reg_ppiten_pp0_it24 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it24
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
        end
    end
end

/// ap_reg_ppiten_pp0_it25 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it25
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
        end
    end
end

/// ap_reg_ppiten_pp0_it26 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it26
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
        end
    end
end

/// ap_reg_ppiten_pp0_it27 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it27
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it27 <= ap_reg_ppiten_pp0_it26;
        end
    end
end

/// ap_reg_ppiten_pp0_it28 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it28
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it28 <= ap_reg_ppiten_pp0_it27;
        end
    end
end

/// ap_reg_ppiten_pp0_it29 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it29
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it29 <= ap_reg_ppiten_pp0_it28;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

/// ap_reg_ppiten_pp0_it30 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it30
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it30 <= ap_reg_ppiten_pp0_it29;
        end
    end
end

/// ap_reg_ppiten_pp0_it31 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it31
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it31 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it31 <= ap_reg_ppiten_pp0_it30;
        end
    end
end

/// ap_reg_ppiten_pp0_it32 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it32
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it32 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it32 <= ap_reg_ppiten_pp0_it31;
        end
    end
end

/// ap_reg_ppiten_pp0_it33 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it33
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it33 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it33 <= ap_reg_ppiten_pp0_it32;
        end
    end
end

/// ap_reg_ppiten_pp0_it34 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it34
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it34 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it34 <= ap_reg_ppiten_pp0_it33;
        end
    end
end

/// ap_reg_ppiten_pp0_it35 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it35
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it35 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it35 <= ap_reg_ppiten_pp0_it34;
        end
    end
end

/// ap_reg_ppiten_pp0_it36 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it36
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it36 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it36 <= ap_reg_ppiten_pp0_it35;
        end
    end
end

/// ap_reg_ppiten_pp0_it37 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it37
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it37 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it37 <= ap_reg_ppiten_pp0_it36;
        end
    end
end

/// ap_reg_ppiten_pp0_it38 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it38
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it38 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it38 <= ap_reg_ppiten_pp0_it37;
        end
    end
end

/// ap_reg_ppiten_pp0_it39 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it39
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it39 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it39 <= ap_reg_ppiten_pp0_it38;
        end
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

/// ap_reg_ppiten_pp0_it40 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it40
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it40 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it40 <= ap_reg_ppiten_pp0_it39;
        end
    end
end

/// ap_reg_ppiten_pp0_it41 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it41
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it41 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it41 <= ap_reg_ppiten_pp0_it40;
        end
    end
end

/// ap_reg_ppiten_pp0_it42 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it42
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it42 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it42 <= ap_reg_ppiten_pp0_it41;
        end
    end
end

/// ap_reg_ppiten_pp0_it43 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it43
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it43 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it43 <= ap_reg_ppiten_pp0_it42;
        end
    end
end

/// ap_reg_ppiten_pp0_it44 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it44
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it44 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it44 <= ap_reg_ppiten_pp0_it43;
        end
    end
end

/// ap_reg_ppiten_pp0_it45 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it45
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it45 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it45 <= ap_reg_ppiten_pp0_it44;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_96)) begin
            ap_reg_ppiten_pp0_it45 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end
    end
end

/// ap_reg_ppiten_pp0_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end
    end
end

/// ap_reg_ppiten_pp0_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end
    end
end

/// ap_reg_ppiten_pp0_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
        end
    end
end

/// ap_reg_ppiten_pp0_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it9
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
            ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_96)) begin
        j_reg_225 <= ap_const_lv4_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) & (exitcond1_fu_310_p2 == ap_const_lv1_0))) begin
        j_reg_225 <= j_1_fu_316_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        ap_reg_ppstg_exitcond1_reg_367_pp0_it1 <= exitcond1_reg_367;
        ap_reg_ppstg_tmp_s_reg_376_pp0_it1[3 : 0] <= tmp_s_reg_376[3 : 0];
        exitcond1_reg_367 <= exitcond1_fu_310_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45))) begin
        ap_reg_ppstg_exitcond1_reg_367_pp0_it10 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it9;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it11 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it10;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it12 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it11;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it13 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it12;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it14 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it13;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it15 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it14;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it16 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it15;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it17 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it16;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it18 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it17;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it19 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it18;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it2 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it1;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it20 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it19;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it21 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it20;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it22 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it21;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it23 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it22;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it24 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it23;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it25 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it24;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it26 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it25;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it27 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it26;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it28 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it27;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it29 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it28;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it3 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it2;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it30 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it29;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it31 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it30;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it32 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it31;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it33 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it32;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it34 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it33;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it35 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it34;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it36 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it35;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it37 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it36;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it38 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it37;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it39 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it38;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it4 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it3;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it40 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it39;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it41 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it40;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it42 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it41;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it43 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it42;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it44 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it43;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it5 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it4;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it6 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it5;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it7 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it6;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it8 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it7;
        ap_reg_ppstg_exitcond1_reg_367_pp0_it9 <= ap_reg_ppstg_exitcond1_reg_367_pp0_it8;
        ap_reg_ppstg_tmp_4_6_reg_522_pp0_it30 <= tmp_4_6_reg_522;
        ap_reg_ppstg_tmp_4_6_reg_522_pp0_it31 <= ap_reg_ppstg_tmp_4_6_reg_522_pp0_it30;
        ap_reg_ppstg_tmp_4_6_reg_522_pp0_it32 <= ap_reg_ppstg_tmp_4_6_reg_522_pp0_it31;
        ap_reg_ppstg_tmp_4_6_reg_522_pp0_it33 <= ap_reg_ppstg_tmp_4_6_reg_522_pp0_it32;
        ap_reg_ppstg_tmp_4_6_reg_522_pp0_it34 <= ap_reg_ppstg_tmp_4_6_reg_522_pp0_it33;
        ap_reg_ppstg_tmp_4_7_reg_527_pp0_it30 <= tmp_4_7_reg_527;
        ap_reg_ppstg_tmp_4_7_reg_527_pp0_it31 <= ap_reg_ppstg_tmp_4_7_reg_527_pp0_it30;
        ap_reg_ppstg_tmp_4_7_reg_527_pp0_it32 <= ap_reg_ppstg_tmp_4_7_reg_527_pp0_it31;
        ap_reg_ppstg_tmp_4_7_reg_527_pp0_it33 <= ap_reg_ppstg_tmp_4_7_reg_527_pp0_it32;
        ap_reg_ppstg_tmp_4_7_reg_527_pp0_it34 <= ap_reg_ppstg_tmp_4_7_reg_527_pp0_it33;
        ap_reg_ppstg_tmp_4_7_reg_527_pp0_it35 <= ap_reg_ppstg_tmp_4_7_reg_527_pp0_it34;
        ap_reg_ppstg_tmp_4_7_reg_527_pp0_it36 <= ap_reg_ppstg_tmp_4_7_reg_527_pp0_it35;
        ap_reg_ppstg_tmp_4_7_reg_527_pp0_it37 <= ap_reg_ppstg_tmp_4_7_reg_527_pp0_it36;
        ap_reg_ppstg_tmp_4_7_reg_527_pp0_it38 <= ap_reg_ppstg_tmp_4_7_reg_527_pp0_it37;
        ap_reg_ppstg_tmp_4_7_reg_527_pp0_it39 <= ap_reg_ppstg_tmp_4_7_reg_527_pp0_it38;
        ap_reg_ppstg_tmp_s_reg_376_pp0_it10[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it9[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it11[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it10[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it12[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it11[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it13[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it12[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it14[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it13[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it15[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it14[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it16[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it15[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it17[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it16[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it18[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it17[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it19[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it18[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it2[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it1[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it20[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it19[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it21[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it20[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it22[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it21[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it23[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it22[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it24[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it23[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it3[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it2[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it4[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it3[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it5[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it4[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it6[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it5[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it7[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it6[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it8[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it7[3 : 0];
        ap_reg_ppstg_tmp_s_reg_376_pp0_it9[3 : 0] <= ap_reg_ppstg_tmp_s_reg_376_pp0_it8[3 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_367_pp0_it13))) begin
        temp_2_1_reg_432 <= grp_fu_242_p2;
        tmp_4_2_reg_437 <= grp_fu_280_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_367_pp0_it18))) begin
        temp_2_2_reg_452 <= grp_fu_246_p2;
        tmp_4_3_reg_457 <= grp_fu_285_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_367_pp0_it23))) begin
        temp_2_3_reg_472 <= grp_fu_250_p2;
        tmp_4_4_reg_477 <= grp_fu_290_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_367_pp0_it28))) begin
        temp_2_4_reg_512 <= grp_fu_254_p2;
        tmp_4_5_reg_517 <= grp_fu_295_p2;
        tmp_4_6_reg_522 <= grp_fu_300_p2;
        tmp_4_7_reg_527 <= grp_fu_305_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_367_pp0_it33))) begin
        temp_2_5_reg_532 <= grp_fu_258_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_367_pp0_it38))) begin
        temp_2_6_reg_537 <= grp_fu_262_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_367_pp0_it43))) begin
        temp_2_7_reg_542 <= grp_fu_266_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_367_pp0_it8))) begin
        temp_2_reg_412 <= grp_fu_237_p2;
        tmp_4_1_reg_417 <= grp_fu_275_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond1_reg_367_pp0_it3))) begin
        tmp_4_reg_397 <= grp_fu_270_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) & (exitcond1_fu_310_p2 == ap_const_lv1_0))) begin
        tmp_s_reg_376[3 : 0] <= tmp_s_fu_322_p1[3 : 0];
    end
end

/// B_0_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        B_0_ce0 = ap_const_logic_1;
    end else begin
        B_0_ce0 = ap_const_logic_0;
    end
end

/// B_1_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it5 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it5) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        B_1_ce0 = ap_const_logic_1;
    end else begin
        B_1_ce0 = ap_const_logic_0;
    end
end

/// B_2_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it10 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it10) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        B_2_ce0 = ap_const_logic_1;
    end else begin
        B_2_ce0 = ap_const_logic_0;
    end
end

/// B_3_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it15 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it15) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        B_3_ce0 = ap_const_logic_1;
    end else begin
        B_3_ce0 = ap_const_logic_0;
    end
end

/// B_4_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it20 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it20) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        B_4_ce0 = ap_const_logic_1;
    end else begin
        B_4_ce0 = ap_const_logic_0;
    end
end

/// B_5_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it25 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it25) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        B_5_ce0 = ap_const_logic_1;
    end else begin
        B_5_ce0 = ap_const_logic_0;
    end
end

/// B_6_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it25 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it25) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        B_6_ce0 = ap_const_logic_1;
    end else begin
        B_6_ce0 = ap_const_logic_0;
    end
end

/// B_7_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it25 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it25) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        B_7_ce0 = ap_const_logic_1;
    end else begin
        B_7_ce0 = ap_const_logic_0;
    end
end

/// C_write assign process. ///
always @ (ap_reg_ppstg_exitcond1_reg_367_pp0_it44 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_reg_ppstg_exitcond1_reg_367_pp0_it44 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        C_write = ap_const_logic_1;
    end else begin
        C_write = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st48_fsm_2)
begin
    if (((ap_const_logic_1 == ap_done_reg) | (ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st48_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_2)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. ///
always @ (ap_sig_bdd_120)
begin
    if (ap_sig_bdd_120) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_22)
begin
    if (ap_sig_bdd_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st48_fsm_2 assign process. ///
always @ (ap_sig_bdd_686)
begin
    if (ap_sig_bdd_686) begin
        ap_sig_cseq_ST_st48_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_2 = ap_const_logic_0;
    end
end

/// grp_fu_237_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        grp_fu_237_ce = ap_const_logic_1;
    end else begin
        grp_fu_237_ce = ap_const_logic_0;
    end
end

/// grp_fu_242_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        grp_fu_242_ce = ap_const_logic_1;
    end else begin
        grp_fu_242_ce = ap_const_logic_0;
    end
end

/// grp_fu_246_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        grp_fu_246_ce = ap_const_logic_1;
    end else begin
        grp_fu_246_ce = ap_const_logic_0;
    end
end

/// grp_fu_250_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        grp_fu_250_ce = ap_const_logic_1;
    end else begin
        grp_fu_250_ce = ap_const_logic_0;
    end
end

/// grp_fu_254_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        grp_fu_254_ce = ap_const_logic_1;
    end else begin
        grp_fu_254_ce = ap_const_logic_0;
    end
end

/// grp_fu_258_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        grp_fu_258_ce = ap_const_logic_1;
    end else begin
        grp_fu_258_ce = ap_const_logic_0;
    end
end

/// grp_fu_262_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        grp_fu_262_ce = ap_const_logic_1;
    end else begin
        grp_fu_262_ce = ap_const_logic_0;
    end
end

/// grp_fu_266_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        grp_fu_266_ce = ap_const_logic_1;
    end else begin
        grp_fu_266_ce = ap_const_logic_0;
    end
end

/// grp_fu_270_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        grp_fu_270_ce = ap_const_logic_1;
    end else begin
        grp_fu_270_ce = ap_const_logic_0;
    end
end

/// grp_fu_275_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        grp_fu_275_ce = ap_const_logic_1;
    end else begin
        grp_fu_275_ce = ap_const_logic_0;
    end
end

/// grp_fu_280_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        grp_fu_280_ce = ap_const_logic_1;
    end else begin
        grp_fu_280_ce = ap_const_logic_0;
    end
end

/// grp_fu_285_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        grp_fu_285_ce = ap_const_logic_1;
    end else begin
        grp_fu_285_ce = ap_const_logic_0;
    end
end

/// grp_fu_290_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        grp_fu_290_ce = ap_const_logic_1;
    end else begin
        grp_fu_290_ce = ap_const_logic_0;
    end
end

/// grp_fu_295_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        grp_fu_295_ce = ap_const_logic_1;
    end else begin
        grp_fu_295_ce = ap_const_logic_0;
    end
end

/// grp_fu_300_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        grp_fu_300_ce = ap_const_logic_1;
    end else begin
        grp_fu_300_ce = ap_const_logic_0;
    end
end

/// grp_fu_305_ce assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)))) begin
        grp_fu_305_ce = ap_const_logic_1;
    end else begin
        grp_fu_305_ce = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or ap_sig_bdd_96 or exitcond1_fu_310_p2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it44 or ap_sig_bdd_217 or ap_reg_ppiten_pp0_it45)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_96) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it45) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it44)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) & ~(exitcond1_fu_310_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it45) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it44)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_217 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) & ~(exitcond1_fu_310_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st48_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end
        end
        ap_ST_st48_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_0_address0 = tmp_s_fu_322_p1;
assign B_1_address0 = ap_reg_ppstg_tmp_s_reg_376_pp0_it4;
assign B_2_address0 = ap_reg_ppstg_tmp_s_reg_376_pp0_it9;
assign B_3_address0 = ap_reg_ppstg_tmp_s_reg_376_pp0_it14;
assign B_4_address0 = ap_reg_ppstg_tmp_s_reg_376_pp0_it19;
assign B_5_address0 = ap_reg_ppstg_tmp_s_reg_376_pp0_it24;
assign B_6_address0 = ap_reg_ppstg_tmp_s_reg_376_pp0_it24;
assign B_7_address0 = ap_reg_ppstg_tmp_s_reg_376_pp0_it24;
assign C_din = temp_2_7_reg_542;

/// ap_sig_bdd_120 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_120 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_217 assign process. ///
always @ (C_full_n or ap_reg_ppstg_exitcond1_reg_367_pp0_it44)
begin
    ap_sig_bdd_217 = ((C_full_n == ap_const_logic_0) & (ap_reg_ppstg_exitcond1_reg_367_pp0_it44 == ap_const_lv1_0));
end

/// ap_sig_bdd_22 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_22 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_686 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_686 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_96 assign process. ///
always @ (ap_start or ap_done_reg)
begin
    ap_sig_bdd_96 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end
assign exitcond1_fu_310_p2 = (j_reg_225 == ap_const_lv4_8? 1'b1: 1'b0);
assign grp_fu_237_p0 = tmp_4_reg_397;
assign grp_fu_237_p1 = ap_const_lv32_0;
assign grp_fu_242_p0 = temp_2_reg_412;
assign grp_fu_242_p1 = tmp_4_1_reg_417;
assign grp_fu_246_p0 = temp_2_1_reg_432;
assign grp_fu_246_p1 = tmp_4_2_reg_437;
assign grp_fu_250_p0 = temp_2_2_reg_452;
assign grp_fu_250_p1 = tmp_4_3_reg_457;
assign grp_fu_254_p0 = temp_2_3_reg_472;
assign grp_fu_254_p1 = tmp_4_4_reg_477;
assign grp_fu_258_p0 = temp_2_4_reg_512;
assign grp_fu_258_p1 = tmp_4_5_reg_517;
assign grp_fu_262_p0 = temp_2_5_reg_532;
assign grp_fu_262_p1 = ap_reg_ppstg_tmp_4_6_reg_522_pp0_it34;
assign grp_fu_266_p0 = temp_2_6_reg_537;
assign grp_fu_266_p1 = ap_reg_ppstg_tmp_4_7_reg_527_pp0_it39;
assign grp_fu_270_p0 = B_0_q0;
assign grp_fu_270_p1 = p_read;
assign grp_fu_275_p0 = B_1_q0;
assign grp_fu_275_p1 = p_read1;
assign grp_fu_280_p0 = B_2_q0;
assign grp_fu_280_p1 = p_read2;
assign grp_fu_285_p0 = B_3_q0;
assign grp_fu_285_p1 = p_read3;
assign grp_fu_290_p0 = B_4_q0;
assign grp_fu_290_p1 = p_read4;
assign grp_fu_295_p0 = B_5_q0;
assign grp_fu_295_p1 = p_read5;
assign grp_fu_300_p0 = B_6_q0;
assign grp_fu_300_p1 = p_read6;
assign grp_fu_305_p0 = B_7_q0;
assign grp_fu_305_p1 = p_read7;
assign j_1_fu_316_p2 = (j_reg_225 + ap_const_lv4_1);
assign tmp_s_fu_322_p1 = j_reg_225;
always @ (posedge ap_clk)
begin
    tmp_s_reg_376[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it1[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it2[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it3[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it4[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it5[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it6[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it7[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it8[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it9[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it10[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it11[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it12[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it13[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it14[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it15[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it16[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it17[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it18[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it19[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it20[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it21[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it22[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it23[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_s_reg_376_pp0_it24[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end



endmodule //DCT_MAT_Multiply2_Loop_Col_proc2

