// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "DCT.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic DCT::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic DCT::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<32> DCT::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool DCT::ap_true = true;

DCT::DCT(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Xbuff_U = new DCT_Xbuff("Xbuff_U");
    Xbuff_U->clk(ap_clk);
    Xbuff_U->reset(ap_rst);
    Xbuff_U->i_address0(Xbuff_i_address0);
    Xbuff_U->i_ce0(Xbuff_i_ce0);
    Xbuff_U->i_we0(Xbuff_i_we0);
    Xbuff_U->i_d0(Xbuff_i_d0);
    Xbuff_U->i_q0(Xbuff_i_q0);
    Xbuff_U->t_address0(Xbuff_t_address0);
    Xbuff_U->t_ce0(Xbuff_t_ce0);
    Xbuff_U->t_we0(Xbuff_t_we0);
    Xbuff_U->t_d0(Xbuff_t_d0);
    Xbuff_U->t_q0(Xbuff_t_q0);
    Xbuff_U->i_ce(Xbuff_U_ap_dummy_ce);
    Xbuff_U->t_ce(Xbuff_U_ap_dummy_ce);
    Xbuff_U->i_full_n(Xbuff_i_full_n);
    Xbuff_U->i_write(Xbuff_i_write);
    Xbuff_U->t_empty_n(Xbuff_t_empty_n);
    Xbuff_U->t_read(Xbuff_t_read);
    Xmat_U = new DCT_Xmat("Xmat_U");
    Xmat_U->clk(ap_clk);
    Xmat_U->reset(ap_rst);
    Xmat_U->i_address0(Xmat_i_address0);
    Xmat_U->i_ce0(Xmat_i_ce0);
    Xmat_U->i_we0(Xmat_i_we0);
    Xmat_U->i_d0(Xmat_i_d0);
    Xmat_U->i_q0(Xmat_i_q0);
    Xmat_U->t_address0(Xmat_t_address0);
    Xmat_U->t_ce0(Xmat_t_ce0);
    Xmat_U->t_we0(Xmat_t_we0);
    Xmat_U->t_d0(Xmat_t_d0);
    Xmat_U->t_q0(Xmat_t_q0);
    Xmat_U->i_ce(Xmat_U_ap_dummy_ce);
    Xmat_U->t_ce(Xmat_U_ap_dummy_ce);
    Xmat_U->i_full_n(Xmat_i_full_n);
    Xmat_U->i_write(Xmat_i_write);
    Xmat_U->t_empty_n(Xmat_t_empty_n);
    Xmat_U->t_read(Xmat_t_read);
    Ymat_U = new DCT_Xmat("Ymat_U");
    Ymat_U->clk(ap_clk);
    Ymat_U->reset(ap_rst);
    Ymat_U->i_address0(Ymat_i_address0);
    Ymat_U->i_ce0(Ymat_i_ce0);
    Ymat_U->i_we0(Ymat_i_we0);
    Ymat_U->i_d0(Ymat_i_d0);
    Ymat_U->i_q0(Ymat_i_q0);
    Ymat_U->t_address0(Ymat_t_address0);
    Ymat_U->t_ce0(Ymat_t_ce0);
    Ymat_U->t_we0(Ymat_t_we0);
    Ymat_U->t_d0(Ymat_t_d0);
    Ymat_U->t_q0(Ymat_t_q0);
    Ymat_U->i_ce(Ymat_U_ap_dummy_ce);
    Ymat_U->t_ce(Ymat_U_ap_dummy_ce);
    Ymat_U->i_full_n(Ymat_i_full_n);
    Ymat_U->i_write(Ymat_i_write);
    Ymat_U->t_empty_n(Ymat_t_empty_n);
    Ymat_U->t_read(Ymat_t_read);
    DCT_Loop_1_proc_U0 = new DCT_Loop_1_proc("DCT_Loop_1_proc_U0");
    DCT_Loop_1_proc_U0->ap_clk(ap_clk);
    DCT_Loop_1_proc_U0->ap_rst(ap_rst);
    DCT_Loop_1_proc_U0->ap_start(DCT_Loop_1_proc_U0_ap_start);
    DCT_Loop_1_proc_U0->ap_done(DCT_Loop_1_proc_U0_ap_done);
    DCT_Loop_1_proc_U0->ap_continue(DCT_Loop_1_proc_U0_ap_continue);
    DCT_Loop_1_proc_U0->ap_idle(DCT_Loop_1_proc_U0_ap_idle);
    DCT_Loop_1_proc_U0->ap_ready(DCT_Loop_1_proc_U0_ap_ready);
    DCT_Loop_1_proc_U0->X_dout(DCT_Loop_1_proc_U0_X_dout);
    DCT_Loop_1_proc_U0->X_empty_n(DCT_Loop_1_proc_U0_X_empty_n);
    DCT_Loop_1_proc_U0->X_read(DCT_Loop_1_proc_U0_X_read);
    DCT_Loop_1_proc_U0->Xbuff_address0(DCT_Loop_1_proc_U0_Xbuff_address0);
    DCT_Loop_1_proc_U0->Xbuff_ce0(DCT_Loop_1_proc_U0_Xbuff_ce0);
    DCT_Loop_1_proc_U0->Xbuff_we0(DCT_Loop_1_proc_U0_Xbuff_we0);
    DCT_Loop_1_proc_U0->Xbuff_d0(DCT_Loop_1_proc_U0_Xbuff_d0);
    DCT_Loop_1_proc_U0->ap_return_0(DCT_Loop_1_proc_U0_ap_return_0);
    DCT_Loop_1_proc_U0->ap_return_1(DCT_Loop_1_proc_U0_ap_return_1);
    DCT_Loop_2_proc_U0 = new DCT_Loop_2_proc("DCT_Loop_2_proc_U0");
    DCT_Loop_2_proc_U0->ap_clk(ap_clk);
    DCT_Loop_2_proc_U0->ap_rst(ap_rst);
    DCT_Loop_2_proc_U0->ap_start(DCT_Loop_2_proc_U0_ap_start);
    DCT_Loop_2_proc_U0->ap_done(DCT_Loop_2_proc_U0_ap_done);
    DCT_Loop_2_proc_U0->ap_continue(DCT_Loop_2_proc_U0_ap_continue);
    DCT_Loop_2_proc_U0->ap_idle(DCT_Loop_2_proc_U0_ap_idle);
    DCT_Loop_2_proc_U0->ap_ready(DCT_Loop_2_proc_U0_ap_ready);
    DCT_Loop_2_proc_U0->Xbuff_address0(DCT_Loop_2_proc_U0_Xbuff_address0);
    DCT_Loop_2_proc_U0->Xbuff_ce0(DCT_Loop_2_proc_U0_Xbuff_ce0);
    DCT_Loop_2_proc_U0->Xbuff_q0(DCT_Loop_2_proc_U0_Xbuff_q0);
    DCT_Loop_2_proc_U0->Xmat_address0(DCT_Loop_2_proc_U0_Xmat_address0);
    DCT_Loop_2_proc_U0->Xmat_ce0(DCT_Loop_2_proc_U0_Xmat_ce0);
    DCT_Loop_2_proc_U0->Xmat_we0(DCT_Loop_2_proc_U0_Xmat_we0);
    DCT_Loop_2_proc_U0->Xmat_d0(DCT_Loop_2_proc_U0_Xmat_d0);
    DCT_Block_proc1_U0 = new DCT_Block_proc1("DCT_Block_proc1_U0");
    DCT_Block_proc1_U0->ap_clk(ap_clk);
    DCT_Block_proc1_U0->ap_rst(ap_rst);
    DCT_Block_proc1_U0->ap_start(DCT_Block_proc1_U0_ap_start);
    DCT_Block_proc1_U0->ap_done(DCT_Block_proc1_U0_ap_done);
    DCT_Block_proc1_U0->ap_continue(DCT_Block_proc1_U0_ap_continue);
    DCT_Block_proc1_U0->ap_idle(DCT_Block_proc1_U0_ap_idle);
    DCT_Block_proc1_U0->ap_ready(DCT_Block_proc1_U0_ap_ready);
    DCT_Block_proc1_U0->p_read(DCT_Block_proc1_U0_p_read);
    DCT_Block_proc1_U0->Xmat_address0(DCT_Block_proc1_U0_Xmat_address0);
    DCT_Block_proc1_U0->Xmat_ce0(DCT_Block_proc1_U0_Xmat_ce0);
    DCT_Block_proc1_U0->Xmat_q0(DCT_Block_proc1_U0_Xmat_q0);
    DCT_Block_proc1_U0->Ymat_address0(DCT_Block_proc1_U0_Ymat_address0);
    DCT_Block_proc1_U0->Ymat_ce0(DCT_Block_proc1_U0_Ymat_ce0);
    DCT_Block_proc1_U0->Ymat_we0(DCT_Block_proc1_U0_Ymat_we0);
    DCT_Block_proc1_U0->Ymat_d0(DCT_Block_proc1_U0_Ymat_d0);
    DCT_Loop_3_proc1_U0 = new DCT_Loop_3_proc1("DCT_Loop_3_proc1_U0");
    DCT_Loop_3_proc1_U0->ap_clk(ap_clk);
    DCT_Loop_3_proc1_U0->ap_rst(ap_rst);
    DCT_Loop_3_proc1_U0->ap_start(DCT_Loop_3_proc1_U0_ap_start);
    DCT_Loop_3_proc1_U0->ap_done(DCT_Loop_3_proc1_U0_ap_done);
    DCT_Loop_3_proc1_U0->ap_continue(DCT_Loop_3_proc1_U0_ap_continue);
    DCT_Loop_3_proc1_U0->ap_idle(DCT_Loop_3_proc1_U0_ap_idle);
    DCT_Loop_3_proc1_U0->ap_ready(DCT_Loop_3_proc1_U0_ap_ready);
    DCT_Loop_3_proc1_U0->Y_din(DCT_Loop_3_proc1_U0_Y_din);
    DCT_Loop_3_proc1_U0->Y_full_n(DCT_Loop_3_proc1_U0_Y_full_n);
    DCT_Loop_3_proc1_U0->Y_write(DCT_Loop_3_proc1_U0_Y_write);
    DCT_Loop_3_proc1_U0->p_read(DCT_Loop_3_proc1_U0_p_read);
    DCT_Loop_3_proc1_U0->Ymat_address0(DCT_Loop_3_proc1_U0_Ymat_address0);
    DCT_Loop_3_proc1_U0->Ymat_ce0(DCT_Loop_3_proc1_U0_Ymat_ce0);
    DCT_Loop_3_proc1_U0->Ymat_q0(DCT_Loop_3_proc1_U0_Ymat_q0);
    opt_type_02_loc_loc_loc_channe_U = new FIFO_DCT_opt_type_02_loc_loc_loc_channe("opt_type_02_loc_loc_loc_channe_U");
    opt_type_02_loc_loc_loc_channe_U->clk(ap_clk);
    opt_type_02_loc_loc_loc_channe_U->reset(ap_rst);
    opt_type_02_loc_loc_loc_channe_U->if_read_ce(opt_type_02_loc_loc_loc_channe_U_ap_dummy_ce);
    opt_type_02_loc_loc_loc_channe_U->if_write_ce(opt_type_02_loc_loc_loc_channe_U_ap_dummy_ce);
    opt_type_02_loc_loc_loc_channe_U->if_din(opt_type_02_loc_loc_loc_channe_din);
    opt_type_02_loc_loc_loc_channe_U->if_full_n(opt_type_02_loc_loc_loc_channe_full_n);
    opt_type_02_loc_loc_loc_channe_U->if_write(opt_type_02_loc_loc_loc_channe_write);
    opt_type_02_loc_loc_loc_channe_U->if_dout(opt_type_02_loc_loc_loc_channe_dout);
    opt_type_02_loc_loc_loc_channe_U->if_empty_n(opt_type_02_loc_loc_loc_channe_empty_n);
    opt_type_02_loc_loc_loc_channe_U->if_read(opt_type_02_loc_loc_loc_channe_read);
    opt_type_02_loc_loc_loc_channe_1_U = new FIFO_DCT_opt_type_02_loc_loc_loc_channe_1("opt_type_02_loc_loc_loc_channe_1_U");
    opt_type_02_loc_loc_loc_channe_1_U->clk(ap_clk);
    opt_type_02_loc_loc_loc_channe_1_U->reset(ap_rst);
    opt_type_02_loc_loc_loc_channe_1_U->if_read_ce(opt_type_02_loc_loc_loc_channe_1_U_ap_dummy_ce);
    opt_type_02_loc_loc_loc_channe_1_U->if_write_ce(opt_type_02_loc_loc_loc_channe_1_U_ap_dummy_ce);
    opt_type_02_loc_loc_loc_channe_1_U->if_din(opt_type_02_loc_loc_loc_channe_1_din);
    opt_type_02_loc_loc_loc_channe_1_U->if_full_n(opt_type_02_loc_loc_loc_channe_1_full_n);
    opt_type_02_loc_loc_loc_channe_1_U->if_write(opt_type_02_loc_loc_loc_channe_1_write);
    opt_type_02_loc_loc_loc_channe_1_U->if_dout(opt_type_02_loc_loc_loc_channe_1_dout);
    opt_type_02_loc_loc_loc_channe_1_U->if_empty_n(opt_type_02_loc_loc_loc_channe_1_empty_n);
    opt_type_02_loc_loc_loc_channe_1_U->if_read(opt_type_02_loc_loc_loc_channe_1_read);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_DCT_Block_proc1_U0_Xmat_q0);
    sensitive << ( Xmat_t_q0 );

    SC_METHOD(thread_DCT_Block_proc1_U0_Ymat_pipo_status);
    sensitive << ( Ymat_i_full_n );

    SC_METHOD(thread_DCT_Block_proc1_U0_ap_continue);
    sensitive << ( DCT_Block_proc1_U0_Ymat_pipo_status );

    SC_METHOD(thread_DCT_Block_proc1_U0_ap_start);
    sensitive << ( Xmat_t_empty_n );
    sensitive << ( opt_type_02_loc_loc_loc_channe_empty_n );

    SC_METHOD(thread_DCT_Block_proc1_U0_p_read);
    sensitive << ( opt_type_02_loc_loc_loc_channe_dout );

    SC_METHOD(thread_DCT_Loop_1_proc_U0_X_dout);
    sensitive << ( X_dout );

    SC_METHOD(thread_DCT_Loop_1_proc_U0_X_empty_n);
    sensitive << ( X_empty_n );

    SC_METHOD(thread_DCT_Loop_1_proc_U0_Xbuff_pipo_status);
    sensitive << ( Xbuff_i_full_n );

    SC_METHOD(thread_DCT_Loop_1_proc_U0_ap_continue);
    sensitive << ( ap_sig_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status );
    sensitive << ( ap_sig_ready_opt_type_02_loc_loc_loc_channe_full_n );
    sensitive << ( ap_sig_ready_opt_type_02_loc_loc_loc_channe_1_full_n );

    SC_METHOD(thread_DCT_Loop_2_proc_U0_Xbuff_q0);
    sensitive << ( Xbuff_t_q0 );

    SC_METHOD(thread_DCT_Loop_2_proc_U0_Xmat_pipo_status);
    sensitive << ( Xmat_i_full_n );

    SC_METHOD(thread_DCT_Loop_2_proc_U0_ap_continue);
    sensitive << ( DCT_Loop_2_proc_U0_Xmat_pipo_status );

    SC_METHOD(thread_DCT_Loop_2_proc_U0_ap_start);
    sensitive << ( Xbuff_t_empty_n );

    SC_METHOD(thread_DCT_Loop_3_proc1_U0_Y_full_n);
    sensitive << ( Y_full_n );

    SC_METHOD(thread_DCT_Loop_3_proc1_U0_Ymat_q0);
    sensitive << ( Ymat_t_q0 );

    SC_METHOD(thread_DCT_Loop_3_proc1_U0_ap_continue);

    SC_METHOD(thread_DCT_Loop_3_proc1_U0_ap_start);
    sensitive << ( Ymat_t_empty_n );
    sensitive << ( opt_type_02_loc_loc_loc_channe_1_empty_n );

    SC_METHOD(thread_DCT_Loop_3_proc1_U0_p_read);
    sensitive << ( opt_type_02_loc_loc_loc_channe_1_dout );

    SC_METHOD(thread_X_read);
    sensitive << ( DCT_Loop_1_proc_U0_X_read );

    SC_METHOD(thread_Xbuff_U_ap_dummy_ce);

    SC_METHOD(thread_Xbuff_i_address0);
    sensitive << ( DCT_Loop_1_proc_U0_Xbuff_address0 );

    SC_METHOD(thread_Xbuff_i_ce0);
    sensitive << ( DCT_Loop_1_proc_U0_Xbuff_ce0 );

    SC_METHOD(thread_Xbuff_i_d0);
    sensitive << ( DCT_Loop_1_proc_U0_Xbuff_d0 );

    SC_METHOD(thread_Xbuff_i_we0);
    sensitive << ( DCT_Loop_1_proc_U0_Xbuff_we0 );

    SC_METHOD(thread_Xbuff_i_write);
    sensitive << ( ap_chn_write_DCT_Loop_1_proc_U0_Xbuff );

    SC_METHOD(thread_Xbuff_t_address0);
    sensitive << ( DCT_Loop_2_proc_U0_Xbuff_address0 );

    SC_METHOD(thread_Xbuff_t_ce0);
    sensitive << ( DCT_Loop_2_proc_U0_Xbuff_ce0 );

    SC_METHOD(thread_Xbuff_t_d0);

    SC_METHOD(thread_Xbuff_t_read);
    sensitive << ( DCT_Loop_2_proc_U0_ap_ready );

    SC_METHOD(thread_Xbuff_t_we0);

    SC_METHOD(thread_Xmat_U_ap_dummy_ce);

    SC_METHOD(thread_Xmat_i_address0);
    sensitive << ( DCT_Loop_2_proc_U0_Xmat_address0 );

    SC_METHOD(thread_Xmat_i_ce0);
    sensitive << ( DCT_Loop_2_proc_U0_Xmat_ce0 );

    SC_METHOD(thread_Xmat_i_d0);
    sensitive << ( DCT_Loop_2_proc_U0_Xmat_d0 );

    SC_METHOD(thread_Xmat_i_we0);
    sensitive << ( DCT_Loop_2_proc_U0_Xmat_we0 );

    SC_METHOD(thread_Xmat_i_write);
    sensitive << ( DCT_Loop_2_proc_U0_ap_done );

    SC_METHOD(thread_Xmat_t_address0);
    sensitive << ( DCT_Block_proc1_U0_Xmat_address0 );

    SC_METHOD(thread_Xmat_t_ce0);
    sensitive << ( DCT_Block_proc1_U0_Xmat_ce0 );

    SC_METHOD(thread_Xmat_t_d0);

    SC_METHOD(thread_Xmat_t_read);
    sensitive << ( DCT_Block_proc1_U0_ap_ready );

    SC_METHOD(thread_Xmat_t_we0);

    SC_METHOD(thread_Y_din);
    sensitive << ( DCT_Loop_3_proc1_U0_Y_din );

    SC_METHOD(thread_Y_write);
    sensitive << ( DCT_Loop_3_proc1_U0_Y_write );

    SC_METHOD(thread_Ymat_U_ap_dummy_ce);

    SC_METHOD(thread_Ymat_i_address0);
    sensitive << ( DCT_Block_proc1_U0_Ymat_address0 );

    SC_METHOD(thread_Ymat_i_ce0);
    sensitive << ( DCT_Block_proc1_U0_Ymat_ce0 );

    SC_METHOD(thread_Ymat_i_d0);
    sensitive << ( DCT_Block_proc1_U0_Ymat_d0 );

    SC_METHOD(thread_Ymat_i_we0);
    sensitive << ( DCT_Block_proc1_U0_Ymat_we0 );

    SC_METHOD(thread_Ymat_i_write);
    sensitive << ( DCT_Block_proc1_U0_ap_done );

    SC_METHOD(thread_Ymat_t_address0);
    sensitive << ( DCT_Loop_3_proc1_U0_Ymat_address0 );

    SC_METHOD(thread_Ymat_t_ce0);
    sensitive << ( DCT_Loop_3_proc1_U0_Ymat_ce0 );

    SC_METHOD(thread_Ymat_t_d0);

    SC_METHOD(thread_Ymat_t_read);
    sensitive << ( DCT_Loop_3_proc1_U0_ap_ready );

    SC_METHOD(thread_Ymat_t_we0);

    SC_METHOD(thread_ap_chn_write_DCT_Block_proc1_U0_Ymat);
    sensitive << ( DCT_Block_proc1_U0_ap_done );

    SC_METHOD(thread_ap_chn_write_DCT_Loop_1_proc_U0_Xbuff);
    sensitive << ( DCT_Loop_1_proc_U0_ap_done );
    sensitive << ( ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status );

    SC_METHOD(thread_ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe);
    sensitive << ( DCT_Loop_1_proc_U0_ap_done );
    sensitive << ( ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n );

    SC_METHOD(thread_ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe_1);
    sensitive << ( DCT_Loop_1_proc_U0_ap_done );
    sensitive << ( ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n );

    SC_METHOD(thread_ap_chn_write_DCT_Loop_2_proc_U0_Xmat);
    sensitive << ( DCT_Loop_2_proc_U0_ap_done );

    SC_METHOD(thread_ap_sig_hs_continue);

    SC_METHOD(thread_ap_sig_hs_done);
    sensitive << ( DCT_Loop_3_proc1_U0_ap_done );

    SC_METHOD(thread_ap_sig_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status);
    sensitive << ( DCT_Loop_1_proc_U0_Xbuff_pipo_status );
    sensitive << ( ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status );

    SC_METHOD(thread_ap_sig_ready_opt_type_02_loc_loc_loc_channe_1_full_n);
    sensitive << ( opt_type_02_loc_loc_loc_channe_1_full_n );
    sensitive << ( ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n );

    SC_METHOD(thread_ap_sig_ready_opt_type_02_loc_loc_loc_channe_full_n);
    sensitive << ( opt_type_02_loc_loc_loc_channe_full_n );
    sensitive << ( ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n );

    SC_METHOD(thread_opt_type_02_loc_loc_loc_channe_1_U_ap_dummy_ce);

    SC_METHOD(thread_opt_type_02_loc_loc_loc_channe_1_din);
    sensitive << ( DCT_Loop_1_proc_U0_ap_return_1 );

    SC_METHOD(thread_opt_type_02_loc_loc_loc_channe_1_read);
    sensitive << ( DCT_Loop_3_proc1_U0_ap_ready );

    SC_METHOD(thread_opt_type_02_loc_loc_loc_channe_1_write);
    sensitive << ( ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe_1 );

    SC_METHOD(thread_opt_type_02_loc_loc_loc_channe_U_ap_dummy_ce);

    SC_METHOD(thread_opt_type_02_loc_loc_loc_channe_din);
    sensitive << ( DCT_Loop_1_proc_U0_ap_return_0 );

    SC_METHOD(thread_opt_type_02_loc_loc_loc_channe_read);
    sensitive << ( DCT_Block_proc1_U0_ap_ready );

    SC_METHOD(thread_opt_type_02_loc_loc_loc_channe_write);
    sensitive << ( ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    DCT_Loop_1_proc_U0_ap_start = SC_LOGIC_0;
    ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status = SC_LOGIC_0;
    ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n = SC_LOGIC_0;
    ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "DCT_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, X_dout, "(port)X_dout");
    sc_trace(mVcdFile, X_empty_n, "(port)X_empty_n");
    sc_trace(mVcdFile, X_read, "(port)X_read");
    sc_trace(mVcdFile, Y_din, "(port)Y_din");
    sc_trace(mVcdFile, Y_full_n, "(port)Y_full_n");
    sc_trace(mVcdFile, Y_write, "(port)Y_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, Xbuff_i_address0, "Xbuff_i_address0");
    sc_trace(mVcdFile, Xbuff_i_ce0, "Xbuff_i_ce0");
    sc_trace(mVcdFile, Xbuff_i_we0, "Xbuff_i_we0");
    sc_trace(mVcdFile, Xbuff_i_d0, "Xbuff_i_d0");
    sc_trace(mVcdFile, Xbuff_i_q0, "Xbuff_i_q0");
    sc_trace(mVcdFile, Xbuff_t_address0, "Xbuff_t_address0");
    sc_trace(mVcdFile, Xbuff_t_ce0, "Xbuff_t_ce0");
    sc_trace(mVcdFile, Xbuff_t_we0, "Xbuff_t_we0");
    sc_trace(mVcdFile, Xbuff_t_d0, "Xbuff_t_d0");
    sc_trace(mVcdFile, Xbuff_t_q0, "Xbuff_t_q0");
    sc_trace(mVcdFile, Xbuff_U_ap_dummy_ce, "Xbuff_U_ap_dummy_ce");
    sc_trace(mVcdFile, Xmat_i_address0, "Xmat_i_address0");
    sc_trace(mVcdFile, Xmat_i_ce0, "Xmat_i_ce0");
    sc_trace(mVcdFile, Xmat_i_we0, "Xmat_i_we0");
    sc_trace(mVcdFile, Xmat_i_d0, "Xmat_i_d0");
    sc_trace(mVcdFile, Xmat_i_q0, "Xmat_i_q0");
    sc_trace(mVcdFile, Xmat_t_address0, "Xmat_t_address0");
    sc_trace(mVcdFile, Xmat_t_ce0, "Xmat_t_ce0");
    sc_trace(mVcdFile, Xmat_t_we0, "Xmat_t_we0");
    sc_trace(mVcdFile, Xmat_t_d0, "Xmat_t_d0");
    sc_trace(mVcdFile, Xmat_t_q0, "Xmat_t_q0");
    sc_trace(mVcdFile, Xmat_U_ap_dummy_ce, "Xmat_U_ap_dummy_ce");
    sc_trace(mVcdFile, Ymat_i_address0, "Ymat_i_address0");
    sc_trace(mVcdFile, Ymat_i_ce0, "Ymat_i_ce0");
    sc_trace(mVcdFile, Ymat_i_we0, "Ymat_i_we0");
    sc_trace(mVcdFile, Ymat_i_d0, "Ymat_i_d0");
    sc_trace(mVcdFile, Ymat_i_q0, "Ymat_i_q0");
    sc_trace(mVcdFile, Ymat_t_address0, "Ymat_t_address0");
    sc_trace(mVcdFile, Ymat_t_ce0, "Ymat_t_ce0");
    sc_trace(mVcdFile, Ymat_t_we0, "Ymat_t_we0");
    sc_trace(mVcdFile, Ymat_t_d0, "Ymat_t_d0");
    sc_trace(mVcdFile, Ymat_t_q0, "Ymat_t_q0");
    sc_trace(mVcdFile, Ymat_U_ap_dummy_ce, "Ymat_U_ap_dummy_ce");
    sc_trace(mVcdFile, DCT_Loop_1_proc_U0_ap_start, "DCT_Loop_1_proc_U0_ap_start");
    sc_trace(mVcdFile, DCT_Loop_1_proc_U0_ap_done, "DCT_Loop_1_proc_U0_ap_done");
    sc_trace(mVcdFile, DCT_Loop_1_proc_U0_ap_continue, "DCT_Loop_1_proc_U0_ap_continue");
    sc_trace(mVcdFile, DCT_Loop_1_proc_U0_ap_idle, "DCT_Loop_1_proc_U0_ap_idle");
    sc_trace(mVcdFile, DCT_Loop_1_proc_U0_ap_ready, "DCT_Loop_1_proc_U0_ap_ready");
    sc_trace(mVcdFile, DCT_Loop_1_proc_U0_X_dout, "DCT_Loop_1_proc_U0_X_dout");
    sc_trace(mVcdFile, DCT_Loop_1_proc_U0_X_empty_n, "DCT_Loop_1_proc_U0_X_empty_n");
    sc_trace(mVcdFile, DCT_Loop_1_proc_U0_X_read, "DCT_Loop_1_proc_U0_X_read");
    sc_trace(mVcdFile, DCT_Loop_1_proc_U0_Xbuff_address0, "DCT_Loop_1_proc_U0_Xbuff_address0");
    sc_trace(mVcdFile, DCT_Loop_1_proc_U0_Xbuff_ce0, "DCT_Loop_1_proc_U0_Xbuff_ce0");
    sc_trace(mVcdFile, DCT_Loop_1_proc_U0_Xbuff_we0, "DCT_Loop_1_proc_U0_Xbuff_we0");
    sc_trace(mVcdFile, DCT_Loop_1_proc_U0_Xbuff_d0, "DCT_Loop_1_proc_U0_Xbuff_d0");
    sc_trace(mVcdFile, DCT_Loop_1_proc_U0_ap_return_0, "DCT_Loop_1_proc_U0_ap_return_0");
    sc_trace(mVcdFile, DCT_Loop_1_proc_U0_ap_return_1, "DCT_Loop_1_proc_U0_ap_return_1");
    sc_trace(mVcdFile, ap_chn_write_DCT_Loop_1_proc_U0_Xbuff, "ap_chn_write_DCT_Loop_1_proc_U0_Xbuff");
    sc_trace(mVcdFile, DCT_Loop_1_proc_U0_Xbuff_pipo_status, "DCT_Loop_1_proc_U0_Xbuff_pipo_status");
    sc_trace(mVcdFile, ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status, "ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status");
    sc_trace(mVcdFile, ap_sig_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status, "ap_sig_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status");
    sc_trace(mVcdFile, ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe, "ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe");
    sc_trace(mVcdFile, opt_type_02_loc_loc_loc_channe_full_n, "opt_type_02_loc_loc_loc_channe_full_n");
    sc_trace(mVcdFile, ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n, "ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n");
    sc_trace(mVcdFile, ap_sig_ready_opt_type_02_loc_loc_loc_channe_full_n, "ap_sig_ready_opt_type_02_loc_loc_loc_channe_full_n");
    sc_trace(mVcdFile, ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe_1, "ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe_1");
    sc_trace(mVcdFile, opt_type_02_loc_loc_loc_channe_1_full_n, "opt_type_02_loc_loc_loc_channe_1_full_n");
    sc_trace(mVcdFile, ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n, "ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n");
    sc_trace(mVcdFile, ap_sig_ready_opt_type_02_loc_loc_loc_channe_1_full_n, "ap_sig_ready_opt_type_02_loc_loc_loc_channe_1_full_n");
    sc_trace(mVcdFile, DCT_Loop_2_proc_U0_ap_start, "DCT_Loop_2_proc_U0_ap_start");
    sc_trace(mVcdFile, DCT_Loop_2_proc_U0_ap_done, "DCT_Loop_2_proc_U0_ap_done");
    sc_trace(mVcdFile, DCT_Loop_2_proc_U0_ap_continue, "DCT_Loop_2_proc_U0_ap_continue");
    sc_trace(mVcdFile, DCT_Loop_2_proc_U0_ap_idle, "DCT_Loop_2_proc_U0_ap_idle");
    sc_trace(mVcdFile, DCT_Loop_2_proc_U0_ap_ready, "DCT_Loop_2_proc_U0_ap_ready");
    sc_trace(mVcdFile, DCT_Loop_2_proc_U0_Xbuff_address0, "DCT_Loop_2_proc_U0_Xbuff_address0");
    sc_trace(mVcdFile, DCT_Loop_2_proc_U0_Xbuff_ce0, "DCT_Loop_2_proc_U0_Xbuff_ce0");
    sc_trace(mVcdFile, DCT_Loop_2_proc_U0_Xbuff_q0, "DCT_Loop_2_proc_U0_Xbuff_q0");
    sc_trace(mVcdFile, DCT_Loop_2_proc_U0_Xmat_address0, "DCT_Loop_2_proc_U0_Xmat_address0");
    sc_trace(mVcdFile, DCT_Loop_2_proc_U0_Xmat_ce0, "DCT_Loop_2_proc_U0_Xmat_ce0");
    sc_trace(mVcdFile, DCT_Loop_2_proc_U0_Xmat_we0, "DCT_Loop_2_proc_U0_Xmat_we0");
    sc_trace(mVcdFile, DCT_Loop_2_proc_U0_Xmat_d0, "DCT_Loop_2_proc_U0_Xmat_d0");
    sc_trace(mVcdFile, ap_chn_write_DCT_Loop_2_proc_U0_Xmat, "ap_chn_write_DCT_Loop_2_proc_U0_Xmat");
    sc_trace(mVcdFile, DCT_Loop_2_proc_U0_Xmat_pipo_status, "DCT_Loop_2_proc_U0_Xmat_pipo_status");
    sc_trace(mVcdFile, DCT_Block_proc1_U0_ap_start, "DCT_Block_proc1_U0_ap_start");
    sc_trace(mVcdFile, DCT_Block_proc1_U0_ap_done, "DCT_Block_proc1_U0_ap_done");
    sc_trace(mVcdFile, DCT_Block_proc1_U0_ap_continue, "DCT_Block_proc1_U0_ap_continue");
    sc_trace(mVcdFile, DCT_Block_proc1_U0_ap_idle, "DCT_Block_proc1_U0_ap_idle");
    sc_trace(mVcdFile, DCT_Block_proc1_U0_ap_ready, "DCT_Block_proc1_U0_ap_ready");
    sc_trace(mVcdFile, DCT_Block_proc1_U0_p_read, "DCT_Block_proc1_U0_p_read");
    sc_trace(mVcdFile, DCT_Block_proc1_U0_Xmat_address0, "DCT_Block_proc1_U0_Xmat_address0");
    sc_trace(mVcdFile, DCT_Block_proc1_U0_Xmat_ce0, "DCT_Block_proc1_U0_Xmat_ce0");
    sc_trace(mVcdFile, DCT_Block_proc1_U0_Xmat_q0, "DCT_Block_proc1_U0_Xmat_q0");
    sc_trace(mVcdFile, DCT_Block_proc1_U0_Ymat_address0, "DCT_Block_proc1_U0_Ymat_address0");
    sc_trace(mVcdFile, DCT_Block_proc1_U0_Ymat_ce0, "DCT_Block_proc1_U0_Ymat_ce0");
    sc_trace(mVcdFile, DCT_Block_proc1_U0_Ymat_we0, "DCT_Block_proc1_U0_Ymat_we0");
    sc_trace(mVcdFile, DCT_Block_proc1_U0_Ymat_d0, "DCT_Block_proc1_U0_Ymat_d0");
    sc_trace(mVcdFile, ap_chn_write_DCT_Block_proc1_U0_Ymat, "ap_chn_write_DCT_Block_proc1_U0_Ymat");
    sc_trace(mVcdFile, DCT_Block_proc1_U0_Ymat_pipo_status, "DCT_Block_proc1_U0_Ymat_pipo_status");
    sc_trace(mVcdFile, DCT_Loop_3_proc1_U0_ap_start, "DCT_Loop_3_proc1_U0_ap_start");
    sc_trace(mVcdFile, DCT_Loop_3_proc1_U0_ap_done, "DCT_Loop_3_proc1_U0_ap_done");
    sc_trace(mVcdFile, DCT_Loop_3_proc1_U0_ap_continue, "DCT_Loop_3_proc1_U0_ap_continue");
    sc_trace(mVcdFile, DCT_Loop_3_proc1_U0_ap_idle, "DCT_Loop_3_proc1_U0_ap_idle");
    sc_trace(mVcdFile, DCT_Loop_3_proc1_U0_ap_ready, "DCT_Loop_3_proc1_U0_ap_ready");
    sc_trace(mVcdFile, DCT_Loop_3_proc1_U0_Y_din, "DCT_Loop_3_proc1_U0_Y_din");
    sc_trace(mVcdFile, DCT_Loop_3_proc1_U0_Y_full_n, "DCT_Loop_3_proc1_U0_Y_full_n");
    sc_trace(mVcdFile, DCT_Loop_3_proc1_U0_Y_write, "DCT_Loop_3_proc1_U0_Y_write");
    sc_trace(mVcdFile, DCT_Loop_3_proc1_U0_p_read, "DCT_Loop_3_proc1_U0_p_read");
    sc_trace(mVcdFile, DCT_Loop_3_proc1_U0_Ymat_address0, "DCT_Loop_3_proc1_U0_Ymat_address0");
    sc_trace(mVcdFile, DCT_Loop_3_proc1_U0_Ymat_ce0, "DCT_Loop_3_proc1_U0_Ymat_ce0");
    sc_trace(mVcdFile, DCT_Loop_3_proc1_U0_Ymat_q0, "DCT_Loop_3_proc1_U0_Ymat_q0");
    sc_trace(mVcdFile, ap_sig_hs_continue, "ap_sig_hs_continue");
    sc_trace(mVcdFile, Xbuff_i_full_n, "Xbuff_i_full_n");
    sc_trace(mVcdFile, Xbuff_i_write, "Xbuff_i_write");
    sc_trace(mVcdFile, Xbuff_t_empty_n, "Xbuff_t_empty_n");
    sc_trace(mVcdFile, Xbuff_t_read, "Xbuff_t_read");
    sc_trace(mVcdFile, Xmat_i_full_n, "Xmat_i_full_n");
    sc_trace(mVcdFile, Xmat_i_write, "Xmat_i_write");
    sc_trace(mVcdFile, Xmat_t_empty_n, "Xmat_t_empty_n");
    sc_trace(mVcdFile, Xmat_t_read, "Xmat_t_read");
    sc_trace(mVcdFile, Ymat_i_full_n, "Ymat_i_full_n");
    sc_trace(mVcdFile, Ymat_i_write, "Ymat_i_write");
    sc_trace(mVcdFile, Ymat_t_empty_n, "Ymat_t_empty_n");
    sc_trace(mVcdFile, Ymat_t_read, "Ymat_t_read");
    sc_trace(mVcdFile, opt_type_02_loc_loc_loc_channe_U_ap_dummy_ce, "opt_type_02_loc_loc_loc_channe_U_ap_dummy_ce");
    sc_trace(mVcdFile, opt_type_02_loc_loc_loc_channe_din, "opt_type_02_loc_loc_loc_channe_din");
    sc_trace(mVcdFile, opt_type_02_loc_loc_loc_channe_write, "opt_type_02_loc_loc_loc_channe_write");
    sc_trace(mVcdFile, opt_type_02_loc_loc_loc_channe_dout, "opt_type_02_loc_loc_loc_channe_dout");
    sc_trace(mVcdFile, opt_type_02_loc_loc_loc_channe_empty_n, "opt_type_02_loc_loc_loc_channe_empty_n");
    sc_trace(mVcdFile, opt_type_02_loc_loc_loc_channe_read, "opt_type_02_loc_loc_loc_channe_read");
    sc_trace(mVcdFile, opt_type_02_loc_loc_loc_channe_1_U_ap_dummy_ce, "opt_type_02_loc_loc_loc_channe_1_U_ap_dummy_ce");
    sc_trace(mVcdFile, opt_type_02_loc_loc_loc_channe_1_din, "opt_type_02_loc_loc_loc_channe_1_din");
    sc_trace(mVcdFile, opt_type_02_loc_loc_loc_channe_1_write, "opt_type_02_loc_loc_loc_channe_1_write");
    sc_trace(mVcdFile, opt_type_02_loc_loc_loc_channe_1_dout, "opt_type_02_loc_loc_loc_channe_1_dout");
    sc_trace(mVcdFile, opt_type_02_loc_loc_loc_channe_1_empty_n, "opt_type_02_loc_loc_loc_channe_1_empty_n");
    sc_trace(mVcdFile, opt_type_02_loc_loc_loc_channe_1_read, "opt_type_02_loc_loc_loc_channe_1_read");
    sc_trace(mVcdFile, ap_CS, "ap_CS");
    sc_trace(mVcdFile, ap_sig_hs_done, "ap_sig_hs_done");
#endif

    }
    mHdltvinHandle.open("DCT.hdltvin.dat");
    mHdltvoutHandle.open("DCT.hdltvout.dat");
}

DCT::~DCT() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete Xbuff_U;
    delete Xmat_U;
    delete Ymat_U;
    delete DCT_Loop_1_proc_U0;
    delete DCT_Loop_2_proc_U0;
    delete DCT_Block_proc1_U0;
    delete DCT_Loop_3_proc1_U0;
    delete opt_type_02_loc_loc_loc_channe_U;
    delete opt_type_02_loc_loc_loc_channe_1_U;
}

void DCT::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        DCT_Loop_1_proc_U0_ap_start = ap_const_logic_0;
    } else {
        DCT_Loop_1_proc_U0_ap_start = ap_const_logic_1;
    }
    ap_CS = ap_const_logic_0;
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, DCT_Loop_1_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, DCT_Loop_1_proc_U0_ap_continue.read()))) {
            ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, DCT_Loop_1_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, DCT_Loop_1_proc_U0_Xbuff_pipo_status.read()))) {
            ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, DCT_Loop_1_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, DCT_Loop_1_proc_U0_ap_continue.read()))) {
            ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, DCT_Loop_1_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, opt_type_02_loc_loc_loc_channe_1_full_n.read()))) {
            ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, DCT_Loop_1_proc_U0_ap_done.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, DCT_Loop_1_proc_U0_ap_continue.read()))) {
            ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, DCT_Loop_1_proc_U0_ap_done.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, opt_type_02_loc_loc_loc_channe_full_n.read()))) {
            ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n = ap_const_logic_1;
        }
    }
}

void DCT::thread_DCT_Block_proc1_U0_Xmat_q0() {
    DCT_Block_proc1_U0_Xmat_q0 = Xmat_t_q0.read();
}

void DCT::thread_DCT_Block_proc1_U0_Ymat_pipo_status() {
    DCT_Block_proc1_U0_Ymat_pipo_status = Ymat_i_full_n.read();
}

void DCT::thread_DCT_Block_proc1_U0_ap_continue() {
    DCT_Block_proc1_U0_ap_continue = DCT_Block_proc1_U0_Ymat_pipo_status.read();
}

void DCT::thread_DCT_Block_proc1_U0_ap_start() {
    DCT_Block_proc1_U0_ap_start = (Xmat_t_empty_n.read() & opt_type_02_loc_loc_loc_channe_empty_n.read());
}

void DCT::thread_DCT_Block_proc1_U0_p_read() {
    DCT_Block_proc1_U0_p_read = opt_type_02_loc_loc_loc_channe_dout.read();
}

void DCT::thread_DCT_Loop_1_proc_U0_X_dout() {
    DCT_Loop_1_proc_U0_X_dout = X_dout.read();
}

void DCT::thread_DCT_Loop_1_proc_U0_X_empty_n() {
    DCT_Loop_1_proc_U0_X_empty_n = X_empty_n.read();
}

void DCT::thread_DCT_Loop_1_proc_U0_Xbuff_pipo_status() {
    DCT_Loop_1_proc_U0_Xbuff_pipo_status = Xbuff_i_full_n.read();
}

void DCT::thread_DCT_Loop_1_proc_U0_ap_continue() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ready_opt_type_02_loc_loc_loc_channe_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_ready_opt_type_02_loc_loc_loc_channe_1_full_n.read()))) {
        DCT_Loop_1_proc_U0_ap_continue = ap_const_logic_1;
    } else {
        DCT_Loop_1_proc_U0_ap_continue = ap_const_logic_0;
    }
}

void DCT::thread_DCT_Loop_2_proc_U0_Xbuff_q0() {
    DCT_Loop_2_proc_U0_Xbuff_q0 = Xbuff_t_q0.read();
}

void DCT::thread_DCT_Loop_2_proc_U0_Xmat_pipo_status() {
    DCT_Loop_2_proc_U0_Xmat_pipo_status = Xmat_i_full_n.read();
}

void DCT::thread_DCT_Loop_2_proc_U0_ap_continue() {
    DCT_Loop_2_proc_U0_ap_continue = DCT_Loop_2_proc_U0_Xmat_pipo_status.read();
}

void DCT::thread_DCT_Loop_2_proc_U0_ap_start() {
    DCT_Loop_2_proc_U0_ap_start = Xbuff_t_empty_n.read();
}

void DCT::thread_DCT_Loop_3_proc1_U0_Y_full_n() {
    DCT_Loop_3_proc1_U0_Y_full_n = Y_full_n.read();
}

void DCT::thread_DCT_Loop_3_proc1_U0_Ymat_q0() {
    DCT_Loop_3_proc1_U0_Ymat_q0 = Ymat_t_q0.read();
}

void DCT::thread_DCT_Loop_3_proc1_U0_ap_continue() {
    DCT_Loop_3_proc1_U0_ap_continue = ap_const_logic_1;
}

void DCT::thread_DCT_Loop_3_proc1_U0_ap_start() {
    DCT_Loop_3_proc1_U0_ap_start = (Ymat_t_empty_n.read() & opt_type_02_loc_loc_loc_channe_1_empty_n.read());
}

void DCT::thread_DCT_Loop_3_proc1_U0_p_read() {
    DCT_Loop_3_proc1_U0_p_read = opt_type_02_loc_loc_loc_channe_1_dout.read();
}

void DCT::thread_X_read() {
    X_read = DCT_Loop_1_proc_U0_X_read.read();
}

void DCT::thread_Xbuff_U_ap_dummy_ce() {
    Xbuff_U_ap_dummy_ce = ap_const_logic_1;
}

void DCT::thread_Xbuff_i_address0() {
    Xbuff_i_address0 = DCT_Loop_1_proc_U0_Xbuff_address0.read();
}

void DCT::thread_Xbuff_i_ce0() {
    Xbuff_i_ce0 = DCT_Loop_1_proc_U0_Xbuff_ce0.read();
}

void DCT::thread_Xbuff_i_d0() {
    Xbuff_i_d0 = DCT_Loop_1_proc_U0_Xbuff_d0.read();
}

void DCT::thread_Xbuff_i_we0() {
    Xbuff_i_we0 = DCT_Loop_1_proc_U0_Xbuff_we0.read();
}

void DCT::thread_Xbuff_i_write() {
    Xbuff_i_write = ap_chn_write_DCT_Loop_1_proc_U0_Xbuff.read();
}

void DCT::thread_Xbuff_t_address0() {
    Xbuff_t_address0 = DCT_Loop_2_proc_U0_Xbuff_address0.read();
}

void DCT::thread_Xbuff_t_ce0() {
    Xbuff_t_ce0 = DCT_Loop_2_proc_U0_Xbuff_ce0.read();
}

void DCT::thread_Xbuff_t_d0() {
    Xbuff_t_d0 = ap_const_lv32_0;
}

void DCT::thread_Xbuff_t_read() {
    Xbuff_t_read = DCT_Loop_2_proc_U0_ap_ready.read();
}

void DCT::thread_Xbuff_t_we0() {
    Xbuff_t_we0 = ap_const_logic_0;
}

void DCT::thread_Xmat_U_ap_dummy_ce() {
    Xmat_U_ap_dummy_ce = ap_const_logic_1;
}

void DCT::thread_Xmat_i_address0() {
    Xmat_i_address0 = DCT_Loop_2_proc_U0_Xmat_address0.read();
}

void DCT::thread_Xmat_i_ce0() {
    Xmat_i_ce0 = DCT_Loop_2_proc_U0_Xmat_ce0.read();
}

void DCT::thread_Xmat_i_d0() {
    Xmat_i_d0 = DCT_Loop_2_proc_U0_Xmat_d0.read();
}

void DCT::thread_Xmat_i_we0() {
    Xmat_i_we0 = DCT_Loop_2_proc_U0_Xmat_we0.read();
}

void DCT::thread_Xmat_i_write() {
    Xmat_i_write = DCT_Loop_2_proc_U0_ap_done.read();
}

void DCT::thread_Xmat_t_address0() {
    Xmat_t_address0 = DCT_Block_proc1_U0_Xmat_address0.read();
}

void DCT::thread_Xmat_t_ce0() {
    Xmat_t_ce0 = DCT_Block_proc1_U0_Xmat_ce0.read();
}

void DCT::thread_Xmat_t_d0() {
    Xmat_t_d0 = ap_const_lv32_0;
}

void DCT::thread_Xmat_t_read() {
    Xmat_t_read = DCT_Block_proc1_U0_ap_ready.read();
}

void DCT::thread_Xmat_t_we0() {
    Xmat_t_we0 = ap_const_logic_0;
}

void DCT::thread_Y_din() {
    Y_din = DCT_Loop_3_proc1_U0_Y_din.read();
}

void DCT::thread_Y_write() {
    Y_write = DCT_Loop_3_proc1_U0_Y_write.read();
}

void DCT::thread_Ymat_U_ap_dummy_ce() {
    Ymat_U_ap_dummy_ce = ap_const_logic_1;
}

void DCT::thread_Ymat_i_address0() {
    Ymat_i_address0 = DCT_Block_proc1_U0_Ymat_address0.read();
}

void DCT::thread_Ymat_i_ce0() {
    Ymat_i_ce0 = DCT_Block_proc1_U0_Ymat_ce0.read();
}

void DCT::thread_Ymat_i_d0() {
    Ymat_i_d0 = DCT_Block_proc1_U0_Ymat_d0.read();
}

void DCT::thread_Ymat_i_we0() {
    Ymat_i_we0 = DCT_Block_proc1_U0_Ymat_we0.read();
}

void DCT::thread_Ymat_i_write() {
    Ymat_i_write = DCT_Block_proc1_U0_ap_done.read();
}

void DCT::thread_Ymat_t_address0() {
    Ymat_t_address0 = DCT_Loop_3_proc1_U0_Ymat_address0.read();
}

void DCT::thread_Ymat_t_ce0() {
    Ymat_t_ce0 = DCT_Loop_3_proc1_U0_Ymat_ce0.read();
}

void DCT::thread_Ymat_t_d0() {
    Ymat_t_d0 = ap_const_lv32_0;
}

void DCT::thread_Ymat_t_read() {
    Ymat_t_read = DCT_Loop_3_proc1_U0_ap_ready.read();
}

void DCT::thread_Ymat_t_we0() {
    Ymat_t_we0 = ap_const_logic_0;
}

void DCT::thread_ap_chn_write_DCT_Block_proc1_U0_Ymat() {
    ap_chn_write_DCT_Block_proc1_U0_Ymat = DCT_Block_proc1_U0_ap_done.read();
}

void DCT::thread_ap_chn_write_DCT_Loop_1_proc_U0_Xbuff() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status.read())) {
        ap_chn_write_DCT_Loop_1_proc_U0_Xbuff = ap_const_logic_0;
    } else {
        ap_chn_write_DCT_Loop_1_proc_U0_Xbuff = DCT_Loop_1_proc_U0_ap_done.read();
    }
}

void DCT::thread_ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n.read())) {
        ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe = ap_const_logic_0;
    } else {
        ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe = DCT_Loop_1_proc_U0_ap_done.read();
    }
}

void DCT::thread_ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe_1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n.read())) {
        ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe_1 = ap_const_logic_0;
    } else {
        ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe_1 = DCT_Loop_1_proc_U0_ap_done.read();
    }
}

void DCT::thread_ap_chn_write_DCT_Loop_2_proc_U0_Xmat() {
    ap_chn_write_DCT_Loop_2_proc_U0_Xmat = DCT_Loop_2_proc_U0_ap_done.read();
}

void DCT::thread_ap_sig_hs_continue() {
    ap_sig_hs_continue = ap_const_logic_0;
}

void DCT::thread_ap_sig_hs_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, DCT_Loop_3_proc1_U0_ap_done.read())) {
        ap_sig_hs_done = ap_const_logic_1;
    } else {
        ap_sig_hs_done = ap_const_logic_0;
    }
}

void DCT::thread_ap_sig_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status.read())) {
        ap_sig_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status = DCT_Loop_1_proc_U0_Xbuff_pipo_status.read();
    } else {
        ap_sig_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status = ap_const_logic_1;
    }
}

void DCT::thread_ap_sig_ready_opt_type_02_loc_loc_loc_channe_1_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n.read())) {
        ap_sig_ready_opt_type_02_loc_loc_loc_channe_1_full_n = opt_type_02_loc_loc_loc_channe_1_full_n.read();
    } else {
        ap_sig_ready_opt_type_02_loc_loc_loc_channe_1_full_n = ap_const_logic_1;
    }
}

void DCT::thread_ap_sig_ready_opt_type_02_loc_loc_loc_channe_full_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n.read())) {
        ap_sig_ready_opt_type_02_loc_loc_loc_channe_full_n = opt_type_02_loc_loc_loc_channe_full_n.read();
    } else {
        ap_sig_ready_opt_type_02_loc_loc_loc_channe_full_n = ap_const_logic_1;
    }
}

void DCT::thread_opt_type_02_loc_loc_loc_channe_1_U_ap_dummy_ce() {
    opt_type_02_loc_loc_loc_channe_1_U_ap_dummy_ce = ap_const_logic_1;
}

void DCT::thread_opt_type_02_loc_loc_loc_channe_1_din() {
    opt_type_02_loc_loc_loc_channe_1_din = DCT_Loop_1_proc_U0_ap_return_1.read();
}

void DCT::thread_opt_type_02_loc_loc_loc_channe_1_read() {
    opt_type_02_loc_loc_loc_channe_1_read = DCT_Loop_3_proc1_U0_ap_ready.read();
}

void DCT::thread_opt_type_02_loc_loc_loc_channe_1_write() {
    opt_type_02_loc_loc_loc_channe_1_write = ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe_1.read();
}

void DCT::thread_opt_type_02_loc_loc_loc_channe_U_ap_dummy_ce() {
    opt_type_02_loc_loc_loc_channe_U_ap_dummy_ce = ap_const_logic_1;
}

void DCT::thread_opt_type_02_loc_loc_loc_channe_din() {
    opt_type_02_loc_loc_loc_channe_din = DCT_Loop_1_proc_U0_ap_return_0.read();
}

void DCT::thread_opt_type_02_loc_loc_loc_channe_read() {
    opt_type_02_loc_loc_loc_channe_read = DCT_Block_proc1_U0_ap_ready.read();
}

void DCT::thread_opt_type_02_loc_loc_loc_channe_write() {
    opt_type_02_loc_loc_loc_channe_write = ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe.read();
}

void DCT::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"X_dout\" :  \"" << X_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"X_empty_n\" :  \"" << X_empty_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"X_read\" :  \"" << X_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Y_din\" :  \"" << Y_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Y_full_n\" :  \"" << Y_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Y_write\" :  \"" << Y_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

