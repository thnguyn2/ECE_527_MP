// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _DCT_MAT_Multiply2_HH_
#define _DCT_MAT_Multiply2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "DCT_MAT_Multiply2_Loop_Row_proc.h"
#include "DCT_MAT_Multiply2_Loop_Col_proc2.h"
#include "FIFO_DCT_MAT_Multiply2_A_cached_row_7_loc_channel.h"
#include "FIFO_DCT_MAT_Multiply2_A_cached_row_6_loc_channel.h"
#include "FIFO_DCT_MAT_Multiply2_A_cached_row_5_loc_channel.h"
#include "FIFO_DCT_MAT_Multiply2_A_cached_row_4_loc_channel.h"
#include "FIFO_DCT_MAT_Multiply2_A_cached_row_3_loc_channel.h"
#include "FIFO_DCT_MAT_Multiply2_A_cached_row_2_loc_channel.h"
#include "FIFO_DCT_MAT_Multiply2_A_cached_row_1_loc_channel.h"
#include "FIFO_DCT_MAT_Multiply2_A_cached_row_0_loc_channel.h"

namespace ap_rtl {

struct DCT_MAT_Multiply2 : public sc_module {
    // Port declarations 99
    sc_out< sc_lv<6> > A_address0;
    sc_out< sc_logic > A_ce0;
    sc_out< sc_lv<32> > A_d0;
    sc_in< sc_lv<32> > A_q0;
    sc_out< sc_logic > A_we0;
    sc_out< sc_lv<6> > A_address1;
    sc_out< sc_logic > A_ce1;
    sc_out< sc_lv<32> > A_d1;
    sc_in< sc_lv<32> > A_q1;
    sc_out< sc_logic > A_we1;
    sc_out< sc_lv<3> > B_0_address0;
    sc_out< sc_logic > B_0_ce0;
    sc_out< sc_lv<32> > B_0_d0;
    sc_in< sc_lv<32> > B_0_q0;
    sc_out< sc_logic > B_0_we0;
    sc_out< sc_lv<3> > B_0_address1;
    sc_out< sc_logic > B_0_ce1;
    sc_out< sc_lv<32> > B_0_d1;
    sc_in< sc_lv<32> > B_0_q1;
    sc_out< sc_logic > B_0_we1;
    sc_out< sc_lv<3> > B_1_address0;
    sc_out< sc_logic > B_1_ce0;
    sc_out< sc_lv<32> > B_1_d0;
    sc_in< sc_lv<32> > B_1_q0;
    sc_out< sc_logic > B_1_we0;
    sc_out< sc_lv<3> > B_1_address1;
    sc_out< sc_logic > B_1_ce1;
    sc_out< sc_lv<32> > B_1_d1;
    sc_in< sc_lv<32> > B_1_q1;
    sc_out< sc_logic > B_1_we1;
    sc_out< sc_lv<3> > B_2_address0;
    sc_out< sc_logic > B_2_ce0;
    sc_out< sc_lv<32> > B_2_d0;
    sc_in< sc_lv<32> > B_2_q0;
    sc_out< sc_logic > B_2_we0;
    sc_out< sc_lv<3> > B_2_address1;
    sc_out< sc_logic > B_2_ce1;
    sc_out< sc_lv<32> > B_2_d1;
    sc_in< sc_lv<32> > B_2_q1;
    sc_out< sc_logic > B_2_we1;
    sc_out< sc_lv<3> > B_3_address0;
    sc_out< sc_logic > B_3_ce0;
    sc_out< sc_lv<32> > B_3_d0;
    sc_in< sc_lv<32> > B_3_q0;
    sc_out< sc_logic > B_3_we0;
    sc_out< sc_lv<3> > B_3_address1;
    sc_out< sc_logic > B_3_ce1;
    sc_out< sc_lv<32> > B_3_d1;
    sc_in< sc_lv<32> > B_3_q1;
    sc_out< sc_logic > B_3_we1;
    sc_out< sc_lv<3> > B_4_address0;
    sc_out< sc_logic > B_4_ce0;
    sc_out< sc_lv<32> > B_4_d0;
    sc_in< sc_lv<32> > B_4_q0;
    sc_out< sc_logic > B_4_we0;
    sc_out< sc_lv<3> > B_4_address1;
    sc_out< sc_logic > B_4_ce1;
    sc_out< sc_lv<32> > B_4_d1;
    sc_in< sc_lv<32> > B_4_q1;
    sc_out< sc_logic > B_4_we1;
    sc_out< sc_lv<3> > B_5_address0;
    sc_out< sc_logic > B_5_ce0;
    sc_out< sc_lv<32> > B_5_d0;
    sc_in< sc_lv<32> > B_5_q0;
    sc_out< sc_logic > B_5_we0;
    sc_out< sc_lv<3> > B_5_address1;
    sc_out< sc_logic > B_5_ce1;
    sc_out< sc_lv<32> > B_5_d1;
    sc_in< sc_lv<32> > B_5_q1;
    sc_out< sc_logic > B_5_we1;
    sc_out< sc_lv<3> > B_6_address0;
    sc_out< sc_logic > B_6_ce0;
    sc_out< sc_lv<32> > B_6_d0;
    sc_in< sc_lv<32> > B_6_q0;
    sc_out< sc_logic > B_6_we0;
    sc_out< sc_lv<3> > B_6_address1;
    sc_out< sc_logic > B_6_ce1;
    sc_out< sc_lv<32> > B_6_d1;
    sc_in< sc_lv<32> > B_6_q1;
    sc_out< sc_logic > B_6_we1;
    sc_out< sc_lv<3> > B_7_address0;
    sc_out< sc_logic > B_7_ce0;
    sc_out< sc_lv<32> > B_7_d0;
    sc_in< sc_lv<32> > B_7_q0;
    sc_out< sc_logic > B_7_we0;
    sc_out< sc_lv<3> > B_7_address1;
    sc_out< sc_logic > B_7_ce1;
    sc_out< sc_lv<32> > B_7_d1;
    sc_in< sc_lv<32> > B_7_q1;
    sc_out< sc_logic > B_7_we1;
    sc_out< sc_lv<32> > C_din;
    sc_in< sc_logic > C_full_n;
    sc_out< sc_logic > C_write;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;


    // Module declarations
    DCT_MAT_Multiply2(sc_module_name name);
    SC_HAS_PROCESS(DCT_MAT_Multiply2);

    ~DCT_MAT_Multiply2();

    sc_trace_file* mVcdFile;

    DCT_MAT_Multiply2_Loop_Row_proc* DCT_MAT_Multiply2_Loop_Row_proc_U0;
    DCT_MAT_Multiply2_Loop_Col_proc2* DCT_MAT_Multiply2_Loop_Col_proc2_U0;
    FIFO_DCT_MAT_Multiply2_A_cached_row_7_loc_channel* A_cached_row_7_loc_channel_U;
    FIFO_DCT_MAT_Multiply2_A_cached_row_6_loc_channel* A_cached_row_6_loc_channel_U;
    FIFO_DCT_MAT_Multiply2_A_cached_row_5_loc_channel* A_cached_row_5_loc_channel_U;
    FIFO_DCT_MAT_Multiply2_A_cached_row_4_loc_channel* A_cached_row_4_loc_channel_U;
    FIFO_DCT_MAT_Multiply2_A_cached_row_3_loc_channel* A_cached_row_3_loc_channel_U;
    FIFO_DCT_MAT_Multiply2_A_cached_row_2_loc_channel* A_cached_row_2_loc_channel_U;
    FIFO_DCT_MAT_Multiply2_A_cached_row_1_loc_channel* A_cached_row_1_loc_channel_U;
    FIFO_DCT_MAT_Multiply2_A_cached_row_0_loc_channel* A_cached_row_0_loc_channel_U;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_start;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_done;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_continue;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_idle;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_ready;
    sc_signal< sc_lv<6> > DCT_MAT_Multiply2_Loop_Row_proc_U0_A_address0;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Row_proc_U0_A_ce0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Row_proc_U0_A_q0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_return_0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_return_1;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_return_2;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_return_3;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_return_4;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_return_5;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_return_6;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_return_7;
    sc_signal< sc_logic > ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc_U0_A_cached_row_0_loc_channel;
    sc_signal< sc_logic > A_cached_row_0_loc_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_A_cached_row_0_loc_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_A_cached_row_0_loc_channel_full_n;
    sc_signal< sc_logic > ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc_U0_A_cached_row_4_loc_channel;
    sc_signal< sc_logic > A_cached_row_4_loc_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_A_cached_row_4_loc_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_A_cached_row_4_loc_channel_full_n;
    sc_signal< sc_logic > ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc_U0_A_cached_row_6_loc_channel;
    sc_signal< sc_logic > A_cached_row_6_loc_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_A_cached_row_6_loc_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_A_cached_row_6_loc_channel_full_n;
    sc_signal< sc_logic > ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc_U0_A_cached_row_7_loc_channel;
    sc_signal< sc_logic > A_cached_row_7_loc_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_A_cached_row_7_loc_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_A_cached_row_7_loc_channel_full_n;
    sc_signal< sc_logic > ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc_U0_A_cached_row_1_loc_channel;
    sc_signal< sc_logic > A_cached_row_1_loc_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_A_cached_row_1_loc_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_A_cached_row_1_loc_channel_full_n;
    sc_signal< sc_logic > ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc_U0_A_cached_row_3_loc_channel;
    sc_signal< sc_logic > A_cached_row_3_loc_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_A_cached_row_3_loc_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_A_cached_row_3_loc_channel_full_n;
    sc_signal< sc_logic > ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc_U0_A_cached_row_2_loc_channel;
    sc_signal< sc_logic > A_cached_row_2_loc_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_A_cached_row_2_loc_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_A_cached_row_2_loc_channel_full_n;
    sc_signal< sc_logic > ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc_U0_A_cached_row_5_loc_channel;
    sc_signal< sc_logic > A_cached_row_5_loc_channel_full_n;
    sc_signal< sc_logic > ap_reg_ready_A_cached_row_5_loc_channel_full_n;
    sc_signal< sc_logic > ap_sig_ready_A_cached_row_5_loc_channel_full_n;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Col_proc2_U0_ap_start;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Col_proc2_U0_ap_done;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Col_proc2_U0_ap_continue;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Col_proc2_U0_ap_idle;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Col_proc2_U0_ap_ready;
    sc_signal< sc_lv<3> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_0_address0;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_0_ce0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_0_q0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_p_read;
    sc_signal< sc_lv<3> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_1_address0;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_1_ce0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_1_q0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_p_read1;
    sc_signal< sc_lv<3> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_2_address0;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_2_ce0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_2_q0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_p_read2;
    sc_signal< sc_lv<3> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_3_address0;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_3_ce0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_3_q0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_p_read3;
    sc_signal< sc_lv<3> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_4_address0;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_4_ce0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_4_q0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_p_read4;
    sc_signal< sc_lv<3> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_5_address0;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_5_ce0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_5_q0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_p_read5;
    sc_signal< sc_lv<3> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_6_address0;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_6_ce0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_6_q0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_p_read6;
    sc_signal< sc_lv<3> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_7_address0;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_7_ce0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_7_q0;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_p_read7;
    sc_signal< sc_lv<32> > DCT_MAT_Multiply2_Loop_Col_proc2_U0_C_din;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Col_proc2_U0_C_full_n;
    sc_signal< sc_logic > DCT_MAT_Multiply2_Loop_Col_proc2_U0_C_write;
    sc_signal< sc_logic > ap_sig_hs_continue;
    sc_signal< sc_logic > A_cached_row_7_loc_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<32> > A_cached_row_7_loc_channel_din;
    sc_signal< sc_logic > A_cached_row_7_loc_channel_write;
    sc_signal< sc_lv<32> > A_cached_row_7_loc_channel_dout;
    sc_signal< sc_logic > A_cached_row_7_loc_channel_empty_n;
    sc_signal< sc_logic > A_cached_row_7_loc_channel_read;
    sc_signal< sc_logic > A_cached_row_6_loc_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<32> > A_cached_row_6_loc_channel_din;
    sc_signal< sc_logic > A_cached_row_6_loc_channel_write;
    sc_signal< sc_lv<32> > A_cached_row_6_loc_channel_dout;
    sc_signal< sc_logic > A_cached_row_6_loc_channel_empty_n;
    sc_signal< sc_logic > A_cached_row_6_loc_channel_read;
    sc_signal< sc_logic > A_cached_row_5_loc_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<32> > A_cached_row_5_loc_channel_din;
    sc_signal< sc_logic > A_cached_row_5_loc_channel_write;
    sc_signal< sc_lv<32> > A_cached_row_5_loc_channel_dout;
    sc_signal< sc_logic > A_cached_row_5_loc_channel_empty_n;
    sc_signal< sc_logic > A_cached_row_5_loc_channel_read;
    sc_signal< sc_logic > A_cached_row_4_loc_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<32> > A_cached_row_4_loc_channel_din;
    sc_signal< sc_logic > A_cached_row_4_loc_channel_write;
    sc_signal< sc_lv<32> > A_cached_row_4_loc_channel_dout;
    sc_signal< sc_logic > A_cached_row_4_loc_channel_empty_n;
    sc_signal< sc_logic > A_cached_row_4_loc_channel_read;
    sc_signal< sc_logic > A_cached_row_3_loc_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<32> > A_cached_row_3_loc_channel_din;
    sc_signal< sc_logic > A_cached_row_3_loc_channel_write;
    sc_signal< sc_lv<32> > A_cached_row_3_loc_channel_dout;
    sc_signal< sc_logic > A_cached_row_3_loc_channel_empty_n;
    sc_signal< sc_logic > A_cached_row_3_loc_channel_read;
    sc_signal< sc_logic > A_cached_row_2_loc_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<32> > A_cached_row_2_loc_channel_din;
    sc_signal< sc_logic > A_cached_row_2_loc_channel_write;
    sc_signal< sc_lv<32> > A_cached_row_2_loc_channel_dout;
    sc_signal< sc_logic > A_cached_row_2_loc_channel_empty_n;
    sc_signal< sc_logic > A_cached_row_2_loc_channel_read;
    sc_signal< sc_logic > A_cached_row_1_loc_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<32> > A_cached_row_1_loc_channel_din;
    sc_signal< sc_logic > A_cached_row_1_loc_channel_write;
    sc_signal< sc_lv<32> > A_cached_row_1_loc_channel_dout;
    sc_signal< sc_logic > A_cached_row_1_loc_channel_empty_n;
    sc_signal< sc_logic > A_cached_row_1_loc_channel_read;
    sc_signal< sc_logic > A_cached_row_0_loc_channel_U_ap_dummy_ce;
    sc_signal< sc_lv<32> > A_cached_row_0_loc_channel_din;
    sc_signal< sc_logic > A_cached_row_0_loc_channel_write;
    sc_signal< sc_lv<32> > A_cached_row_0_loc_channel_dout;
    sc_signal< sc_logic > A_cached_row_0_loc_channel_empty_n;
    sc_signal< sc_logic > A_cached_row_0_loc_channel_read;
    sc_signal< sc_logic > ap_reg_procdone_DCT_MAT_Multiply2_Loop_Row_proc_U0;
    sc_signal< sc_logic > ap_sig_hs_done;
    sc_signal< sc_logic > ap_reg_procdone_DCT_MAT_Multiply2_Loop_Col_proc2_U0;
    sc_signal< sc_logic > ap_CS;
    sc_signal< sc_logic > ap_sig_top_allready;
    sc_signal< sc_logic > ap_reg_ready_DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_ready;
    sc_signal< sc_logic > ap_sig_ready_DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_ready;
    sc_signal< sc_logic > ap_sig_start_in_DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_start;
    sc_signal< sc_logic > ap_reg_ready_DCT_MAT_Multiply2_Loop_Col_proc2_U0_ap_ready;
    sc_signal< sc_logic > ap_sig_ready_DCT_MAT_Multiply2_Loop_Col_proc2_U0_ap_ready;
    sc_signal< sc_logic > ap_sig_start_in_DCT_MAT_Multiply2_Loop_Col_proc2_U0_ap_start;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_logic ap_const_logic_1;
    static const bool ap_true;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_address1();
    void thread_A_cached_row_0_loc_channel_U_ap_dummy_ce();
    void thread_A_cached_row_0_loc_channel_din();
    void thread_A_cached_row_0_loc_channel_read();
    void thread_A_cached_row_0_loc_channel_write();
    void thread_A_cached_row_1_loc_channel_U_ap_dummy_ce();
    void thread_A_cached_row_1_loc_channel_din();
    void thread_A_cached_row_1_loc_channel_read();
    void thread_A_cached_row_1_loc_channel_write();
    void thread_A_cached_row_2_loc_channel_U_ap_dummy_ce();
    void thread_A_cached_row_2_loc_channel_din();
    void thread_A_cached_row_2_loc_channel_read();
    void thread_A_cached_row_2_loc_channel_write();
    void thread_A_cached_row_3_loc_channel_U_ap_dummy_ce();
    void thread_A_cached_row_3_loc_channel_din();
    void thread_A_cached_row_3_loc_channel_read();
    void thread_A_cached_row_3_loc_channel_write();
    void thread_A_cached_row_4_loc_channel_U_ap_dummy_ce();
    void thread_A_cached_row_4_loc_channel_din();
    void thread_A_cached_row_4_loc_channel_read();
    void thread_A_cached_row_4_loc_channel_write();
    void thread_A_cached_row_5_loc_channel_U_ap_dummy_ce();
    void thread_A_cached_row_5_loc_channel_din();
    void thread_A_cached_row_5_loc_channel_read();
    void thread_A_cached_row_5_loc_channel_write();
    void thread_A_cached_row_6_loc_channel_U_ap_dummy_ce();
    void thread_A_cached_row_6_loc_channel_din();
    void thread_A_cached_row_6_loc_channel_read();
    void thread_A_cached_row_6_loc_channel_write();
    void thread_A_cached_row_7_loc_channel_U_ap_dummy_ce();
    void thread_A_cached_row_7_loc_channel_din();
    void thread_A_cached_row_7_loc_channel_read();
    void thread_A_cached_row_7_loc_channel_write();
    void thread_A_ce0();
    void thread_A_ce1();
    void thread_A_d0();
    void thread_A_d1();
    void thread_A_we0();
    void thread_A_we1();
    void thread_B_0_address0();
    void thread_B_0_address1();
    void thread_B_0_ce0();
    void thread_B_0_ce1();
    void thread_B_0_d0();
    void thread_B_0_d1();
    void thread_B_0_we0();
    void thread_B_0_we1();
    void thread_B_1_address0();
    void thread_B_1_address1();
    void thread_B_1_ce0();
    void thread_B_1_ce1();
    void thread_B_1_d0();
    void thread_B_1_d1();
    void thread_B_1_we0();
    void thread_B_1_we1();
    void thread_B_2_address0();
    void thread_B_2_address1();
    void thread_B_2_ce0();
    void thread_B_2_ce1();
    void thread_B_2_d0();
    void thread_B_2_d1();
    void thread_B_2_we0();
    void thread_B_2_we1();
    void thread_B_3_address0();
    void thread_B_3_address1();
    void thread_B_3_ce0();
    void thread_B_3_ce1();
    void thread_B_3_d0();
    void thread_B_3_d1();
    void thread_B_3_we0();
    void thread_B_3_we1();
    void thread_B_4_address0();
    void thread_B_4_address1();
    void thread_B_4_ce0();
    void thread_B_4_ce1();
    void thread_B_4_d0();
    void thread_B_4_d1();
    void thread_B_4_we0();
    void thread_B_4_we1();
    void thread_B_5_address0();
    void thread_B_5_address1();
    void thread_B_5_ce0();
    void thread_B_5_ce1();
    void thread_B_5_d0();
    void thread_B_5_d1();
    void thread_B_5_we0();
    void thread_B_5_we1();
    void thread_B_6_address0();
    void thread_B_6_address1();
    void thread_B_6_ce0();
    void thread_B_6_ce1();
    void thread_B_6_d0();
    void thread_B_6_d1();
    void thread_B_6_we0();
    void thread_B_6_we1();
    void thread_B_7_address0();
    void thread_B_7_address1();
    void thread_B_7_ce0();
    void thread_B_7_ce1();
    void thread_B_7_d0();
    void thread_B_7_d1();
    void thread_B_7_we0();
    void thread_B_7_we1();
    void thread_C_din();
    void thread_C_write();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_0_q0();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_1_q0();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_2_q0();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_3_q0();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_4_q0();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_5_q0();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_6_q0();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_B_7_q0();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_C_full_n();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_ap_continue();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_ap_start();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_p_read();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_p_read1();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_p_read2();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_p_read3();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_p_read4();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_p_read5();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_p_read6();
    void thread_DCT_MAT_Multiply2_Loop_Col_proc2_U0_p_read7();
    void thread_DCT_MAT_Multiply2_Loop_Row_proc_U0_A_q0();
    void thread_DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_continue();
    void thread_DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_start();
    void thread_ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc_U0_A_cached_row_0_loc_channel();
    void thread_ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc_U0_A_cached_row_1_loc_channel();
    void thread_ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc_U0_A_cached_row_2_loc_channel();
    void thread_ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc_U0_A_cached_row_3_loc_channel();
    void thread_ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc_U0_A_cached_row_4_loc_channel();
    void thread_ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc_U0_A_cached_row_5_loc_channel();
    void thread_ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc_U0_A_cached_row_6_loc_channel();
    void thread_ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc_U0_A_cached_row_7_loc_channel();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_hs_continue();
    void thread_ap_sig_hs_done();
    void thread_ap_sig_ready_A_cached_row_0_loc_channel_full_n();
    void thread_ap_sig_ready_A_cached_row_1_loc_channel_full_n();
    void thread_ap_sig_ready_A_cached_row_2_loc_channel_full_n();
    void thread_ap_sig_ready_A_cached_row_3_loc_channel_full_n();
    void thread_ap_sig_ready_A_cached_row_4_loc_channel_full_n();
    void thread_ap_sig_ready_A_cached_row_5_loc_channel_full_n();
    void thread_ap_sig_ready_A_cached_row_6_loc_channel_full_n();
    void thread_ap_sig_ready_A_cached_row_7_loc_channel_full_n();
    void thread_ap_sig_ready_DCT_MAT_Multiply2_Loop_Col_proc2_U0_ap_ready();
    void thread_ap_sig_ready_DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_ready();
    void thread_ap_sig_start_in_DCT_MAT_Multiply2_Loop_Col_proc2_U0_ap_start();
    void thread_ap_sig_start_in_DCT_MAT_Multiply2_Loop_Row_proc_U0_ap_start();
    void thread_ap_sig_top_allready();
};

}

using namespace ap_rtl;

#endif
