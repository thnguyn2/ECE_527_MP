// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _DCT_Loop_1_proc_HH_
#define _DCT_Loop_1_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct DCT_Loop_1_proc : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > X_dout;
    sc_in< sc_logic > X_empty_n;
    sc_out< sc_logic > X_read;
    sc_out< sc_lv<7> > Xbuff_address0;
    sc_out< sc_logic > Xbuff_ce0;
    sc_out< sc_logic > Xbuff_we0;
    sc_out< sc_lv<32> > Xbuff_d0;


    // Module declarations
    DCT_Loop_1_proc(sc_module_name name);
    SC_HAS_PROCESS(DCT_Loop_1_proc);

    ~DCT_Loop_1_proc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_21;
    sc_signal< sc_lv<7> > read_idx_fu_67_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_46;
    sc_signal< sc_lv<1> > exitcond1_fu_61_p2;
    sc_signal< bool > ap_sig_bdd_53;
    sc_signal< sc_lv<7> > read_idx_0_i_i_reg_44;
    sc_signal< bool > ap_sig_bdd_62;
    sc_signal< sc_lv<64> > p_0_rec_i_i_cast_fu_56_p1;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_st1_fsm_0;
    static const sc_lv<2> ap_ST_st2_fsm_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<7> ap_const_lv7_41;
    static const sc_lv<7> ap_const_lv7_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_X_read();
    void thread_Xbuff_address0();
    void thread_Xbuff_ce0();
    void thread_Xbuff_d0();
    void thread_Xbuff_we0();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_21();
    void thread_ap_sig_bdd_46();
    void thread_ap_sig_bdd_53();
    void thread_ap_sig_bdd_62();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_exitcond1_fu_61_p2();
    void thread_p_0_rec_i_i_cast_fu_56_p1();
    void thread_read_idx_fu_67_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
