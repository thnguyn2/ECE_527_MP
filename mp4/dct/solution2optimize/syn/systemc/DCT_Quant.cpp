// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "DCT_Quant.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic DCT_Quant::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic DCT_Quant::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<26> DCT_Quant::ap_ST_st1_fsm_0 = "1";
const sc_lv<26> DCT_Quant::ap_ST_st2_fsm_1 = "10";
const sc_lv<26> DCT_Quant::ap_ST_st3_fsm_2 = "100";
const sc_lv<26> DCT_Quant::ap_ST_st4_fsm_3 = "1000";
const sc_lv<26> DCT_Quant::ap_ST_st5_fsm_4 = "10000";
const sc_lv<26> DCT_Quant::ap_ST_st6_fsm_5 = "100000";
const sc_lv<26> DCT_Quant::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<26> DCT_Quant::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<26> DCT_Quant::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<26> DCT_Quant::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<26> DCT_Quant::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<26> DCT_Quant::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<26> DCT_Quant::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<26> DCT_Quant::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<26> DCT_Quant::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<26> DCT_Quant::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<26> DCT_Quant::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<26> DCT_Quant::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<26> DCT_Quant::ap_ST_st19_fsm_18 = "1000000000000000000";
const sc_lv<26> DCT_Quant::ap_ST_st20_fsm_19 = "10000000000000000000";
const sc_lv<26> DCT_Quant::ap_ST_st21_fsm_20 = "100000000000000000000";
const sc_lv<26> DCT_Quant::ap_ST_st22_fsm_21 = "1000000000000000000000";
const sc_lv<26> DCT_Quant::ap_ST_st23_fsm_22 = "10000000000000000000000";
const sc_lv<26> DCT_Quant::ap_ST_st24_fsm_23 = "100000000000000000000000";
const sc_lv<26> DCT_Quant::ap_ST_st25_fsm_24 = "1000000000000000000000000";
const sc_lv<26> DCT_Quant::ap_ST_st26_fsm_25 = "10000000000000000000000000";
const sc_lv<32> DCT_Quant::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> DCT_Quant::ap_const_lv1_1 = "1";
const sc_lv<32> DCT_Quant::ap_const_lv32_3 = "11";
const sc_lv<32> DCT_Quant::ap_const_lv32_16 = "10110";
const sc_lv<32> DCT_Quant::ap_const_lv32_4 = "100";
const sc_lv<32> DCT_Quant::ap_const_lv32_1 = "1";
const sc_lv<1> DCT_Quant::ap_const_lv1_0 = "0";
const sc_lv<32> DCT_Quant::ap_const_lv32_2 = "10";
const sc_lv<32> DCT_Quant::ap_const_lv32_13 = "10011";
const sc_lv<32> DCT_Quant::ap_const_lv32_15 = "10101";
const sc_lv<4> DCT_Quant::ap_const_lv4_0 = "0000";
const sc_lv<32> DCT_Quant::ap_const_lv32_14 = "10100";
const sc_lv<32> DCT_Quant::ap_const_lv32_19 = "11001";
const sc_lv<4> DCT_Quant::ap_const_lv4_8 = "1000";
const sc_lv<4> DCT_Quant::ap_const_lv4_1 = "1";
const sc_lv<3> DCT_Quant::ap_const_lv3_0 = "000";

DCT_Quant::DCT_Quant(sc_module_name name) : sc_module(name), mVcdFile(0) {
    QMatrix_U = new DCT_Quant_QMatrix("QMatrix_U");
    QMatrix_U->clk(ap_clk);
    QMatrix_U->reset(ap_rst);
    QMatrix_U->address0(QMatrix_address0);
    QMatrix_U->ce0(QMatrix_ce0);
    QMatrix_U->q0(QMatrix_q0);
    DCT_fmul_32ns_32ns_32_4_max_dsp_U4 = new DCT_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>("DCT_fmul_32ns_32ns_32_4_max_dsp_U4");
    DCT_fmul_32ns_32ns_32_4_max_dsp_U4->clk(ap_clk);
    DCT_fmul_32ns_32ns_32_4_max_dsp_U4->reset(ap_rst);
    DCT_fmul_32ns_32ns_32_4_max_dsp_U4->din0(grp_fu_147_p0);
    DCT_fmul_32ns_32ns_32_4_max_dsp_U4->din1(grp_fu_147_p1);
    DCT_fmul_32ns_32ns_32_4_max_dsp_U4->ce(grp_fu_147_ce);
    DCT_fmul_32ns_32ns_32_4_max_dsp_U4->dout(grp_fu_147_p2);
    DCT_fdiv_32ns_32ns_32_16_U5 = new DCT_fdiv_32ns_32ns_32_16<1,16,32,32,32>("DCT_fdiv_32ns_32ns_32_16_U5");
    DCT_fdiv_32ns_32ns_32_16_U5->clk(ap_clk);
    DCT_fdiv_32ns_32ns_32_16_U5->reset(ap_rst);
    DCT_fdiv_32ns_32ns_32_16_U5->din0(grp_fu_154_p0);
    DCT_fdiv_32ns_32ns_32_16_U5->din1(grp_fu_154_p1);
    DCT_fdiv_32ns_32ns_32_16_U5->ce(grp_fu_154_ce);
    DCT_fdiv_32ns_32ns_32_16_U5->dout(grp_fu_154_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_QMatrix_address0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_3_reg_310 );
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );
    sensitive << ( tmp_2_fu_266_p1 );

    SC_METHOD(thread_QMatrix_ce0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );

    SC_METHOD(thread_X_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_3_fu_240_p1 );
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );
    sensitive << ( tmp_2_fu_266_p1 );

    SC_METHOD(thread_X_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );

    SC_METHOD(thread_Y_address0);
    sensitive << ( tmp_3_reg_310 );
    sensitive << ( tmp_2_reg_339 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st26_fsm_25 );

    SC_METHOD(thread_Y_ce0);
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st26_fsm_25 );

    SC_METHOD(thread_Y_d0);
    sensitive << ( tmp_3_i1_reg_326 );
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st26_fsm_25 );
    sensitive << ( grp_fu_147_p2 );

    SC_METHOD(thread_Y_we0);
    sensitive << ( ap_sig_cseq_ST_st21_fsm_20 );
    sensitive << ( ap_sig_cseq_ST_st26_fsm_25 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( function_read_read_fu_36_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_i3_fu_171_p2 );
    sensitive << ( exitcond1_i_fu_195_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( function_read_read_fu_36_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond1_i3_fu_171_p2 );
    sensitive << ( exitcond1_i_fu_195_p2 );

    SC_METHOD(thread_ap_sig_bdd_107);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_135);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_153);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_162);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_191);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_200);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_76);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_83);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_92);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_44 );

    SC_METHOD(thread_ap_sig_cseq_ST_st20_fsm_19);
    sensitive << ( ap_sig_bdd_153 );

    SC_METHOD(thread_ap_sig_cseq_ST_st21_fsm_20);
    sensitive << ( ap_sig_bdd_191 );

    SC_METHOD(thread_ap_sig_cseq_ST_st22_fsm_21);
    sensitive << ( ap_sig_bdd_162 );

    SC_METHOD(thread_ap_sig_cseq_ST_st23_fsm_22);
    sensitive << ( ap_sig_bdd_83 );

    SC_METHOD(thread_ap_sig_cseq_ST_st26_fsm_25);
    sensitive << ( ap_sig_bdd_200 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_107 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_135 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_76 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_bdd_92 );

    SC_METHOD(thread_exitcond1_i3_fu_171_p2);
    sensitive << ( function_read_read_fu_36_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_i2_reg_102 );

    SC_METHOD(thread_exitcond1_i_fu_195_p2);
    sensitive << ( function_read_read_fu_36_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_i_reg_113 );

    SC_METHOD(thread_exitcond_i6_fu_219_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( j_i5_reg_124 );

    SC_METHOD(thread_exitcond_i_fu_245_p2);
    sensitive << ( ap_sig_cseq_ST_st22_fsm_21 );
    sensitive << ( j_i_reg_135 );

    SC_METHOD(thread_function_read_read_fu_36_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( function_r );

    SC_METHOD(thread_grp_fu_147_ce);

    SC_METHOD(thread_grp_fu_147_p0);
    sensitive << ( X_q0 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );

    SC_METHOD(thread_grp_fu_147_p1);
    sensitive << ( QMatrix_q0 );
    sensitive << ( ap_sig_cseq_ST_st23_fsm_22 );

    SC_METHOD(thread_grp_fu_154_ce);

    SC_METHOD(thread_grp_fu_154_p0);
    sensitive << ( reg_159 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_grp_fu_154_p1);
    sensitive << ( QMatrix_q0 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_i_1_fu_177_p2);
    sensitive << ( i_i2_reg_102 );

    SC_METHOD(thread_i_fu_201_p2);
    sensitive << ( i_i_reg_113 );

    SC_METHOD(thread_j_1_fu_225_p2);
    sensitive << ( j_i5_reg_124 );

    SC_METHOD(thread_j_fu_251_p2);
    sensitive << ( j_i_reg_135 );

    SC_METHOD(thread_p_addr1_fu_235_p2);
    sensitive << ( p_addr_cast_reg_284 );
    sensitive << ( tmp_i7_trn_cast_fu_231_p1 );

    SC_METHOD(thread_p_addr2_cast_fu_215_p1);
    sensitive << ( tmp_fu_207_p3 );

    SC_METHOD(thread_p_addr3_fu_261_p2);
    sensitive << ( p_addr2_cast_reg_297 );
    sensitive << ( tmp_i_trn_cast_fu_257_p1 );

    SC_METHOD(thread_p_addr_cast_fu_191_p1);
    sensitive << ( tmp_1_fu_183_p3 );

    SC_METHOD(thread_tmp_1_fu_183_p3);
    sensitive << ( i_i2_reg_102 );

    SC_METHOD(thread_tmp_2_fu_266_p1);
    sensitive << ( p_addr3_fu_261_p2 );

    SC_METHOD(thread_tmp_3_fu_240_p1);
    sensitive << ( p_addr1_fu_235_p2 );

    SC_METHOD(thread_tmp_fu_207_p3);
    sensitive << ( i_i_reg_113 );

    SC_METHOD(thread_tmp_i7_trn_cast_fu_231_p1);
    sensitive << ( j_i5_reg_124 );

    SC_METHOD(thread_tmp_i_trn_cast_fu_257_p1);
    sensitive << ( j_i_reg_135 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( function_read_read_fu_36_p2 );
    sensitive << ( exitcond1_i3_fu_171_p2 );
    sensitive << ( exitcond1_i_fu_195_p2 );
    sensitive << ( exitcond_i6_fu_219_p2 );
    sensitive << ( exitcond_i_fu_245_p2 );

    ap_CS_fsm = "00000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "DCT_Quant_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, X_address0, "(port)X_address0");
    sc_trace(mVcdFile, X_ce0, "(port)X_ce0");
    sc_trace(mVcdFile, X_q0, "(port)X_q0");
    sc_trace(mVcdFile, function_r, "(port)function_r");
    sc_trace(mVcdFile, Y_address0, "(port)Y_address0");
    sc_trace(mVcdFile, Y_ce0, "(port)Y_ce0");
    sc_trace(mVcdFile, Y_we0, "(port)Y_we0");
    sc_trace(mVcdFile, Y_d0, "(port)Y_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_44, "ap_sig_bdd_44");
    sc_trace(mVcdFile, QMatrix_address0, "QMatrix_address0");
    sc_trace(mVcdFile, QMatrix_ce0, "QMatrix_ce0");
    sc_trace(mVcdFile, QMatrix_q0, "QMatrix_q0");
    sc_trace(mVcdFile, reg_159, "reg_159");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_76, "ap_sig_bdd_76");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st23_fsm_22, "ap_sig_cseq_ST_st23_fsm_22");
    sc_trace(mVcdFile, ap_sig_bdd_83, "ap_sig_bdd_83");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_92, "ap_sig_bdd_92");
    sc_trace(mVcdFile, function_read_read_fu_36_p2, "function_read_read_fu_36_p2");
    sc_trace(mVcdFile, i_1_fu_177_p2, "i_1_fu_177_p2");
    sc_trace(mVcdFile, i_1_reg_279, "i_1_reg_279");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_107, "ap_sig_bdd_107");
    sc_trace(mVcdFile, p_addr_cast_fu_191_p1, "p_addr_cast_fu_191_p1");
    sc_trace(mVcdFile, p_addr_cast_reg_284, "p_addr_cast_reg_284");
    sc_trace(mVcdFile, exitcond1_i3_fu_171_p2, "exitcond1_i3_fu_171_p2");
    sc_trace(mVcdFile, i_fu_201_p2, "i_fu_201_p2");
    sc_trace(mVcdFile, i_reg_292, "i_reg_292");
    sc_trace(mVcdFile, p_addr2_cast_fu_215_p1, "p_addr2_cast_fu_215_p1");
    sc_trace(mVcdFile, p_addr2_cast_reg_297, "p_addr2_cast_reg_297");
    sc_trace(mVcdFile, exitcond1_i_fu_195_p2, "exitcond1_i_fu_195_p2");
    sc_trace(mVcdFile, j_1_fu_225_p2, "j_1_fu_225_p2");
    sc_trace(mVcdFile, j_1_reg_305, "j_1_reg_305");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_135, "ap_sig_bdd_135");
    sc_trace(mVcdFile, tmp_3_fu_240_p1, "tmp_3_fu_240_p1");
    sc_trace(mVcdFile, tmp_3_reg_310, "tmp_3_reg_310");
    sc_trace(mVcdFile, exitcond_i6_fu_219_p2, "exitcond_i6_fu_219_p2");
    sc_trace(mVcdFile, grp_fu_154_p2, "grp_fu_154_p2");
    sc_trace(mVcdFile, tmp_3_i1_reg_326, "tmp_3_i1_reg_326");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st20_fsm_19, "ap_sig_cseq_ST_st20_fsm_19");
    sc_trace(mVcdFile, ap_sig_bdd_153, "ap_sig_bdd_153");
    sc_trace(mVcdFile, j_fu_251_p2, "j_fu_251_p2");
    sc_trace(mVcdFile, j_reg_334, "j_reg_334");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st22_fsm_21, "ap_sig_cseq_ST_st22_fsm_21");
    sc_trace(mVcdFile, ap_sig_bdd_162, "ap_sig_bdd_162");
    sc_trace(mVcdFile, tmp_2_fu_266_p1, "tmp_2_fu_266_p1");
    sc_trace(mVcdFile, tmp_2_reg_339, "tmp_2_reg_339");
    sc_trace(mVcdFile, exitcond_i_fu_245_p2, "exitcond_i_fu_245_p2");
    sc_trace(mVcdFile, i_i2_reg_102, "i_i2_reg_102");
    sc_trace(mVcdFile, i_i_reg_113, "i_i_reg_113");
    sc_trace(mVcdFile, j_i5_reg_124, "j_i5_reg_124");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st21_fsm_20, "ap_sig_cseq_ST_st21_fsm_20");
    sc_trace(mVcdFile, ap_sig_bdd_191, "ap_sig_bdd_191");
    sc_trace(mVcdFile, j_i_reg_135, "j_i_reg_135");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st26_fsm_25, "ap_sig_cseq_ST_st26_fsm_25");
    sc_trace(mVcdFile, ap_sig_bdd_200, "ap_sig_bdd_200");
    sc_trace(mVcdFile, grp_fu_147_p2, "grp_fu_147_p2");
    sc_trace(mVcdFile, grp_fu_147_p0, "grp_fu_147_p0");
    sc_trace(mVcdFile, grp_fu_147_p1, "grp_fu_147_p1");
    sc_trace(mVcdFile, grp_fu_154_p0, "grp_fu_154_p0");
    sc_trace(mVcdFile, grp_fu_154_p1, "grp_fu_154_p1");
    sc_trace(mVcdFile, tmp_1_fu_183_p3, "tmp_1_fu_183_p3");
    sc_trace(mVcdFile, tmp_fu_207_p3, "tmp_fu_207_p3");
    sc_trace(mVcdFile, tmp_i7_trn_cast_fu_231_p1, "tmp_i7_trn_cast_fu_231_p1");
    sc_trace(mVcdFile, p_addr1_fu_235_p2, "p_addr1_fu_235_p2");
    sc_trace(mVcdFile, tmp_i_trn_cast_fu_257_p1, "tmp_i_trn_cast_fu_257_p1");
    sc_trace(mVcdFile, p_addr3_fu_261_p2, "p_addr3_fu_261_p2");
    sc_trace(mVcdFile, grp_fu_147_ce, "grp_fu_147_ce");
    sc_trace(mVcdFile, grp_fu_154_ce, "grp_fu_154_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

DCT_Quant::~DCT_Quant() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete QMatrix_U;
    delete DCT_fmul_32ns_32ns_32_4_max_dsp_U4;
    delete DCT_fdiv_32ns_32ns_32_16_U5;
}

void DCT_Quant::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(function_read_read_fu_36_p2.read(), ap_const_lv1_0))) {
        i_i2_reg_102 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i6_fu_219_p2.read()))) {
        i_i2_reg_102 = i_1_reg_279.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         !esl_seteq<1,1,1>(function_read_read_fu_36_p2.read(), ap_const_lv1_0))) {
        i_i_reg_113 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_245_p2.read()))) {
        i_i_reg_113 = i_reg_292.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        j_i5_reg_124 = j_1_reg_305.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(function_read_read_fu_36_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_fu_171_p2.read()))) {
        j_i5_reg_124 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st26_fsm_25.read())) {
        j_i_reg_135 = j_reg_334.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                !esl_seteq<1,1,1>(function_read_read_fu_36_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_195_p2.read()))) {
        j_i_reg_135 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(function_read_read_fu_36_p2.read(), ap_const_lv1_0))) {
        i_1_reg_279 = i_1_fu_177_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && !esl_seteq<1,1,1>(function_read_read_fu_36_p2.read(), ap_const_lv1_0))) {
        i_reg_292 = i_fu_201_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        j_1_reg_305 = j_1_fu_225_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read())) {
        j_reg_334 = j_fu_251_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && !esl_seteq<1,1,1>(function_read_read_fu_36_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_195_p2.read()))) {
        p_addr2_cast_reg_297 = p_addr2_cast_fu_215_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(function_read_read_fu_36_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_fu_171_p2.read()))) {
        p_addr_cast_reg_284 = p_addr_cast_fu_191_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st23_fsm_22.read()))) {
        reg_159 = X_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_245_p2.read()))) {
        tmp_2_reg_339 = tmp_2_fu_266_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st20_fsm_19.read())) {
        tmp_3_i1_reg_326 = grp_fu_154_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i6_fu_219_p2.read()))) {
        tmp_3_reg_310 = tmp_3_fu_240_p1.read();
    }
}

void DCT_Quant::thread_QMatrix_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read())) {
        QMatrix_address0 =  (sc_lv<6>) (tmp_2_fu_266_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        QMatrix_address0 =  (sc_lv<6>) (tmp_3_reg_310.read());
    } else {
        QMatrix_address0 = "XXXXXX";
    }
}

void DCT_Quant::thread_QMatrix_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read()))) {
        QMatrix_ce0 = ap_const_logic_1;
    } else {
        QMatrix_ce0 = ap_const_logic_0;
    }
}

void DCT_Quant::thread_X_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read())) {
        X_address0 =  (sc_lv<6>) (tmp_2_fu_266_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        X_address0 =  (sc_lv<6>) (tmp_3_fu_240_p1.read());
    } else {
        X_address0 = "XXXXXX";
    }
}

void DCT_Quant::thread_X_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st22_fsm_21.read()))) {
        X_ce0 = ap_const_logic_1;
    } else {
        X_ce0 = ap_const_logic_0;
    }
}

void DCT_Quant::thread_Y_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st26_fsm_25.read())) {
        Y_address0 =  (sc_lv<6>) (tmp_2_reg_339.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        Y_address0 =  (sc_lv<6>) (tmp_3_reg_310.read());
    } else {
        Y_address0 = "XXXXXX";
    }
}

void DCT_Quant::thread_Y_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st26_fsm_25.read()))) {
        Y_ce0 = ap_const_logic_1;
    } else {
        Y_ce0 = ap_const_logic_0;
    }
}

void DCT_Quant::thread_Y_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st26_fsm_25.read())) {
        Y_d0 = grp_fu_147_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read())) {
        Y_d0 = tmp_3_i1_reg_326.read();
    } else {
        Y_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void DCT_Quant::thread_Y_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st21_fsm_20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st26_fsm_25.read()))) {
        Y_we0 = ap_const_logic_1;
    } else {
        Y_we0 = ap_const_logic_0;
    }
}

void DCT_Quant::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          ((esl_seteq<1,1,1>(function_read_read_fu_36_p2.read(), ap_const_lv1_0) && 
            !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_fu_171_p2.read())) || 
           (!esl_seteq<1,1,1>(function_read_read_fu_36_p2.read(), ap_const_lv1_0) && 
            !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_195_p2.read())))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void DCT_Quant::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void DCT_Quant::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         ((esl_seteq<1,1,1>(function_read_read_fu_36_p2.read(), ap_const_lv1_0) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_fu_171_p2.read())) || 
          (!esl_seteq<1,1,1>(function_read_read_fu_36_p2.read(), ap_const_lv1_0) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_195_p2.read()))))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void DCT_Quant::thread_ap_sig_bdd_107() {
    ap_sig_bdd_107 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void DCT_Quant::thread_ap_sig_bdd_135() {
    ap_sig_bdd_135 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void DCT_Quant::thread_ap_sig_bdd_153() {
    ap_sig_bdd_153 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(19, 19));
}

void DCT_Quant::thread_ap_sig_bdd_162() {
    ap_sig_bdd_162 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(21, 21));
}

void DCT_Quant::thread_ap_sig_bdd_191() {
    ap_sig_bdd_191 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(20, 20));
}

void DCT_Quant::thread_ap_sig_bdd_200() {
    ap_sig_bdd_200 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(25, 25));
}

void DCT_Quant::thread_ap_sig_bdd_44() {
    ap_sig_bdd_44 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void DCT_Quant::thread_ap_sig_bdd_76() {
    ap_sig_bdd_76 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void DCT_Quant::thread_ap_sig_bdd_83() {
    ap_sig_bdd_83 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(22, 22));
}

void DCT_Quant::thread_ap_sig_bdd_92() {
    ap_sig_bdd_92 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void DCT_Quant::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_44.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void DCT_Quant::thread_ap_sig_cseq_ST_st20_fsm_19() {
    if (ap_sig_bdd_153.read()) {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    }
}

void DCT_Quant::thread_ap_sig_cseq_ST_st21_fsm_20() {
    if (ap_sig_bdd_191.read()) {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    }
}

void DCT_Quant::thread_ap_sig_cseq_ST_st22_fsm_21() {
    if (ap_sig_bdd_162.read()) {
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    }
}

void DCT_Quant::thread_ap_sig_cseq_ST_st23_fsm_22() {
    if (ap_sig_bdd_83.read()) {
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    }
}

void DCT_Quant::thread_ap_sig_cseq_ST_st26_fsm_25() {
    if (ap_sig_bdd_200.read()) {
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    }
}

void DCT_Quant::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_107.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void DCT_Quant::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_135.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void DCT_Quant::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_76.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void DCT_Quant::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_bdd_92.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void DCT_Quant::thread_exitcond1_i3_fu_171_p2() {
    exitcond1_i3_fu_171_p2 = (!i_i2_reg_102.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_i2_reg_102.read() == ap_const_lv4_8);
}

void DCT_Quant::thread_exitcond1_i_fu_195_p2() {
    exitcond1_i_fu_195_p2 = (!i_i_reg_113.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_113.read() == ap_const_lv4_8);
}

void DCT_Quant::thread_exitcond_i6_fu_219_p2() {
    exitcond_i6_fu_219_p2 = (!j_i5_reg_124.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_i5_reg_124.read() == ap_const_lv4_8);
}

void DCT_Quant::thread_exitcond_i_fu_245_p2() {
    exitcond_i_fu_245_p2 = (!j_i_reg_135.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_i_reg_135.read() == ap_const_lv4_8);
}

void DCT_Quant::thread_function_read_read_fu_36_p2() {
    function_read_read_fu_36_p2 = function_r.read();
}

void DCT_Quant::thread_grp_fu_147_ce() {
    grp_fu_147_ce = ap_const_logic_1;
}

void DCT_Quant::thread_grp_fu_147_p0() {
    grp_fu_147_p0 = X_q0.read();
}

void DCT_Quant::thread_grp_fu_147_p1() {
    grp_fu_147_p1 = QMatrix_q0.read();
}

void DCT_Quant::thread_grp_fu_154_ce() {
    grp_fu_154_ce = ap_const_logic_1;
}

void DCT_Quant::thread_grp_fu_154_p0() {
    grp_fu_154_p0 = reg_159.read();
}

void DCT_Quant::thread_grp_fu_154_p1() {
    grp_fu_154_p1 = QMatrix_q0.read();
}

void DCT_Quant::thread_i_1_fu_177_p2() {
    i_1_fu_177_p2 = (!i_i2_reg_102.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_i2_reg_102.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void DCT_Quant::thread_i_fu_201_p2() {
    i_fu_201_p2 = (!i_i_reg_113.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_i_reg_113.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void DCT_Quant::thread_j_1_fu_225_p2() {
    j_1_fu_225_p2 = (!j_i5_reg_124.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_i5_reg_124.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void DCT_Quant::thread_j_fu_251_p2() {
    j_fu_251_p2 = (!j_i_reg_135.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_i_reg_135.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void DCT_Quant::thread_p_addr1_fu_235_p2() {
    p_addr1_fu_235_p2 = (!tmp_i7_trn_cast_fu_231_p1.read().is_01() || !p_addr_cast_reg_284.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_i7_trn_cast_fu_231_p1.read()) + sc_biguint<8>(p_addr_cast_reg_284.read()));
}

void DCT_Quant::thread_p_addr2_cast_fu_215_p1() {
    p_addr2_cast_fu_215_p1 = esl_zext<8,7>(tmp_fu_207_p3.read());
}

void DCT_Quant::thread_p_addr3_fu_261_p2() {
    p_addr3_fu_261_p2 = (!tmp_i_trn_cast_fu_257_p1.read().is_01() || !p_addr2_cast_reg_297.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_i_trn_cast_fu_257_p1.read()) + sc_biguint<8>(p_addr2_cast_reg_297.read()));
}

void DCT_Quant::thread_p_addr_cast_fu_191_p1() {
    p_addr_cast_fu_191_p1 = esl_zext<8,7>(tmp_1_fu_183_p3.read());
}

void DCT_Quant::thread_tmp_1_fu_183_p3() {
    tmp_1_fu_183_p3 = esl_concat<4,3>(i_i2_reg_102.read(), ap_const_lv3_0);
}

void DCT_Quant::thread_tmp_2_fu_266_p1() {
    tmp_2_fu_266_p1 = esl_zext<64,8>(p_addr3_fu_261_p2.read());
}

void DCT_Quant::thread_tmp_3_fu_240_p1() {
    tmp_3_fu_240_p1 = esl_zext<64,8>(p_addr1_fu_235_p2.read());
}

void DCT_Quant::thread_tmp_fu_207_p3() {
    tmp_fu_207_p3 = esl_concat<4,3>(i_i_reg_113.read(), ap_const_lv3_0);
}

void DCT_Quant::thread_tmp_i7_trn_cast_fu_231_p1() {
    tmp_i7_trn_cast_fu_231_p1 = esl_zext<8,4>(j_i5_reg_124.read());
}

void DCT_Quant::thread_tmp_i_trn_cast_fu_257_p1() {
    tmp_i_trn_cast_fu_257_p1 = esl_zext<8,4>(j_i_reg_135.read());
}

void DCT_Quant::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (((esl_seteq<1,1,1>(function_read_read_fu_36_p2.read(), ap_const_lv1_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_fu_171_p2.read())) || (!esl_seteq<1,1,1>(function_read_read_fu_36_p2.read(), ap_const_lv1_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_195_p2.read())))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else if ((!esl_seteq<1,1,1>(function_read_read_fu_36_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_195_p2.read()))) {
                ap_NS_fsm = ap_ST_st22_fsm_21;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i6_fu_219_p2.read())) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 2097152 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_245_p2.read())) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st23_fsm_22;
            }
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_st26_fsm_25;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<26>) ("XXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

