// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "DCT_Loop_1_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic DCT_Loop_1_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic DCT_Loop_1_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> DCT_Loop_1_proc::ap_ST_st1_fsm_0 = "1";
const sc_lv<8> DCT_Loop_1_proc::ap_ST_st2_fsm_1 = "10";
const sc_lv<8> DCT_Loop_1_proc::ap_ST_st3_fsm_2 = "100";
const sc_lv<8> DCT_Loop_1_proc::ap_ST_st4_fsm_3 = "1000";
const sc_lv<8> DCT_Loop_1_proc::ap_ST_st5_fsm_4 = "10000";
const sc_lv<8> DCT_Loop_1_proc::ap_ST_st6_fsm_5 = "100000";
const sc_lv<8> DCT_Loop_1_proc::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<8> DCT_Loop_1_proc::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<32> DCT_Loop_1_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> DCT_Loop_1_proc::ap_const_lv1_1 = "1";
const sc_lv<32> DCT_Loop_1_proc::ap_const_lv32_1 = "1";
const sc_lv<32> DCT_Loop_1_proc::ap_const_lv32_2 = "10";
const sc_lv<1> DCT_Loop_1_proc::ap_const_lv1_0 = "0";
const sc_lv<32> DCT_Loop_1_proc::ap_const_lv32_3 = "11";
const sc_lv<32> DCT_Loop_1_proc::ap_const_lv32_6 = "110";
const sc_lv<4> DCT_Loop_1_proc::ap_const_lv4_0 = "0000";
const sc_lv<32> DCT_Loop_1_proc::ap_const_lv32_7 = "111";
const sc_lv<32> DCT_Loop_1_proc::ap_const_lv32_40400000 = "1000000010000000000000000000000";
const sc_lv<4> DCT_Loop_1_proc::ap_const_lv4_8 = "1000";
const sc_lv<4> DCT_Loop_1_proc::ap_const_lv4_1 = "1";

DCT_Loop_1_proc::DCT_Loop_1_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {
    DCT_fmul_32ns_32ns_32_4_max_dsp_U0 = new DCT_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>("DCT_fmul_32ns_32ns_32_4_max_dsp_U0");
    DCT_fmul_32ns_32ns_32_4_max_dsp_U0->clk(ap_clk);
    DCT_fmul_32ns_32ns_32_4_max_dsp_U0->reset(ap_rst);
    DCT_fmul_32ns_32ns_32_4_max_dsp_U0->din0(grp_fu_64_p0);
    DCT_fmul_32ns_32ns_32_4_max_dsp_U0->din1(grp_fu_64_p1);
    DCT_fmul_32ns_32ns_32_4_max_dsp_U0->ce(grp_fu_64_ce);
    DCT_fmul_32ns_32ns_32_4_max_dsp_U0->dout(grp_fu_64_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_X_read);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( exitcond_fu_81_p2 );
    sensitive << ( ap_sig_bdd_65 );

    SC_METHOD(thread_Y_din);
    sensitive << ( Y_full_n );
    sensitive << ( tmp_1_i_reg_127 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_Y_write);
    sensitive << ( Y_full_n );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond4_i_i_fu_69_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( exitcond4_i_i_fu_69_p2 );

    SC_METHOD(thread_ap_sig_bdd_107);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_58);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_65);
    sensitive << ( X_empty_n );
    sensitive << ( exitcond_fu_81_p2 );

    SC_METHOD(thread_ap_sig_bdd_78);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_87);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_95);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_27 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_49 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_58 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_78 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_bdd_87 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_bdd_107 );

    SC_METHOD(thread_exitcond4_i_i_fu_69_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( rowrcv_0_i_i_reg_41 );

    SC_METHOD(thread_exitcond_fu_81_p2);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_bdd_65 );
    sensitive << ( p_12_rec_i_i_reg_52 );

    SC_METHOD(thread_grp_fu_64_ce);

    SC_METHOD(thread_grp_fu_64_p0);
    sensitive << ( temp_reg_117 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_grp_fu_64_p1);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_p_rec_i_i_fu_87_p2);
    sensitive << ( p_12_rec_i_i_reg_52 );

    SC_METHOD(thread_rowrcv_fu_75_p2);
    sensitive << ( rowrcv_0_i_i_reg_41 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( Y_full_n );
    sensitive << ( exitcond_fu_81_p2 );
    sensitive << ( ap_sig_bdd_65 );
    sensitive << ( ap_sig_bdd_95 );
    sensitive << ( exitcond4_i_i_fu_69_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "DCT_Loop_1_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, X_dout, "(port)X_dout");
    sc_trace(mVcdFile, X_empty_n, "(port)X_empty_n");
    sc_trace(mVcdFile, X_read, "(port)X_read");
    sc_trace(mVcdFile, Y_din, "(port)Y_din");
    sc_trace(mVcdFile, Y_full_n, "(port)Y_full_n");
    sc_trace(mVcdFile, Y_write, "(port)Y_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_27, "ap_sig_bdd_27");
    sc_trace(mVcdFile, rowrcv_fu_75_p2, "rowrcv_fu_75_p2");
    sc_trace(mVcdFile, rowrcv_reg_104, "rowrcv_reg_104");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_49, "ap_sig_bdd_49");
    sc_trace(mVcdFile, p_rec_i_i_fu_87_p2, "p_rec_i_i_fu_87_p2");
    sc_trace(mVcdFile, p_rec_i_i_reg_112, "p_rec_i_i_reg_112");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_58, "ap_sig_bdd_58");
    sc_trace(mVcdFile, exitcond_fu_81_p2, "exitcond_fu_81_p2");
    sc_trace(mVcdFile, ap_sig_bdd_65, "ap_sig_bdd_65");
    sc_trace(mVcdFile, temp_reg_117, "temp_reg_117");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_78, "ap_sig_bdd_78");
    sc_trace(mVcdFile, grp_fu_64_p2, "grp_fu_64_p2");
    sc_trace(mVcdFile, tmp_1_i_reg_127, "tmp_1_i_reg_127");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_87, "ap_sig_bdd_87");
    sc_trace(mVcdFile, rowrcv_0_i_i_reg_41, "rowrcv_0_i_i_reg_41");
    sc_trace(mVcdFile, ap_sig_bdd_95, "ap_sig_bdd_95");
    sc_trace(mVcdFile, p_12_rec_i_i_reg_52, "p_12_rec_i_i_reg_52");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_bdd_107, "ap_sig_bdd_107");
    sc_trace(mVcdFile, exitcond4_i_i_fu_69_p2, "exitcond4_i_i_fu_69_p2");
    sc_trace(mVcdFile, grp_fu_64_p0, "grp_fu_64_p0");
    sc_trace(mVcdFile, grp_fu_64_p1, "grp_fu_64_p1");
    sc_trace(mVcdFile, grp_fu_64_ce, "grp_fu_64_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

DCT_Loop_1_proc::~DCT_Loop_1_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete DCT_fmul_32ns_32ns_32_4_max_dsp_U0;
}

void DCT_Loop_1_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_i_i_fu_69_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_i_i_fu_69_p2.read()))) {
        p_12_rec_i_i_reg_52 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) && 
                !esl_seteq<1,1,1>(Y_full_n.read(), ap_const_logic_0))) {
        p_12_rec_i_i_reg_52 = p_rec_i_i_reg_112.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !ap_sig_bdd_65.read() && 
         !esl_seteq<1,1,1>(exitcond_fu_81_p2.read(), ap_const_lv1_0))) {
        rowrcv_0_i_i_reg_41 = rowrcv_reg_104.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !ap_sig_bdd_95.read())) {
        rowrcv_0_i_i_reg_41 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && !ap_sig_bdd_65.read())) {
        p_rec_i_i_reg_112 = p_rec_i_i_fu_87_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        rowrcv_reg_104 = rowrcv_fu_75_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && esl_seteq<1,1,1>(exitcond_fu_81_p2.read(), ap_const_lv1_0) && !ap_sig_bdd_65.read())) {
        temp_reg_117 = X_dout.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        tmp_1_i_reg_127 = grp_fu_64_p2.read();
    }
}

void DCT_Loop_1_proc::thread_X_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_81_p2.read(), ap_const_lv1_0) && 
         !ap_sig_bdd_65.read())) {
        X_read = ap_const_logic_1;
    } else {
        X_read = ap_const_logic_0;
    }
}

void DCT_Loop_1_proc::thread_Y_din() {
    Y_din = tmp_1_i_reg_127.read();
}

void DCT_Loop_1_proc::thread_Y_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) && 
         !esl_seteq<1,1,1>(Y_full_n.read(), ap_const_logic_0))) {
        Y_write = ap_const_logic_1;
    } else {
        Y_write = ap_const_logic_0;
    }
}

void DCT_Loop_1_proc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_i_i_fu_69_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void DCT_Loop_1_proc::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void DCT_Loop_1_proc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_i_i_fu_69_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void DCT_Loop_1_proc::thread_ap_sig_bdd_107() {
    ap_sig_bdd_107 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void DCT_Loop_1_proc::thread_ap_sig_bdd_27() {
    ap_sig_bdd_27 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void DCT_Loop_1_proc::thread_ap_sig_bdd_49() {
    ap_sig_bdd_49 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void DCT_Loop_1_proc::thread_ap_sig_bdd_58() {
    ap_sig_bdd_58 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void DCT_Loop_1_proc::thread_ap_sig_bdd_65() {
    ap_sig_bdd_65 = (esl_seteq<1,1,1>(X_empty_n.read(), ap_const_logic_0) && esl_seteq<1,1,1>(exitcond_fu_81_p2.read(), ap_const_lv1_0));
}

void DCT_Loop_1_proc::thread_ap_sig_bdd_78() {
    ap_sig_bdd_78 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void DCT_Loop_1_proc::thread_ap_sig_bdd_87() {
    ap_sig_bdd_87 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void DCT_Loop_1_proc::thread_ap_sig_bdd_95() {
    ap_sig_bdd_95 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void DCT_Loop_1_proc::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_27.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void DCT_Loop_1_proc::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_49.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void DCT_Loop_1_proc::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_58.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void DCT_Loop_1_proc::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_78.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void DCT_Loop_1_proc::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_bdd_87.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void DCT_Loop_1_proc::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_bdd_107.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void DCT_Loop_1_proc::thread_exitcond4_i_i_fu_69_p2() {
    exitcond4_i_i_fu_69_p2 = (!rowrcv_0_i_i_reg_41.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(rowrcv_0_i_i_reg_41.read() == ap_const_lv4_8);
}

void DCT_Loop_1_proc::thread_exitcond_fu_81_p2() {
    exitcond_fu_81_p2 = (!p_12_rec_i_i_reg_52.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(p_12_rec_i_i_reg_52.read() == ap_const_lv4_8);
}

void DCT_Loop_1_proc::thread_grp_fu_64_ce() {
    grp_fu_64_ce = ap_const_logic_1;
}

void DCT_Loop_1_proc::thread_grp_fu_64_p0() {
    grp_fu_64_p0 = temp_reg_117.read();
}

void DCT_Loop_1_proc::thread_grp_fu_64_p1() {
    grp_fu_64_p1 = ap_const_lv32_40400000;
}

void DCT_Loop_1_proc::thread_p_rec_i_i_fu_87_p2() {
    p_rec_i_i_fu_87_p2 = (!p_12_rec_i_i_reg_52.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(p_12_rec_i_i_reg_52.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void DCT_Loop_1_proc::thread_rowrcv_fu_75_p2() {
    rowrcv_fu_75_p2 = (!rowrcv_0_i_i_reg_41.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(rowrcv_0_i_i_reg_41.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void DCT_Loop_1_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!ap_sig_bdd_95.read()) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_i_i_fu_69_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(exitcond_fu_81_p2.read(), ap_const_lv1_0) && !ap_sig_bdd_65.read())) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else if ((!ap_sig_bdd_65.read() && !esl_seteq<1,1,1>(exitcond_fu_81_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            if (!esl_seteq<1,1,1>(Y_full_n.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st8_fsm_7;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

}

