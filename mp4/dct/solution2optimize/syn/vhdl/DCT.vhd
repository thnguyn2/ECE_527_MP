-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.1
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity DCT is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    X_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    X_empty_n : IN STD_LOGIC;
    X_read : OUT STD_LOGIC;
    Y_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    Y_full_n : IN STD_LOGIC;
    Y_write : OUT STD_LOGIC );
end;


architecture behav of DCT is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "DCT,hls_ip_2015_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.465000,HLS_SYN_LAT=1218,HLS_SYN_TPT=873,HLS_SYN_MEM=8,HLS_SYN_DSP=23,HLS_SYN_FF=11369,HLS_SYN_LUT=18339}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_true : BOOLEAN := true;

    signal Xbuff_i_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Xbuff_i_ce0 : STD_LOGIC;
    signal Xbuff_i_we0 : STD_LOGIC;
    signal Xbuff_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Xbuff_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Xbuff_t_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal Xbuff_t_ce0 : STD_LOGIC;
    signal Xbuff_t_we0 : STD_LOGIC;
    signal Xbuff_t_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Xbuff_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Xbuff_U_ap_dummy_ce : STD_LOGIC;
    signal Xmat_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Xmat_i_ce0 : STD_LOGIC;
    signal Xmat_i_we0 : STD_LOGIC;
    signal Xmat_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Xmat_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Xmat_t_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Xmat_t_ce0 : STD_LOGIC;
    signal Xmat_t_we0 : STD_LOGIC;
    signal Xmat_t_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Xmat_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Xmat_U_ap_dummy_ce : STD_LOGIC;
    signal Ymat_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Ymat_i_ce0 : STD_LOGIC;
    signal Ymat_i_we0 : STD_LOGIC;
    signal Ymat_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Ymat_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Ymat_t_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Ymat_t_ce0 : STD_LOGIC;
    signal Ymat_t_we0 : STD_LOGIC;
    signal Ymat_t_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Ymat_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Ymat_U_ap_dummy_ce : STD_LOGIC;
    signal DCT_Loop_1_proc_U0_ap_start : STD_LOGIC := '0';
    signal DCT_Loop_1_proc_U0_ap_done : STD_LOGIC;
    signal DCT_Loop_1_proc_U0_ap_continue : STD_LOGIC;
    signal DCT_Loop_1_proc_U0_ap_idle : STD_LOGIC;
    signal DCT_Loop_1_proc_U0_ap_ready : STD_LOGIC;
    signal DCT_Loop_1_proc_U0_X_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_Loop_1_proc_U0_X_empty_n : STD_LOGIC;
    signal DCT_Loop_1_proc_U0_X_read : STD_LOGIC;
    signal DCT_Loop_1_proc_U0_Xbuff_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal DCT_Loop_1_proc_U0_Xbuff_ce0 : STD_LOGIC;
    signal DCT_Loop_1_proc_U0_Xbuff_we0 : STD_LOGIC;
    signal DCT_Loop_1_proc_U0_Xbuff_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_Loop_1_proc_U0_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_Loop_1_proc_U0_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_chn_write_DCT_Loop_1_proc_U0_Xbuff : STD_LOGIC;
    signal DCT_Loop_1_proc_U0_Xbuff_pipo_status : STD_LOGIC;
    signal ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status : STD_LOGIC := '0';
    signal ap_sig_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status : STD_LOGIC;
    signal ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe : STD_LOGIC;
    signal opt_type_02_loc_loc_loc_channe_full_n : STD_LOGIC;
    signal ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_opt_type_02_loc_loc_loc_channe_full_n : STD_LOGIC;
    signal ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe_1 : STD_LOGIC;
    signal opt_type_02_loc_loc_loc_channe_1_full_n : STD_LOGIC;
    signal ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_opt_type_02_loc_loc_loc_channe_1_full_n : STD_LOGIC;
    signal DCT_Loop_2_proc_U0_ap_start : STD_LOGIC;
    signal DCT_Loop_2_proc_U0_ap_done : STD_LOGIC;
    signal DCT_Loop_2_proc_U0_ap_continue : STD_LOGIC;
    signal DCT_Loop_2_proc_U0_ap_idle : STD_LOGIC;
    signal DCT_Loop_2_proc_U0_ap_ready : STD_LOGIC;
    signal DCT_Loop_2_proc_U0_Xbuff_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal DCT_Loop_2_proc_U0_Xbuff_ce0 : STD_LOGIC;
    signal DCT_Loop_2_proc_U0_Xbuff_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_Loop_2_proc_U0_Xmat_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal DCT_Loop_2_proc_U0_Xmat_ce0 : STD_LOGIC;
    signal DCT_Loop_2_proc_U0_Xmat_we0 : STD_LOGIC;
    signal DCT_Loop_2_proc_U0_Xmat_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_chn_write_DCT_Loop_2_proc_U0_Xmat : STD_LOGIC;
    signal DCT_Loop_2_proc_U0_Xmat_pipo_status : STD_LOGIC;
    signal DCT_Block_proc1_U0_ap_start : STD_LOGIC;
    signal DCT_Block_proc1_U0_ap_done : STD_LOGIC;
    signal DCT_Block_proc1_U0_ap_continue : STD_LOGIC;
    signal DCT_Block_proc1_U0_ap_idle : STD_LOGIC;
    signal DCT_Block_proc1_U0_ap_ready : STD_LOGIC;
    signal DCT_Block_proc1_U0_p_read : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_Block_proc1_U0_Xmat_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal DCT_Block_proc1_U0_Xmat_ce0 : STD_LOGIC;
    signal DCT_Block_proc1_U0_Xmat_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_Block_proc1_U0_Ymat_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal DCT_Block_proc1_U0_Ymat_ce0 : STD_LOGIC;
    signal DCT_Block_proc1_U0_Ymat_we0 : STD_LOGIC;
    signal DCT_Block_proc1_U0_Ymat_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_chn_write_DCT_Block_proc1_U0_Ymat : STD_LOGIC;
    signal DCT_Block_proc1_U0_Ymat_pipo_status : STD_LOGIC;
    signal DCT_Loop_3_proc1_U0_ap_start : STD_LOGIC;
    signal DCT_Loop_3_proc1_U0_ap_done : STD_LOGIC;
    signal DCT_Loop_3_proc1_U0_ap_continue : STD_LOGIC;
    signal DCT_Loop_3_proc1_U0_ap_idle : STD_LOGIC;
    signal DCT_Loop_3_proc1_U0_ap_ready : STD_LOGIC;
    signal DCT_Loop_3_proc1_U0_Y_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_Loop_3_proc1_U0_Y_full_n : STD_LOGIC;
    signal DCT_Loop_3_proc1_U0_Y_write : STD_LOGIC;
    signal DCT_Loop_3_proc1_U0_p_read : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_Loop_3_proc1_U0_Ymat_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal DCT_Loop_3_proc1_U0_Ymat_ce0 : STD_LOGIC;
    signal DCT_Loop_3_proc1_U0_Ymat_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_hs_continue : STD_LOGIC;
    signal Xbuff_i_full_n : STD_LOGIC;
    signal Xbuff_i_write : STD_LOGIC;
    signal Xbuff_t_empty_n : STD_LOGIC;
    signal Xbuff_t_read : STD_LOGIC;
    signal Xmat_i_full_n : STD_LOGIC;
    signal Xmat_i_write : STD_LOGIC;
    signal Xmat_t_empty_n : STD_LOGIC;
    signal Xmat_t_read : STD_LOGIC;
    signal Ymat_i_full_n : STD_LOGIC;
    signal Ymat_i_write : STD_LOGIC;
    signal Ymat_t_empty_n : STD_LOGIC;
    signal Ymat_t_read : STD_LOGIC;
    signal opt_type_02_loc_loc_loc_channe_U_ap_dummy_ce : STD_LOGIC;
    signal opt_type_02_loc_loc_loc_channe_din : STD_LOGIC_VECTOR (31 downto 0);
    signal opt_type_02_loc_loc_loc_channe_write : STD_LOGIC;
    signal opt_type_02_loc_loc_loc_channe_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal opt_type_02_loc_loc_loc_channe_empty_n : STD_LOGIC;
    signal opt_type_02_loc_loc_loc_channe_read : STD_LOGIC;
    signal opt_type_02_loc_loc_loc_channe_1_U_ap_dummy_ce : STD_LOGIC;
    signal opt_type_02_loc_loc_loc_channe_1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal opt_type_02_loc_loc_loc_channe_1_write : STD_LOGIC;
    signal opt_type_02_loc_loc_loc_channe_1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal opt_type_02_loc_loc_loc_channe_1_empty_n : STD_LOGIC;
    signal opt_type_02_loc_loc_loc_channe_1_read : STD_LOGIC;
    signal ap_CS : STD_LOGIC;
    signal ap_sig_hs_done : STD_LOGIC;

    component DCT_Loop_1_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        X_empty_n : IN STD_LOGIC;
        X_read : OUT STD_LOGIC;
        Xbuff_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Xbuff_ce0 : OUT STD_LOGIC;
        Xbuff_we0 : OUT STD_LOGIC;
        Xbuff_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Loop_2_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Xbuff_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        Xbuff_ce0 : OUT STD_LOGIC;
        Xbuff_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Xmat_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        Xmat_ce0 : OUT STD_LOGIC;
        Xmat_we0 : OUT STD_LOGIC;
        Xmat_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        Xmat_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        Xmat_ce0 : OUT STD_LOGIC;
        Xmat_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Ymat_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        Ymat_ce0 : OUT STD_LOGIC;
        Ymat_we0 : OUT STD_LOGIC;
        Ymat_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Loop_3_proc1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Y_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        Y_full_n : IN STD_LOGIC;
        Y_write : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        Ymat_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        Ymat_ce0 : OUT STD_LOGIC;
        Ymat_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Xbuff IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component DCT_Xmat IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_opt_type_02_loc_loc_loc_channe IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_opt_type_02_loc_loc_loc_channe_1 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    Xbuff_U : component DCT_Xbuff
    generic map (
        DataWidth => 32,
        AddressRange => 66,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Xbuff_i_address0,
        i_ce0 => Xbuff_i_ce0,
        i_we0 => Xbuff_i_we0,
        i_d0 => Xbuff_i_d0,
        i_q0 => Xbuff_i_q0,
        t_address0 => Xbuff_t_address0,
        t_ce0 => Xbuff_t_ce0,
        t_we0 => Xbuff_t_we0,
        t_d0 => Xbuff_t_d0,
        t_q0 => Xbuff_t_q0,
        i_ce => Xbuff_U_ap_dummy_ce,
        t_ce => Xbuff_U_ap_dummy_ce,
        i_full_n => Xbuff_i_full_n,
        i_write => Xbuff_i_write,
        t_empty_n => Xbuff_t_empty_n,
        t_read => Xbuff_t_read);

    Xmat_U : component DCT_Xmat
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Xmat_i_address0,
        i_ce0 => Xmat_i_ce0,
        i_we0 => Xmat_i_we0,
        i_d0 => Xmat_i_d0,
        i_q0 => Xmat_i_q0,
        t_address0 => Xmat_t_address0,
        t_ce0 => Xmat_t_ce0,
        t_we0 => Xmat_t_we0,
        t_d0 => Xmat_t_d0,
        t_q0 => Xmat_t_q0,
        i_ce => Xmat_U_ap_dummy_ce,
        t_ce => Xmat_U_ap_dummy_ce,
        i_full_n => Xmat_i_full_n,
        i_write => Xmat_i_write,
        t_empty_n => Xmat_t_empty_n,
        t_read => Xmat_t_read);

    Ymat_U : component DCT_Xmat
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Ymat_i_address0,
        i_ce0 => Ymat_i_ce0,
        i_we0 => Ymat_i_we0,
        i_d0 => Ymat_i_d0,
        i_q0 => Ymat_i_q0,
        t_address0 => Ymat_t_address0,
        t_ce0 => Ymat_t_ce0,
        t_we0 => Ymat_t_we0,
        t_d0 => Ymat_t_d0,
        t_q0 => Ymat_t_q0,
        i_ce => Ymat_U_ap_dummy_ce,
        t_ce => Ymat_U_ap_dummy_ce,
        i_full_n => Ymat_i_full_n,
        i_write => Ymat_i_write,
        t_empty_n => Ymat_t_empty_n,
        t_read => Ymat_t_read);

    DCT_Loop_1_proc_U0 : component DCT_Loop_1_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => DCT_Loop_1_proc_U0_ap_start,
        ap_done => DCT_Loop_1_proc_U0_ap_done,
        ap_continue => DCT_Loop_1_proc_U0_ap_continue,
        ap_idle => DCT_Loop_1_proc_U0_ap_idle,
        ap_ready => DCT_Loop_1_proc_U0_ap_ready,
        X_dout => DCT_Loop_1_proc_U0_X_dout,
        X_empty_n => DCT_Loop_1_proc_U0_X_empty_n,
        X_read => DCT_Loop_1_proc_U0_X_read,
        Xbuff_address0 => DCT_Loop_1_proc_U0_Xbuff_address0,
        Xbuff_ce0 => DCT_Loop_1_proc_U0_Xbuff_ce0,
        Xbuff_we0 => DCT_Loop_1_proc_U0_Xbuff_we0,
        Xbuff_d0 => DCT_Loop_1_proc_U0_Xbuff_d0,
        ap_return_0 => DCT_Loop_1_proc_U0_ap_return_0,
        ap_return_1 => DCT_Loop_1_proc_U0_ap_return_1);

    DCT_Loop_2_proc_U0 : component DCT_Loop_2_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => DCT_Loop_2_proc_U0_ap_start,
        ap_done => DCT_Loop_2_proc_U0_ap_done,
        ap_continue => DCT_Loop_2_proc_U0_ap_continue,
        ap_idle => DCT_Loop_2_proc_U0_ap_idle,
        ap_ready => DCT_Loop_2_proc_U0_ap_ready,
        Xbuff_address0 => DCT_Loop_2_proc_U0_Xbuff_address0,
        Xbuff_ce0 => DCT_Loop_2_proc_U0_Xbuff_ce0,
        Xbuff_q0 => DCT_Loop_2_proc_U0_Xbuff_q0,
        Xmat_address0 => DCT_Loop_2_proc_U0_Xmat_address0,
        Xmat_ce0 => DCT_Loop_2_proc_U0_Xmat_ce0,
        Xmat_we0 => DCT_Loop_2_proc_U0_Xmat_we0,
        Xmat_d0 => DCT_Loop_2_proc_U0_Xmat_d0);

    DCT_Block_proc1_U0 : component DCT_Block_proc1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => DCT_Block_proc1_U0_ap_start,
        ap_done => DCT_Block_proc1_U0_ap_done,
        ap_continue => DCT_Block_proc1_U0_ap_continue,
        ap_idle => DCT_Block_proc1_U0_ap_idle,
        ap_ready => DCT_Block_proc1_U0_ap_ready,
        p_read => DCT_Block_proc1_U0_p_read,
        Xmat_address0 => DCT_Block_proc1_U0_Xmat_address0,
        Xmat_ce0 => DCT_Block_proc1_U0_Xmat_ce0,
        Xmat_q0 => DCT_Block_proc1_U0_Xmat_q0,
        Ymat_address0 => DCT_Block_proc1_U0_Ymat_address0,
        Ymat_ce0 => DCT_Block_proc1_U0_Ymat_ce0,
        Ymat_we0 => DCT_Block_proc1_U0_Ymat_we0,
        Ymat_d0 => DCT_Block_proc1_U0_Ymat_d0);

    DCT_Loop_3_proc1_U0 : component DCT_Loop_3_proc1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => DCT_Loop_3_proc1_U0_ap_start,
        ap_done => DCT_Loop_3_proc1_U0_ap_done,
        ap_continue => DCT_Loop_3_proc1_U0_ap_continue,
        ap_idle => DCT_Loop_3_proc1_U0_ap_idle,
        ap_ready => DCT_Loop_3_proc1_U0_ap_ready,
        Y_din => DCT_Loop_3_proc1_U0_Y_din,
        Y_full_n => DCT_Loop_3_proc1_U0_Y_full_n,
        Y_write => DCT_Loop_3_proc1_U0_Y_write,
        p_read => DCT_Loop_3_proc1_U0_p_read,
        Ymat_address0 => DCT_Loop_3_proc1_U0_Ymat_address0,
        Ymat_ce0 => DCT_Loop_3_proc1_U0_Ymat_ce0,
        Ymat_q0 => DCT_Loop_3_proc1_U0_Ymat_q0);

    opt_type_02_loc_loc_loc_channe_U : component FIFO_DCT_opt_type_02_loc_loc_loc_channe
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => opt_type_02_loc_loc_loc_channe_U_ap_dummy_ce,
        if_write_ce => opt_type_02_loc_loc_loc_channe_U_ap_dummy_ce,
        if_din => opt_type_02_loc_loc_loc_channe_din,
        if_full_n => opt_type_02_loc_loc_loc_channe_full_n,
        if_write => opt_type_02_loc_loc_loc_channe_write,
        if_dout => opt_type_02_loc_loc_loc_channe_dout,
        if_empty_n => opt_type_02_loc_loc_loc_channe_empty_n,
        if_read => opt_type_02_loc_loc_loc_channe_read);

    opt_type_02_loc_loc_loc_channe_1_U : component FIFO_DCT_opt_type_02_loc_loc_loc_channe_1
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => opt_type_02_loc_loc_loc_channe_1_U_ap_dummy_ce,
        if_write_ce => opt_type_02_loc_loc_loc_channe_1_U_ap_dummy_ce,
        if_din => opt_type_02_loc_loc_loc_channe_1_din,
        if_full_n => opt_type_02_loc_loc_loc_channe_1_full_n,
        if_write => opt_type_02_loc_loc_loc_channe_1_write,
        if_dout => opt_type_02_loc_loc_loc_channe_1_dout,
        if_empty_n => opt_type_02_loc_loc_loc_channe_1_empty_n,
        if_read => opt_type_02_loc_loc_loc_channe_1_read);





    -- DCT_Loop_1_proc_U0_ap_start assign process. --
    DCT_Loop_1_proc_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DCT_Loop_1_proc_U0_ap_start <= ap_const_logic_0;
            else
                DCT_Loop_1_proc_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    -- ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status assign process. --
    ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = DCT_Loop_1_proc_U0_ap_done) and (ap_const_logic_1 = DCT_Loop_1_proc_U0_ap_continue))) then 
                    ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = DCT_Loop_1_proc_U0_ap_done) and (ap_const_logic_1 = DCT_Loop_1_proc_U0_Xbuff_pipo_status))) then 
                    ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n assign process. --
    ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = DCT_Loop_1_proc_U0_ap_done) and (ap_const_logic_1 = DCT_Loop_1_proc_U0_ap_continue))) then 
                    ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = DCT_Loop_1_proc_U0_ap_done) and (ap_const_logic_1 = opt_type_02_loc_loc_loc_channe_1_full_n))) then 
                    ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n assign process. --
    ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = DCT_Loop_1_proc_U0_ap_done) and (ap_const_logic_1 = DCT_Loop_1_proc_U0_ap_continue))) then 
                    ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = DCT_Loop_1_proc_U0_ap_done) and (ap_const_logic_1 = opt_type_02_loc_loc_loc_channe_full_n))) then 
                    ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_CS assign process. --
    ap_CS_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_CS <= ap_const_logic_0;
        end if;
    end process;
    DCT_Block_proc1_U0_Xmat_q0 <= Xmat_t_q0;
    DCT_Block_proc1_U0_Ymat_pipo_status <= Ymat_i_full_n;
    DCT_Block_proc1_U0_ap_continue <= DCT_Block_proc1_U0_Ymat_pipo_status;
    DCT_Block_proc1_U0_ap_start <= (Xmat_t_empty_n and opt_type_02_loc_loc_loc_channe_empty_n);
    DCT_Block_proc1_U0_p_read <= opt_type_02_loc_loc_loc_channe_dout;
    DCT_Loop_1_proc_U0_X_dout <= X_dout;
    DCT_Loop_1_proc_U0_X_empty_n <= X_empty_n;
    DCT_Loop_1_proc_U0_Xbuff_pipo_status <= Xbuff_i_full_n;

    -- DCT_Loop_1_proc_U0_ap_continue assign process. --
    DCT_Loop_1_proc_U0_ap_continue_assign_proc : process(ap_sig_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status, ap_sig_ready_opt_type_02_loc_loc_loc_channe_full_n, ap_sig_ready_opt_type_02_loc_loc_loc_channe_1_full_n)
    begin
        if (((ap_const_logic_1 = ap_sig_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status) and (ap_const_logic_1 = ap_sig_ready_opt_type_02_loc_loc_loc_channe_full_n) and (ap_const_logic_1 = ap_sig_ready_opt_type_02_loc_loc_loc_channe_1_full_n))) then 
            DCT_Loop_1_proc_U0_ap_continue <= ap_const_logic_1;
        else 
            DCT_Loop_1_proc_U0_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    DCT_Loop_2_proc_U0_Xbuff_q0 <= Xbuff_t_q0;
    DCT_Loop_2_proc_U0_Xmat_pipo_status <= Xmat_i_full_n;
    DCT_Loop_2_proc_U0_ap_continue <= DCT_Loop_2_proc_U0_Xmat_pipo_status;
    DCT_Loop_2_proc_U0_ap_start <= Xbuff_t_empty_n;
    DCT_Loop_3_proc1_U0_Y_full_n <= Y_full_n;
    DCT_Loop_3_proc1_U0_Ymat_q0 <= Ymat_t_q0;
    DCT_Loop_3_proc1_U0_ap_continue <= ap_const_logic_1;
    DCT_Loop_3_proc1_U0_ap_start <= (Ymat_t_empty_n and opt_type_02_loc_loc_loc_channe_1_empty_n);
    DCT_Loop_3_proc1_U0_p_read <= opt_type_02_loc_loc_loc_channe_1_dout;
    X_read <= DCT_Loop_1_proc_U0_X_read;
    Xbuff_U_ap_dummy_ce <= ap_const_logic_1;
    Xbuff_i_address0 <= DCT_Loop_1_proc_U0_Xbuff_address0;
    Xbuff_i_ce0 <= DCT_Loop_1_proc_U0_Xbuff_ce0;
    Xbuff_i_d0 <= DCT_Loop_1_proc_U0_Xbuff_d0;
    Xbuff_i_we0 <= DCT_Loop_1_proc_U0_Xbuff_we0;
    Xbuff_i_write <= ap_chn_write_DCT_Loop_1_proc_U0_Xbuff;
    Xbuff_t_address0 <= DCT_Loop_2_proc_U0_Xbuff_address0;
    Xbuff_t_ce0 <= DCT_Loop_2_proc_U0_Xbuff_ce0;
    Xbuff_t_d0 <= ap_const_lv32_0;
    Xbuff_t_read <= DCT_Loop_2_proc_U0_ap_ready;
    Xbuff_t_we0 <= ap_const_logic_0;
    Xmat_U_ap_dummy_ce <= ap_const_logic_1;
    Xmat_i_address0 <= DCT_Loop_2_proc_U0_Xmat_address0;
    Xmat_i_ce0 <= DCT_Loop_2_proc_U0_Xmat_ce0;
    Xmat_i_d0 <= DCT_Loop_2_proc_U0_Xmat_d0;
    Xmat_i_we0 <= DCT_Loop_2_proc_U0_Xmat_we0;
    Xmat_i_write <= DCT_Loop_2_proc_U0_ap_done;
    Xmat_t_address0 <= DCT_Block_proc1_U0_Xmat_address0;
    Xmat_t_ce0 <= DCT_Block_proc1_U0_Xmat_ce0;
    Xmat_t_d0 <= ap_const_lv32_0;
    Xmat_t_read <= DCT_Block_proc1_U0_ap_ready;
    Xmat_t_we0 <= ap_const_logic_0;
    Y_din <= DCT_Loop_3_proc1_U0_Y_din;
    Y_write <= DCT_Loop_3_proc1_U0_Y_write;
    Ymat_U_ap_dummy_ce <= ap_const_logic_1;
    Ymat_i_address0 <= DCT_Block_proc1_U0_Ymat_address0;
    Ymat_i_ce0 <= DCT_Block_proc1_U0_Ymat_ce0;
    Ymat_i_d0 <= DCT_Block_proc1_U0_Ymat_d0;
    Ymat_i_we0 <= DCT_Block_proc1_U0_Ymat_we0;
    Ymat_i_write <= DCT_Block_proc1_U0_ap_done;
    Ymat_t_address0 <= DCT_Loop_3_proc1_U0_Ymat_address0;
    Ymat_t_ce0 <= DCT_Loop_3_proc1_U0_Ymat_ce0;
    Ymat_t_d0 <= ap_const_lv32_0;
    Ymat_t_read <= DCT_Loop_3_proc1_U0_ap_ready;
    Ymat_t_we0 <= ap_const_logic_0;
    ap_chn_write_DCT_Block_proc1_U0_Ymat <= DCT_Block_proc1_U0_ap_done;

    -- ap_chn_write_DCT_Loop_1_proc_U0_Xbuff assign process. --
    ap_chn_write_DCT_Loop_1_proc_U0_Xbuff_assign_proc : process(DCT_Loop_1_proc_U0_ap_done, ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status)) then 
            ap_chn_write_DCT_Loop_1_proc_U0_Xbuff <= ap_const_logic_0;
        else 
            ap_chn_write_DCT_Loop_1_proc_U0_Xbuff <= DCT_Loop_1_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe assign process. --
    ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe_assign_proc : process(DCT_Loop_1_proc_U0_ap_done, ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n)) then 
            ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe <= ap_const_logic_0;
        else 
            ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe <= DCT_Loop_1_proc_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe_1 assign process. --
    ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe_1_assign_proc : process(DCT_Loop_1_proc_U0_ap_done, ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n)) then 
            ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe_1 <= ap_const_logic_0;
        else 
            ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe_1 <= DCT_Loop_1_proc_U0_ap_done;
        end if; 
    end process;

    ap_chn_write_DCT_Loop_2_proc_U0_Xmat <= DCT_Loop_2_proc_U0_ap_done;
    ap_sig_hs_continue <= ap_const_logic_0;

    -- ap_sig_hs_done assign process. --
    ap_sig_hs_done_assign_proc : process(DCT_Loop_3_proc1_U0_ap_done)
    begin
        if ((ap_const_logic_1 = DCT_Loop_3_proc1_U0_ap_done)) then 
            ap_sig_hs_done <= ap_const_logic_1;
        else 
            ap_sig_hs_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status assign process. --
    ap_sig_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status_assign_proc : process(DCT_Loop_1_proc_U0_Xbuff_pipo_status, ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status)) then 
            ap_sig_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status <= DCT_Loop_1_proc_U0_Xbuff_pipo_status;
        else 
            ap_sig_ready_DCT_Loop_1_proc_U0_Xbuff_pipo_status <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_opt_type_02_loc_loc_loc_channe_1_full_n assign process. --
    ap_sig_ready_opt_type_02_loc_loc_loc_channe_1_full_n_assign_proc : process(opt_type_02_loc_loc_loc_channe_1_full_n, ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_opt_type_02_loc_loc_loc_channe_1_full_n)) then 
            ap_sig_ready_opt_type_02_loc_loc_loc_channe_1_full_n <= opt_type_02_loc_loc_loc_channe_1_full_n;
        else 
            ap_sig_ready_opt_type_02_loc_loc_loc_channe_1_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_opt_type_02_loc_loc_loc_channe_full_n assign process. --
    ap_sig_ready_opt_type_02_loc_loc_loc_channe_full_n_assign_proc : process(opt_type_02_loc_loc_loc_channe_full_n, ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_opt_type_02_loc_loc_loc_channe_full_n)) then 
            ap_sig_ready_opt_type_02_loc_loc_loc_channe_full_n <= opt_type_02_loc_loc_loc_channe_full_n;
        else 
            ap_sig_ready_opt_type_02_loc_loc_loc_channe_full_n <= ap_const_logic_1;
        end if; 
    end process;

    opt_type_02_loc_loc_loc_channe_1_U_ap_dummy_ce <= ap_const_logic_1;
    opt_type_02_loc_loc_loc_channe_1_din <= DCT_Loop_1_proc_U0_ap_return_1;
    opt_type_02_loc_loc_loc_channe_1_read <= DCT_Loop_3_proc1_U0_ap_ready;
    opt_type_02_loc_loc_loc_channe_1_write <= ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe_1;
    opt_type_02_loc_loc_loc_channe_U_ap_dummy_ce <= ap_const_logic_1;
    opt_type_02_loc_loc_loc_channe_din <= DCT_Loop_1_proc_U0_ap_return_0;
    opt_type_02_loc_loc_loc_channe_read <= DCT_Block_proc1_U0_ap_ready;
    opt_type_02_loc_loc_loc_channe_write <= ap_chn_write_DCT_Loop_1_proc_U0_opt_type_02_loc_loc_loc_channe;
end behav;
