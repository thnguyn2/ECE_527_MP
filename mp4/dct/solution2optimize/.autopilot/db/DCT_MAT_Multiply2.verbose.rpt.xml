<profile>

<section name = "Vivado HLS Report for 'DCT_MAT_Multiply2'" level="0">
<item name = "Date">Thu Oct 22 22:21:56 2015
</item>
<item name = "Version">2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)</item>
<item name = "Project">dct</item>
<item name = "Solution">solution2optimize</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z020clg484-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="default">10.00, 7.64, 1.25</column>
</table>
</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">300, 300, 301, 301, dataflow</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
<column name="grp_DCT_MAT_Multiply2_Loop_Row_proc_fu_455">DCT_MAT_Multiply2_Loop_Row_proc, 300, 300, 300, 300, none</column>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="5">Name, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="Expression">-, -, -, -</column>
<column name="FIFO">-, -, -, -</column>
<column name="Instance">-, 10, 1909, 2803</column>
<column name="Memory">-, -, -, -</column>
<column name="Multiplexer">-, -, -, -</column>
<column name="Register">-, -, 2, -</column>
<specialColumn name="Available">280, 220, 106400, 53200</specialColumn>
<specialColumn name="Utilization (%)">0, 4, 1, 5</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="6">Instance, Module, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="DCT_MAT_Multiply2_Loop_Row_proc_U0">DCT_MAT_Multiply2_Loop_Row_proc, 0, 10, 1909, 2803</column>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="9">Memory, Module, BRAM_18K, FF, LUT, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="7">Name, BRAM_18K, FF, LUT, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_CS">1, 0, 1, 0</column>
<column name="ap_reg_procdone_DCT_MAT_Multiply2_Loop_Row_proc_U0">1, 0, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="A_address0">out, 6, ap_memory, A, array</column>
<column name="A_ce0">out, 1, ap_memory, A, array</column>
<column name="A_d0">out, 32, ap_memory, A, array</column>
<column name="A_q0">in, 32, ap_memory, A, array</column>
<column name="A_we0">out, 1, ap_memory, A, array</column>
<column name="A_address1">out, 6, ap_memory, A, array</column>
<column name="A_ce1">out, 1, ap_memory, A, array</column>
<column name="A_d1">out, 32, ap_memory, A, array</column>
<column name="A_q1">in, 32, ap_memory, A, array</column>
<column name="A_we1">out, 1, ap_memory, A, array</column>
<column name="B_0_1_read">in, 32, ap_none, B_0_1_read, scalar</column>
<column name="B_0_1_read_ap_ack">out, 1, ap_none, B_0_1_read, scalar</column>
<column name="B_0_2_read">in, 32, ap_none, B_0_2_read, scalar</column>
<column name="B_0_2_read_ap_ack">out, 1, ap_none, B_0_2_read, scalar</column>
<column name="B_0_3_read">in, 32, ap_none, B_0_3_read, scalar</column>
<column name="B_0_3_read_ap_ack">out, 1, ap_none, B_0_3_read, scalar</column>
<column name="B_0_5_read">in, 32, ap_none, B_0_5_read, scalar</column>
<column name="B_0_5_read_ap_ack">out, 1, ap_none, B_0_5_read, scalar</column>
<column name="B_0_6_read">in, 32, ap_none, B_0_6_read, scalar</column>
<column name="B_0_6_read_ap_ack">out, 1, ap_none, B_0_6_read, scalar</column>
<column name="B_0_7_read">in, 32, ap_none, B_0_7_read, scalar</column>
<column name="B_0_7_read_ap_ack">out, 1, ap_none, B_0_7_read, scalar</column>
<column name="B_1_0_read">in, 32, ap_none, B_1_0_read, scalar</column>
<column name="B_1_0_read_ap_ack">out, 1, ap_none, B_1_0_read, scalar</column>
<column name="B_1_2_read">in, 32, ap_none, B_1_2_read, scalar</column>
<column name="B_1_2_read_ap_ack">out, 1, ap_none, B_1_2_read, scalar</column>
<column name="B_1_3_read">in, 32, ap_none, B_1_3_read, scalar</column>
<column name="B_1_3_read_ap_ack">out, 1, ap_none, B_1_3_read, scalar</column>
<column name="B_1_4_read">in, 32, ap_none, B_1_4_read, scalar</column>
<column name="B_1_4_read_ap_ack">out, 1, ap_none, B_1_4_read, scalar</column>
<column name="B_1_5_read">in, 32, ap_none, B_1_5_read, scalar</column>
<column name="B_1_5_read_ap_ack">out, 1, ap_none, B_1_5_read, scalar</column>
<column name="B_1_6_read">in, 32, ap_none, B_1_6_read, scalar</column>
<column name="B_1_6_read_ap_ack">out, 1, ap_none, B_1_6_read, scalar</column>
<column name="B_1_7_read">in, 32, ap_none, B_1_7_read, scalar</column>
<column name="B_1_7_read_ap_ack">out, 1, ap_none, B_1_7_read, scalar</column>
<column name="B_2_0_read">in, 32, ap_none, B_2_0_read, scalar</column>
<column name="B_2_0_read_ap_ack">out, 1, ap_none, B_2_0_read, scalar</column>
<column name="B_2_1_read">in, 32, ap_none, B_2_1_read, scalar</column>
<column name="B_2_1_read_ap_ack">out, 1, ap_none, B_2_1_read, scalar</column>
<column name="B_2_3_read">in, 32, ap_none, B_2_3_read, scalar</column>
<column name="B_2_3_read_ap_ack">out, 1, ap_none, B_2_3_read, scalar</column>
<column name="B_2_4_read">in, 32, ap_none, B_2_4_read, scalar</column>
<column name="B_2_4_read_ap_ack">out, 1, ap_none, B_2_4_read, scalar</column>
<column name="B_2_5_read">in, 32, ap_none, B_2_5_read, scalar</column>
<column name="B_2_5_read_ap_ack">out, 1, ap_none, B_2_5_read, scalar</column>
<column name="B_2_6_read">in, 32, ap_none, B_2_6_read, scalar</column>
<column name="B_2_6_read_ap_ack">out, 1, ap_none, B_2_6_read, scalar</column>
<column name="B_2_7_read">in, 32, ap_none, B_2_7_read, scalar</column>
<column name="B_2_7_read_ap_ack">out, 1, ap_none, B_2_7_read, scalar</column>
<column name="B_3_0_read">in, 32, ap_none, B_3_0_read, scalar</column>
<column name="B_3_0_read_ap_ack">out, 1, ap_none, B_3_0_read, scalar</column>
<column name="B_3_1_read">in, 32, ap_none, B_3_1_read, scalar</column>
<column name="B_3_1_read_ap_ack">out, 1, ap_none, B_3_1_read, scalar</column>
<column name="B_3_2_read">in, 32, ap_none, B_3_2_read, scalar</column>
<column name="B_3_2_read_ap_ack">out, 1, ap_none, B_3_2_read, scalar</column>
<column name="B_3_4_read">in, 32, ap_none, B_3_4_read, scalar</column>
<column name="B_3_4_read_ap_ack">out, 1, ap_none, B_3_4_read, scalar</column>
<column name="B_3_5_read">in, 32, ap_none, B_3_5_read, scalar</column>
<column name="B_3_5_read_ap_ack">out, 1, ap_none, B_3_5_read, scalar</column>
<column name="B_3_6_read">in, 32, ap_none, B_3_6_read, scalar</column>
<column name="B_3_6_read_ap_ack">out, 1, ap_none, B_3_6_read, scalar</column>
<column name="B_3_7_read">in, 32, ap_none, B_3_7_read, scalar</column>
<column name="B_3_7_read_ap_ack">out, 1, ap_none, B_3_7_read, scalar</column>
<column name="B_4_1_read">in, 32, ap_none, B_4_1_read, scalar</column>
<column name="B_4_1_read_ap_ack">out, 1, ap_none, B_4_1_read, scalar</column>
<column name="B_4_2_read">in, 32, ap_none, B_4_2_read, scalar</column>
<column name="B_4_2_read_ap_ack">out, 1, ap_none, B_4_2_read, scalar</column>
<column name="B_4_3_read">in, 32, ap_none, B_4_3_read, scalar</column>
<column name="B_4_3_read_ap_ack">out, 1, ap_none, B_4_3_read, scalar</column>
<column name="B_4_5_read">in, 32, ap_none, B_4_5_read, scalar</column>
<column name="B_4_5_read_ap_ack">out, 1, ap_none, B_4_5_read, scalar</column>
<column name="B_4_6_read">in, 32, ap_none, B_4_6_read, scalar</column>
<column name="B_4_6_read_ap_ack">out, 1, ap_none, B_4_6_read, scalar</column>
<column name="B_4_7_read">in, 32, ap_none, B_4_7_read, scalar</column>
<column name="B_4_7_read_ap_ack">out, 1, ap_none, B_4_7_read, scalar</column>
<column name="B_5_0_read">in, 32, ap_none, B_5_0_read, scalar</column>
<column name="B_5_0_read_ap_ack">out, 1, ap_none, B_5_0_read, scalar</column>
<column name="B_5_1_read">in, 32, ap_none, B_5_1_read, scalar</column>
<column name="B_5_1_read_ap_ack">out, 1, ap_none, B_5_1_read, scalar</column>
<column name="B_5_2_read">in, 32, ap_none, B_5_2_read, scalar</column>
<column name="B_5_2_read_ap_ack">out, 1, ap_none, B_5_2_read, scalar</column>
<column name="B_5_3_read">in, 32, ap_none, B_5_3_read, scalar</column>
<column name="B_5_3_read_ap_ack">out, 1, ap_none, B_5_3_read, scalar</column>
<column name="B_5_4_read">in, 32, ap_none, B_5_4_read, scalar</column>
<column name="B_5_4_read_ap_ack">out, 1, ap_none, B_5_4_read, scalar</column>
<column name="B_5_6_read">in, 32, ap_none, B_5_6_read, scalar</column>
<column name="B_5_6_read_ap_ack">out, 1, ap_none, B_5_6_read, scalar</column>
<column name="B_5_7_read">in, 32, ap_none, B_5_7_read, scalar</column>
<column name="B_5_7_read_ap_ack">out, 1, ap_none, B_5_7_read, scalar</column>
<column name="B_6_0_read">in, 32, ap_none, B_6_0_read, scalar</column>
<column name="B_6_0_read_ap_ack">out, 1, ap_none, B_6_0_read, scalar</column>
<column name="B_6_1_read">in, 32, ap_none, B_6_1_read, scalar</column>
<column name="B_6_1_read_ap_ack">out, 1, ap_none, B_6_1_read, scalar</column>
<column name="B_6_2_read">in, 32, ap_none, B_6_2_read, scalar</column>
<column name="B_6_2_read_ap_ack">out, 1, ap_none, B_6_2_read, scalar</column>
<column name="B_6_3_read">in, 32, ap_none, B_6_3_read, scalar</column>
<column name="B_6_3_read_ap_ack">out, 1, ap_none, B_6_3_read, scalar</column>
<column name="B_6_4_read">in, 32, ap_none, B_6_4_read, scalar</column>
<column name="B_6_4_read_ap_ack">out, 1, ap_none, B_6_4_read, scalar</column>
<column name="B_6_5_read">in, 32, ap_none, B_6_5_read, scalar</column>
<column name="B_6_5_read_ap_ack">out, 1, ap_none, B_6_5_read, scalar</column>
<column name="B_6_7_read">in, 32, ap_none, B_6_7_read, scalar</column>
<column name="B_6_7_read_ap_ack">out, 1, ap_none, B_6_7_read, scalar</column>
<column name="B_7_0_read">in, 32, ap_none, B_7_0_read, scalar</column>
<column name="B_7_0_read_ap_ack">out, 1, ap_none, B_7_0_read, scalar</column>
<column name="B_7_1_read">in, 32, ap_none, B_7_1_read, scalar</column>
<column name="B_7_1_read_ap_ack">out, 1, ap_none, B_7_1_read, scalar</column>
<column name="B_7_2_read">in, 32, ap_none, B_7_2_read, scalar</column>
<column name="B_7_2_read_ap_ack">out, 1, ap_none, B_7_2_read, scalar</column>
<column name="B_7_3_read">in, 32, ap_none, B_7_3_read, scalar</column>
<column name="B_7_3_read_ap_ack">out, 1, ap_none, B_7_3_read, scalar</column>
<column name="B_7_4_read">in, 32, ap_none, B_7_4_read, scalar</column>
<column name="B_7_4_read_ap_ack">out, 1, ap_none, B_7_4_read, scalar</column>
<column name="B_7_5_read">in, 32, ap_none, B_7_5_read, scalar</column>
<column name="B_7_5_read_ap_ack">out, 1, ap_none, B_7_5_read, scalar</column>
<column name="B_7_6_read">in, 32, ap_none, B_7_6_read, scalar</column>
<column name="B_7_6_read_ap_ack">out, 1, ap_none, B_7_6_read, scalar</column>
<column name="C_din">out, 32, ap_fifo, C, pointer</column>
<column name="C_full_n">in, 1, ap_fifo, C, pointer</column>
<column name="C_write">out, 1, ap_fifo, C, pointer</column>
<column name="ap_clk">in, 1, ap_ctrl_hs, DCT_MAT_Multiply2, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, DCT_MAT_Multiply2, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, DCT_MAT_Multiply2, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, DCT_MAT_Multiply2, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, DCT_MAT_Multiply2, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, DCT_MAT_Multiply2, return value</column>
</table>
</item>
</section>
</profile>
