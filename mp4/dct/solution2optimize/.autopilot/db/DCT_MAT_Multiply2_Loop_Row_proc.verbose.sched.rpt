

================================================================
== Vivado HLS Report for 'DCT_MAT_Multiply2_Loop_Row_proc'
================================================================
* Date:           Wed Oct 28 18:15:01 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        dct
* Solution:       solution2optimize
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      9.59|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   67|   67|   67|   67|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                  |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name    | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Row_RowCaching  |   65|   65|         3|          1|          1|    64|    yes   |
        +------------------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 5
* Pipeline: 1
  Pipeline-0: II = 1, D = 3, States = { 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	5  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	2  / true
5 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: A_cached_row_7_36 [1/1] 0.00ns
newFuncRoot:0  %A_cached_row_7_36 = alloca float, align 4

ST_1: A_cached_row_7_32 [1/1] 0.00ns
newFuncRoot:1  %A_cached_row_7_32 = alloca float, align 4

ST_1: A_cached_row_7_27 [1/1] 0.00ns
newFuncRoot:2  %A_cached_row_7_27 = alloca float, align 4

ST_1: A_cached_row_7_21 [1/1] 0.00ns
newFuncRoot:3  %A_cached_row_7_21 = alloca float, align 4

ST_1: A_cached_row_7_14 [1/1] 0.00ns
newFuncRoot:4  %A_cached_row_7_14 = alloca float, align 4

ST_1: A_cached_row_7_37 [1/1] 0.00ns
newFuncRoot:5  %A_cached_row_7_37 = alloca float, align 4

ST_1: A_cached_row_7_38 [1/1] 0.00ns
newFuncRoot:6  %A_cached_row_7_38 = alloca float, align 4

ST_1: A_cached_row_7_39 [1/1] 0.00ns
newFuncRoot:7  %A_cached_row_7_39 = alloca float, align 4

ST_1: stg_14 [1/1] 1.57ns
newFuncRoot:8  br label %0


 <State 2>: 7.68ns
ST_2: indvar_flatten [1/1] 0.00ns
:0  %indvar_flatten = phi i7 [ 0, %newFuncRoot ], [ %indvar_flatten_next, %.reset ]

ST_2: i_0_i_i [1/1] 0.00ns
:1  %i_0_i_i = phi i4 [ 0, %newFuncRoot ], [ %i_0_i_i_mid2, %.reset ]

ST_2: k_0_i_i [1/1] 0.00ns
:2  %k_0_i_i = phi i4 [ 0, %newFuncRoot ], [ %k, %.reset ]

ST_2: exitcond_flatten [1/1] 1.97ns
:3  %exitcond_flatten = icmp eq i7 %indvar_flatten, -64

ST_2: indvar_flatten_next [1/1] 1.72ns
:4  %indvar_flatten_next = add i7 %indvar_flatten, 1

ST_2: stg_20 [1/1] 0.00ns
:5  br i1 %exitcond_flatten, label %.preheader.exitStub, label %.reset

ST_2: exitcond2_i_i5 [1/1] 1.88ns
.reset:10  %exitcond2_i_i5 = icmp eq i4 %k_0_i_i, -8

ST_2: k_0_i_i_mid2 [1/1] 1.37ns
.reset:11  %k_0_i_i_mid2 = select i1 %exitcond2_i_i5, i4 0, i4 %k_0_i_i

ST_2: tmp_1_i_dup3 [1/1] 0.80ns
.reset:12  %tmp_1_i_dup3 = add i4 1, %i_0_i_i

ST_2: i_0_i_i_mid2 [1/1] 1.37ns
.reset:13  %i_0_i_i_mid2 = select i1 %exitcond2_i_i5, i4 %tmp_1_i_dup3, i4 %i_0_i_i

ST_2: tmp_2_i_trn_cast [1/1] 0.00ns
.reset:17  %tmp_2_i_trn_cast = zext i4 %k_0_i_i_mid2 to i8

ST_2: tmp [1/1] 0.00ns
.reset:18  %tmp = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i_0_i_i_mid2, i3 0)

ST_2: p_addr_cast [1/1] 0.00ns
.reset:19  %p_addr_cast = zext i7 %tmp to i8

ST_2: p_addr1 [1/1] 1.72ns
.reset:20  %p_addr1 = add i8 %p_addr_cast, %tmp_2_i_trn_cast

ST_2: tmp_19 [1/1] 0.00ns
.reset:21  %tmp_19 = zext i8 %p_addr1 to i64

ST_2: A_addr [1/1] 0.00ns
.reset:22  %A_addr = getelementptr [64 x float]* %A, i64 0, i64 %tmp_19

ST_2: A_cached_row_0 [2/2] 2.71ns
.reset:23  %A_cached_row_0 = load float* %A_addr, align 4

ST_2: tmp_21 [1/1] 0.00ns
.reset:24  %tmp_21 = trunc i4 %k_0_i_i_mid2 to i3

ST_2: k [1/1] 0.80ns
.reset:68  %k = add i4 1, %k_0_i_i_mid2


 <State 3>: 2.71ns
ST_3: A_cached_row_0 [1/2] 2.71ns
.reset:23  %A_cached_row_0 = load float* %A_addr, align 4

ST_3: sel_tmp [1/1] 1.62ns
.reset:25  %sel_tmp = icmp eq i3 %tmp_21, -2

ST_3: sel_tmp2 [1/1] 1.62ns
.reset:27  %sel_tmp2 = icmp eq i3 %tmp_21, -3


 <State 4>: 9.59ns
ST_4: A_cached_row_7_36_load_1 [1/1] 0.00ns
.reset:0  %A_cached_row_7_36_load_1 = load float* %A_cached_row_7_36, align 4

ST_4: A_cached_row_7_32_load_1 [1/1] 0.00ns
.reset:1  %A_cached_row_7_32_load_1 = load float* %A_cached_row_7_32, align 4

ST_4: A_cached_row_7_27_load_1 [1/1] 0.00ns
.reset:2  %A_cached_row_7_27_load_1 = load float* %A_cached_row_7_27, align 4

ST_4: A_cached_row_7_21_load_1 [1/1] 0.00ns
.reset:3  %A_cached_row_7_21_load_1 = load float* %A_cached_row_7_21, align 4

ST_4: A_cached_row_7_14_load_1 [1/1] 0.00ns
.reset:4  %A_cached_row_7_14_load_1 = load float* %A_cached_row_7_14, align 4

ST_4: A_cached_row_7_37_load_1 [1/1] 0.00ns
.reset:5  %A_cached_row_7_37_load_1 = load float* %A_cached_row_7_37, align 4

ST_4: A_cached_row_7_38_load_1 [1/1] 0.00ns
.reset:6  %A_cached_row_7_38_load_1 = load float* %A_cached_row_7_38, align 4

ST_4: A_cached_row_7_39_load_1 [1/1] 0.00ns
.reset:7  %A_cached_row_7_39_load_1 = load float* %A_cached_row_7_39, align 4

ST_4: stg_45 [1/1] 0.00ns
.reset:8  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @str2)

ST_4: empty [1/1] 0.00ns
.reset:9  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)

ST_4: stg_47 [1/1] 0.00ns
.reset:14  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str7) nounwind

ST_4: tmp_s [1/1] 0.00ns
.reset:15  %tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str7)

ST_4: stg_49 [1/1] 0.00ns
.reset:16  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_4: A_cached_row_7 [1/1] 1.37ns
.reset:26  %A_cached_row_7 = select i1 %sel_tmp, float %A_cached_row_7_39_load_1, float %A_cached_row_0

ST_4: A_cached_row_7_1 [1/1] 1.37ns
.reset:28  %A_cached_row_7_1 = select i1 %sel_tmp2, float %A_cached_row_7_39_load_1, float %A_cached_row_7

ST_4: sel_tmp4 [1/1] 1.62ns
.reset:29  %sel_tmp4 = icmp eq i3 %tmp_21, -4

ST_4: A_cached_row_7_2 [1/1] 1.37ns
.reset:30  %A_cached_row_7_2 = select i1 %sel_tmp4, float %A_cached_row_7_39_load_1, float %A_cached_row_7_1

ST_4: sel_tmp6 [1/1] 1.62ns
.reset:31  %sel_tmp6 = icmp eq i3 %tmp_21, 3

ST_4: A_cached_row_7_3 [1/1] 1.37ns
.reset:32  %A_cached_row_7_3 = select i1 %sel_tmp6, float %A_cached_row_7_39_load_1, float %A_cached_row_7_2

ST_4: sel_tmp8 [1/1] 1.62ns
.reset:33  %sel_tmp8 = icmp eq i3 %tmp_21, 2

ST_4: A_cached_row_7_4 [1/1] 1.37ns
.reset:34  %A_cached_row_7_4 = select i1 %sel_tmp8, float %A_cached_row_7_39_load_1, float %A_cached_row_7_3

ST_4: sel_tmp1 [1/1] 1.62ns
.reset:35  %sel_tmp1 = icmp eq i3 %tmp_21, 1

ST_4: A_cached_row_7_5 [1/1] 1.37ns
.reset:36  %A_cached_row_7_5 = select i1 %sel_tmp1, float %A_cached_row_7_39_load_1, float %A_cached_row_7_4

ST_4: sel_tmp5 [1/1] 1.62ns
.reset:37  %sel_tmp5 = icmp eq i3 %tmp_21, 0

ST_4: A_cached_row_7_6 [1/1] 1.37ns
.reset:38  %A_cached_row_7_6 = select i1 %sel_tmp5, float %A_cached_row_7_39_load_1, float %A_cached_row_7_5

ST_4: A_cached_row_7_7 [1/1] 1.37ns
.reset:39  %A_cached_row_7_7 = select i1 %sel_tmp, float %A_cached_row_0, float %A_cached_row_7_38_load_1

ST_4: A_cached_row_7_8 [1/1] 1.37ns
.reset:40  %A_cached_row_7_8 = select i1 %sel_tmp2, float %A_cached_row_7_38_load_1, float %A_cached_row_7_7

ST_4: A_cached_row_7_9 [1/1] 1.37ns
.reset:41  %A_cached_row_7_9 = select i1 %sel_tmp4, float %A_cached_row_7_38_load_1, float %A_cached_row_7_8

ST_4: A_cached_row_7_41 [1/1] 1.37ns
.reset:42  %A_cached_row_7_41 = select i1 %sel_tmp6, float %A_cached_row_7_38_load_1, float %A_cached_row_7_9

ST_4: A_cached_row_7_45 [1/1] 1.37ns
.reset:43  %A_cached_row_7_45 = select i1 %sel_tmp8, float %A_cached_row_7_38_load_1, float %A_cached_row_7_41

ST_4: A_cached_row_7_46 [1/1] 1.37ns
.reset:44  %A_cached_row_7_46 = select i1 %sel_tmp1, float %A_cached_row_7_38_load_1, float %A_cached_row_7_45

ST_4: A_cached_row_7_47 [1/1] 1.37ns
.reset:45  %A_cached_row_7_47 = select i1 %sel_tmp5, float %A_cached_row_7_38_load_1, float %A_cached_row_7_46

ST_4: A_cached_row_7_48 [1/1] 1.37ns
.reset:46  %A_cached_row_7_48 = select i1 %sel_tmp2, float %A_cached_row_0, float %A_cached_row_7_37_load_1

ST_4: A_cached_row_7_49 [1/1] 1.37ns
.reset:47  %A_cached_row_7_49 = select i1 %sel_tmp4, float %A_cached_row_7_37_load_1, float %A_cached_row_7_48

ST_4: A_cached_row_7_50 [1/1] 1.37ns
.reset:48  %A_cached_row_7_50 = select i1 %sel_tmp6, float %A_cached_row_7_37_load_1, float %A_cached_row_7_49

ST_4: A_cached_row_7_51 [1/1] 1.37ns
.reset:49  %A_cached_row_7_51 = select i1 %sel_tmp8, float %A_cached_row_7_37_load_1, float %A_cached_row_7_50

ST_4: A_cached_row_7_52 [1/1] 1.37ns
.reset:50  %A_cached_row_7_52 = select i1 %sel_tmp1, float %A_cached_row_7_37_load_1, float %A_cached_row_7_51

ST_4: A_cached_row_7_53 [1/1] 1.37ns
.reset:51  %A_cached_row_7_53 = select i1 %sel_tmp5, float %A_cached_row_7_37_load_1, float %A_cached_row_7_52

ST_4: A_cached_row_7_54 [1/1] 1.37ns
.reset:52  %A_cached_row_7_54 = select i1 %sel_tmp4, float %A_cached_row_0, float %A_cached_row_7_14_load_1

ST_4: A_cached_row_7_55 [1/1] 1.37ns
.reset:53  %A_cached_row_7_55 = select i1 %sel_tmp6, float %A_cached_row_7_14_load_1, float %A_cached_row_7_54

ST_4: A_cached_row_7_56 [1/1] 1.37ns
.reset:54  %A_cached_row_7_56 = select i1 %sel_tmp8, float %A_cached_row_7_14_load_1, float %A_cached_row_7_55

ST_4: A_cached_row_7_57 [1/1] 1.37ns
.reset:55  %A_cached_row_7_57 = select i1 %sel_tmp1, float %A_cached_row_7_14_load_1, float %A_cached_row_7_56

ST_4: A_cached_row_7_58 [1/1] 1.37ns
.reset:56  %A_cached_row_7_58 = select i1 %sel_tmp5, float %A_cached_row_7_14_load_1, float %A_cached_row_7_57

ST_4: A_cached_row_7_59 [1/1] 1.37ns
.reset:57  %A_cached_row_7_59 = select i1 %sel_tmp6, float %A_cached_row_0, float %A_cached_row_7_21_load_1

ST_4: A_cached_row_7_60 [1/1] 1.37ns
.reset:58  %A_cached_row_7_60 = select i1 %sel_tmp8, float %A_cached_row_7_21_load_1, float %A_cached_row_7_59

ST_4: A_cached_row_7_61 [1/1] 1.37ns
.reset:59  %A_cached_row_7_61 = select i1 %sel_tmp1, float %A_cached_row_7_21_load_1, float %A_cached_row_7_60

ST_4: A_cached_row_7_62 [1/1] 1.37ns
.reset:60  %A_cached_row_7_62 = select i1 %sel_tmp5, float %A_cached_row_7_21_load_1, float %A_cached_row_7_61

ST_4: A_cached_row_7_63 [1/1] 1.37ns
.reset:61  %A_cached_row_7_63 = select i1 %sel_tmp8, float %A_cached_row_0, float %A_cached_row_7_27_load_1

ST_4: A_cached_row_7_64 [1/1] 1.37ns
.reset:62  %A_cached_row_7_64 = select i1 %sel_tmp1, float %A_cached_row_7_27_load_1, float %A_cached_row_7_63

ST_4: A_cached_row_7_65 [1/1] 1.37ns
.reset:63  %A_cached_row_7_65 = select i1 %sel_tmp5, float %A_cached_row_7_27_load_1, float %A_cached_row_7_64

ST_4: A_cached_row_7_66 [1/1] 1.37ns
.reset:64  %A_cached_row_7_66 = select i1 %sel_tmp1, float %A_cached_row_0, float %A_cached_row_7_32_load_1

ST_4: A_cached_row_7_67 [1/1] 1.37ns
.reset:65  %A_cached_row_7_67 = select i1 %sel_tmp5, float %A_cached_row_7_32_load_1, float %A_cached_row_7_66

ST_4: A_cached_row_7_68 [1/1] 1.37ns
.reset:66  %A_cached_row_7_68 = select i1 %sel_tmp5, float %A_cached_row_0, float %A_cached_row_7_36_load_1

ST_4: empty_5 [1/1] 0.00ns
.reset:67  %empty_5 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str7, i32 %tmp_s)

ST_4: stg_91 [1/1] 0.00ns
.reset:69  store float %A_cached_row_7_6, float* %A_cached_row_7_39, align 4

ST_4: stg_92 [1/1] 0.00ns
.reset:70  store float %A_cached_row_7_47, float* %A_cached_row_7_38, align 4

ST_4: stg_93 [1/1] 0.00ns
.reset:71  store float %A_cached_row_7_53, float* %A_cached_row_7_37, align 4

ST_4: stg_94 [1/1] 0.00ns
.reset:72  store float %A_cached_row_7_58, float* %A_cached_row_7_14, align 4

ST_4: stg_95 [1/1] 0.00ns
.reset:73  store float %A_cached_row_7_62, float* %A_cached_row_7_21, align 4

ST_4: stg_96 [1/1] 0.00ns
.reset:74  store float %A_cached_row_7_65, float* %A_cached_row_7_27, align 4

ST_4: stg_97 [1/1] 0.00ns
.reset:75  store float %A_cached_row_7_67, float* %A_cached_row_7_32, align 4

ST_4: stg_98 [1/1] 0.00ns
.reset:76  store float %A_cached_row_7_68, float* %A_cached_row_7_36, align 4

ST_4: stg_99 [1/1] 0.00ns
.reset:77  br label %0


 <State 5>: 0.00ns
ST_5: A_cached_row_7_36_load [1/1] 0.00ns
.preheader.exitStub:0  %A_cached_row_7_36_load = load float* %A_cached_row_7_36, align 4

ST_5: A_cached_row_7_32_load [1/1] 0.00ns
.preheader.exitStub:1  %A_cached_row_7_32_load = load float* %A_cached_row_7_32, align 4

ST_5: A_cached_row_7_27_load [1/1] 0.00ns
.preheader.exitStub:2  %A_cached_row_7_27_load = load float* %A_cached_row_7_27, align 4

ST_5: A_cached_row_7_21_load [1/1] 0.00ns
.preheader.exitStub:3  %A_cached_row_7_21_load = load float* %A_cached_row_7_21, align 4

ST_5: A_cached_row_7_14_load [1/1] 0.00ns
.preheader.exitStub:4  %A_cached_row_7_14_load = load float* %A_cached_row_7_14, align 4

ST_5: A_cached_row_7_37_load [1/1] 0.00ns
.preheader.exitStub:5  %A_cached_row_7_37_load = load float* %A_cached_row_7_37, align 4

ST_5: A_cached_row_7_38_load [1/1] 0.00ns
.preheader.exitStub:6  %A_cached_row_7_38_load = load float* %A_cached_row_7_38, align 4

ST_5: A_cached_row_7_39_load [1/1] 0.00ns
.preheader.exitStub:7  %A_cached_row_7_39_load = load float* %A_cached_row_7_39, align 4

ST_5: mrv [1/1] 0.00ns
.preheader.exitStub:8  %mrv = insertvalue { float, float, float, float, float, float, float, float } undef, float %A_cached_row_7_39_load, 0

ST_5: mrv_1 [1/1] 0.00ns
.preheader.exitStub:9  %mrv_1 = insertvalue { float, float, float, float, float, float, float, float } %mrv, float %A_cached_row_7_38_load, 1

ST_5: mrv_2 [1/1] 0.00ns
.preheader.exitStub:10  %mrv_2 = insertvalue { float, float, float, float, float, float, float, float } %mrv_1, float %A_cached_row_7_37_load, 2

ST_5: mrv_3 [1/1] 0.00ns
.preheader.exitStub:11  %mrv_3 = insertvalue { float, float, float, float, float, float, float, float } %mrv_2, float %A_cached_row_7_14_load, 3

ST_5: mrv_4 [1/1] 0.00ns
.preheader.exitStub:12  %mrv_4 = insertvalue { float, float, float, float, float, float, float, float } %mrv_3, float %A_cached_row_7_21_load, 4

ST_5: mrv_5 [1/1] 0.00ns
.preheader.exitStub:13  %mrv_5 = insertvalue { float, float, float, float, float, float, float, float } %mrv_4, float %A_cached_row_7_27_load, 5

ST_5: mrv_6 [1/1] 0.00ns
.preheader.exitStub:14  %mrv_6 = insertvalue { float, float, float, float, float, float, float, float } %mrv_5, float %A_cached_row_7_32_load, 6

ST_5: mrv_7 [1/1] 0.00ns
.preheader.exitStub:15  %mrv_7 = insertvalue { float, float, float, float, float, float, float, float } %mrv_6, float %A_cached_row_7_36_load, 7

ST_5: stg_116 [1/1] 0.00ns
.preheader.exitStub:16  ret { float, float, float, float, float, float, float, float } %mrv_7



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
