

================================================================
== Vivado HLS Report for 'DCT_MAT_Multiply2'
================================================================
* Date:           Thu Oct 22 22:21:35 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        dct
* Solution:       solution2optimize
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      7.64|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |  300|  300|  301|  301| dataflow |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 2
* Pipeline: 0
* Dataflow Pipeline: 1
  DF-Pipeline-0: Size = 2, States = { 1 2 }

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
* FSM state operations: 

 <State 1>: 1.04ns
ST_1: B_7_6_read_1 [1/1] 1.04ns
codeRepl:2  %B_7_6_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_7_6_read)

ST_1: B_7_5_read_1 [1/1] 1.04ns
codeRepl:3  %B_7_5_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_7_5_read)

ST_1: B_7_4_read_1 [1/1] 1.04ns
codeRepl:4  %B_7_4_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_7_4_read)

ST_1: B_7_3_read_1 [1/1] 1.04ns
codeRepl:5  %B_7_3_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_7_3_read)

ST_1: B_7_2_read_1 [1/1] 1.04ns
codeRepl:6  %B_7_2_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_7_2_read)

ST_1: B_7_1_read_1 [1/1] 1.04ns
codeRepl:7  %B_7_1_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_7_1_read)

ST_1: B_7_0_read_1 [1/1] 1.04ns
codeRepl:8  %B_7_0_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_7_0_read)

ST_1: B_6_7_read_1 [1/1] 1.04ns
codeRepl:9  %B_6_7_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_6_7_read)

ST_1: B_6_5_read_1 [1/1] 1.04ns
codeRepl:10  %B_6_5_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_6_5_read)

ST_1: B_6_4_read_1 [1/1] 1.04ns
codeRepl:11  %B_6_4_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_6_4_read)

ST_1: B_6_3_read_1 [1/1] 1.04ns
codeRepl:12  %B_6_3_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_6_3_read)

ST_1: B_6_2_read_1 [1/1] 1.04ns
codeRepl:13  %B_6_2_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_6_2_read)

ST_1: B_6_1_read_1 [1/1] 1.04ns
codeRepl:14  %B_6_1_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_6_1_read)

ST_1: B_6_0_read_1 [1/1] 1.04ns
codeRepl:15  %B_6_0_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_6_0_read)

ST_1: B_5_7_read_1 [1/1] 1.04ns
codeRepl:16  %B_5_7_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_5_7_read)

ST_1: B_5_6_read_1 [1/1] 1.04ns
codeRepl:17  %B_5_6_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_5_6_read)

ST_1: B_5_4_read_1 [1/1] 1.04ns
codeRepl:18  %B_5_4_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_5_4_read)

ST_1: B_5_3_read_1 [1/1] 1.04ns
codeRepl:19  %B_5_3_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_5_3_read)

ST_1: B_5_2_read_1 [1/1] 1.04ns
codeRepl:20  %B_5_2_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_5_2_read)

ST_1: B_5_1_read_1 [1/1] 1.04ns
codeRepl:21  %B_5_1_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_5_1_read)

ST_1: B_5_0_read_1 [1/1] 1.04ns
codeRepl:22  %B_5_0_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_5_0_read)

ST_1: B_4_7_read_1 [1/1] 1.04ns
codeRepl:23  %B_4_7_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_4_7_read)

ST_1: B_4_6_read_1 [1/1] 1.04ns
codeRepl:24  %B_4_6_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_4_6_read)

ST_1: B_4_5_read_1 [1/1] 1.04ns
codeRepl:25  %B_4_5_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_4_5_read)

ST_1: B_4_3_read_1 [1/1] 1.04ns
codeRepl:26  %B_4_3_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_4_3_read)

ST_1: B_4_2_read_1 [1/1] 1.04ns
codeRepl:27  %B_4_2_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_4_2_read)

ST_1: B_4_1_read_1 [1/1] 1.04ns
codeRepl:28  %B_4_1_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_4_1_read)

ST_1: B_3_7_read_1 [1/1] 1.04ns
codeRepl:29  %B_3_7_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_3_7_read)

ST_1: B_3_6_read_1 [1/1] 1.04ns
codeRepl:30  %B_3_6_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_3_6_read)

ST_1: B_3_5_read_1 [1/1] 1.04ns
codeRepl:31  %B_3_5_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_3_5_read)

ST_1: B_3_4_read_1 [1/1] 1.04ns
codeRepl:32  %B_3_4_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_3_4_read)

ST_1: B_3_2_read_1 [1/1] 1.04ns
codeRepl:33  %B_3_2_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_3_2_read)

ST_1: B_3_1_read_1 [1/1] 1.04ns
codeRepl:34  %B_3_1_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_3_1_read)

ST_1: B_3_0_read_1 [1/1] 1.04ns
codeRepl:35  %B_3_0_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_3_0_read)

ST_1: B_2_7_read_1 [1/1] 1.04ns
codeRepl:36  %B_2_7_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_2_7_read)

ST_1: B_2_6_read_1 [1/1] 1.04ns
codeRepl:37  %B_2_6_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_2_6_read)

ST_1: B_2_5_read_1 [1/1] 1.04ns
codeRepl:38  %B_2_5_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_2_5_read)

ST_1: B_2_4_read_1 [1/1] 1.04ns
codeRepl:39  %B_2_4_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_2_4_read)

ST_1: B_2_3_read_1 [1/1] 1.04ns
codeRepl:40  %B_2_3_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_2_3_read)

ST_1: B_2_1_read_1 [1/1] 1.04ns
codeRepl:41  %B_2_1_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_2_1_read)

ST_1: B_2_0_read_1 [1/1] 1.04ns
codeRepl:42  %B_2_0_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_2_0_read)

ST_1: B_1_7_read_1 [1/1] 1.04ns
codeRepl:43  %B_1_7_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_1_7_read)

ST_1: B_1_6_read_1 [1/1] 1.04ns
codeRepl:44  %B_1_6_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_1_6_read)

ST_1: B_1_5_read_1 [1/1] 1.04ns
codeRepl:45  %B_1_5_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_1_5_read)

ST_1: B_1_4_read_1 [1/1] 1.04ns
codeRepl:46  %B_1_4_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_1_4_read)

ST_1: B_1_3_read_1 [1/1] 1.04ns
codeRepl:47  %B_1_3_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_1_3_read)

ST_1: B_1_2_read_1 [1/1] 1.04ns
codeRepl:48  %B_1_2_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_1_2_read)

ST_1: B_1_0_read_1 [1/1] 1.04ns
codeRepl:49  %B_1_0_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_1_0_read)

ST_1: B_0_7_read_1 [1/1] 1.04ns
codeRepl:50  %B_0_7_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_0_7_read)

ST_1: B_0_6_read_1 [1/1] 1.04ns
codeRepl:51  %B_0_6_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_0_6_read)

ST_1: B_0_5_read_1 [1/1] 1.04ns
codeRepl:52  %B_0_5_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_0_5_read)

ST_1: B_0_3_read_1 [1/1] 1.04ns
codeRepl:53  %B_0_3_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_0_3_read)

ST_1: B_0_2_read_1 [1/1] 1.04ns
codeRepl:54  %B_0_2_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_0_2_read)

ST_1: B_0_1_read_1 [1/1] 1.04ns
codeRepl:55  %B_0_1_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %B_0_1_read)

ST_1: stg_57 [2/2] 0.00ns
codeRepl:56  call fastcc void @DCT_MAT_Multiply2_Loop_Row_proc([64 x float]* nocapture %A, float %B_0_1_read_1, float %B_0_2_read_1, float %B_0_3_read_1, float %B_0_5_read_1, float %B_0_6_read_1, float %B_0_7_read_1, float %B_1_0_read_1, float %B_1_2_read_1, float %B_1_3_read_1, float %B_1_4_read_1, float %B_1_5_read_1, float %B_1_6_read_1, float %B_1_7_read_1, float %B_2_0_read_1, float %B_2_1_read_1, float %B_2_3_read_1, float %B_2_4_read_1, float %B_2_5_read_1, float %B_2_6_read_1, float %B_2_7_read_1, float %B_3_0_read_1, float %B_3_1_read_1, float %B_3_2_read_1, float %B_3_4_read_1, float %B_3_5_read_1, float %B_3_6_read_1, float %B_3_7_read_1, float %B_4_1_read_1, float %B_4_2_read_1, float %B_4_3_read_1, float %B_4_5_read_1, float %B_4_6_read_1, float %B_4_7_read_1, float %B_5_0_read_1, float %B_5_1_read_1, float %B_5_2_read_1, float %B_5_3_read_1, float %B_5_4_read_1, float %B_5_6_read_1, float %B_5_7_read_1, float %B_6_0_read_1, float %B_6_1_read_1, float %B_6_2_read_1, float %B_6_3_read_1, float %B_6_4_read_1, float %B_6_5_read_1, float %B_6_7_read_1, float %B_7_0_read_1, float %B_7_1_read_1, float %B_7_2_read_1, float %B_7_3_read_1, float %B_7_4_read_1, float %B_7_5_read_1, float %B_7_6_read_1, float* %C)


 <State 2>: 0.00ns
ST_2: stg_58 [1/1] 0.00ns
codeRepl:0  call void (...)* @_ssdm_op_SpecDataflowPipeline(i32 -1, [1 x i8]* @p_str2) nounwind

ST_2: stg_59 [1/1] 0.00ns
codeRepl:1  call void (...)* @_ssdm_op_SpecInterface(float* %C, [8 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_2: stg_60 [1/2] 0.00ns
codeRepl:56  call fastcc void @DCT_MAT_Multiply2_Loop_Row_proc([64 x float]* nocapture %A, float %B_0_1_read_1, float %B_0_2_read_1, float %B_0_3_read_1, float %B_0_5_read_1, float %B_0_6_read_1, float %B_0_7_read_1, float %B_1_0_read_1, float %B_1_2_read_1, float %B_1_3_read_1, float %B_1_4_read_1, float %B_1_5_read_1, float %B_1_6_read_1, float %B_1_7_read_1, float %B_2_0_read_1, float %B_2_1_read_1, float %B_2_3_read_1, float %B_2_4_read_1, float %B_2_5_read_1, float %B_2_6_read_1, float %B_2_7_read_1, float %B_3_0_read_1, float %B_3_1_read_1, float %B_3_2_read_1, float %B_3_4_read_1, float %B_3_5_read_1, float %B_3_6_read_1, float %B_3_7_read_1, float %B_4_1_read_1, float %B_4_2_read_1, float %B_4_3_read_1, float %B_4_5_read_1, float %B_4_6_read_1, float %B_4_7_read_1, float %B_5_0_read_1, float %B_5_1_read_1, float %B_5_2_read_1, float %B_5_3_read_1, float %B_5_4_read_1, float %B_5_6_read_1, float %B_5_7_read_1, float %B_6_0_read_1, float %B_6_1_read_1, float %B_6_2_read_1, float %B_6_3_read_1, float %B_6_4_read_1, float %B_6_5_read_1, float %B_6_7_read_1, float %B_7_0_read_1, float %B_7_1_read_1, float %B_7_2_read_1, float %B_7_3_read_1, float %B_7_4_read_1, float %B_7_5_read_1, float %B_7_6_read_1, float* %C)

ST_2: stg_61 [1/1] 0.00ns
codeRepl:57  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
