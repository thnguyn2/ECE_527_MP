

================================================================
== Vivado HLS Report for 'DCT_MAT_Multiply_Loop_Row_proc'
================================================================
* Date:           Fri Oct 30 11:20:56 2015

* Version:        2015.1 (Build 1215546 on Mon Apr 27 19:24:50 PM 2015)
* Project:        dct
* Solution:       solution2optimize
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      7.64|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  110|  110|  110|  110|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------+-----+-----+----------+-----------+-----------+------+----------+
        |           |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Row_Col  |  108|  108|        46|          1|          1|    64|    yes   |
        +-----------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 46


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 48
* Pipeline: 1
  Pipeline-0: II = 1, D = 46, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	48  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	2  / true
48 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: p_read_1 [1/1] 0.00ns
newFuncRoot:0  %p_read_1 = call float @_ssdm_op_Read.ap_auto.float(float %p_read63)

ST_1: p_read_2 [1/1] 0.00ns
newFuncRoot:1  %p_read_2 = call float @_ssdm_op_Read.ap_auto.float(float %p_read62)

ST_1: p_read_3 [1/1] 0.00ns
newFuncRoot:2  %p_read_3 = call float @_ssdm_op_Read.ap_auto.float(float %p_read61)

ST_1: p_read_4 [1/1] 0.00ns
newFuncRoot:3  %p_read_4 = call float @_ssdm_op_Read.ap_auto.float(float %p_read60)

ST_1: p_read_5 [1/1] 0.00ns
newFuncRoot:4  %p_read_5 = call float @_ssdm_op_Read.ap_auto.float(float %p_read59)

ST_1: p_read_6 [1/1] 0.00ns
newFuncRoot:5  %p_read_6 = call float @_ssdm_op_Read.ap_auto.float(float %p_read58)

ST_1: p_read_7 [1/1] 0.00ns
newFuncRoot:6  %p_read_7 = call float @_ssdm_op_Read.ap_auto.float(float %p_read57)

ST_1: p_read_8 [1/1] 0.00ns
newFuncRoot:7  %p_read_8 = call float @_ssdm_op_Read.ap_auto.float(float %p_read56)

ST_1: p_read_9 [1/1] 0.00ns
newFuncRoot:8  %p_read_9 = call float @_ssdm_op_Read.ap_auto.float(float %p_read55)

ST_1: p_read_10 [1/1] 0.00ns
newFuncRoot:9  %p_read_10 = call float @_ssdm_op_Read.ap_auto.float(float %p_read54)

ST_1: p_read_11 [1/1] 0.00ns
newFuncRoot:10  %p_read_11 = call float @_ssdm_op_Read.ap_auto.float(float %p_read53)

ST_1: p_read_12 [1/1] 0.00ns
newFuncRoot:11  %p_read_12 = call float @_ssdm_op_Read.ap_auto.float(float %p_read52)

ST_1: p_read_13 [1/1] 0.00ns
newFuncRoot:12  %p_read_13 = call float @_ssdm_op_Read.ap_auto.float(float %p_read51)

ST_1: p_read_14 [1/1] 0.00ns
newFuncRoot:13  %p_read_14 = call float @_ssdm_op_Read.ap_auto.float(float %p_read50)

ST_1: p_read_15 [1/1] 0.00ns
newFuncRoot:14  %p_read_15 = call float @_ssdm_op_Read.ap_auto.float(float %p_read49)

ST_1: p_read_16 [1/1] 0.00ns
newFuncRoot:15  %p_read_16 = call float @_ssdm_op_Read.ap_auto.float(float %p_read48)

ST_1: p_read_17 [1/1] 0.00ns
newFuncRoot:16  %p_read_17 = call float @_ssdm_op_Read.ap_auto.float(float %p_read47)

ST_1: p_read_18 [1/1] 0.00ns
newFuncRoot:17  %p_read_18 = call float @_ssdm_op_Read.ap_auto.float(float %p_read46)

ST_1: p_read_19 [1/1] 0.00ns
newFuncRoot:18  %p_read_19 = call float @_ssdm_op_Read.ap_auto.float(float %p_read45)

ST_1: p_read_20 [1/1] 0.00ns
newFuncRoot:19  %p_read_20 = call float @_ssdm_op_Read.ap_auto.float(float %p_read44)

ST_1: p_read_21 [1/1] 0.00ns
newFuncRoot:20  %p_read_21 = call float @_ssdm_op_Read.ap_auto.float(float %p_read43)

ST_1: p_read_22 [1/1] 0.00ns
newFuncRoot:21  %p_read_22 = call float @_ssdm_op_Read.ap_auto.float(float %p_read42)

ST_1: p_read_23 [1/1] 0.00ns
newFuncRoot:22  %p_read_23 = call float @_ssdm_op_Read.ap_auto.float(float %p_read41)

ST_1: p_read_24 [1/1] 0.00ns
newFuncRoot:23  %p_read_24 = call float @_ssdm_op_Read.ap_auto.float(float %p_read40)

ST_1: p_read_25 [1/1] 0.00ns
newFuncRoot:24  %p_read_25 = call float @_ssdm_op_Read.ap_auto.float(float %p_read39)

ST_1: p_read_26 [1/1] 0.00ns
newFuncRoot:25  %p_read_26 = call float @_ssdm_op_Read.ap_auto.float(float %p_read38)

ST_1: p_read_27 [1/1] 0.00ns
newFuncRoot:26  %p_read_27 = call float @_ssdm_op_Read.ap_auto.float(float %p_read37)

ST_1: p_read_28 [1/1] 0.00ns
newFuncRoot:27  %p_read_28 = call float @_ssdm_op_Read.ap_auto.float(float %p_read36)

ST_1: p_read_29 [1/1] 0.00ns
newFuncRoot:28  %p_read_29 = call float @_ssdm_op_Read.ap_auto.float(float %p_read35)

ST_1: p_read_30 [1/1] 0.00ns
newFuncRoot:29  %p_read_30 = call float @_ssdm_op_Read.ap_auto.float(float %p_read34)

ST_1: p_read_31 [1/1] 0.00ns
newFuncRoot:30  %p_read_31 = call float @_ssdm_op_Read.ap_auto.float(float %p_read33)

ST_1: p_read_32 [1/1] 0.00ns
newFuncRoot:31  %p_read_32 = call float @_ssdm_op_Read.ap_auto.float(float %p_read32)

ST_1: p_read_33 [1/1] 0.00ns
newFuncRoot:32  %p_read_33 = call float @_ssdm_op_Read.ap_auto.float(float %p_read31)

ST_1: p_read_34 [1/1] 0.00ns
newFuncRoot:33  %p_read_34 = call float @_ssdm_op_Read.ap_auto.float(float %p_read30)

ST_1: p_read_35 [1/1] 0.00ns
newFuncRoot:34  %p_read_35 = call float @_ssdm_op_Read.ap_auto.float(float %p_read29)

ST_1: p_read_36 [1/1] 0.00ns
newFuncRoot:35  %p_read_36 = call float @_ssdm_op_Read.ap_auto.float(float %p_read28)

ST_1: p_read_37 [1/1] 0.00ns
newFuncRoot:36  %p_read_37 = call float @_ssdm_op_Read.ap_auto.float(float %p_read27)

ST_1: p_read_38 [1/1] 0.00ns
newFuncRoot:37  %p_read_38 = call float @_ssdm_op_Read.ap_auto.float(float %p_read26)

ST_1: p_read_39 [1/1] 0.00ns
newFuncRoot:38  %p_read_39 = call float @_ssdm_op_Read.ap_auto.float(float %p_read25)

ST_1: p_read_40 [1/1] 0.00ns
newFuncRoot:39  %p_read_40 = call float @_ssdm_op_Read.ap_auto.float(float %p_read24)

ST_1: p_read_41 [1/1] 0.00ns
newFuncRoot:40  %p_read_41 = call float @_ssdm_op_Read.ap_auto.float(float %p_read23)

ST_1: p_read_42 [1/1] 0.00ns
newFuncRoot:41  %p_read_42 = call float @_ssdm_op_Read.ap_auto.float(float %p_read22)

ST_1: p_read_43 [1/1] 0.00ns
newFuncRoot:42  %p_read_43 = call float @_ssdm_op_Read.ap_auto.float(float %p_read21)

ST_1: p_read_44 [1/1] 0.00ns
newFuncRoot:43  %p_read_44 = call float @_ssdm_op_Read.ap_auto.float(float %p_read20)

ST_1: p_read_45 [1/1] 0.00ns
newFuncRoot:44  %p_read_45 = call float @_ssdm_op_Read.ap_auto.float(float %p_read19)

ST_1: p_read_46 [1/1] 0.00ns
newFuncRoot:45  %p_read_46 = call float @_ssdm_op_Read.ap_auto.float(float %p_read18)

ST_1: p_read_47 [1/1] 0.00ns
newFuncRoot:46  %p_read_47 = call float @_ssdm_op_Read.ap_auto.float(float %p_read17)

ST_1: p_read_48 [1/1] 0.00ns
newFuncRoot:47  %p_read_48 = call float @_ssdm_op_Read.ap_auto.float(float %p_read16)

ST_1: p_read_49 [1/1] 0.00ns
newFuncRoot:48  %p_read_49 = call float @_ssdm_op_Read.ap_auto.float(float %p_read15)

ST_1: p_read_50 [1/1] 0.00ns
newFuncRoot:49  %p_read_50 = call float @_ssdm_op_Read.ap_auto.float(float %p_read14)

ST_1: p_read_51 [1/1] 0.00ns
newFuncRoot:50  %p_read_51 = call float @_ssdm_op_Read.ap_auto.float(float %p_read13)

ST_1: p_read_52 [1/1] 0.00ns
newFuncRoot:51  %p_read_52 = call float @_ssdm_op_Read.ap_auto.float(float %p_read12)

ST_1: p_read_53 [1/1] 0.00ns
newFuncRoot:52  %p_read_53 = call float @_ssdm_op_Read.ap_auto.float(float %p_read11)

ST_1: p_read_54 [1/1] 0.00ns
newFuncRoot:53  %p_read_54 = call float @_ssdm_op_Read.ap_auto.float(float %p_read10)

ST_1: p_read_55 [1/1] 0.00ns
newFuncRoot:54  %p_read_55 = call float @_ssdm_op_Read.ap_auto.float(float %p_read9)

ST_1: p_read_56 [1/1] 0.00ns
newFuncRoot:55  %p_read_56 = call float @_ssdm_op_Read.ap_auto.float(float %p_read8)

ST_1: p_read_57 [1/1] 0.00ns
newFuncRoot:56  %p_read_57 = call float @_ssdm_op_Read.ap_auto.float(float %p_read7)

ST_1: p_read_58 [1/1] 0.00ns
newFuncRoot:57  %p_read_58 = call float @_ssdm_op_Read.ap_auto.float(float %p_read6)

ST_1: p_read_59 [1/1] 0.00ns
newFuncRoot:58  %p_read_59 = call float @_ssdm_op_Read.ap_auto.float(float %p_read5)

ST_1: p_read_60 [1/1] 0.00ns
newFuncRoot:59  %p_read_60 = call float @_ssdm_op_Read.ap_auto.float(float %p_read4)

ST_1: p_read_61 [1/1] 0.00ns
newFuncRoot:60  %p_read_61 = call float @_ssdm_op_Read.ap_auto.float(float %p_read3)

ST_1: p_read_62 [1/1] 0.00ns
newFuncRoot:61  %p_read_62 = call float @_ssdm_op_Read.ap_auto.float(float %p_read2)

ST_1: p_read_63 [1/1] 0.00ns
newFuncRoot:62  %p_read_63 = call float @_ssdm_op_Read.ap_auto.float(float %p_read1)

ST_1: p_read64 [1/1] 0.00ns
newFuncRoot:63  %p_read64 = call float @_ssdm_op_Read.ap_auto.float(float %p_read)

ST_1: stg_113 [1/1] 1.57ns
newFuncRoot:64  br label %0


 <State 2>: 4.05ns
ST_2: indvar_flatten [1/1] 0.00ns
:0  %indvar_flatten = phi i7 [ 0, %newFuncRoot ], [ %indvar_flatten_next, %ifBlock ]

ST_2: i_1 [1/1] 0.00ns
:1  %i_1 = phi i4 [ 0, %newFuncRoot ], [ %i_1_mid2, %ifBlock ]

ST_2: j_1 [1/1] 0.00ns
:2  %j_1 = phi i4 [ 0, %newFuncRoot ], [ %j, %ifBlock ]

ST_2: exitcond_flatten [1/1] 1.97ns
:3  %exitcond_flatten = icmp eq i7 %indvar_flatten, -64

ST_2: indvar_flatten_next [1/1] 1.72ns
:4  %indvar_flatten_next = add i7 %indvar_flatten, 1

ST_2: stg_119 [1/1] 0.00ns
:5  br i1 %exitcond_flatten, label %.exitStub, label %.preheader

ST_2: exitcond [1/1] 1.88ns
.preheader:2  %exitcond = icmp eq i4 %j_1, -8

ST_2: j_1_mid2 [1/1] 1.37ns
.preheader:3  %j_1_mid2 = select i1 %exitcond, i4 0, i4 %j_1

ST_2: i [1/1] 0.80ns
.preheader:4  %i = add i4 1, %i_1

ST_2: i_1_mid2 [1/1] 1.37ns
.preheader:5  %i_1_mid2 = select i1 %exitcond, i4 %i, i4 %i_1

ST_2: tmp_18 [1/1] 0.00ns
.preheader:6  %tmp_18 = trunc i4 %i_1_mid2 to i3

ST_2: tmp_19 [1/1] 0.00ns
.preheader:12  %tmp_19 = trunc i4 %j_1_mid2 to i3

ST_2: j [1/1] 0.80ns
ifBlock:1  %j = add i4 %j_1_mid2, 1


 <State 3>: 7.64ns
ST_3: tmp [1/1] 1.94ns
.preheader:11  %tmp = call float @_ssdm_op_Mux.ap_auto.8float.i3(float 0x3FD6A09E60000000, float 0x3FDF6297C0000000, float 0x3FDD906BE0000000, float 0x3FDA9B6620000000, float 0x3FD6A09E60000000, float 0x3FD1C73B40000000, float 0x3FC87DE2A0000000, float 0x3FB8F8B840000000, i3 %tmp_18)

ST_3: tmp_2 [1/1] 1.94ns
.preheader:13  %tmp_2 = call float @_ssdm_op_Mux.ap_auto.8float.i3(float %p_read64, float %p_read_63, float %p_read_62, float %p_read_61, float %p_read_60, float %p_read_59, float %p_read_58, float %p_read_57, i3 %tmp_19)

ST_3: tmp_9 [4/4] 5.70ns
.preheader:14  %tmp_9 = fmul float %tmp, %tmp_2


 <State 4>: 5.70ns
ST_4: tmp_9 [3/4] 5.70ns
.preheader:14  %tmp_9 = fmul float %tmp, %tmp_2


 <State 5>: 5.70ns
ST_5: tmp_9 [2/4] 5.70ns
.preheader:14  %tmp_9 = fmul float %tmp, %tmp_2


 <State 6>: 5.70ns
ST_6: tmp_9 [1/4] 5.70ns
.preheader:14  %tmp_9 = fmul float %tmp, %tmp_2


 <State 7>: 7.26ns
ST_7: temp_1 [5/5] 7.26ns
.preheader:15  %temp_1 = fadd float %tmp_9, 0.000000e+00


 <State 8>: 7.64ns
ST_8: temp_1 [4/5] 7.26ns
.preheader:15  %temp_1 = fadd float %tmp_9, 0.000000e+00

ST_8: tmp_4 [1/1] 1.94ns
.preheader:16  %tmp_4 = call float @_ssdm_op_Mux.ap_auto.8float.i3(float 0x3FD6A09E60000000, float 0x3FDA9B6620000000, float 0x3FC87DE2A0000000, float 0xBFB8F8B840000000, float 0xBFD6A09E60000000, float 0xBFDF6297C0000000, float 0xBFDD906BE0000000, float 0xBFD1C73B40000000, i3 %tmp_18)

ST_8: tmp_5 [1/1] 1.94ns
.preheader:17  %tmp_5 = call float @_ssdm_op_Mux.ap_auto.8float.i3(float %p_read_56, float %p_read_55, float %p_read_54, float %p_read_53, float %p_read_52, float %p_read_51, float %p_read_50, float %p_read_49, i3 %tmp_19)

ST_8: tmp_9_1 [4/4] 5.70ns
.preheader:18  %tmp_9_1 = fmul float %tmp_4, %tmp_5


 <State 9>: 7.26ns
ST_9: temp_1 [3/5] 7.26ns
.preheader:15  %temp_1 = fadd float %tmp_9, 0.000000e+00

ST_9: tmp_9_1 [3/4] 5.70ns
.preheader:18  %tmp_9_1 = fmul float %tmp_4, %tmp_5


 <State 10>: 7.26ns
ST_10: temp_1 [2/5] 7.26ns
.preheader:15  %temp_1 = fadd float %tmp_9, 0.000000e+00

ST_10: tmp_9_1 [2/4] 5.70ns
.preheader:18  %tmp_9_1 = fmul float %tmp_4, %tmp_5


 <State 11>: 7.26ns
ST_11: temp_1 [1/5] 7.26ns
.preheader:15  %temp_1 = fadd float %tmp_9, 0.000000e+00

ST_11: tmp_9_1 [1/4] 5.70ns
.preheader:18  %tmp_9_1 = fmul float %tmp_4, %tmp_5


 <State 12>: 7.26ns
ST_12: temp_1_1 [5/5] 7.26ns
.preheader:19  %temp_1_1 = fadd float %temp_1, %tmp_9_1


 <State 13>: 7.64ns
ST_13: temp_1_1 [4/5] 7.26ns
.preheader:19  %temp_1_1 = fadd float %temp_1, %tmp_9_1

ST_13: tmp_7 [1/1] 1.94ns
.preheader:20  %tmp_7 = call float @_ssdm_op_Mux.ap_auto.8float.i3(float 0x3FD6A09E60000000, float 0x3FD1C73B40000000, float 0xBFC87DE2A0000000, float 0xBFDF6297C0000000, float 0xBFD6A09E60000000, float 0x3FB8F8B840000000, float 0x3FDD906BE0000000, float 0x3FDA9B6620000000, i3 %tmp_18)

ST_13: tmp_8 [1/1] 1.94ns
.preheader:21  %tmp_8 = call float @_ssdm_op_Mux.ap_auto.8float.i3(float %p_read_48, float %p_read_47, float %p_read_46, float %p_read_45, float %p_read_44, float %p_read_43, float %p_read_42, float %p_read_41, i3 %tmp_19)

ST_13: tmp_9_2 [4/4] 5.70ns
.preheader:22  %tmp_9_2 = fmul float %tmp_7, %tmp_8


 <State 14>: 7.26ns
ST_14: temp_1_1 [3/5] 7.26ns
.preheader:19  %temp_1_1 = fadd float %temp_1, %tmp_9_1

ST_14: tmp_9_2 [3/4] 5.70ns
.preheader:22  %tmp_9_2 = fmul float %tmp_7, %tmp_8


 <State 15>: 7.26ns
ST_15: temp_1_1 [2/5] 7.26ns
.preheader:19  %temp_1_1 = fadd float %temp_1, %tmp_9_1

ST_15: tmp_9_2 [2/4] 5.70ns
.preheader:22  %tmp_9_2 = fmul float %tmp_7, %tmp_8


 <State 16>: 7.26ns
ST_16: temp_1_1 [1/5] 7.26ns
.preheader:19  %temp_1_1 = fadd float %temp_1, %tmp_9_1

ST_16: tmp_9_2 [1/4] 5.70ns
.preheader:22  %tmp_9_2 = fmul float %tmp_7, %tmp_8


 <State 17>: 7.26ns
ST_17: temp_1_2 [5/5] 7.26ns
.preheader:23  %temp_1_2 = fadd float %temp_1_1, %tmp_9_2


 <State 18>: 7.64ns
ST_18: temp_1_2 [4/5] 7.26ns
.preheader:23  %temp_1_2 = fadd float %temp_1_1, %tmp_9_2

ST_18: tmp_s [1/1] 1.94ns
.preheader:24  %tmp_s = call float @_ssdm_op_Mux.ap_auto.8float.i3(float 0x3FD6A09E60000000, float 0x3FB8F8B840000000, float 0xBFDD906BE0000000, float 0xBFD1C73B40000000, float 0x3FD6A09E60000000, float 0x3FDA9B6620000000, float 0xBFC87DE2A0000000, float 0xBFDF6297C0000000, i3 %tmp_18)

ST_18: tmp_1 [1/1] 1.94ns
.preheader:25  %tmp_1 = call float @_ssdm_op_Mux.ap_auto.8float.i3(float %p_read_40, float %p_read_39, float %p_read_38, float %p_read_37, float %p_read_36, float %p_read_35, float %p_read_34, float %p_read_33, i3 %tmp_19)

ST_18: tmp_9_3 [4/4] 5.70ns
.preheader:26  %tmp_9_3 = fmul float %tmp_s, %tmp_1


 <State 19>: 7.26ns
ST_19: temp_1_2 [3/5] 7.26ns
.preheader:23  %temp_1_2 = fadd float %temp_1_1, %tmp_9_2

ST_19: tmp_9_3 [3/4] 5.70ns
.preheader:26  %tmp_9_3 = fmul float %tmp_s, %tmp_1


 <State 20>: 7.26ns
ST_20: temp_1_2 [2/5] 7.26ns
.preheader:23  %temp_1_2 = fadd float %temp_1_1, %tmp_9_2

ST_20: tmp_9_3 [2/4] 5.70ns
.preheader:26  %tmp_9_3 = fmul float %tmp_s, %tmp_1


 <State 21>: 7.26ns
ST_21: temp_1_2 [1/5] 7.26ns
.preheader:23  %temp_1_2 = fadd float %temp_1_1, %tmp_9_2

ST_21: tmp_9_3 [1/4] 5.70ns
.preheader:26  %tmp_9_3 = fmul float %tmp_s, %tmp_1


 <State 22>: 7.26ns
ST_22: temp_1_3 [5/5] 7.26ns
.preheader:27  %temp_1_3 = fadd float %temp_1_2, %tmp_9_3


 <State 23>: 7.64ns
ST_23: temp_1_3 [4/5] 7.26ns
.preheader:27  %temp_1_3 = fadd float %temp_1_2, %tmp_9_3

ST_23: tmp_10 [1/1] 1.94ns
.preheader:28  %tmp_10 = call float @_ssdm_op_Mux.ap_auto.8float.i3(float 0x3FD6A09E60000000, float 0xBFB8F8B840000000, float 0xBFDD906BE0000000, float 0x3FD1C73B40000000, float 0x3FD6A09E60000000, float 0xBFDA9B6620000000, float 0xBFC87DE2A0000000, float 0x3FDF6297C0000000, i3 %tmp_18)

ST_23: tmp_11 [1/1] 1.94ns
.preheader:29  %tmp_11 = call float @_ssdm_op_Mux.ap_auto.8float.i3(float %p_read_32, float %p_read_31, float %p_read_30, float %p_read_29, float %p_read_28, float %p_read_27, float %p_read_26, float %p_read_25, i3 %tmp_19)

ST_23: tmp_9_4 [4/4] 5.70ns
.preheader:30  %tmp_9_4 = fmul float %tmp_10, %tmp_11


 <State 24>: 7.26ns
ST_24: temp_1_3 [3/5] 7.26ns
.preheader:27  %temp_1_3 = fadd float %temp_1_2, %tmp_9_3

ST_24: tmp_9_4 [3/4] 5.70ns
.preheader:30  %tmp_9_4 = fmul float %tmp_10, %tmp_11


 <State 25>: 7.26ns
ST_25: temp_1_3 [2/5] 7.26ns
.preheader:27  %temp_1_3 = fadd float %temp_1_2, %tmp_9_3

ST_25: tmp_9_4 [2/4] 5.70ns
.preheader:30  %tmp_9_4 = fmul float %tmp_10, %tmp_11


 <State 26>: 7.26ns
ST_26: temp_1_3 [1/5] 7.26ns
.preheader:27  %temp_1_3 = fadd float %temp_1_2, %tmp_9_3

ST_26: tmp_9_4 [1/4] 5.70ns
.preheader:30  %tmp_9_4 = fmul float %tmp_10, %tmp_11


 <State 27>: 7.26ns
ST_27: temp_1_4 [5/5] 7.26ns
.preheader:31  %temp_1_4 = fadd float %temp_1_3, %tmp_9_4


 <State 28>: 7.64ns
ST_28: temp_1_4 [4/5] 7.26ns
.preheader:31  %temp_1_4 = fadd float %temp_1_3, %tmp_9_4

ST_28: tmp_12 [1/1] 1.94ns
.preheader:32  %tmp_12 = call float @_ssdm_op_Mux.ap_auto.8float.i3(float 0x3FD6A09E60000000, float 0xBFD1C73B40000000, float 0xBFC87DE2A0000000, float 0x3FDF6297C0000000, float 0xBFD6A09E60000000, float 0xBFB8F8B840000000, float 0x3FDD906BE0000000, float 0xBFDA9B6620000000, i3 %tmp_18)

ST_28: tmp_13 [1/1] 1.94ns
.preheader:33  %tmp_13 = call float @_ssdm_op_Mux.ap_auto.8float.i3(float %p_read_24, float %p_read_23, float %p_read_22, float %p_read_21, float %p_read_20, float %p_read_19, float %p_read_18, float %p_read_17, i3 %tmp_19)

ST_28: tmp_9_5 [4/4] 5.70ns
.preheader:34  %tmp_9_5 = fmul float %tmp_12, %tmp_13


 <State 29>: 7.26ns
ST_29: temp_1_4 [3/5] 7.26ns
.preheader:31  %temp_1_4 = fadd float %temp_1_3, %tmp_9_4

ST_29: tmp_9_5 [3/4] 5.70ns
.preheader:34  %tmp_9_5 = fmul float %tmp_12, %tmp_13


 <State 30>: 7.26ns
ST_30: temp_1_4 [2/5] 7.26ns
.preheader:31  %temp_1_4 = fadd float %temp_1_3, %tmp_9_4

ST_30: tmp_9_5 [2/4] 5.70ns
.preheader:34  %tmp_9_5 = fmul float %tmp_12, %tmp_13


 <State 31>: 7.26ns
ST_31: temp_1_4 [1/5] 7.26ns
.preheader:31  %temp_1_4 = fadd float %temp_1_3, %tmp_9_4

ST_31: tmp_9_5 [1/4] 5.70ns
.preheader:34  %tmp_9_5 = fmul float %tmp_12, %tmp_13


 <State 32>: 7.26ns
ST_32: temp_1_5 [5/5] 7.26ns
.preheader:35  %temp_1_5 = fadd float %temp_1_4, %tmp_9_5


 <State 33>: 7.64ns
ST_33: temp_1_5 [4/5] 7.26ns
.preheader:35  %temp_1_5 = fadd float %temp_1_4, %tmp_9_5

ST_33: tmp_14 [1/1] 1.94ns
.preheader:36  %tmp_14 = call float @_ssdm_op_Mux.ap_auto.8float.i3(float 0x3FD6A09E60000000, float 0xBFDA9B6620000000, float 0x3FC87DE2A0000000, float 0x3FB8F8B840000000, float 0xBFD6A09E60000000, float 0x3FDF6297C0000000, float 0xBFDD906BE0000000, float 0x3FD1C73B40000000, i3 %tmp_18)

ST_33: tmp_15 [1/1] 1.94ns
.preheader:37  %tmp_15 = call float @_ssdm_op_Mux.ap_auto.8float.i3(float %p_read_16, float %p_read_15, float %p_read_14, float %p_read_13, float %p_read_12, float %p_read_11, float %p_read_10, float %p_read_9, i3 %tmp_19)

ST_33: tmp_9_6 [4/4] 5.70ns
.preheader:38  %tmp_9_6 = fmul float %tmp_14, %tmp_15


 <State 34>: 7.26ns
ST_34: temp_1_5 [3/5] 7.26ns
.preheader:35  %temp_1_5 = fadd float %temp_1_4, %tmp_9_5

ST_34: tmp_9_6 [3/4] 5.70ns
.preheader:38  %tmp_9_6 = fmul float %tmp_14, %tmp_15


 <State 35>: 7.26ns
ST_35: temp_1_5 [2/5] 7.26ns
.preheader:35  %temp_1_5 = fadd float %temp_1_4, %tmp_9_5

ST_35: tmp_9_6 [2/4] 5.70ns
.preheader:38  %tmp_9_6 = fmul float %tmp_14, %tmp_15


 <State 36>: 7.26ns
ST_36: temp_1_5 [1/5] 7.26ns
.preheader:35  %temp_1_5 = fadd float %temp_1_4, %tmp_9_5

ST_36: tmp_9_6 [1/4] 5.70ns
.preheader:38  %tmp_9_6 = fmul float %tmp_14, %tmp_15


 <State 37>: 7.26ns
ST_37: temp_1_6 [5/5] 7.26ns
.preheader:39  %temp_1_6 = fadd float %temp_1_5, %tmp_9_6


 <State 38>: 7.64ns
ST_38: temp_1_6 [4/5] 7.26ns
.preheader:39  %temp_1_6 = fadd float %temp_1_5, %tmp_9_6

ST_38: tmp_16 [1/1] 1.94ns
.preheader:40  %tmp_16 = call float @_ssdm_op_Mux.ap_auto.8float.i3(float 0x3FD6A09E60000000, float 0xBFDF6297C0000000, float 0x3FDD906BE0000000, float 0xBFDA9B6620000000, float 0x3FD6A09E60000000, float 0xBFD1C73B40000000, float 0x3FC87DE2A0000000, float 0xBFB8F8B840000000, i3 %tmp_18)

ST_38: tmp_17 [1/1] 1.94ns
.preheader:41  %tmp_17 = call float @_ssdm_op_Mux.ap_auto.8float.i3(float %p_read_8, float %p_read_7, float %p_read_6, float %p_read_5, float %p_read_4, float %p_read_3, float %p_read_2, float %p_read_1, i3 %tmp_19)

ST_38: tmp_9_7 [4/4] 5.70ns
.preheader:42  %tmp_9_7 = fmul float %tmp_16, %tmp_17

ST_38: stg_204 [1/1] 1.91ns
.preheader:52  switch i3 %tmp_18, label %branch7133 [
    i3 0, label %branch0126
    i3 1, label %branch1127
    i3 2, label %branch2128
    i3 3, label %branch3129
    i3 -4, label %branch4130
    i3 -3, label %branch5131
    i3 -2, label %branch6132
  ]


 <State 39>: 7.26ns
ST_39: temp_1_6 [3/5] 7.26ns
.preheader:39  %temp_1_6 = fadd float %temp_1_5, %tmp_9_6

ST_39: tmp_9_7 [3/4] 5.70ns
.preheader:42  %tmp_9_7 = fmul float %tmp_16, %tmp_17


 <State 40>: 7.26ns
ST_40: temp_1_6 [2/5] 7.26ns
.preheader:39  %temp_1_6 = fadd float %temp_1_5, %tmp_9_6

ST_40: tmp_9_7 [2/4] 5.70ns
.preheader:42  %tmp_9_7 = fmul float %tmp_16, %tmp_17


 <State 41>: 7.26ns
ST_41: temp_1_6 [1/5] 7.26ns
.preheader:39  %temp_1_6 = fadd float %temp_1_5, %tmp_9_6

ST_41: tmp_9_7 [1/4] 5.70ns
.preheader:42  %tmp_9_7 = fmul float %tmp_16, %tmp_17


 <State 42>: 7.26ns
ST_42: temp_1_7 [5/5] 7.26ns
.preheader:43  %temp_1_7 = fadd float %temp_1_6, %tmp_9_7


 <State 43>: 7.26ns
ST_43: temp_1_7 [4/5] 7.26ns
.preheader:43  %temp_1_7 = fadd float %temp_1_6, %tmp_9_7


 <State 44>: 7.26ns
ST_44: temp_1_7 [3/5] 7.26ns
.preheader:43  %temp_1_7 = fadd float %temp_1_6, %tmp_9_7


 <State 45>: 7.26ns
ST_45: temp_1_7 [2/5] 7.26ns
.preheader:43  %temp_1_7 = fadd float %temp_1_6, %tmp_9_7


 <State 46>: 7.26ns
ST_46: temp_1_7 [1/5] 7.26ns
.preheader:43  %temp_1_7 = fadd float %temp_1_6, %tmp_9_7


 <State 47>: 2.39ns
ST_47: stg_216 [1/1] 0.00ns
.preheader:0  call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @str2)

ST_47: empty [1/1] 0.00ns
.preheader:1  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)

ST_47: stg_218 [1/1] 0.00ns
.preheader:7  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str5) nounwind

ST_47: tmp_3 [1/1] 0.00ns
.preheader:8  %tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str5)

ST_47: stg_220 [1/1] 0.00ns
.preheader:9  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_47: tmp_6 [1/1] 0.00ns
.preheader:10  %tmp_6 = zext i4 %j_1_mid2 to i64

ST_47: C_0_addr [1/1] 0.00ns
.preheader:44  %C_0_addr = getelementptr [8 x float]* %C_0, i64 0, i64 %tmp_6

ST_47: C_1_addr [1/1] 0.00ns
.preheader:45  %C_1_addr = getelementptr [8 x float]* %C_1, i64 0, i64 %tmp_6

ST_47: C_2_addr [1/1] 0.00ns
.preheader:46  %C_2_addr = getelementptr [8 x float]* %C_2, i64 0, i64 %tmp_6

ST_47: C_3_addr [1/1] 0.00ns
.preheader:47  %C_3_addr = getelementptr [8 x float]* %C_3, i64 0, i64 %tmp_6

ST_47: C_4_addr [1/1] 0.00ns
.preheader:48  %C_4_addr = getelementptr [8 x float]* %C_4, i64 0, i64 %tmp_6

ST_47: C_5_addr [1/1] 0.00ns
.preheader:49  %C_5_addr = getelementptr [8 x float]* %C_5, i64 0, i64 %tmp_6

ST_47: C_6_addr [1/1] 0.00ns
.preheader:50  %C_6_addr = getelementptr [8 x float]* %C_6, i64 0, i64 %tmp_6

ST_47: C_7_addr [1/1] 0.00ns
.preheader:51  %C_7_addr = getelementptr [8 x float]* %C_7, i64 0, i64 %tmp_6

ST_47: stg_230 [1/1] 2.39ns
branch6132:0  store float %temp_1_7, float* %C_6_addr, align 4

ST_47: stg_231 [1/1] 0.00ns
branch6132:1  br label %ifBlock

ST_47: stg_232 [1/1] 2.39ns
branch5131:0  store float %temp_1_7, float* %C_5_addr, align 4

ST_47: stg_233 [1/1] 0.00ns
branch5131:1  br label %ifBlock

ST_47: stg_234 [1/1] 2.39ns
branch4130:0  store float %temp_1_7, float* %C_4_addr, align 4

ST_47: stg_235 [1/1] 0.00ns
branch4130:1  br label %ifBlock

ST_47: stg_236 [1/1] 2.39ns
branch3129:0  store float %temp_1_7, float* %C_3_addr, align 4

ST_47: stg_237 [1/1] 0.00ns
branch3129:1  br label %ifBlock

ST_47: stg_238 [1/1] 2.39ns
branch2128:0  store float %temp_1_7, float* %C_2_addr, align 4

ST_47: stg_239 [1/1] 0.00ns
branch2128:1  br label %ifBlock

ST_47: stg_240 [1/1] 2.39ns
branch1127:0  store float %temp_1_7, float* %C_1_addr, align 4

ST_47: stg_241 [1/1] 0.00ns
branch1127:1  br label %ifBlock

ST_47: stg_242 [1/1] 2.39ns
branch0126:0  store float %temp_1_7, float* %C_0_addr, align 4

ST_47: stg_243 [1/1] 0.00ns
branch0126:1  br label %ifBlock

ST_47: stg_244 [1/1] 2.39ns
branch7133:0  store float %temp_1_7, float* %C_7_addr, align 4

ST_47: stg_245 [1/1] 0.00ns
branch7133:1  br label %ifBlock

ST_47: empty_6 [1/1] 0.00ns
ifBlock:0  %empty_6 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str5, i32 %tmp_3)

ST_47: stg_247 [1/1] 0.00ns
ifBlock:2  br label %0


 <State 48>: 0.00ns
ST_48: stg_248 [1/1] 0.00ns
.exitStub:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
