// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module DCT_MAT_Multiply_Loop_Row_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        p_read18,
        p_read19,
        p_read20,
        p_read21,
        p_read22,
        p_read23,
        p_read24,
        p_read25,
        p_read26,
        p_read27,
        p_read28,
        p_read29,
        p_read30,
        p_read31,
        p_read32,
        p_read33,
        p_read34,
        p_read35,
        p_read36,
        p_read37,
        p_read38,
        p_read39,
        p_read40,
        p_read41,
        p_read42,
        p_read43,
        p_read44,
        p_read45,
        p_read46,
        p_read47,
        p_read48,
        p_read49,
        p_read50,
        p_read51,
        p_read52,
        p_read53,
        p_read54,
        p_read55,
        p_read56,
        p_read57,
        p_read58,
        p_read59,
        p_read60,
        p_read61,
        p_read62,
        p_read63,
        C_0_address0,
        C_0_ce0,
        C_0_we0,
        C_0_d0,
        C_1_address0,
        C_1_ce0,
        C_1_we0,
        C_1_d0,
        C_2_address0,
        C_2_ce0,
        C_2_we0,
        C_2_d0,
        C_3_address0,
        C_3_ce0,
        C_3_we0,
        C_3_d0,
        C_4_address0,
        C_4_ce0,
        C_4_we0,
        C_4_d0,
        C_5_address0,
        C_5_ce0,
        C_5_we0,
        C_5_d0,
        C_6_address0,
        C_6_ce0,
        C_6_we0,
        C_6_d0,
        C_7_address0,
        C_7_ce0,
        C_7_we0,
        C_7_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b10;
parameter    ap_ST_st48_fsm_2 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_true = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_3 = 3'b11;
parameter    ap_const_lv3_2 = 3'b10;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv7_40 = 7'b1000000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv32_3EB504F3 = 32'b111110101101010000010011110011;
parameter    ap_const_lv32_3EFB14BE = 32'b111110111110110001010010111110;
parameter    ap_const_lv32_3EEC835F = 32'b111110111011001000001101011111;
parameter    ap_const_lv32_3ED4DB31 = 32'b111110110101001101101100110001;
parameter    ap_const_lv32_3E8E39DA = 32'b111110100011100011100111011010;
parameter    ap_const_lv32_3E43EF15 = 32'b111110010000111110111100010101;
parameter    ap_const_lv32_3DC7C5C2 = 32'b111101110001111100010111000010;
parameter    ap_const_lv32_BDC7C5C2 = 32'b10111101110001111100010111000010;
parameter    ap_const_lv32_BEB504F3 = 32'b10111110101101010000010011110011;
parameter    ap_const_lv32_BEFB14BE = 32'b10111110111110110001010010111110;
parameter    ap_const_lv32_BEEC835F = 32'b10111110111011001000001101011111;
parameter    ap_const_lv32_BE8E39DA = 32'b10111110100011100011100111011010;
parameter    ap_const_lv32_BE43EF15 = 32'b10111110010000111110111100010101;
parameter    ap_const_lv32_BED4DB31 = 32'b10111110110101001101101100110001;
parameter    ap_const_lv32_2 = 32'b10;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] p_read;
input  [31:0] p_read1;
input  [31:0] p_read2;
input  [31:0] p_read3;
input  [31:0] p_read4;
input  [31:0] p_read5;
input  [31:0] p_read6;
input  [31:0] p_read7;
input  [31:0] p_read8;
input  [31:0] p_read9;
input  [31:0] p_read10;
input  [31:0] p_read11;
input  [31:0] p_read12;
input  [31:0] p_read13;
input  [31:0] p_read14;
input  [31:0] p_read15;
input  [31:0] p_read16;
input  [31:0] p_read17;
input  [31:0] p_read18;
input  [31:0] p_read19;
input  [31:0] p_read20;
input  [31:0] p_read21;
input  [31:0] p_read22;
input  [31:0] p_read23;
input  [31:0] p_read24;
input  [31:0] p_read25;
input  [31:0] p_read26;
input  [31:0] p_read27;
input  [31:0] p_read28;
input  [31:0] p_read29;
input  [31:0] p_read30;
input  [31:0] p_read31;
input  [31:0] p_read32;
input  [31:0] p_read33;
input  [31:0] p_read34;
input  [31:0] p_read35;
input  [31:0] p_read36;
input  [31:0] p_read37;
input  [31:0] p_read38;
input  [31:0] p_read39;
input  [31:0] p_read40;
input  [31:0] p_read41;
input  [31:0] p_read42;
input  [31:0] p_read43;
input  [31:0] p_read44;
input  [31:0] p_read45;
input  [31:0] p_read46;
input  [31:0] p_read47;
input  [31:0] p_read48;
input  [31:0] p_read49;
input  [31:0] p_read50;
input  [31:0] p_read51;
input  [31:0] p_read52;
input  [31:0] p_read53;
input  [31:0] p_read54;
input  [31:0] p_read55;
input  [31:0] p_read56;
input  [31:0] p_read57;
input  [31:0] p_read58;
input  [31:0] p_read59;
input  [31:0] p_read60;
input  [31:0] p_read61;
input  [31:0] p_read62;
input  [31:0] p_read63;
output  [2:0] C_0_address0;
output   C_0_ce0;
output   C_0_we0;
output  [31:0] C_0_d0;
output  [2:0] C_1_address0;
output   C_1_ce0;
output   C_1_we0;
output  [31:0] C_1_d0;
output  [2:0] C_2_address0;
output   C_2_ce0;
output   C_2_we0;
output  [31:0] C_2_d0;
output  [2:0] C_3_address0;
output   C_3_ce0;
output   C_3_we0;
output  [31:0] C_3_d0;
output  [2:0] C_4_address0;
output   C_4_ce0;
output   C_4_we0;
output  [31:0] C_4_d0;
output  [2:0] C_5_address0;
output   C_5_ce0;
output   C_5_we0;
output  [31:0] C_5_d0;
output  [2:0] C_6_address0;
output   C_6_ce0;
output   C_6_we0;
output  [31:0] C_6_d0;
output  [2:0] C_7_address0;
output   C_7_ce0;
output   C_7_we0;
output  [31:0] C_7_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg C_0_ce0;
reg C_0_we0;
reg C_1_ce0;
reg C_1_we0;
reg C_2_ce0;
reg C_2_we0;
reg C_3_ce0;
reg C_3_we0;
reg C_4_ce0;
reg C_4_we0;
reg C_5_ce0;
reg C_5_we0;
reg C_6_ce0;
reg C_6_we0;
reg C_7_ce0;
reg C_7_we0;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm = 3'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_22;
reg   [6:0] indvar_flatten_reg_708;
reg   [3:0] i_1_reg_719;
reg   [3:0] j_1_reg_730;
reg    ap_sig_bdd_160;
wire   [0:0] exitcond_flatten_fu_807_p2;
reg   [0:0] exitcond_flatten_reg_1480;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_296;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg    ap_reg_ppiten_pp0_it5 = 1'b0;
reg    ap_reg_ppiten_pp0_it6 = 1'b0;
reg    ap_reg_ppiten_pp0_it7 = 1'b0;
reg    ap_reg_ppiten_pp0_it8 = 1'b0;
reg    ap_reg_ppiten_pp0_it9 = 1'b0;
reg    ap_reg_ppiten_pp0_it10 = 1'b0;
reg    ap_reg_ppiten_pp0_it11 = 1'b0;
reg    ap_reg_ppiten_pp0_it12 = 1'b0;
reg    ap_reg_ppiten_pp0_it13 = 1'b0;
reg    ap_reg_ppiten_pp0_it14 = 1'b0;
reg    ap_reg_ppiten_pp0_it15 = 1'b0;
reg    ap_reg_ppiten_pp0_it16 = 1'b0;
reg    ap_reg_ppiten_pp0_it17 = 1'b0;
reg    ap_reg_ppiten_pp0_it18 = 1'b0;
reg    ap_reg_ppiten_pp0_it19 = 1'b0;
reg    ap_reg_ppiten_pp0_it20 = 1'b0;
reg    ap_reg_ppiten_pp0_it21 = 1'b0;
reg    ap_reg_ppiten_pp0_it22 = 1'b0;
reg    ap_reg_ppiten_pp0_it23 = 1'b0;
reg    ap_reg_ppiten_pp0_it24 = 1'b0;
reg    ap_reg_ppiten_pp0_it25 = 1'b0;
reg    ap_reg_ppiten_pp0_it26 = 1'b0;
reg    ap_reg_ppiten_pp0_it27 = 1'b0;
reg    ap_reg_ppiten_pp0_it28 = 1'b0;
reg    ap_reg_ppiten_pp0_it29 = 1'b0;
reg    ap_reg_ppiten_pp0_it30 = 1'b0;
reg    ap_reg_ppiten_pp0_it31 = 1'b0;
reg    ap_reg_ppiten_pp0_it32 = 1'b0;
reg    ap_reg_ppiten_pp0_it33 = 1'b0;
reg    ap_reg_ppiten_pp0_it34 = 1'b0;
reg    ap_reg_ppiten_pp0_it35 = 1'b0;
reg    ap_reg_ppiten_pp0_it36 = 1'b0;
reg    ap_reg_ppiten_pp0_it37 = 1'b0;
reg    ap_reg_ppiten_pp0_it38 = 1'b0;
reg    ap_reg_ppiten_pp0_it39 = 1'b0;
reg    ap_reg_ppiten_pp0_it40 = 1'b0;
reg    ap_reg_ppiten_pp0_it41 = 1'b0;
reg    ap_reg_ppiten_pp0_it42 = 1'b0;
reg    ap_reg_ppiten_pp0_it43 = 1'b0;
reg    ap_reg_ppiten_pp0_it44 = 1'b0;
reg    ap_reg_ppiten_pp0_it45 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it3;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it4;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it5;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it6;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it7;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it8;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it9;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it10;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it11;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it12;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it13;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it14;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it15;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it16;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it17;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it18;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it19;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it20;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it21;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it22;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it23;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it24;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it25;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it26;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it27;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it28;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it29;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it30;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it31;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it32;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it33;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it34;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it35;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it36;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it37;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it38;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it39;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it40;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it41;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it42;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it43;
wire   [6:0] indvar_flatten_next_fu_813_p2;
wire   [3:0] j_1_mid2_fu_825_p3;
reg   [3:0] j_1_mid2_reg_1489;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it1;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it2;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it3;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it4;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it5;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it6;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it7;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it8;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it9;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it10;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it11;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it12;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it13;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it14;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it15;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it16;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it17;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it18;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it19;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it20;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it21;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it22;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it23;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it24;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it25;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it26;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it27;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it28;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it29;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it30;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it31;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it32;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it33;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it34;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it35;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it36;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it37;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it38;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it39;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it40;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it41;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it42;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it43;
reg   [3:0] ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it44;
wire   [3:0] i_1_mid2_fu_839_p3;
reg   [3:0] i_1_mid2_reg_1494;
wire   [2:0] tmp_18_fu_847_p1;
reg   [2:0] tmp_18_reg_1499;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it1;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it2;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it3;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it4;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it5;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it6;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it7;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it8;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it9;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it10;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it11;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it12;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it13;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it14;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it15;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it16;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it17;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it18;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it19;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it20;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it21;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it22;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it23;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it24;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it25;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it26;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it27;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it28;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it29;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it30;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it31;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it32;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it33;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it34;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it35;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it36;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it37;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it38;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it39;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it40;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it41;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it42;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it43;
reg   [2:0] ap_reg_ppstg_tmp_18_reg_1499_pp0_it44;
wire   [2:0] tmp_19_fu_851_p1;
reg   [2:0] tmp_19_reg_1511;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it1;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it2;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it3;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it4;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it5;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it6;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it7;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it8;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it9;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it10;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it11;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it12;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it13;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it14;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it15;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it16;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it17;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it18;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it19;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it20;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it21;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it22;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it23;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it24;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it25;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it26;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it27;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it28;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it29;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it30;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it31;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it32;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it33;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it34;
reg   [2:0] ap_reg_ppstg_tmp_19_reg_1511_pp0_it35;
wire   [3:0] j_fu_855_p2;
wire   [31:0] tmp_fu_861_p10;
wire   [31:0] tmp_2_fu_883_p10;
wire   [31:0] grp_fu_775_p2;
reg   [31:0] tmp_9_reg_1538;
wire   [31:0] tmp_4_fu_897_p10;
wire   [31:0] tmp_5_fu_919_p10;
wire   [31:0] grp_fu_742_p2;
reg   [31:0] temp_1_reg_1553;
wire   [31:0] grp_fu_779_p2;
reg   [31:0] tmp_9_1_reg_1558;
wire   [31:0] tmp_7_fu_933_p10;
wire   [31:0] tmp_8_fu_955_p10;
wire   [31:0] grp_fu_747_p2;
reg   [31:0] temp_1_1_reg_1573;
wire   [31:0] grp_fu_783_p2;
reg   [31:0] tmp_9_2_reg_1578;
wire   [31:0] tmp_s_fu_969_p10;
wire   [31:0] tmp_1_fu_991_p10;
wire   [31:0] grp_fu_751_p2;
reg   [31:0] temp_1_2_reg_1593;
wire   [31:0] grp_fu_787_p2;
reg   [31:0] tmp_9_3_reg_1598;
wire   [31:0] tmp_10_fu_1005_p10;
wire   [31:0] tmp_11_fu_1027_p10;
wire   [31:0] grp_fu_755_p2;
reg   [31:0] temp_1_3_reg_1613;
wire   [31:0] grp_fu_791_p2;
reg   [31:0] tmp_9_4_reg_1618;
wire   [31:0] tmp_12_fu_1041_p10;
wire   [31:0] tmp_13_fu_1063_p10;
wire   [31:0] grp_fu_759_p2;
reg   [31:0] temp_1_4_reg_1633;
wire   [31:0] grp_fu_795_p2;
reg   [31:0] tmp_9_5_reg_1638;
wire   [31:0] tmp_14_fu_1077_p10;
wire   [31:0] tmp_15_fu_1099_p10;
wire   [31:0] grp_fu_763_p2;
reg   [31:0] temp_1_5_reg_1653;
wire   [31:0] grp_fu_799_p2;
reg   [31:0] tmp_9_6_reg_1658;
wire   [31:0] tmp_16_fu_1113_p10;
wire   [31:0] tmp_17_fu_1135_p10;
wire   [31:0] grp_fu_767_p2;
reg   [31:0] temp_1_6_reg_1673;
wire   [31:0] grp_fu_803_p2;
reg   [31:0] tmp_9_7_reg_1678;
wire   [31:0] grp_fu_771_p2;
reg   [31:0] temp_1_7_reg_1683;
reg   [3:0] i_1_phi_fu_723_p4;
wire   [63:0] tmp_6_fu_1149_p1;
wire   [31:0] grp_fu_742_p0;
wire   [31:0] grp_fu_742_p1;
wire   [31:0] grp_fu_747_p0;
wire   [31:0] grp_fu_747_p1;
wire   [31:0] grp_fu_751_p0;
wire   [31:0] grp_fu_751_p1;
wire   [31:0] grp_fu_755_p0;
wire   [31:0] grp_fu_755_p1;
wire   [31:0] grp_fu_759_p0;
wire   [31:0] grp_fu_759_p1;
wire   [31:0] grp_fu_763_p0;
wire   [31:0] grp_fu_763_p1;
wire   [31:0] grp_fu_767_p0;
wire   [31:0] grp_fu_767_p1;
wire   [31:0] grp_fu_771_p0;
wire   [31:0] grp_fu_771_p1;
wire   [31:0] grp_fu_775_p0;
wire   [31:0] grp_fu_775_p1;
wire   [31:0] grp_fu_779_p0;
wire   [31:0] grp_fu_779_p1;
wire   [31:0] grp_fu_783_p0;
wire   [31:0] grp_fu_783_p1;
wire   [31:0] grp_fu_787_p0;
wire   [31:0] grp_fu_787_p1;
wire   [31:0] grp_fu_791_p0;
wire   [31:0] grp_fu_791_p1;
wire   [31:0] grp_fu_795_p0;
wire   [31:0] grp_fu_795_p1;
wire   [31:0] grp_fu_799_p0;
wire   [31:0] grp_fu_799_p1;
wire   [31:0] grp_fu_803_p0;
wire   [31:0] grp_fu_803_p1;
wire   [0:0] exitcond_fu_819_p2;
wire   [3:0] i_fu_833_p2;
wire   [31:0] tmp_fu_861_p1;
wire   [31:0] tmp_fu_861_p2;
wire   [31:0] tmp_fu_861_p3;
wire   [31:0] tmp_fu_861_p4;
wire   [31:0] tmp_fu_861_p5;
wire   [31:0] tmp_fu_861_p6;
wire   [31:0] tmp_fu_861_p7;
wire   [31:0] tmp_fu_861_p8;
wire   [2:0] tmp_fu_861_p9;
wire   [31:0] tmp_2_fu_883_p1;
wire   [31:0] tmp_2_fu_883_p2;
wire   [31:0] tmp_2_fu_883_p3;
wire   [31:0] tmp_2_fu_883_p4;
wire   [31:0] tmp_2_fu_883_p5;
wire   [31:0] tmp_2_fu_883_p6;
wire   [31:0] tmp_2_fu_883_p7;
wire   [31:0] tmp_2_fu_883_p8;
wire   [2:0] tmp_2_fu_883_p9;
wire   [31:0] tmp_4_fu_897_p1;
wire   [31:0] tmp_4_fu_897_p2;
wire   [31:0] tmp_4_fu_897_p3;
wire   [31:0] tmp_4_fu_897_p4;
wire   [31:0] tmp_4_fu_897_p5;
wire   [31:0] tmp_4_fu_897_p6;
wire   [31:0] tmp_4_fu_897_p7;
wire   [31:0] tmp_4_fu_897_p8;
wire   [2:0] tmp_4_fu_897_p9;
wire   [31:0] tmp_5_fu_919_p1;
wire   [31:0] tmp_5_fu_919_p2;
wire   [31:0] tmp_5_fu_919_p3;
wire   [31:0] tmp_5_fu_919_p4;
wire   [31:0] tmp_5_fu_919_p5;
wire   [31:0] tmp_5_fu_919_p6;
wire   [31:0] tmp_5_fu_919_p7;
wire   [31:0] tmp_5_fu_919_p8;
wire   [2:0] tmp_5_fu_919_p9;
wire   [31:0] tmp_7_fu_933_p1;
wire   [31:0] tmp_7_fu_933_p2;
wire   [31:0] tmp_7_fu_933_p3;
wire   [31:0] tmp_7_fu_933_p4;
wire   [31:0] tmp_7_fu_933_p5;
wire   [31:0] tmp_7_fu_933_p6;
wire   [31:0] tmp_7_fu_933_p7;
wire   [31:0] tmp_7_fu_933_p8;
wire   [2:0] tmp_7_fu_933_p9;
wire   [31:0] tmp_8_fu_955_p1;
wire   [31:0] tmp_8_fu_955_p2;
wire   [31:0] tmp_8_fu_955_p3;
wire   [31:0] tmp_8_fu_955_p4;
wire   [31:0] tmp_8_fu_955_p5;
wire   [31:0] tmp_8_fu_955_p6;
wire   [31:0] tmp_8_fu_955_p7;
wire   [31:0] tmp_8_fu_955_p8;
wire   [2:0] tmp_8_fu_955_p9;
wire   [31:0] tmp_s_fu_969_p1;
wire   [31:0] tmp_s_fu_969_p2;
wire   [31:0] tmp_s_fu_969_p3;
wire   [31:0] tmp_s_fu_969_p4;
wire   [31:0] tmp_s_fu_969_p5;
wire   [31:0] tmp_s_fu_969_p6;
wire   [31:0] tmp_s_fu_969_p7;
wire   [31:0] tmp_s_fu_969_p8;
wire   [2:0] tmp_s_fu_969_p9;
wire   [31:0] tmp_1_fu_991_p1;
wire   [31:0] tmp_1_fu_991_p2;
wire   [31:0] tmp_1_fu_991_p3;
wire   [31:0] tmp_1_fu_991_p4;
wire   [31:0] tmp_1_fu_991_p5;
wire   [31:0] tmp_1_fu_991_p6;
wire   [31:0] tmp_1_fu_991_p7;
wire   [31:0] tmp_1_fu_991_p8;
wire   [2:0] tmp_1_fu_991_p9;
wire   [31:0] tmp_10_fu_1005_p1;
wire   [31:0] tmp_10_fu_1005_p2;
wire   [31:0] tmp_10_fu_1005_p3;
wire   [31:0] tmp_10_fu_1005_p4;
wire   [31:0] tmp_10_fu_1005_p5;
wire   [31:0] tmp_10_fu_1005_p6;
wire   [31:0] tmp_10_fu_1005_p7;
wire   [31:0] tmp_10_fu_1005_p8;
wire   [2:0] tmp_10_fu_1005_p9;
wire   [31:0] tmp_11_fu_1027_p1;
wire   [31:0] tmp_11_fu_1027_p2;
wire   [31:0] tmp_11_fu_1027_p3;
wire   [31:0] tmp_11_fu_1027_p4;
wire   [31:0] tmp_11_fu_1027_p5;
wire   [31:0] tmp_11_fu_1027_p6;
wire   [31:0] tmp_11_fu_1027_p7;
wire   [31:0] tmp_11_fu_1027_p8;
wire   [2:0] tmp_11_fu_1027_p9;
wire   [31:0] tmp_12_fu_1041_p1;
wire   [31:0] tmp_12_fu_1041_p2;
wire   [31:0] tmp_12_fu_1041_p3;
wire   [31:0] tmp_12_fu_1041_p4;
wire   [31:0] tmp_12_fu_1041_p5;
wire   [31:0] tmp_12_fu_1041_p6;
wire   [31:0] tmp_12_fu_1041_p7;
wire   [31:0] tmp_12_fu_1041_p8;
wire   [2:0] tmp_12_fu_1041_p9;
wire   [31:0] tmp_13_fu_1063_p1;
wire   [31:0] tmp_13_fu_1063_p2;
wire   [31:0] tmp_13_fu_1063_p3;
wire   [31:0] tmp_13_fu_1063_p4;
wire   [31:0] tmp_13_fu_1063_p5;
wire   [31:0] tmp_13_fu_1063_p6;
wire   [31:0] tmp_13_fu_1063_p7;
wire   [31:0] tmp_13_fu_1063_p8;
wire   [2:0] tmp_13_fu_1063_p9;
wire   [31:0] tmp_14_fu_1077_p1;
wire   [31:0] tmp_14_fu_1077_p2;
wire   [31:0] tmp_14_fu_1077_p3;
wire   [31:0] tmp_14_fu_1077_p4;
wire   [31:0] tmp_14_fu_1077_p5;
wire   [31:0] tmp_14_fu_1077_p6;
wire   [31:0] tmp_14_fu_1077_p7;
wire   [31:0] tmp_14_fu_1077_p8;
wire   [2:0] tmp_14_fu_1077_p9;
wire   [31:0] tmp_15_fu_1099_p1;
wire   [31:0] tmp_15_fu_1099_p2;
wire   [31:0] tmp_15_fu_1099_p3;
wire   [31:0] tmp_15_fu_1099_p4;
wire   [31:0] tmp_15_fu_1099_p5;
wire   [31:0] tmp_15_fu_1099_p6;
wire   [31:0] tmp_15_fu_1099_p7;
wire   [31:0] tmp_15_fu_1099_p8;
wire   [2:0] tmp_15_fu_1099_p9;
wire   [31:0] tmp_16_fu_1113_p1;
wire   [31:0] tmp_16_fu_1113_p2;
wire   [31:0] tmp_16_fu_1113_p3;
wire   [31:0] tmp_16_fu_1113_p4;
wire   [31:0] tmp_16_fu_1113_p5;
wire   [31:0] tmp_16_fu_1113_p6;
wire   [31:0] tmp_16_fu_1113_p7;
wire   [31:0] tmp_16_fu_1113_p8;
wire   [2:0] tmp_16_fu_1113_p9;
wire   [31:0] tmp_17_fu_1135_p1;
wire   [31:0] tmp_17_fu_1135_p2;
wire   [31:0] tmp_17_fu_1135_p3;
wire   [31:0] tmp_17_fu_1135_p4;
wire   [31:0] tmp_17_fu_1135_p5;
wire   [31:0] tmp_17_fu_1135_p6;
wire   [31:0] tmp_17_fu_1135_p7;
wire   [31:0] tmp_17_fu_1135_p8;
wire   [2:0] tmp_17_fu_1135_p9;
wire    grp_fu_742_ce;
wire    grp_fu_747_ce;
wire    grp_fu_751_ce;
wire    grp_fu_755_ce;
wire    grp_fu_759_ce;
wire    grp_fu_763_ce;
wire    grp_fu_767_ce;
wire    grp_fu_771_ce;
wire    grp_fu_775_ce;
wire    grp_fu_779_ce;
wire    grp_fu_783_ce;
wire    grp_fu_787_ce;
wire    grp_fu_791_ce;
wire    grp_fu_795_ce;
wire    grp_fu_799_ce;
wire    grp_fu_803_ce;
reg    ap_sig_cseq_ST_st48_fsm_2;
reg    ap_sig_bdd_1128;
reg   [2:0] ap_NS_fsm;


DCT_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fadd_32ns_32ns_32_5_full_dsp_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_742_p0 ),
    .din1( grp_fu_742_p1 ),
    .ce( grp_fu_742_ce ),
    .dout( grp_fu_742_p2 )
);

DCT_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fadd_32ns_32ns_32_5_full_dsp_U6(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_747_p0 ),
    .din1( grp_fu_747_p1 ),
    .ce( grp_fu_747_ce ),
    .dout( grp_fu_747_p2 )
);

DCT_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fadd_32ns_32ns_32_5_full_dsp_U7(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_751_p0 ),
    .din1( grp_fu_751_p1 ),
    .ce( grp_fu_751_ce ),
    .dout( grp_fu_751_p2 )
);

DCT_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fadd_32ns_32ns_32_5_full_dsp_U8(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_755_p0 ),
    .din1( grp_fu_755_p1 ),
    .ce( grp_fu_755_ce ),
    .dout( grp_fu_755_p2 )
);

DCT_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fadd_32ns_32ns_32_5_full_dsp_U9(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_759_p0 ),
    .din1( grp_fu_759_p1 ),
    .ce( grp_fu_759_ce ),
    .dout( grp_fu_759_p2 )
);

DCT_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fadd_32ns_32ns_32_5_full_dsp_U10(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_763_p0 ),
    .din1( grp_fu_763_p1 ),
    .ce( grp_fu_763_ce ),
    .dout( grp_fu_763_p2 )
);

DCT_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fadd_32ns_32ns_32_5_full_dsp_U11(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_767_p0 ),
    .din1( grp_fu_767_p1 ),
    .ce( grp_fu_767_ce ),
    .dout( grp_fu_767_p2 )
);

DCT_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fadd_32ns_32ns_32_5_full_dsp_U12(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_771_p0 ),
    .din1( grp_fu_771_p1 ),
    .ce( grp_fu_771_ce ),
    .dout( grp_fu_771_p2 )
);

DCT_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fmul_32ns_32ns_32_4_max_dsp_U13(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_775_p0 ),
    .din1( grp_fu_775_p1 ),
    .ce( grp_fu_775_ce ),
    .dout( grp_fu_775_p2 )
);

DCT_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fmul_32ns_32ns_32_4_max_dsp_U14(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_779_p0 ),
    .din1( grp_fu_779_p1 ),
    .ce( grp_fu_779_ce ),
    .dout( grp_fu_779_p2 )
);

DCT_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fmul_32ns_32ns_32_4_max_dsp_U15(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_783_p0 ),
    .din1( grp_fu_783_p1 ),
    .ce( grp_fu_783_ce ),
    .dout( grp_fu_783_p2 )
);

DCT_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fmul_32ns_32ns_32_4_max_dsp_U16(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_787_p0 ),
    .din1( grp_fu_787_p1 ),
    .ce( grp_fu_787_ce ),
    .dout( grp_fu_787_p2 )
);

DCT_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fmul_32ns_32ns_32_4_max_dsp_U17(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_791_p0 ),
    .din1( grp_fu_791_p1 ),
    .ce( grp_fu_791_ce ),
    .dout( grp_fu_791_p2 )
);

DCT_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fmul_32ns_32ns_32_4_max_dsp_U18(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_795_p0 ),
    .din1( grp_fu_795_p1 ),
    .ce( grp_fu_795_ce ),
    .dout( grp_fu_795_p2 )
);

DCT_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fmul_32ns_32ns_32_4_max_dsp_U19(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_799_p0 ),
    .din1( grp_fu_799_p1 ),
    .ce( grp_fu_799_ce ),
    .dout( grp_fu_799_p2 )
);

DCT_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DCT_fmul_32ns_32ns_32_4_max_dsp_U20(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_803_p0 ),
    .din1( grp_fu_803_p1 ),
    .ce( grp_fu_803_ce ),
    .dout( grp_fu_803_p2 )
);

DCT_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DCT_mux_8to1_sel3_32_1_U21(
    .din1( tmp_fu_861_p1 ),
    .din2( tmp_fu_861_p2 ),
    .din3( tmp_fu_861_p3 ),
    .din4( tmp_fu_861_p4 ),
    .din5( tmp_fu_861_p5 ),
    .din6( tmp_fu_861_p6 ),
    .din7( tmp_fu_861_p7 ),
    .din8( tmp_fu_861_p8 ),
    .din9( tmp_fu_861_p9 ),
    .dout( tmp_fu_861_p10 )
);

DCT_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DCT_mux_8to1_sel3_32_1_U22(
    .din1( tmp_2_fu_883_p1 ),
    .din2( tmp_2_fu_883_p2 ),
    .din3( tmp_2_fu_883_p3 ),
    .din4( tmp_2_fu_883_p4 ),
    .din5( tmp_2_fu_883_p5 ),
    .din6( tmp_2_fu_883_p6 ),
    .din7( tmp_2_fu_883_p7 ),
    .din8( tmp_2_fu_883_p8 ),
    .din9( tmp_2_fu_883_p9 ),
    .dout( tmp_2_fu_883_p10 )
);

DCT_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DCT_mux_8to1_sel3_32_1_U23(
    .din1( tmp_4_fu_897_p1 ),
    .din2( tmp_4_fu_897_p2 ),
    .din3( tmp_4_fu_897_p3 ),
    .din4( tmp_4_fu_897_p4 ),
    .din5( tmp_4_fu_897_p5 ),
    .din6( tmp_4_fu_897_p6 ),
    .din7( tmp_4_fu_897_p7 ),
    .din8( tmp_4_fu_897_p8 ),
    .din9( tmp_4_fu_897_p9 ),
    .dout( tmp_4_fu_897_p10 )
);

DCT_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DCT_mux_8to1_sel3_32_1_U24(
    .din1( tmp_5_fu_919_p1 ),
    .din2( tmp_5_fu_919_p2 ),
    .din3( tmp_5_fu_919_p3 ),
    .din4( tmp_5_fu_919_p4 ),
    .din5( tmp_5_fu_919_p5 ),
    .din6( tmp_5_fu_919_p6 ),
    .din7( tmp_5_fu_919_p7 ),
    .din8( tmp_5_fu_919_p8 ),
    .din9( tmp_5_fu_919_p9 ),
    .dout( tmp_5_fu_919_p10 )
);

DCT_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DCT_mux_8to1_sel3_32_1_U25(
    .din1( tmp_7_fu_933_p1 ),
    .din2( tmp_7_fu_933_p2 ),
    .din3( tmp_7_fu_933_p3 ),
    .din4( tmp_7_fu_933_p4 ),
    .din5( tmp_7_fu_933_p5 ),
    .din6( tmp_7_fu_933_p6 ),
    .din7( tmp_7_fu_933_p7 ),
    .din8( tmp_7_fu_933_p8 ),
    .din9( tmp_7_fu_933_p9 ),
    .dout( tmp_7_fu_933_p10 )
);

DCT_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DCT_mux_8to1_sel3_32_1_U26(
    .din1( tmp_8_fu_955_p1 ),
    .din2( tmp_8_fu_955_p2 ),
    .din3( tmp_8_fu_955_p3 ),
    .din4( tmp_8_fu_955_p4 ),
    .din5( tmp_8_fu_955_p5 ),
    .din6( tmp_8_fu_955_p6 ),
    .din7( tmp_8_fu_955_p7 ),
    .din8( tmp_8_fu_955_p8 ),
    .din9( tmp_8_fu_955_p9 ),
    .dout( tmp_8_fu_955_p10 )
);

DCT_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DCT_mux_8to1_sel3_32_1_U27(
    .din1( tmp_s_fu_969_p1 ),
    .din2( tmp_s_fu_969_p2 ),
    .din3( tmp_s_fu_969_p3 ),
    .din4( tmp_s_fu_969_p4 ),
    .din5( tmp_s_fu_969_p5 ),
    .din6( tmp_s_fu_969_p6 ),
    .din7( tmp_s_fu_969_p7 ),
    .din8( tmp_s_fu_969_p8 ),
    .din9( tmp_s_fu_969_p9 ),
    .dout( tmp_s_fu_969_p10 )
);

DCT_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DCT_mux_8to1_sel3_32_1_U28(
    .din1( tmp_1_fu_991_p1 ),
    .din2( tmp_1_fu_991_p2 ),
    .din3( tmp_1_fu_991_p3 ),
    .din4( tmp_1_fu_991_p4 ),
    .din5( tmp_1_fu_991_p5 ),
    .din6( tmp_1_fu_991_p6 ),
    .din7( tmp_1_fu_991_p7 ),
    .din8( tmp_1_fu_991_p8 ),
    .din9( tmp_1_fu_991_p9 ),
    .dout( tmp_1_fu_991_p10 )
);

DCT_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DCT_mux_8to1_sel3_32_1_U29(
    .din1( tmp_10_fu_1005_p1 ),
    .din2( tmp_10_fu_1005_p2 ),
    .din3( tmp_10_fu_1005_p3 ),
    .din4( tmp_10_fu_1005_p4 ),
    .din5( tmp_10_fu_1005_p5 ),
    .din6( tmp_10_fu_1005_p6 ),
    .din7( tmp_10_fu_1005_p7 ),
    .din8( tmp_10_fu_1005_p8 ),
    .din9( tmp_10_fu_1005_p9 ),
    .dout( tmp_10_fu_1005_p10 )
);

DCT_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DCT_mux_8to1_sel3_32_1_U30(
    .din1( tmp_11_fu_1027_p1 ),
    .din2( tmp_11_fu_1027_p2 ),
    .din3( tmp_11_fu_1027_p3 ),
    .din4( tmp_11_fu_1027_p4 ),
    .din5( tmp_11_fu_1027_p5 ),
    .din6( tmp_11_fu_1027_p6 ),
    .din7( tmp_11_fu_1027_p7 ),
    .din8( tmp_11_fu_1027_p8 ),
    .din9( tmp_11_fu_1027_p9 ),
    .dout( tmp_11_fu_1027_p10 )
);

DCT_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DCT_mux_8to1_sel3_32_1_U31(
    .din1( tmp_12_fu_1041_p1 ),
    .din2( tmp_12_fu_1041_p2 ),
    .din3( tmp_12_fu_1041_p3 ),
    .din4( tmp_12_fu_1041_p4 ),
    .din5( tmp_12_fu_1041_p5 ),
    .din6( tmp_12_fu_1041_p6 ),
    .din7( tmp_12_fu_1041_p7 ),
    .din8( tmp_12_fu_1041_p8 ),
    .din9( tmp_12_fu_1041_p9 ),
    .dout( tmp_12_fu_1041_p10 )
);

DCT_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DCT_mux_8to1_sel3_32_1_U32(
    .din1( tmp_13_fu_1063_p1 ),
    .din2( tmp_13_fu_1063_p2 ),
    .din3( tmp_13_fu_1063_p3 ),
    .din4( tmp_13_fu_1063_p4 ),
    .din5( tmp_13_fu_1063_p5 ),
    .din6( tmp_13_fu_1063_p6 ),
    .din7( tmp_13_fu_1063_p7 ),
    .din8( tmp_13_fu_1063_p8 ),
    .din9( tmp_13_fu_1063_p9 ),
    .dout( tmp_13_fu_1063_p10 )
);

DCT_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DCT_mux_8to1_sel3_32_1_U33(
    .din1( tmp_14_fu_1077_p1 ),
    .din2( tmp_14_fu_1077_p2 ),
    .din3( tmp_14_fu_1077_p3 ),
    .din4( tmp_14_fu_1077_p4 ),
    .din5( tmp_14_fu_1077_p5 ),
    .din6( tmp_14_fu_1077_p6 ),
    .din7( tmp_14_fu_1077_p7 ),
    .din8( tmp_14_fu_1077_p8 ),
    .din9( tmp_14_fu_1077_p9 ),
    .dout( tmp_14_fu_1077_p10 )
);

DCT_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DCT_mux_8to1_sel3_32_1_U34(
    .din1( tmp_15_fu_1099_p1 ),
    .din2( tmp_15_fu_1099_p2 ),
    .din3( tmp_15_fu_1099_p3 ),
    .din4( tmp_15_fu_1099_p4 ),
    .din5( tmp_15_fu_1099_p5 ),
    .din6( tmp_15_fu_1099_p6 ),
    .din7( tmp_15_fu_1099_p7 ),
    .din8( tmp_15_fu_1099_p8 ),
    .din9( tmp_15_fu_1099_p9 ),
    .dout( tmp_15_fu_1099_p10 )
);

DCT_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DCT_mux_8to1_sel3_32_1_U35(
    .din1( tmp_16_fu_1113_p1 ),
    .din2( tmp_16_fu_1113_p2 ),
    .din3( tmp_16_fu_1113_p3 ),
    .din4( tmp_16_fu_1113_p4 ),
    .din5( tmp_16_fu_1113_p5 ),
    .din6( tmp_16_fu_1113_p6 ),
    .din7( tmp_16_fu_1113_p7 ),
    .din8( tmp_16_fu_1113_p8 ),
    .din9( tmp_16_fu_1113_p9 ),
    .dout( tmp_16_fu_1113_p10 )
);

DCT_mux_8to1_sel3_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
DCT_mux_8to1_sel3_32_1_U36(
    .din1( tmp_17_fu_1135_p1 ),
    .din2( tmp_17_fu_1135_p2 ),
    .din3( tmp_17_fu_1135_p3 ),
    .din4( tmp_17_fu_1135_p4 ),
    .din5( tmp_17_fu_1135_p5 ),
    .din6( tmp_17_fu_1135_p6 ),
    .din7( tmp_17_fu_1135_p7 ),
    .din8( tmp_17_fu_1135_p8 ),
    .din9( tmp_17_fu_1135_p9 ),
    .dout( tmp_17_fu_1135_p10 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_2)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond_flatten_fu_807_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_160)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_fu_807_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_160) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond_flatten_fu_807_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it10 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it10
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
    end
end

/// ap_reg_ppiten_pp0_it11 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it11
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
    end
end

/// ap_reg_ppiten_pp0_it12 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it12
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
    end
end

/// ap_reg_ppiten_pp0_it13 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it13
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
    end
end

/// ap_reg_ppiten_pp0_it14 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it14
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
    end
end

/// ap_reg_ppiten_pp0_it15 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it15
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
    end
end

/// ap_reg_ppiten_pp0_it16 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it16
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
    end
end

/// ap_reg_ppiten_pp0_it17 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it17
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
    end
end

/// ap_reg_ppiten_pp0_it18 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it18
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
    end
end

/// ap_reg_ppiten_pp0_it19 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it19
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
    end
end

/// ap_reg_ppiten_pp0_it20 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it20
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
    end
end

/// ap_reg_ppiten_pp0_it21 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it21
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
    end
end

/// ap_reg_ppiten_pp0_it22 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it22
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
    end
end

/// ap_reg_ppiten_pp0_it23 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it23
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
    end
end

/// ap_reg_ppiten_pp0_it24 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it24
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
    end
end

/// ap_reg_ppiten_pp0_it25 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it25
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
    end
end

/// ap_reg_ppiten_pp0_it26 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it26
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
    end
end

/// ap_reg_ppiten_pp0_it27 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it27
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it27 <= ap_reg_ppiten_pp0_it26;
    end
end

/// ap_reg_ppiten_pp0_it28 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it28
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it28 <= ap_reg_ppiten_pp0_it27;
    end
end

/// ap_reg_ppiten_pp0_it29 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it29
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it29 <= ap_reg_ppiten_pp0_it28;
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
    end
end

/// ap_reg_ppiten_pp0_it30 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it30
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it30 <= ap_reg_ppiten_pp0_it29;
    end
end

/// ap_reg_ppiten_pp0_it31 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it31
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it31 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it31 <= ap_reg_ppiten_pp0_it30;
    end
end

/// ap_reg_ppiten_pp0_it32 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it32
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it32 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it32 <= ap_reg_ppiten_pp0_it31;
    end
end

/// ap_reg_ppiten_pp0_it33 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it33
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it33 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it33 <= ap_reg_ppiten_pp0_it32;
    end
end

/// ap_reg_ppiten_pp0_it34 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it34
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it34 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it34 <= ap_reg_ppiten_pp0_it33;
    end
end

/// ap_reg_ppiten_pp0_it35 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it35
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it35 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it35 <= ap_reg_ppiten_pp0_it34;
    end
end

/// ap_reg_ppiten_pp0_it36 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it36
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it36 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it36 <= ap_reg_ppiten_pp0_it35;
    end
end

/// ap_reg_ppiten_pp0_it37 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it37
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it37 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it37 <= ap_reg_ppiten_pp0_it36;
    end
end

/// ap_reg_ppiten_pp0_it38 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it38
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it38 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it38 <= ap_reg_ppiten_pp0_it37;
    end
end

/// ap_reg_ppiten_pp0_it39 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it39
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it39 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it39 <= ap_reg_ppiten_pp0_it38;
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
    end
end

/// ap_reg_ppiten_pp0_it40 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it40
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it40 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it40 <= ap_reg_ppiten_pp0_it39;
    end
end

/// ap_reg_ppiten_pp0_it41 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it41
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it41 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it41 <= ap_reg_ppiten_pp0_it40;
    end
end

/// ap_reg_ppiten_pp0_it42 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it42
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it42 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it42 <= ap_reg_ppiten_pp0_it41;
    end
end

/// ap_reg_ppiten_pp0_it43 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it43
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it43 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it43 <= ap_reg_ppiten_pp0_it42;
    end
end

/// ap_reg_ppiten_pp0_it44 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it44
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it44 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it44 <= ap_reg_ppiten_pp0_it43;
    end
end

/// ap_reg_ppiten_pp0_it45 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it45
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it45 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it45 <= ap_reg_ppiten_pp0_it44;
    end
end

/// ap_reg_ppiten_pp0_it5 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it5
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
    end
end

/// ap_reg_ppiten_pp0_it6 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it6
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
    end
end

/// ap_reg_ppiten_pp0_it7 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it7
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
    end
end

/// ap_reg_ppiten_pp0_it8 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it8
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
    end
end

/// ap_reg_ppiten_pp0_it9 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it9
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1480 == ap_const_lv1_0))) begin
        i_1_reg_719 <= i_1_mid2_reg_1494;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_160)) begin
        i_1_reg_719 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_807_p2 == ap_const_lv1_0))) begin
        indvar_flatten_reg_708 <= indvar_flatten_next_fu_813_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_160)) begin
        indvar_flatten_reg_708 <= ap_const_lv7_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_807_p2 == ap_const_lv1_0))) begin
        j_1_reg_730 <= j_fu_855_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_160)) begin
        j_1_reg_730 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it1 <= exitcond_flatten_reg_1480;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it1 <= j_1_mid2_reg_1489;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it1 <= tmp_18_reg_1499;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it1 <= tmp_19_reg_1511;
        exitcond_flatten_reg_1480 <= exitcond_flatten_fu_807_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_true == ap_true)) begin
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it10 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it9;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it11 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it10;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it12 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it11;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it13 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it12;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it14 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it13;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it15 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it14;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it16 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it15;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it17 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it16;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it18 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it17;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it19 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it18;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it2 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it1;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it20 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it19;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it21 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it20;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it22 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it21;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it23 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it22;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it24 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it23;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it25 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it24;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it26 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it25;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it27 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it26;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it28 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it27;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it29 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it28;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it3 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it2;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it30 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it29;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it31 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it30;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it32 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it31;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it33 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it32;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it34 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it33;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it35 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it34;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it36 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it35;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it37 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it36;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it38 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it37;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it39 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it38;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it4 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it3;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it40 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it39;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it41 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it40;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it42 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it41;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it43 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it42;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it5 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it4;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it6 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it5;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it7 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it6;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it8 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it7;
        ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it9 <= ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it8;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it10 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it9;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it11 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it10;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it12 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it11;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it13 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it12;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it14 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it13;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it15 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it14;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it16 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it15;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it17 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it16;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it18 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it17;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it19 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it18;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it2 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it1;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it20 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it19;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it21 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it20;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it22 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it21;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it23 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it22;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it24 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it23;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it25 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it24;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it26 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it25;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it27 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it26;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it28 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it27;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it29 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it28;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it3 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it2;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it30 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it29;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it31 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it30;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it32 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it31;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it33 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it32;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it34 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it33;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it35 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it34;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it36 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it35;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it37 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it36;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it38 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it37;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it39 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it38;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it4 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it3;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it40 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it39;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it41 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it40;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it42 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it41;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it43 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it42;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it44 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it43;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it5 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it4;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it6 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it5;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it7 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it6;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it8 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it7;
        ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it9 <= ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it8;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it10 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it9;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it11 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it10;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it12 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it11;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it13 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it12;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it14 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it13;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it15 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it14;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it16 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it15;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it17 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it16;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it18 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it17;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it19 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it18;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it2 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it1;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it20 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it19;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it21 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it20;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it22 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it21;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it23 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it22;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it24 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it23;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it25 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it24;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it26 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it25;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it27 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it26;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it28 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it27;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it29 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it28;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it3 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it2;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it30 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it29;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it31 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it30;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it32 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it31;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it33 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it32;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it34 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it33;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it35 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it34;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it36 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it35;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it37 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it36;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it38 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it37;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it39 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it38;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it4 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it3;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it40 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it39;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it41 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it40;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it42 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it41;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it43 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it42;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it44 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it43;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it5 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it4;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it6 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it5;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it7 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it6;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it8 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it7;
        ap_reg_ppstg_tmp_18_reg_1499_pp0_it9 <= ap_reg_ppstg_tmp_18_reg_1499_pp0_it8;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it10 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it9;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it11 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it10;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it12 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it11;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it13 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it12;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it14 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it13;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it15 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it14;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it16 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it15;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it17 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it16;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it18 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it17;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it19 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it18;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it2 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it1;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it20 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it19;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it21 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it20;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it22 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it21;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it23 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it22;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it24 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it23;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it25 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it24;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it26 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it25;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it27 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it26;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it28 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it27;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it29 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it28;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it3 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it2;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it30 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it29;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it31 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it30;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it32 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it31;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it33 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it32;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it34 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it33;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it35 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it34;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it4 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it3;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it5 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it4;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it6 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it5;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it7 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it6;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it8 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it7;
        ap_reg_ppstg_tmp_19_reg_1511_pp0_it9 <= ap_reg_ppstg_tmp_19_reg_1511_pp0_it8;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_807_p2 == ap_const_lv1_0))) begin
        i_1_mid2_reg_1494 <= i_1_mid2_fu_839_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_fu_807_p2 == ap_const_lv1_0))) begin
        j_1_mid2_reg_1489 <= j_1_mid2_fu_825_p3;
        tmp_18_reg_1499 <= tmp_18_fu_847_p1;
        tmp_19_reg_1511 <= tmp_19_fu_851_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it13 == ap_const_lv1_0)) begin
        temp_1_1_reg_1573 <= grp_fu_747_p2;
        tmp_9_2_reg_1578 <= grp_fu_783_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it18 == ap_const_lv1_0)) begin
        temp_1_2_reg_1593 <= grp_fu_751_p2;
        tmp_9_3_reg_1598 <= grp_fu_787_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it23 == ap_const_lv1_0)) begin
        temp_1_3_reg_1613 <= grp_fu_755_p2;
        tmp_9_4_reg_1618 <= grp_fu_791_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it28 == ap_const_lv1_0)) begin
        temp_1_4_reg_1633 <= grp_fu_759_p2;
        tmp_9_5_reg_1638 <= grp_fu_795_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it33 == ap_const_lv1_0)) begin
        temp_1_5_reg_1653 <= grp_fu_763_p2;
        tmp_9_6_reg_1658 <= grp_fu_799_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it38 == ap_const_lv1_0)) begin
        temp_1_6_reg_1673 <= grp_fu_767_p2;
        tmp_9_7_reg_1678 <= grp_fu_803_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it43 == ap_const_lv1_0)) begin
        temp_1_7_reg_1683 <= grp_fu_771_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it8 == ap_const_lv1_0)) begin
        temp_1_reg_1553 <= grp_fu_742_p2;
        tmp_9_1_reg_1558 <= grp_fu_779_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_reg_ppstg_exitcond_flatten_reg_1480_pp0_it3 == ap_const_lv1_0)) begin
        tmp_9_reg_1538 <= grp_fu_775_p2;
    end
end

/// C_0_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it45)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) begin
        C_0_ce0 = ap_const_logic_1;
    end else begin
        C_0_ce0 = ap_const_logic_0;
    end
end

/// C_0_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it45 or ap_reg_ppstg_tmp_18_reg_1499_pp0_it44)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it45) & (ap_reg_ppstg_tmp_18_reg_1499_pp0_it44 == ap_const_lv3_0))) begin
        C_0_we0 = ap_const_logic_1;
    end else begin
        C_0_we0 = ap_const_logic_0;
    end
end

/// C_1_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it45)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) begin
        C_1_ce0 = ap_const_logic_1;
    end else begin
        C_1_ce0 = ap_const_logic_0;
    end
end

/// C_1_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it45 or ap_reg_ppstg_tmp_18_reg_1499_pp0_it44)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it45) & (ap_reg_ppstg_tmp_18_reg_1499_pp0_it44 == ap_const_lv3_1))) begin
        C_1_we0 = ap_const_logic_1;
    end else begin
        C_1_we0 = ap_const_logic_0;
    end
end

/// C_2_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it45)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) begin
        C_2_ce0 = ap_const_logic_1;
    end else begin
        C_2_ce0 = ap_const_logic_0;
    end
end

/// C_2_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it45 or ap_reg_ppstg_tmp_18_reg_1499_pp0_it44)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it45) & (ap_reg_ppstg_tmp_18_reg_1499_pp0_it44 == ap_const_lv3_2))) begin
        C_2_we0 = ap_const_logic_1;
    end else begin
        C_2_we0 = ap_const_logic_0;
    end
end

/// C_3_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it45)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) begin
        C_3_ce0 = ap_const_logic_1;
    end else begin
        C_3_ce0 = ap_const_logic_0;
    end
end

/// C_3_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it45 or ap_reg_ppstg_tmp_18_reg_1499_pp0_it44)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it45) & (ap_reg_ppstg_tmp_18_reg_1499_pp0_it44 == ap_const_lv3_3))) begin
        C_3_we0 = ap_const_logic_1;
    end else begin
        C_3_we0 = ap_const_logic_0;
    end
end

/// C_4_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it45)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) begin
        C_4_ce0 = ap_const_logic_1;
    end else begin
        C_4_ce0 = ap_const_logic_0;
    end
end

/// C_4_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it45 or ap_reg_ppstg_tmp_18_reg_1499_pp0_it44)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it45) & (ap_reg_ppstg_tmp_18_reg_1499_pp0_it44 == ap_const_lv3_4))) begin
        C_4_we0 = ap_const_logic_1;
    end else begin
        C_4_we0 = ap_const_logic_0;
    end
end

/// C_5_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it45)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) begin
        C_5_ce0 = ap_const_logic_1;
    end else begin
        C_5_ce0 = ap_const_logic_0;
    end
end

/// C_5_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it45 or ap_reg_ppstg_tmp_18_reg_1499_pp0_it44)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it45) & (ap_reg_ppstg_tmp_18_reg_1499_pp0_it44 == ap_const_lv3_5))) begin
        C_5_we0 = ap_const_logic_1;
    end else begin
        C_5_we0 = ap_const_logic_0;
    end
end

/// C_6_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it45)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) begin
        C_6_ce0 = ap_const_logic_1;
    end else begin
        C_6_ce0 = ap_const_logic_0;
    end
end

/// C_6_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it45 or ap_reg_ppstg_tmp_18_reg_1499_pp0_it44)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it45) & (ap_reg_ppstg_tmp_18_reg_1499_pp0_it44 == ap_const_lv3_6))) begin
        C_6_we0 = ap_const_logic_1;
    end else begin
        C_6_we0 = ap_const_logic_0;
    end
end

/// C_7_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it45)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it45)) begin
        C_7_ce0 = ap_const_logic_1;
    end else begin
        C_7_ce0 = ap_const_logic_0;
    end
end

/// C_7_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it45 or ap_reg_ppstg_tmp_18_reg_1499_pp0_it44)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it45) & ~(ap_reg_ppstg_tmp_18_reg_1499_pp0_it44 == ap_const_lv3_6) & ~(ap_reg_ppstg_tmp_18_reg_1499_pp0_it44 == ap_const_lv3_5) & ~(ap_reg_ppstg_tmp_18_reg_1499_pp0_it44 == ap_const_lv3_4) & ~(ap_reg_ppstg_tmp_18_reg_1499_pp0_it44 == ap_const_lv3_3) & ~(ap_reg_ppstg_tmp_18_reg_1499_pp0_it44 == ap_const_lv3_2) & ~(ap_reg_ppstg_tmp_18_reg_1499_pp0_it44 == ap_const_lv3_1) & ~(ap_reg_ppstg_tmp_18_reg_1499_pp0_it44 == ap_const_lv3_0))) begin
        C_7_we0 = ap_const_logic_1;
    end else begin
        C_7_we0 = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st48_fsm_2)
begin
    if (((ap_const_logic_1 == ap_done_reg) | (ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st48_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_2)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. ///
always @ (ap_sig_bdd_296)
begin
    if (ap_sig_bdd_296) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_22)
begin
    if (ap_sig_bdd_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st48_fsm_2 assign process. ///
always @ (ap_sig_bdd_1128)
begin
    if (ap_sig_bdd_1128) begin
        ap_sig_cseq_ST_st48_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_2 = ap_const_logic_0;
    end
end

/// i_1_phi_fu_723_p4 assign process. ///
always @ (i_1_reg_719 or exitcond_flatten_reg_1480 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or i_1_mid2_reg_1494)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1480 == ap_const_lv1_0))) begin
        i_1_phi_fu_723_p4 = i_1_mid2_reg_1494;
    end else begin
        i_1_phi_fu_723_p4 = i_1_reg_719;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or ap_sig_bdd_160 or exitcond_flatten_fu_807_p2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it44 or ap_reg_ppiten_pp0_it45)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_160) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it45) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it44)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_flatten_fu_807_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_flatten_fu_807_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st48_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st48_fsm_2;
            end
        end
        ap_ST_st48_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_0_address0 = tmp_6_fu_1149_p1;
assign C_0_d0 = temp_1_7_reg_1683;
assign C_1_address0 = tmp_6_fu_1149_p1;
assign C_1_d0 = temp_1_7_reg_1683;
assign C_2_address0 = tmp_6_fu_1149_p1;
assign C_2_d0 = temp_1_7_reg_1683;
assign C_3_address0 = tmp_6_fu_1149_p1;
assign C_3_d0 = temp_1_7_reg_1683;
assign C_4_address0 = tmp_6_fu_1149_p1;
assign C_4_d0 = temp_1_7_reg_1683;
assign C_5_address0 = tmp_6_fu_1149_p1;
assign C_5_d0 = temp_1_7_reg_1683;
assign C_6_address0 = tmp_6_fu_1149_p1;
assign C_6_d0 = temp_1_7_reg_1683;
assign C_7_address0 = tmp_6_fu_1149_p1;
assign C_7_d0 = temp_1_7_reg_1683;

/// ap_sig_bdd_1128 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_1128 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_160 assign process. ///
always @ (ap_start or ap_done_reg)
begin
    ap_sig_bdd_160 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_22 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_22 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_296 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_296 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end
assign exitcond_flatten_fu_807_p2 = (indvar_flatten_reg_708 == ap_const_lv7_40? 1'b1: 1'b0);
assign exitcond_fu_819_p2 = (j_1_reg_730 == ap_const_lv4_8? 1'b1: 1'b0);
assign grp_fu_742_ce = ap_const_logic_1;
assign grp_fu_742_p0 = tmp_9_reg_1538;
assign grp_fu_742_p1 = ap_const_lv32_0;
assign grp_fu_747_ce = ap_const_logic_1;
assign grp_fu_747_p0 = temp_1_reg_1553;
assign grp_fu_747_p1 = tmp_9_1_reg_1558;
assign grp_fu_751_ce = ap_const_logic_1;
assign grp_fu_751_p0 = temp_1_1_reg_1573;
assign grp_fu_751_p1 = tmp_9_2_reg_1578;
assign grp_fu_755_ce = ap_const_logic_1;
assign grp_fu_755_p0 = temp_1_2_reg_1593;
assign grp_fu_755_p1 = tmp_9_3_reg_1598;
assign grp_fu_759_ce = ap_const_logic_1;
assign grp_fu_759_p0 = temp_1_3_reg_1613;
assign grp_fu_759_p1 = tmp_9_4_reg_1618;
assign grp_fu_763_ce = ap_const_logic_1;
assign grp_fu_763_p0 = temp_1_4_reg_1633;
assign grp_fu_763_p1 = tmp_9_5_reg_1638;
assign grp_fu_767_ce = ap_const_logic_1;
assign grp_fu_767_p0 = temp_1_5_reg_1653;
assign grp_fu_767_p1 = tmp_9_6_reg_1658;
assign grp_fu_771_ce = ap_const_logic_1;
assign grp_fu_771_p0 = temp_1_6_reg_1673;
assign grp_fu_771_p1 = tmp_9_7_reg_1678;
assign grp_fu_775_ce = ap_const_logic_1;
assign grp_fu_775_p0 = tmp_fu_861_p10;
assign grp_fu_775_p1 = tmp_2_fu_883_p10;
assign grp_fu_779_ce = ap_const_logic_1;
assign grp_fu_779_p0 = tmp_4_fu_897_p10;
assign grp_fu_779_p1 = tmp_5_fu_919_p10;
assign grp_fu_783_ce = ap_const_logic_1;
assign grp_fu_783_p0 = tmp_7_fu_933_p10;
assign grp_fu_783_p1 = tmp_8_fu_955_p10;
assign grp_fu_787_ce = ap_const_logic_1;
assign grp_fu_787_p0 = tmp_s_fu_969_p10;
assign grp_fu_787_p1 = tmp_1_fu_991_p10;
assign grp_fu_791_ce = ap_const_logic_1;
assign grp_fu_791_p0 = tmp_10_fu_1005_p10;
assign grp_fu_791_p1 = tmp_11_fu_1027_p10;
assign grp_fu_795_ce = ap_const_logic_1;
assign grp_fu_795_p0 = tmp_12_fu_1041_p10;
assign grp_fu_795_p1 = tmp_13_fu_1063_p10;
assign grp_fu_799_ce = ap_const_logic_1;
assign grp_fu_799_p0 = tmp_14_fu_1077_p10;
assign grp_fu_799_p1 = tmp_15_fu_1099_p10;
assign grp_fu_803_ce = ap_const_logic_1;
assign grp_fu_803_p0 = tmp_16_fu_1113_p10;
assign grp_fu_803_p1 = tmp_17_fu_1135_p10;
assign i_1_mid2_fu_839_p3 = ((exitcond_fu_819_p2[0:0]===1'b1)? i_fu_833_p2: i_1_phi_fu_723_p4);
assign i_fu_833_p2 = (ap_const_lv4_1 + i_1_phi_fu_723_p4);
assign indvar_flatten_next_fu_813_p2 = (indvar_flatten_reg_708 + ap_const_lv7_1);
assign j_1_mid2_fu_825_p3 = ((exitcond_fu_819_p2[0:0]===1'b1)? ap_const_lv4_0: j_1_reg_730);
assign j_fu_855_p2 = (j_1_mid2_fu_825_p3 + ap_const_lv4_1);
assign tmp_10_fu_1005_p1 = ap_const_lv32_3EB504F3;
assign tmp_10_fu_1005_p2 = ap_const_lv32_BDC7C5C2;
assign tmp_10_fu_1005_p3 = ap_const_lv32_BEEC835F;
assign tmp_10_fu_1005_p4 = ap_const_lv32_3E8E39DA;
assign tmp_10_fu_1005_p5 = ap_const_lv32_3EB504F3;
assign tmp_10_fu_1005_p6 = ap_const_lv32_BED4DB31;
assign tmp_10_fu_1005_p7 = ap_const_lv32_BE43EF15;
assign tmp_10_fu_1005_p8 = ap_const_lv32_3EFB14BE;
assign tmp_10_fu_1005_p9 = ap_reg_ppstg_tmp_18_reg_1499_pp0_it20;
assign tmp_11_fu_1027_p1 = p_read32;
assign tmp_11_fu_1027_p2 = p_read33;
assign tmp_11_fu_1027_p3 = p_read34;
assign tmp_11_fu_1027_p4 = p_read35;
assign tmp_11_fu_1027_p5 = p_read36;
assign tmp_11_fu_1027_p6 = p_read37;
assign tmp_11_fu_1027_p7 = p_read38;
assign tmp_11_fu_1027_p8 = p_read39;
assign tmp_11_fu_1027_p9 = ap_reg_ppstg_tmp_19_reg_1511_pp0_it20;
assign tmp_12_fu_1041_p1 = ap_const_lv32_3EB504F3;
assign tmp_12_fu_1041_p2 = ap_const_lv32_BE8E39DA;
assign tmp_12_fu_1041_p3 = ap_const_lv32_BE43EF15;
assign tmp_12_fu_1041_p4 = ap_const_lv32_3EFB14BE;
assign tmp_12_fu_1041_p5 = ap_const_lv32_BEB504F3;
assign tmp_12_fu_1041_p6 = ap_const_lv32_BDC7C5C2;
assign tmp_12_fu_1041_p7 = ap_const_lv32_3EEC835F;
assign tmp_12_fu_1041_p8 = ap_const_lv32_BED4DB31;
assign tmp_12_fu_1041_p9 = ap_reg_ppstg_tmp_18_reg_1499_pp0_it25;
assign tmp_13_fu_1063_p1 = p_read40;
assign tmp_13_fu_1063_p2 = p_read41;
assign tmp_13_fu_1063_p3 = p_read42;
assign tmp_13_fu_1063_p4 = p_read43;
assign tmp_13_fu_1063_p5 = p_read44;
assign tmp_13_fu_1063_p6 = p_read45;
assign tmp_13_fu_1063_p7 = p_read46;
assign tmp_13_fu_1063_p8 = p_read47;
assign tmp_13_fu_1063_p9 = ap_reg_ppstg_tmp_19_reg_1511_pp0_it25;
assign tmp_14_fu_1077_p1 = ap_const_lv32_3EB504F3;
assign tmp_14_fu_1077_p2 = ap_const_lv32_BED4DB31;
assign tmp_14_fu_1077_p3 = ap_const_lv32_3E43EF15;
assign tmp_14_fu_1077_p4 = ap_const_lv32_3DC7C5C2;
assign tmp_14_fu_1077_p5 = ap_const_lv32_BEB504F3;
assign tmp_14_fu_1077_p6 = ap_const_lv32_3EFB14BE;
assign tmp_14_fu_1077_p7 = ap_const_lv32_BEEC835F;
assign tmp_14_fu_1077_p8 = ap_const_lv32_3E8E39DA;
assign tmp_14_fu_1077_p9 = ap_reg_ppstg_tmp_18_reg_1499_pp0_it30;
assign tmp_15_fu_1099_p1 = p_read48;
assign tmp_15_fu_1099_p2 = p_read49;
assign tmp_15_fu_1099_p3 = p_read50;
assign tmp_15_fu_1099_p4 = p_read51;
assign tmp_15_fu_1099_p5 = p_read52;
assign tmp_15_fu_1099_p6 = p_read53;
assign tmp_15_fu_1099_p7 = p_read54;
assign tmp_15_fu_1099_p8 = p_read55;
assign tmp_15_fu_1099_p9 = ap_reg_ppstg_tmp_19_reg_1511_pp0_it30;
assign tmp_16_fu_1113_p1 = ap_const_lv32_3EB504F3;
assign tmp_16_fu_1113_p2 = ap_const_lv32_BEFB14BE;
assign tmp_16_fu_1113_p3 = ap_const_lv32_3EEC835F;
assign tmp_16_fu_1113_p4 = ap_const_lv32_BED4DB31;
assign tmp_16_fu_1113_p5 = ap_const_lv32_3EB504F3;
assign tmp_16_fu_1113_p6 = ap_const_lv32_BE8E39DA;
assign tmp_16_fu_1113_p7 = ap_const_lv32_3E43EF15;
assign tmp_16_fu_1113_p8 = ap_const_lv32_BDC7C5C2;
assign tmp_16_fu_1113_p9 = ap_reg_ppstg_tmp_18_reg_1499_pp0_it35;
assign tmp_17_fu_1135_p1 = p_read56;
assign tmp_17_fu_1135_p2 = p_read57;
assign tmp_17_fu_1135_p3 = p_read58;
assign tmp_17_fu_1135_p4 = p_read59;
assign tmp_17_fu_1135_p5 = p_read60;
assign tmp_17_fu_1135_p6 = p_read61;
assign tmp_17_fu_1135_p7 = p_read62;
assign tmp_17_fu_1135_p8 = p_read63;
assign tmp_17_fu_1135_p9 = ap_reg_ppstg_tmp_19_reg_1511_pp0_it35;
assign tmp_18_fu_847_p1 = i_1_mid2_fu_839_p3[2:0];
assign tmp_19_fu_851_p1 = j_1_mid2_fu_825_p3[2:0];
assign tmp_1_fu_991_p1 = p_read24;
assign tmp_1_fu_991_p2 = p_read25;
assign tmp_1_fu_991_p3 = p_read26;
assign tmp_1_fu_991_p4 = p_read27;
assign tmp_1_fu_991_p5 = p_read28;
assign tmp_1_fu_991_p6 = p_read29;
assign tmp_1_fu_991_p7 = p_read30;
assign tmp_1_fu_991_p8 = p_read31;
assign tmp_1_fu_991_p9 = ap_reg_ppstg_tmp_19_reg_1511_pp0_it15;
assign tmp_2_fu_883_p1 = p_read;
assign tmp_2_fu_883_p2 = p_read1;
assign tmp_2_fu_883_p3 = p_read2;
assign tmp_2_fu_883_p4 = p_read3;
assign tmp_2_fu_883_p5 = p_read4;
assign tmp_2_fu_883_p6 = p_read5;
assign tmp_2_fu_883_p7 = p_read6;
assign tmp_2_fu_883_p8 = p_read7;
assign tmp_2_fu_883_p9 = tmp_19_reg_1511;
assign tmp_4_fu_897_p1 = ap_const_lv32_3EB504F3;
assign tmp_4_fu_897_p2 = ap_const_lv32_3ED4DB31;
assign tmp_4_fu_897_p3 = ap_const_lv32_3E43EF15;
assign tmp_4_fu_897_p4 = ap_const_lv32_BDC7C5C2;
assign tmp_4_fu_897_p5 = ap_const_lv32_BEB504F3;
assign tmp_4_fu_897_p6 = ap_const_lv32_BEFB14BE;
assign tmp_4_fu_897_p7 = ap_const_lv32_BEEC835F;
assign tmp_4_fu_897_p8 = ap_const_lv32_BE8E39DA;
assign tmp_4_fu_897_p9 = ap_reg_ppstg_tmp_18_reg_1499_pp0_it5;
assign tmp_5_fu_919_p1 = p_read8;
assign tmp_5_fu_919_p2 = p_read9;
assign tmp_5_fu_919_p3 = p_read10;
assign tmp_5_fu_919_p4 = p_read11;
assign tmp_5_fu_919_p5 = p_read12;
assign tmp_5_fu_919_p6 = p_read13;
assign tmp_5_fu_919_p7 = p_read14;
assign tmp_5_fu_919_p8 = p_read15;
assign tmp_5_fu_919_p9 = ap_reg_ppstg_tmp_19_reg_1511_pp0_it5;
assign tmp_6_fu_1149_p1 = ap_reg_ppstg_j_1_mid2_reg_1489_pp0_it44;
assign tmp_7_fu_933_p1 = ap_const_lv32_3EB504F3;
assign tmp_7_fu_933_p2 = ap_const_lv32_3E8E39DA;
assign tmp_7_fu_933_p3 = ap_const_lv32_BE43EF15;
assign tmp_7_fu_933_p4 = ap_const_lv32_BEFB14BE;
assign tmp_7_fu_933_p5 = ap_const_lv32_BEB504F3;
assign tmp_7_fu_933_p6 = ap_const_lv32_3DC7C5C2;
assign tmp_7_fu_933_p7 = ap_const_lv32_3EEC835F;
assign tmp_7_fu_933_p8 = ap_const_lv32_3ED4DB31;
assign tmp_7_fu_933_p9 = ap_reg_ppstg_tmp_18_reg_1499_pp0_it10;
assign tmp_8_fu_955_p1 = p_read16;
assign tmp_8_fu_955_p2 = p_read17;
assign tmp_8_fu_955_p3 = p_read18;
assign tmp_8_fu_955_p4 = p_read19;
assign tmp_8_fu_955_p5 = p_read20;
assign tmp_8_fu_955_p6 = p_read21;
assign tmp_8_fu_955_p7 = p_read22;
assign tmp_8_fu_955_p8 = p_read23;
assign tmp_8_fu_955_p9 = ap_reg_ppstg_tmp_19_reg_1511_pp0_it10;
assign tmp_fu_861_p1 = ap_const_lv32_3EB504F3;
assign tmp_fu_861_p2 = ap_const_lv32_3EFB14BE;
assign tmp_fu_861_p3 = ap_const_lv32_3EEC835F;
assign tmp_fu_861_p4 = ap_const_lv32_3ED4DB31;
assign tmp_fu_861_p5 = ap_const_lv32_3EB504F3;
assign tmp_fu_861_p6 = ap_const_lv32_3E8E39DA;
assign tmp_fu_861_p7 = ap_const_lv32_3E43EF15;
assign tmp_fu_861_p8 = ap_const_lv32_3DC7C5C2;
assign tmp_fu_861_p9 = tmp_18_reg_1499;
assign tmp_s_fu_969_p1 = ap_const_lv32_3EB504F3;
assign tmp_s_fu_969_p2 = ap_const_lv32_3DC7C5C2;
assign tmp_s_fu_969_p3 = ap_const_lv32_BEEC835F;
assign tmp_s_fu_969_p4 = ap_const_lv32_BE8E39DA;
assign tmp_s_fu_969_p5 = ap_const_lv32_3EB504F3;
assign tmp_s_fu_969_p6 = ap_const_lv32_3ED4DB31;
assign tmp_s_fu_969_p7 = ap_const_lv32_BE43EF15;
assign tmp_s_fu_969_p8 = ap_const_lv32_BEFB14BE;
assign tmp_s_fu_969_p9 = ap_reg_ppstg_tmp_18_reg_1499_pp0_it15;


endmodule //DCT_MAT_Multiply_Loop_Row_proc

