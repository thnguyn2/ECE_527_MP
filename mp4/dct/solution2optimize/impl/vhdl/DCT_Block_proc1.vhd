-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.1
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity DCT_Block_proc1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    Xmat_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    Xmat_ce0 : OUT STD_LOGIC;
    Xmat_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Ymat_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    Ymat_ce0 : OUT STD_LOGIC;
    Ymat_we0 : OUT STD_LOGIC;
    Ymat_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of DCT_Block_proc1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_32 : BOOLEAN;
    signal T_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal T_0_ce0 : STD_LOGIC;
    signal T_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal T_0_ce1 : STD_LOGIC;
    signal T_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal T_1_ce0 : STD_LOGIC;
    signal T_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal T_1_ce1 : STD_LOGIC;
    signal T_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal T_2_ce0 : STD_LOGIC;
    signal T_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal T_2_ce1 : STD_LOGIC;
    signal T_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal T_3_ce0 : STD_LOGIC;
    signal T_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal T_3_ce1 : STD_LOGIC;
    signal T_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal T_4_ce0 : STD_LOGIC;
    signal T_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal T_4_ce1 : STD_LOGIC;
    signal T_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal T_5_ce0 : STD_LOGIC;
    signal T_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_5_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal T_5_ce1 : STD_LOGIC;
    signal T_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal T_6_ce0 : STD_LOGIC;
    signal T_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_6_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal T_6_ce1 : STD_LOGIC;
    signal T_6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal T_7_ce0 : STD_LOGIC;
    signal T_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal T_7_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal T_7_ce1 : STD_LOGIC;
    signal T_7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Tinv_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal Tinv_0_ce0 : STD_LOGIC;
    signal Tinv_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Tinv_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal Tinv_0_ce1 : STD_LOGIC;
    signal Tinv_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Tinv_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal Tinv_1_ce0 : STD_LOGIC;
    signal Tinv_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Tinv_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal Tinv_1_ce1 : STD_LOGIC;
    signal Tinv_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Tinv_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal Tinv_2_ce0 : STD_LOGIC;
    signal Tinv_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Tinv_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal Tinv_2_ce1 : STD_LOGIC;
    signal Tinv_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Tinv_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal Tinv_3_ce0 : STD_LOGIC;
    signal Tinv_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Tinv_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal Tinv_3_ce1 : STD_LOGIC;
    signal Tinv_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Tinv_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal Tinv_4_ce0 : STD_LOGIC;
    signal Tinv_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Tinv_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal Tinv_4_ce1 : STD_LOGIC;
    signal Tinv_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Tinv_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal Tinv_5_ce0 : STD_LOGIC;
    signal Tinv_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Tinv_5_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal Tinv_5_ce1 : STD_LOGIC;
    signal Tinv_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Tinv_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal Tinv_6_ce0 : STD_LOGIC;
    signal Tinv_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Tinv_6_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal Tinv_6_ce1 : STD_LOGIC;
    signal Tinv_6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Tinv_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal Tinv_7_ce0 : STD_LOGIC;
    signal Tinv_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Tinv_7_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal Tinv_7_ce1 : STD_LOGIC;
    signal Tinv_7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_read_127_read_fu_102_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_bdd_234 : BOOLEAN;
    signal Xmat2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Xmat2_ce0 : STD_LOGIC;
    signal Xmat2_we0 : STD_LOGIC;
    signal Xmat2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Xmat2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_0_ce0 : STD_LOGIC;
    signal temp_0_we0 : STD_LOGIC;
    signal temp_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_0_ce1 : STD_LOGIC;
    signal temp_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_1_ce0 : STD_LOGIC;
    signal temp_1_we0 : STD_LOGIC;
    signal temp_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_1_ce1 : STD_LOGIC;
    signal temp_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_2_ce0 : STD_LOGIC;
    signal temp_2_we0 : STD_LOGIC;
    signal temp_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_2_ce1 : STD_LOGIC;
    signal temp_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_3_ce0 : STD_LOGIC;
    signal temp_3_we0 : STD_LOGIC;
    signal temp_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_3_ce1 : STD_LOGIC;
    signal temp_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_4_ce0 : STD_LOGIC;
    signal temp_4_we0 : STD_LOGIC;
    signal temp_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_4_ce1 : STD_LOGIC;
    signal temp_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_5_ce0 : STD_LOGIC;
    signal temp_5_we0 : STD_LOGIC;
    signal temp_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_5_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_5_ce1 : STD_LOGIC;
    signal temp_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_6_ce0 : STD_LOGIC;
    signal temp_6_we0 : STD_LOGIC;
    signal temp_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_6_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_6_ce1 : STD_LOGIC;
    signal temp_6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_7_ce0 : STD_LOGIC;
    signal temp_7_we0 : STD_LOGIC;
    signal temp_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_7_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_7_ce1 : STD_LOGIC;
    signal temp_7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A1_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A1_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A1_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A1_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A2_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A2_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A2_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A2_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A3_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A3_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A3_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A3_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A4_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A4_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A4_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A4_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A4_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A5_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A5_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A5_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A5_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A5_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A5_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A6_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A6_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A6_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A6_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A6_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A6_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A7_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A7_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A7_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A7_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_A7_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_A7_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_0_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_0_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_0_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_0_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_1_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_1_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_1_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_1_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_2_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_2_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_2_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_2_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_3_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_3_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_3_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_3_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_4_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_4_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_4_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_4_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_4_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_5_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_5_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_5_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_5_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_5_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_5_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_6_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_6_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_6_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_6_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_6_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_6_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_7_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_7_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_7_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_7_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_B_7_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_B_7_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_C_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_C_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_C_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_C_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_C_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_C_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_C_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_C_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_C_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_C_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_C_pipo_status : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_C_pipo_update : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_ap_done : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_ap_start : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_ap_idle : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_1_fu_109_ap_ready : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_0_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_0_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_0_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_0_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_1_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_1_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_1_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_1_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_2_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_2_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_2_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_2_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_3_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_3_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_3_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_3_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_4_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_4_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_4_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_4_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_4_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_5_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_5_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_5_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_5_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_5_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_5_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_6_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_6_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_6_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_6_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_6_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_6_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_7_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_7_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_7_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_7_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_A_7_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_A_7_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_B_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_B_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_B_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_B_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_B_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_B_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_B_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_B_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_B_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_B_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_0_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_0_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_0_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_0_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_1_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_1_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_1_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_1_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_2_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_2_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_2_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_2_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_3_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_3_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_3_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_3_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_4_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_4_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_4_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_4_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_4_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_5_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_5_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_5_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_5_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_5_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_5_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_6_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_6_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_6_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_6_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_6_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_6_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_7_ce0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_7_we0 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_7_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_7_ce1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_C_7_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_fu_147_C_7_we1 : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_B_pipo_status : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_B_pipo_update : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_ap_done : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_ap_start : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_ap_idle : STD_LOGIC;
    signal grp_DCT_MAT_Multiply_fu_147_ap_ready : STD_LOGIC;
    signal grp_DCT_Quant_fu_193_ap_start : STD_LOGIC;
    signal grp_DCT_Quant_fu_193_ap_done : STD_LOGIC;
    signal grp_DCT_Quant_fu_193_ap_idle : STD_LOGIC;
    signal grp_DCT_Quant_fu_193_ap_ready : STD_LOGIC;
    signal grp_DCT_Quant_fu_193_X_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DCT_Quant_fu_193_X_ce0 : STD_LOGIC;
    signal grp_DCT_Quant_fu_193_X_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_Quant_fu_193_function_r : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_DCT_Quant_fu_193_Y_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_DCT_Quant_fu_193_Y_ce0 : STD_LOGIC;
    signal grp_DCT_Quant_fu_193_Y_we0 : STD_LOGIC;
    signal grp_DCT_Quant_fu_193_Y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_DCT_MAT_Multiply_1_fu_109_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_721 : BOOLEAN;
    signal ap_reg_startack_grp_DCT_MAT_Multiply_1_fu_109_ap_ready : STD_LOGIC := '0';
    signal ap_sig_startack_grp_DCT_MAT_Multiply_1_fu_109_ap_ready : STD_LOGIC;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_733 : BOOLEAN;
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_755 : BOOLEAN;
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_763 : BOOLEAN;
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_bdd_783 : BOOLEAN;
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_bdd_791 : BOOLEAN;
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_bdd_805 : BOOLEAN;
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_bdd_813 : BOOLEAN;
    signal grp_DCT_MAT_Multiply_fu_147_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_reg_startack_grp_DCT_MAT_Multiply_fu_147_ap_ready : STD_LOGIC := '0';
    signal ap_sig_startack_grp_DCT_MAT_Multiply_fu_147_ap_ready : STD_LOGIC;
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_837 : BOOLEAN;
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_859 : BOOLEAN;
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_bdd_876 : BOOLEAN;
    signal grp_DCT_Quant_fu_193_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_bdd_915 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);

    component DCT_MAT_Multiply_1 IS
    port (
        A_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_we0 : OUT STD_LOGIC;
        A_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_ce1 : OUT STD_LOGIC;
        A_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_we1 : OUT STD_LOGIC;
        A1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A1_ce0 : OUT STD_LOGIC;
        A1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A1_we0 : OUT STD_LOGIC;
        A1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A1_ce1 : OUT STD_LOGIC;
        A1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A1_we1 : OUT STD_LOGIC;
        A2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A2_ce0 : OUT STD_LOGIC;
        A2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A2_we0 : OUT STD_LOGIC;
        A2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A2_ce1 : OUT STD_LOGIC;
        A2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A2_we1 : OUT STD_LOGIC;
        A3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A3_ce0 : OUT STD_LOGIC;
        A3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A3_we0 : OUT STD_LOGIC;
        A3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A3_ce1 : OUT STD_LOGIC;
        A3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A3_we1 : OUT STD_LOGIC;
        A4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A4_ce0 : OUT STD_LOGIC;
        A4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A4_we0 : OUT STD_LOGIC;
        A4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A4_ce1 : OUT STD_LOGIC;
        A4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A4_we1 : OUT STD_LOGIC;
        A5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A5_ce0 : OUT STD_LOGIC;
        A5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A5_we0 : OUT STD_LOGIC;
        A5_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A5_ce1 : OUT STD_LOGIC;
        A5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A5_we1 : OUT STD_LOGIC;
        A6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A6_ce0 : OUT STD_LOGIC;
        A6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A6_we0 : OUT STD_LOGIC;
        A6_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A6_ce1 : OUT STD_LOGIC;
        A6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A6_we1 : OUT STD_LOGIC;
        A7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A7_ce0 : OUT STD_LOGIC;
        A7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A7_we0 : OUT STD_LOGIC;
        A7_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A7_ce1 : OUT STD_LOGIC;
        A7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A7_we1 : OUT STD_LOGIC;
        B_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_0_ce0 : OUT STD_LOGIC;
        B_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_0_we0 : OUT STD_LOGIC;
        B_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_0_ce1 : OUT STD_LOGIC;
        B_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_0_we1 : OUT STD_LOGIC;
        B_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_1_ce0 : OUT STD_LOGIC;
        B_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_1_we0 : OUT STD_LOGIC;
        B_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_1_ce1 : OUT STD_LOGIC;
        B_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_1_we1 : OUT STD_LOGIC;
        B_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_2_ce0 : OUT STD_LOGIC;
        B_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_2_we0 : OUT STD_LOGIC;
        B_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_2_ce1 : OUT STD_LOGIC;
        B_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_2_we1 : OUT STD_LOGIC;
        B_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_3_ce0 : OUT STD_LOGIC;
        B_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_3_we0 : OUT STD_LOGIC;
        B_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_3_ce1 : OUT STD_LOGIC;
        B_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_3_we1 : OUT STD_LOGIC;
        B_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_4_ce0 : OUT STD_LOGIC;
        B_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_4_we0 : OUT STD_LOGIC;
        B_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_4_ce1 : OUT STD_LOGIC;
        B_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_4_we1 : OUT STD_LOGIC;
        B_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_5_ce0 : OUT STD_LOGIC;
        B_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_5_we0 : OUT STD_LOGIC;
        B_5_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_5_ce1 : OUT STD_LOGIC;
        B_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_5_we1 : OUT STD_LOGIC;
        B_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_6_ce0 : OUT STD_LOGIC;
        B_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_6_we0 : OUT STD_LOGIC;
        B_6_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_6_ce1 : OUT STD_LOGIC;
        B_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_6_we1 : OUT STD_LOGIC;
        B_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_7_ce0 : OUT STD_LOGIC;
        B_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_7_we0 : OUT STD_LOGIC;
        B_7_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_7_ce1 : OUT STD_LOGIC;
        B_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_7_we1 : OUT STD_LOGIC;
        C_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_ce0 : OUT STD_LOGIC;
        C_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_we0 : OUT STD_LOGIC;
        C_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_ce1 : OUT STD_LOGIC;
        C_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_we1 : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        C_pipo_status : IN STD_LOGIC;
        C_pipo_update : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC );
    end component;


    component DCT_MAT_Multiply IS
    port (
        A_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_0_ce0 : OUT STD_LOGIC;
        A_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_0_we0 : OUT STD_LOGIC;
        A_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_0_ce1 : OUT STD_LOGIC;
        A_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_0_we1 : OUT STD_LOGIC;
        A_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_1_ce0 : OUT STD_LOGIC;
        A_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_1_we0 : OUT STD_LOGIC;
        A_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_1_ce1 : OUT STD_LOGIC;
        A_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_1_we1 : OUT STD_LOGIC;
        A_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_2_ce0 : OUT STD_LOGIC;
        A_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_2_we0 : OUT STD_LOGIC;
        A_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_2_ce1 : OUT STD_LOGIC;
        A_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_2_we1 : OUT STD_LOGIC;
        A_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_3_ce0 : OUT STD_LOGIC;
        A_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_3_we0 : OUT STD_LOGIC;
        A_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_3_ce1 : OUT STD_LOGIC;
        A_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_3_we1 : OUT STD_LOGIC;
        A_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_4_ce0 : OUT STD_LOGIC;
        A_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_4_we0 : OUT STD_LOGIC;
        A_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_4_ce1 : OUT STD_LOGIC;
        A_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_4_we1 : OUT STD_LOGIC;
        A_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_5_ce0 : OUT STD_LOGIC;
        A_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_5_we0 : OUT STD_LOGIC;
        A_5_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_5_ce1 : OUT STD_LOGIC;
        A_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_5_we1 : OUT STD_LOGIC;
        A_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_6_ce0 : OUT STD_LOGIC;
        A_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_6_we0 : OUT STD_LOGIC;
        A_6_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_6_ce1 : OUT STD_LOGIC;
        A_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_6_we1 : OUT STD_LOGIC;
        A_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_7_ce0 : OUT STD_LOGIC;
        A_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_7_we0 : OUT STD_LOGIC;
        A_7_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_7_ce1 : OUT STD_LOGIC;
        A_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_7_we1 : OUT STD_LOGIC;
        B_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        B_ce0 : OUT STD_LOGIC;
        B_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_we0 : OUT STD_LOGIC;
        B_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        B_ce1 : OUT STD_LOGIC;
        B_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_we1 : OUT STD_LOGIC;
        C_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C_0_ce0 : OUT STD_LOGIC;
        C_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_0_we0 : OUT STD_LOGIC;
        C_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C_0_ce1 : OUT STD_LOGIC;
        C_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_0_we1 : OUT STD_LOGIC;
        C_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C_1_ce0 : OUT STD_LOGIC;
        C_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_1_we0 : OUT STD_LOGIC;
        C_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C_1_ce1 : OUT STD_LOGIC;
        C_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_1_we1 : OUT STD_LOGIC;
        C_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C_2_ce0 : OUT STD_LOGIC;
        C_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_2_we0 : OUT STD_LOGIC;
        C_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C_2_ce1 : OUT STD_LOGIC;
        C_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_2_we1 : OUT STD_LOGIC;
        C_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C_3_ce0 : OUT STD_LOGIC;
        C_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_3_we0 : OUT STD_LOGIC;
        C_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C_3_ce1 : OUT STD_LOGIC;
        C_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_3_we1 : OUT STD_LOGIC;
        C_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C_4_ce0 : OUT STD_LOGIC;
        C_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_4_we0 : OUT STD_LOGIC;
        C_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C_4_ce1 : OUT STD_LOGIC;
        C_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_4_we1 : OUT STD_LOGIC;
        C_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C_5_ce0 : OUT STD_LOGIC;
        C_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_5_we0 : OUT STD_LOGIC;
        C_5_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C_5_ce1 : OUT STD_LOGIC;
        C_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_5_we1 : OUT STD_LOGIC;
        C_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C_6_ce0 : OUT STD_LOGIC;
        C_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_6_we0 : OUT STD_LOGIC;
        C_6_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C_6_ce1 : OUT STD_LOGIC;
        C_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_6_we1 : OUT STD_LOGIC;
        C_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C_7_ce0 : OUT STD_LOGIC;
        C_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_7_we0 : OUT STD_LOGIC;
        C_7_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        C_7_ce1 : OUT STD_LOGIC;
        C_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_7_we1 : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        B_pipo_status : IN STD_LOGIC;
        B_pipo_update : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC );
    end component;


    component DCT_Quant IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        X_ce0 : OUT STD_LOGIC;
        X_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        function_r : IN STD_LOGIC_VECTOR (0 downto 0);
        Y_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        Y_ce0 : OUT STD_LOGIC;
        Y_we0 : OUT STD_LOGIC;
        Y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1_T_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1_T_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1_T_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1_T_3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1_T_4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1_T_5 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1_T_6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1_T_7 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1_Tinv_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1_Tinv_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1_Tinv_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1_Tinv_3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1_Tinv_4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1_Tinv_5 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1_Tinv_6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1_Tinv_7 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1_Xmat2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_Block_proc1_temp_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    T_0_U : component DCT_Block_proc1_T_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => T_0_address0,
        ce0 => T_0_ce0,
        q0 => T_0_q0,
        address1 => T_0_address1,
        ce1 => T_0_ce1,
        q1 => T_0_q1);

    T_1_U : component DCT_Block_proc1_T_1
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => T_1_address0,
        ce0 => T_1_ce0,
        q0 => T_1_q0,
        address1 => T_1_address1,
        ce1 => T_1_ce1,
        q1 => T_1_q1);

    T_2_U : component DCT_Block_proc1_T_2
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => T_2_address0,
        ce0 => T_2_ce0,
        q0 => T_2_q0,
        address1 => T_2_address1,
        ce1 => T_2_ce1,
        q1 => T_2_q1);

    T_3_U : component DCT_Block_proc1_T_3
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => T_3_address0,
        ce0 => T_3_ce0,
        q0 => T_3_q0,
        address1 => T_3_address1,
        ce1 => T_3_ce1,
        q1 => T_3_q1);

    T_4_U : component DCT_Block_proc1_T_4
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => T_4_address0,
        ce0 => T_4_ce0,
        q0 => T_4_q0,
        address1 => T_4_address1,
        ce1 => T_4_ce1,
        q1 => T_4_q1);

    T_5_U : component DCT_Block_proc1_T_5
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => T_5_address0,
        ce0 => T_5_ce0,
        q0 => T_5_q0,
        address1 => T_5_address1,
        ce1 => T_5_ce1,
        q1 => T_5_q1);

    T_6_U : component DCT_Block_proc1_T_6
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => T_6_address0,
        ce0 => T_6_ce0,
        q0 => T_6_q0,
        address1 => T_6_address1,
        ce1 => T_6_ce1,
        q1 => T_6_q1);

    T_7_U : component DCT_Block_proc1_T_7
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => T_7_address0,
        ce0 => T_7_ce0,
        q0 => T_7_q0,
        address1 => T_7_address1,
        ce1 => T_7_ce1,
        q1 => T_7_q1);

    Tinv_0_U : component DCT_Block_proc1_Tinv_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Tinv_0_address0,
        ce0 => Tinv_0_ce0,
        q0 => Tinv_0_q0,
        address1 => Tinv_0_address1,
        ce1 => Tinv_0_ce1,
        q1 => Tinv_0_q1);

    Tinv_1_U : component DCT_Block_proc1_Tinv_1
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Tinv_1_address0,
        ce0 => Tinv_1_ce0,
        q0 => Tinv_1_q0,
        address1 => Tinv_1_address1,
        ce1 => Tinv_1_ce1,
        q1 => Tinv_1_q1);

    Tinv_2_U : component DCT_Block_proc1_Tinv_2
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Tinv_2_address0,
        ce0 => Tinv_2_ce0,
        q0 => Tinv_2_q0,
        address1 => Tinv_2_address1,
        ce1 => Tinv_2_ce1,
        q1 => Tinv_2_q1);

    Tinv_3_U : component DCT_Block_proc1_Tinv_3
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Tinv_3_address0,
        ce0 => Tinv_3_ce0,
        q0 => Tinv_3_q0,
        address1 => Tinv_3_address1,
        ce1 => Tinv_3_ce1,
        q1 => Tinv_3_q1);

    Tinv_4_U : component DCT_Block_proc1_Tinv_4
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Tinv_4_address0,
        ce0 => Tinv_4_ce0,
        q0 => Tinv_4_q0,
        address1 => Tinv_4_address1,
        ce1 => Tinv_4_ce1,
        q1 => Tinv_4_q1);

    Tinv_5_U : component DCT_Block_proc1_Tinv_5
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Tinv_5_address0,
        ce0 => Tinv_5_ce0,
        q0 => Tinv_5_q0,
        address1 => Tinv_5_address1,
        ce1 => Tinv_5_ce1,
        q1 => Tinv_5_q1);

    Tinv_6_U : component DCT_Block_proc1_Tinv_6
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Tinv_6_address0,
        ce0 => Tinv_6_ce0,
        q0 => Tinv_6_q0,
        address1 => Tinv_6_address1,
        ce1 => Tinv_6_ce1,
        q1 => Tinv_6_q1);

    Tinv_7_U : component DCT_Block_proc1_Tinv_7
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Tinv_7_address0,
        ce0 => Tinv_7_ce0,
        q0 => Tinv_7_q0,
        address1 => Tinv_7_address1,
        ce1 => Tinv_7_ce1,
        q1 => Tinv_7_q1);

    Xmat2_U : component DCT_Block_proc1_Xmat2
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Xmat2_address0,
        ce0 => Xmat2_ce0,
        we0 => Xmat2_we0,
        d0 => Xmat2_d0,
        q0 => Xmat2_q0);

    temp_0_U : component DCT_Block_proc1_temp_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_0_address0,
        ce0 => temp_0_ce0,
        we0 => temp_0_we0,
        d0 => temp_0_d0,
        q0 => temp_0_q0,
        address1 => temp_0_address1,
        ce1 => temp_0_ce1,
        q1 => temp_0_q1);

    temp_1_U : component DCT_Block_proc1_temp_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_1_address0,
        ce0 => temp_1_ce0,
        we0 => temp_1_we0,
        d0 => temp_1_d0,
        q0 => temp_1_q0,
        address1 => temp_1_address1,
        ce1 => temp_1_ce1,
        q1 => temp_1_q1);

    temp_2_U : component DCT_Block_proc1_temp_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_2_address0,
        ce0 => temp_2_ce0,
        we0 => temp_2_we0,
        d0 => temp_2_d0,
        q0 => temp_2_q0,
        address1 => temp_2_address1,
        ce1 => temp_2_ce1,
        q1 => temp_2_q1);

    temp_3_U : component DCT_Block_proc1_temp_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_3_address0,
        ce0 => temp_3_ce0,
        we0 => temp_3_we0,
        d0 => temp_3_d0,
        q0 => temp_3_q0,
        address1 => temp_3_address1,
        ce1 => temp_3_ce1,
        q1 => temp_3_q1);

    temp_4_U : component DCT_Block_proc1_temp_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_4_address0,
        ce0 => temp_4_ce0,
        we0 => temp_4_we0,
        d0 => temp_4_d0,
        q0 => temp_4_q0,
        address1 => temp_4_address1,
        ce1 => temp_4_ce1,
        q1 => temp_4_q1);

    temp_5_U : component DCT_Block_proc1_temp_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_5_address0,
        ce0 => temp_5_ce0,
        we0 => temp_5_we0,
        d0 => temp_5_d0,
        q0 => temp_5_q0,
        address1 => temp_5_address1,
        ce1 => temp_5_ce1,
        q1 => temp_5_q1);

    temp_6_U : component DCT_Block_proc1_temp_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_6_address0,
        ce0 => temp_6_ce0,
        we0 => temp_6_we0,
        d0 => temp_6_d0,
        q0 => temp_6_q0,
        address1 => temp_6_address1,
        ce1 => temp_6_ce1,
        q1 => temp_6_q1);

    temp_7_U : component DCT_Block_proc1_temp_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_7_address0,
        ce0 => temp_7_ce0,
        we0 => temp_7_we0,
        d0 => temp_7_d0,
        q0 => temp_7_q0,
        address1 => temp_7_address1,
        ce1 => temp_7_ce1,
        q1 => temp_7_q1);

    grp_DCT_MAT_Multiply_1_fu_109 : component DCT_MAT_Multiply_1
    port map (
        A_address0 => grp_DCT_MAT_Multiply_1_fu_109_A_address0,
        A_ce0 => grp_DCT_MAT_Multiply_1_fu_109_A_ce0,
        A_d0 => grp_DCT_MAT_Multiply_1_fu_109_A_d0,
        A_q0 => grp_DCT_MAT_Multiply_1_fu_109_A_q0,
        A_we0 => grp_DCT_MAT_Multiply_1_fu_109_A_we0,
        A_address1 => grp_DCT_MAT_Multiply_1_fu_109_A_address1,
        A_ce1 => grp_DCT_MAT_Multiply_1_fu_109_A_ce1,
        A_d1 => grp_DCT_MAT_Multiply_1_fu_109_A_d1,
        A_q1 => grp_DCT_MAT_Multiply_1_fu_109_A_q1,
        A_we1 => grp_DCT_MAT_Multiply_1_fu_109_A_we1,
        A1_address0 => grp_DCT_MAT_Multiply_1_fu_109_A1_address0,
        A1_ce0 => grp_DCT_MAT_Multiply_1_fu_109_A1_ce0,
        A1_d0 => grp_DCT_MAT_Multiply_1_fu_109_A1_d0,
        A1_q0 => grp_DCT_MAT_Multiply_1_fu_109_A1_q0,
        A1_we0 => grp_DCT_MAT_Multiply_1_fu_109_A1_we0,
        A1_address1 => grp_DCT_MAT_Multiply_1_fu_109_A1_address1,
        A1_ce1 => grp_DCT_MAT_Multiply_1_fu_109_A1_ce1,
        A1_d1 => grp_DCT_MAT_Multiply_1_fu_109_A1_d1,
        A1_q1 => grp_DCT_MAT_Multiply_1_fu_109_A1_q1,
        A1_we1 => grp_DCT_MAT_Multiply_1_fu_109_A1_we1,
        A2_address0 => grp_DCT_MAT_Multiply_1_fu_109_A2_address0,
        A2_ce0 => grp_DCT_MAT_Multiply_1_fu_109_A2_ce0,
        A2_d0 => grp_DCT_MAT_Multiply_1_fu_109_A2_d0,
        A2_q0 => grp_DCT_MAT_Multiply_1_fu_109_A2_q0,
        A2_we0 => grp_DCT_MAT_Multiply_1_fu_109_A2_we0,
        A2_address1 => grp_DCT_MAT_Multiply_1_fu_109_A2_address1,
        A2_ce1 => grp_DCT_MAT_Multiply_1_fu_109_A2_ce1,
        A2_d1 => grp_DCT_MAT_Multiply_1_fu_109_A2_d1,
        A2_q1 => grp_DCT_MAT_Multiply_1_fu_109_A2_q1,
        A2_we1 => grp_DCT_MAT_Multiply_1_fu_109_A2_we1,
        A3_address0 => grp_DCT_MAT_Multiply_1_fu_109_A3_address0,
        A3_ce0 => grp_DCT_MAT_Multiply_1_fu_109_A3_ce0,
        A3_d0 => grp_DCT_MAT_Multiply_1_fu_109_A3_d0,
        A3_q0 => grp_DCT_MAT_Multiply_1_fu_109_A3_q0,
        A3_we0 => grp_DCT_MAT_Multiply_1_fu_109_A3_we0,
        A3_address1 => grp_DCT_MAT_Multiply_1_fu_109_A3_address1,
        A3_ce1 => grp_DCT_MAT_Multiply_1_fu_109_A3_ce1,
        A3_d1 => grp_DCT_MAT_Multiply_1_fu_109_A3_d1,
        A3_q1 => grp_DCT_MAT_Multiply_1_fu_109_A3_q1,
        A3_we1 => grp_DCT_MAT_Multiply_1_fu_109_A3_we1,
        A4_address0 => grp_DCT_MAT_Multiply_1_fu_109_A4_address0,
        A4_ce0 => grp_DCT_MAT_Multiply_1_fu_109_A4_ce0,
        A4_d0 => grp_DCT_MAT_Multiply_1_fu_109_A4_d0,
        A4_q0 => grp_DCT_MAT_Multiply_1_fu_109_A4_q0,
        A4_we0 => grp_DCT_MAT_Multiply_1_fu_109_A4_we0,
        A4_address1 => grp_DCT_MAT_Multiply_1_fu_109_A4_address1,
        A4_ce1 => grp_DCT_MAT_Multiply_1_fu_109_A4_ce1,
        A4_d1 => grp_DCT_MAT_Multiply_1_fu_109_A4_d1,
        A4_q1 => grp_DCT_MAT_Multiply_1_fu_109_A4_q1,
        A4_we1 => grp_DCT_MAT_Multiply_1_fu_109_A4_we1,
        A5_address0 => grp_DCT_MAT_Multiply_1_fu_109_A5_address0,
        A5_ce0 => grp_DCT_MAT_Multiply_1_fu_109_A5_ce0,
        A5_d0 => grp_DCT_MAT_Multiply_1_fu_109_A5_d0,
        A5_q0 => grp_DCT_MAT_Multiply_1_fu_109_A5_q0,
        A5_we0 => grp_DCT_MAT_Multiply_1_fu_109_A5_we0,
        A5_address1 => grp_DCT_MAT_Multiply_1_fu_109_A5_address1,
        A5_ce1 => grp_DCT_MAT_Multiply_1_fu_109_A5_ce1,
        A5_d1 => grp_DCT_MAT_Multiply_1_fu_109_A5_d1,
        A5_q1 => grp_DCT_MAT_Multiply_1_fu_109_A5_q1,
        A5_we1 => grp_DCT_MAT_Multiply_1_fu_109_A5_we1,
        A6_address0 => grp_DCT_MAT_Multiply_1_fu_109_A6_address0,
        A6_ce0 => grp_DCT_MAT_Multiply_1_fu_109_A6_ce0,
        A6_d0 => grp_DCT_MAT_Multiply_1_fu_109_A6_d0,
        A6_q0 => grp_DCT_MAT_Multiply_1_fu_109_A6_q0,
        A6_we0 => grp_DCT_MAT_Multiply_1_fu_109_A6_we0,
        A6_address1 => grp_DCT_MAT_Multiply_1_fu_109_A6_address1,
        A6_ce1 => grp_DCT_MAT_Multiply_1_fu_109_A6_ce1,
        A6_d1 => grp_DCT_MAT_Multiply_1_fu_109_A6_d1,
        A6_q1 => grp_DCT_MAT_Multiply_1_fu_109_A6_q1,
        A6_we1 => grp_DCT_MAT_Multiply_1_fu_109_A6_we1,
        A7_address0 => grp_DCT_MAT_Multiply_1_fu_109_A7_address0,
        A7_ce0 => grp_DCT_MAT_Multiply_1_fu_109_A7_ce0,
        A7_d0 => grp_DCT_MAT_Multiply_1_fu_109_A7_d0,
        A7_q0 => grp_DCT_MAT_Multiply_1_fu_109_A7_q0,
        A7_we0 => grp_DCT_MAT_Multiply_1_fu_109_A7_we0,
        A7_address1 => grp_DCT_MAT_Multiply_1_fu_109_A7_address1,
        A7_ce1 => grp_DCT_MAT_Multiply_1_fu_109_A7_ce1,
        A7_d1 => grp_DCT_MAT_Multiply_1_fu_109_A7_d1,
        A7_q1 => grp_DCT_MAT_Multiply_1_fu_109_A7_q1,
        A7_we1 => grp_DCT_MAT_Multiply_1_fu_109_A7_we1,
        B_0_address0 => grp_DCT_MAT_Multiply_1_fu_109_B_0_address0,
        B_0_ce0 => grp_DCT_MAT_Multiply_1_fu_109_B_0_ce0,
        B_0_d0 => grp_DCT_MAT_Multiply_1_fu_109_B_0_d0,
        B_0_q0 => grp_DCT_MAT_Multiply_1_fu_109_B_0_q0,
        B_0_we0 => grp_DCT_MAT_Multiply_1_fu_109_B_0_we0,
        B_0_address1 => grp_DCT_MAT_Multiply_1_fu_109_B_0_address1,
        B_0_ce1 => grp_DCT_MAT_Multiply_1_fu_109_B_0_ce1,
        B_0_d1 => grp_DCT_MAT_Multiply_1_fu_109_B_0_d1,
        B_0_q1 => grp_DCT_MAT_Multiply_1_fu_109_B_0_q1,
        B_0_we1 => grp_DCT_MAT_Multiply_1_fu_109_B_0_we1,
        B_1_address0 => grp_DCT_MAT_Multiply_1_fu_109_B_1_address0,
        B_1_ce0 => grp_DCT_MAT_Multiply_1_fu_109_B_1_ce0,
        B_1_d0 => grp_DCT_MAT_Multiply_1_fu_109_B_1_d0,
        B_1_q0 => grp_DCT_MAT_Multiply_1_fu_109_B_1_q0,
        B_1_we0 => grp_DCT_MAT_Multiply_1_fu_109_B_1_we0,
        B_1_address1 => grp_DCT_MAT_Multiply_1_fu_109_B_1_address1,
        B_1_ce1 => grp_DCT_MAT_Multiply_1_fu_109_B_1_ce1,
        B_1_d1 => grp_DCT_MAT_Multiply_1_fu_109_B_1_d1,
        B_1_q1 => grp_DCT_MAT_Multiply_1_fu_109_B_1_q1,
        B_1_we1 => grp_DCT_MAT_Multiply_1_fu_109_B_1_we1,
        B_2_address0 => grp_DCT_MAT_Multiply_1_fu_109_B_2_address0,
        B_2_ce0 => grp_DCT_MAT_Multiply_1_fu_109_B_2_ce0,
        B_2_d0 => grp_DCT_MAT_Multiply_1_fu_109_B_2_d0,
        B_2_q0 => grp_DCT_MAT_Multiply_1_fu_109_B_2_q0,
        B_2_we0 => grp_DCT_MAT_Multiply_1_fu_109_B_2_we0,
        B_2_address1 => grp_DCT_MAT_Multiply_1_fu_109_B_2_address1,
        B_2_ce1 => grp_DCT_MAT_Multiply_1_fu_109_B_2_ce1,
        B_2_d1 => grp_DCT_MAT_Multiply_1_fu_109_B_2_d1,
        B_2_q1 => grp_DCT_MAT_Multiply_1_fu_109_B_2_q1,
        B_2_we1 => grp_DCT_MAT_Multiply_1_fu_109_B_2_we1,
        B_3_address0 => grp_DCT_MAT_Multiply_1_fu_109_B_3_address0,
        B_3_ce0 => grp_DCT_MAT_Multiply_1_fu_109_B_3_ce0,
        B_3_d0 => grp_DCT_MAT_Multiply_1_fu_109_B_3_d0,
        B_3_q0 => grp_DCT_MAT_Multiply_1_fu_109_B_3_q0,
        B_3_we0 => grp_DCT_MAT_Multiply_1_fu_109_B_3_we0,
        B_3_address1 => grp_DCT_MAT_Multiply_1_fu_109_B_3_address1,
        B_3_ce1 => grp_DCT_MAT_Multiply_1_fu_109_B_3_ce1,
        B_3_d1 => grp_DCT_MAT_Multiply_1_fu_109_B_3_d1,
        B_3_q1 => grp_DCT_MAT_Multiply_1_fu_109_B_3_q1,
        B_3_we1 => grp_DCT_MAT_Multiply_1_fu_109_B_3_we1,
        B_4_address0 => grp_DCT_MAT_Multiply_1_fu_109_B_4_address0,
        B_4_ce0 => grp_DCT_MAT_Multiply_1_fu_109_B_4_ce0,
        B_4_d0 => grp_DCT_MAT_Multiply_1_fu_109_B_4_d0,
        B_4_q0 => grp_DCT_MAT_Multiply_1_fu_109_B_4_q0,
        B_4_we0 => grp_DCT_MAT_Multiply_1_fu_109_B_4_we0,
        B_4_address1 => grp_DCT_MAT_Multiply_1_fu_109_B_4_address1,
        B_4_ce1 => grp_DCT_MAT_Multiply_1_fu_109_B_4_ce1,
        B_4_d1 => grp_DCT_MAT_Multiply_1_fu_109_B_4_d1,
        B_4_q1 => grp_DCT_MAT_Multiply_1_fu_109_B_4_q1,
        B_4_we1 => grp_DCT_MAT_Multiply_1_fu_109_B_4_we1,
        B_5_address0 => grp_DCT_MAT_Multiply_1_fu_109_B_5_address0,
        B_5_ce0 => grp_DCT_MAT_Multiply_1_fu_109_B_5_ce0,
        B_5_d0 => grp_DCT_MAT_Multiply_1_fu_109_B_5_d0,
        B_5_q0 => grp_DCT_MAT_Multiply_1_fu_109_B_5_q0,
        B_5_we0 => grp_DCT_MAT_Multiply_1_fu_109_B_5_we0,
        B_5_address1 => grp_DCT_MAT_Multiply_1_fu_109_B_5_address1,
        B_5_ce1 => grp_DCT_MAT_Multiply_1_fu_109_B_5_ce1,
        B_5_d1 => grp_DCT_MAT_Multiply_1_fu_109_B_5_d1,
        B_5_q1 => grp_DCT_MAT_Multiply_1_fu_109_B_5_q1,
        B_5_we1 => grp_DCT_MAT_Multiply_1_fu_109_B_5_we1,
        B_6_address0 => grp_DCT_MAT_Multiply_1_fu_109_B_6_address0,
        B_6_ce0 => grp_DCT_MAT_Multiply_1_fu_109_B_6_ce0,
        B_6_d0 => grp_DCT_MAT_Multiply_1_fu_109_B_6_d0,
        B_6_q0 => grp_DCT_MAT_Multiply_1_fu_109_B_6_q0,
        B_6_we0 => grp_DCT_MAT_Multiply_1_fu_109_B_6_we0,
        B_6_address1 => grp_DCT_MAT_Multiply_1_fu_109_B_6_address1,
        B_6_ce1 => grp_DCT_MAT_Multiply_1_fu_109_B_6_ce1,
        B_6_d1 => grp_DCT_MAT_Multiply_1_fu_109_B_6_d1,
        B_6_q1 => grp_DCT_MAT_Multiply_1_fu_109_B_6_q1,
        B_6_we1 => grp_DCT_MAT_Multiply_1_fu_109_B_6_we1,
        B_7_address0 => grp_DCT_MAT_Multiply_1_fu_109_B_7_address0,
        B_7_ce0 => grp_DCT_MAT_Multiply_1_fu_109_B_7_ce0,
        B_7_d0 => grp_DCT_MAT_Multiply_1_fu_109_B_7_d0,
        B_7_q0 => grp_DCT_MAT_Multiply_1_fu_109_B_7_q0,
        B_7_we0 => grp_DCT_MAT_Multiply_1_fu_109_B_7_we0,
        B_7_address1 => grp_DCT_MAT_Multiply_1_fu_109_B_7_address1,
        B_7_ce1 => grp_DCT_MAT_Multiply_1_fu_109_B_7_ce1,
        B_7_d1 => grp_DCT_MAT_Multiply_1_fu_109_B_7_d1,
        B_7_q1 => grp_DCT_MAT_Multiply_1_fu_109_B_7_q1,
        B_7_we1 => grp_DCT_MAT_Multiply_1_fu_109_B_7_we1,
        C_address0 => grp_DCT_MAT_Multiply_1_fu_109_C_address0,
        C_ce0 => grp_DCT_MAT_Multiply_1_fu_109_C_ce0,
        C_d0 => grp_DCT_MAT_Multiply_1_fu_109_C_d0,
        C_q0 => grp_DCT_MAT_Multiply_1_fu_109_C_q0,
        C_we0 => grp_DCT_MAT_Multiply_1_fu_109_C_we0,
        C_address1 => grp_DCT_MAT_Multiply_1_fu_109_C_address1,
        C_ce1 => grp_DCT_MAT_Multiply_1_fu_109_C_ce1,
        C_d1 => grp_DCT_MAT_Multiply_1_fu_109_C_d1,
        C_q1 => grp_DCT_MAT_Multiply_1_fu_109_C_q1,
        C_we1 => grp_DCT_MAT_Multiply_1_fu_109_C_we1,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        C_pipo_status => grp_DCT_MAT_Multiply_1_fu_109_C_pipo_status,
        C_pipo_update => grp_DCT_MAT_Multiply_1_fu_109_C_pipo_update,
        ap_done => grp_DCT_MAT_Multiply_1_fu_109_ap_done,
        ap_start => grp_DCT_MAT_Multiply_1_fu_109_ap_start,
        ap_idle => grp_DCT_MAT_Multiply_1_fu_109_ap_idle,
        ap_ready => grp_DCT_MAT_Multiply_1_fu_109_ap_ready);

    grp_DCT_MAT_Multiply_fu_147 : component DCT_MAT_Multiply
    port map (
        A_0_address0 => grp_DCT_MAT_Multiply_fu_147_A_0_address0,
        A_0_ce0 => grp_DCT_MAT_Multiply_fu_147_A_0_ce0,
        A_0_d0 => grp_DCT_MAT_Multiply_fu_147_A_0_d0,
        A_0_q0 => grp_DCT_MAT_Multiply_fu_147_A_0_q0,
        A_0_we0 => grp_DCT_MAT_Multiply_fu_147_A_0_we0,
        A_0_address1 => grp_DCT_MAT_Multiply_fu_147_A_0_address1,
        A_0_ce1 => grp_DCT_MAT_Multiply_fu_147_A_0_ce1,
        A_0_d1 => grp_DCT_MAT_Multiply_fu_147_A_0_d1,
        A_0_q1 => grp_DCT_MAT_Multiply_fu_147_A_0_q1,
        A_0_we1 => grp_DCT_MAT_Multiply_fu_147_A_0_we1,
        A_1_address0 => grp_DCT_MAT_Multiply_fu_147_A_1_address0,
        A_1_ce0 => grp_DCT_MAT_Multiply_fu_147_A_1_ce0,
        A_1_d0 => grp_DCT_MAT_Multiply_fu_147_A_1_d0,
        A_1_q0 => grp_DCT_MAT_Multiply_fu_147_A_1_q0,
        A_1_we0 => grp_DCT_MAT_Multiply_fu_147_A_1_we0,
        A_1_address1 => grp_DCT_MAT_Multiply_fu_147_A_1_address1,
        A_1_ce1 => grp_DCT_MAT_Multiply_fu_147_A_1_ce1,
        A_1_d1 => grp_DCT_MAT_Multiply_fu_147_A_1_d1,
        A_1_q1 => grp_DCT_MAT_Multiply_fu_147_A_1_q1,
        A_1_we1 => grp_DCT_MAT_Multiply_fu_147_A_1_we1,
        A_2_address0 => grp_DCT_MAT_Multiply_fu_147_A_2_address0,
        A_2_ce0 => grp_DCT_MAT_Multiply_fu_147_A_2_ce0,
        A_2_d0 => grp_DCT_MAT_Multiply_fu_147_A_2_d0,
        A_2_q0 => grp_DCT_MAT_Multiply_fu_147_A_2_q0,
        A_2_we0 => grp_DCT_MAT_Multiply_fu_147_A_2_we0,
        A_2_address1 => grp_DCT_MAT_Multiply_fu_147_A_2_address1,
        A_2_ce1 => grp_DCT_MAT_Multiply_fu_147_A_2_ce1,
        A_2_d1 => grp_DCT_MAT_Multiply_fu_147_A_2_d1,
        A_2_q1 => grp_DCT_MAT_Multiply_fu_147_A_2_q1,
        A_2_we1 => grp_DCT_MAT_Multiply_fu_147_A_2_we1,
        A_3_address0 => grp_DCT_MAT_Multiply_fu_147_A_3_address0,
        A_3_ce0 => grp_DCT_MAT_Multiply_fu_147_A_3_ce0,
        A_3_d0 => grp_DCT_MAT_Multiply_fu_147_A_3_d0,
        A_3_q0 => grp_DCT_MAT_Multiply_fu_147_A_3_q0,
        A_3_we0 => grp_DCT_MAT_Multiply_fu_147_A_3_we0,
        A_3_address1 => grp_DCT_MAT_Multiply_fu_147_A_3_address1,
        A_3_ce1 => grp_DCT_MAT_Multiply_fu_147_A_3_ce1,
        A_3_d1 => grp_DCT_MAT_Multiply_fu_147_A_3_d1,
        A_3_q1 => grp_DCT_MAT_Multiply_fu_147_A_3_q1,
        A_3_we1 => grp_DCT_MAT_Multiply_fu_147_A_3_we1,
        A_4_address0 => grp_DCT_MAT_Multiply_fu_147_A_4_address0,
        A_4_ce0 => grp_DCT_MAT_Multiply_fu_147_A_4_ce0,
        A_4_d0 => grp_DCT_MAT_Multiply_fu_147_A_4_d0,
        A_4_q0 => grp_DCT_MAT_Multiply_fu_147_A_4_q0,
        A_4_we0 => grp_DCT_MAT_Multiply_fu_147_A_4_we0,
        A_4_address1 => grp_DCT_MAT_Multiply_fu_147_A_4_address1,
        A_4_ce1 => grp_DCT_MAT_Multiply_fu_147_A_4_ce1,
        A_4_d1 => grp_DCT_MAT_Multiply_fu_147_A_4_d1,
        A_4_q1 => grp_DCT_MAT_Multiply_fu_147_A_4_q1,
        A_4_we1 => grp_DCT_MAT_Multiply_fu_147_A_4_we1,
        A_5_address0 => grp_DCT_MAT_Multiply_fu_147_A_5_address0,
        A_5_ce0 => grp_DCT_MAT_Multiply_fu_147_A_5_ce0,
        A_5_d0 => grp_DCT_MAT_Multiply_fu_147_A_5_d0,
        A_5_q0 => grp_DCT_MAT_Multiply_fu_147_A_5_q0,
        A_5_we0 => grp_DCT_MAT_Multiply_fu_147_A_5_we0,
        A_5_address1 => grp_DCT_MAT_Multiply_fu_147_A_5_address1,
        A_5_ce1 => grp_DCT_MAT_Multiply_fu_147_A_5_ce1,
        A_5_d1 => grp_DCT_MAT_Multiply_fu_147_A_5_d1,
        A_5_q1 => grp_DCT_MAT_Multiply_fu_147_A_5_q1,
        A_5_we1 => grp_DCT_MAT_Multiply_fu_147_A_5_we1,
        A_6_address0 => grp_DCT_MAT_Multiply_fu_147_A_6_address0,
        A_6_ce0 => grp_DCT_MAT_Multiply_fu_147_A_6_ce0,
        A_6_d0 => grp_DCT_MAT_Multiply_fu_147_A_6_d0,
        A_6_q0 => grp_DCT_MAT_Multiply_fu_147_A_6_q0,
        A_6_we0 => grp_DCT_MAT_Multiply_fu_147_A_6_we0,
        A_6_address1 => grp_DCT_MAT_Multiply_fu_147_A_6_address1,
        A_6_ce1 => grp_DCT_MAT_Multiply_fu_147_A_6_ce1,
        A_6_d1 => grp_DCT_MAT_Multiply_fu_147_A_6_d1,
        A_6_q1 => grp_DCT_MAT_Multiply_fu_147_A_6_q1,
        A_6_we1 => grp_DCT_MAT_Multiply_fu_147_A_6_we1,
        A_7_address0 => grp_DCT_MAT_Multiply_fu_147_A_7_address0,
        A_7_ce0 => grp_DCT_MAT_Multiply_fu_147_A_7_ce0,
        A_7_d0 => grp_DCT_MAT_Multiply_fu_147_A_7_d0,
        A_7_q0 => grp_DCT_MAT_Multiply_fu_147_A_7_q0,
        A_7_we0 => grp_DCT_MAT_Multiply_fu_147_A_7_we0,
        A_7_address1 => grp_DCT_MAT_Multiply_fu_147_A_7_address1,
        A_7_ce1 => grp_DCT_MAT_Multiply_fu_147_A_7_ce1,
        A_7_d1 => grp_DCT_MAT_Multiply_fu_147_A_7_d1,
        A_7_q1 => grp_DCT_MAT_Multiply_fu_147_A_7_q1,
        A_7_we1 => grp_DCT_MAT_Multiply_fu_147_A_7_we1,
        B_address0 => grp_DCT_MAT_Multiply_fu_147_B_address0,
        B_ce0 => grp_DCT_MAT_Multiply_fu_147_B_ce0,
        B_d0 => grp_DCT_MAT_Multiply_fu_147_B_d0,
        B_q0 => grp_DCT_MAT_Multiply_fu_147_B_q0,
        B_we0 => grp_DCT_MAT_Multiply_fu_147_B_we0,
        B_address1 => grp_DCT_MAT_Multiply_fu_147_B_address1,
        B_ce1 => grp_DCT_MAT_Multiply_fu_147_B_ce1,
        B_d1 => grp_DCT_MAT_Multiply_fu_147_B_d1,
        B_q1 => grp_DCT_MAT_Multiply_fu_147_B_q1,
        B_we1 => grp_DCT_MAT_Multiply_fu_147_B_we1,
        C_0_address0 => grp_DCT_MAT_Multiply_fu_147_C_0_address0,
        C_0_ce0 => grp_DCT_MAT_Multiply_fu_147_C_0_ce0,
        C_0_d0 => grp_DCT_MAT_Multiply_fu_147_C_0_d0,
        C_0_q0 => grp_DCT_MAT_Multiply_fu_147_C_0_q0,
        C_0_we0 => grp_DCT_MAT_Multiply_fu_147_C_0_we0,
        C_0_address1 => grp_DCT_MAT_Multiply_fu_147_C_0_address1,
        C_0_ce1 => grp_DCT_MAT_Multiply_fu_147_C_0_ce1,
        C_0_d1 => grp_DCT_MAT_Multiply_fu_147_C_0_d1,
        C_0_q1 => grp_DCT_MAT_Multiply_fu_147_C_0_q1,
        C_0_we1 => grp_DCT_MAT_Multiply_fu_147_C_0_we1,
        C_1_address0 => grp_DCT_MAT_Multiply_fu_147_C_1_address0,
        C_1_ce0 => grp_DCT_MAT_Multiply_fu_147_C_1_ce0,
        C_1_d0 => grp_DCT_MAT_Multiply_fu_147_C_1_d0,
        C_1_q0 => grp_DCT_MAT_Multiply_fu_147_C_1_q0,
        C_1_we0 => grp_DCT_MAT_Multiply_fu_147_C_1_we0,
        C_1_address1 => grp_DCT_MAT_Multiply_fu_147_C_1_address1,
        C_1_ce1 => grp_DCT_MAT_Multiply_fu_147_C_1_ce1,
        C_1_d1 => grp_DCT_MAT_Multiply_fu_147_C_1_d1,
        C_1_q1 => grp_DCT_MAT_Multiply_fu_147_C_1_q1,
        C_1_we1 => grp_DCT_MAT_Multiply_fu_147_C_1_we1,
        C_2_address0 => grp_DCT_MAT_Multiply_fu_147_C_2_address0,
        C_2_ce0 => grp_DCT_MAT_Multiply_fu_147_C_2_ce0,
        C_2_d0 => grp_DCT_MAT_Multiply_fu_147_C_2_d0,
        C_2_q0 => grp_DCT_MAT_Multiply_fu_147_C_2_q0,
        C_2_we0 => grp_DCT_MAT_Multiply_fu_147_C_2_we0,
        C_2_address1 => grp_DCT_MAT_Multiply_fu_147_C_2_address1,
        C_2_ce1 => grp_DCT_MAT_Multiply_fu_147_C_2_ce1,
        C_2_d1 => grp_DCT_MAT_Multiply_fu_147_C_2_d1,
        C_2_q1 => grp_DCT_MAT_Multiply_fu_147_C_2_q1,
        C_2_we1 => grp_DCT_MAT_Multiply_fu_147_C_2_we1,
        C_3_address0 => grp_DCT_MAT_Multiply_fu_147_C_3_address0,
        C_3_ce0 => grp_DCT_MAT_Multiply_fu_147_C_3_ce0,
        C_3_d0 => grp_DCT_MAT_Multiply_fu_147_C_3_d0,
        C_3_q0 => grp_DCT_MAT_Multiply_fu_147_C_3_q0,
        C_3_we0 => grp_DCT_MAT_Multiply_fu_147_C_3_we0,
        C_3_address1 => grp_DCT_MAT_Multiply_fu_147_C_3_address1,
        C_3_ce1 => grp_DCT_MAT_Multiply_fu_147_C_3_ce1,
        C_3_d1 => grp_DCT_MAT_Multiply_fu_147_C_3_d1,
        C_3_q1 => grp_DCT_MAT_Multiply_fu_147_C_3_q1,
        C_3_we1 => grp_DCT_MAT_Multiply_fu_147_C_3_we1,
        C_4_address0 => grp_DCT_MAT_Multiply_fu_147_C_4_address0,
        C_4_ce0 => grp_DCT_MAT_Multiply_fu_147_C_4_ce0,
        C_4_d0 => grp_DCT_MAT_Multiply_fu_147_C_4_d0,
        C_4_q0 => grp_DCT_MAT_Multiply_fu_147_C_4_q0,
        C_4_we0 => grp_DCT_MAT_Multiply_fu_147_C_4_we0,
        C_4_address1 => grp_DCT_MAT_Multiply_fu_147_C_4_address1,
        C_4_ce1 => grp_DCT_MAT_Multiply_fu_147_C_4_ce1,
        C_4_d1 => grp_DCT_MAT_Multiply_fu_147_C_4_d1,
        C_4_q1 => grp_DCT_MAT_Multiply_fu_147_C_4_q1,
        C_4_we1 => grp_DCT_MAT_Multiply_fu_147_C_4_we1,
        C_5_address0 => grp_DCT_MAT_Multiply_fu_147_C_5_address0,
        C_5_ce0 => grp_DCT_MAT_Multiply_fu_147_C_5_ce0,
        C_5_d0 => grp_DCT_MAT_Multiply_fu_147_C_5_d0,
        C_5_q0 => grp_DCT_MAT_Multiply_fu_147_C_5_q0,
        C_5_we0 => grp_DCT_MAT_Multiply_fu_147_C_5_we0,
        C_5_address1 => grp_DCT_MAT_Multiply_fu_147_C_5_address1,
        C_5_ce1 => grp_DCT_MAT_Multiply_fu_147_C_5_ce1,
        C_5_d1 => grp_DCT_MAT_Multiply_fu_147_C_5_d1,
        C_5_q1 => grp_DCT_MAT_Multiply_fu_147_C_5_q1,
        C_5_we1 => grp_DCT_MAT_Multiply_fu_147_C_5_we1,
        C_6_address0 => grp_DCT_MAT_Multiply_fu_147_C_6_address0,
        C_6_ce0 => grp_DCT_MAT_Multiply_fu_147_C_6_ce0,
        C_6_d0 => grp_DCT_MAT_Multiply_fu_147_C_6_d0,
        C_6_q0 => grp_DCT_MAT_Multiply_fu_147_C_6_q0,
        C_6_we0 => grp_DCT_MAT_Multiply_fu_147_C_6_we0,
        C_6_address1 => grp_DCT_MAT_Multiply_fu_147_C_6_address1,
        C_6_ce1 => grp_DCT_MAT_Multiply_fu_147_C_6_ce1,
        C_6_d1 => grp_DCT_MAT_Multiply_fu_147_C_6_d1,
        C_6_q1 => grp_DCT_MAT_Multiply_fu_147_C_6_q1,
        C_6_we1 => grp_DCT_MAT_Multiply_fu_147_C_6_we1,
        C_7_address0 => grp_DCT_MAT_Multiply_fu_147_C_7_address0,
        C_7_ce0 => grp_DCT_MAT_Multiply_fu_147_C_7_ce0,
        C_7_d0 => grp_DCT_MAT_Multiply_fu_147_C_7_d0,
        C_7_q0 => grp_DCT_MAT_Multiply_fu_147_C_7_q0,
        C_7_we0 => grp_DCT_MAT_Multiply_fu_147_C_7_we0,
        C_7_address1 => grp_DCT_MAT_Multiply_fu_147_C_7_address1,
        C_7_ce1 => grp_DCT_MAT_Multiply_fu_147_C_7_ce1,
        C_7_d1 => grp_DCT_MAT_Multiply_fu_147_C_7_d1,
        C_7_q1 => grp_DCT_MAT_Multiply_fu_147_C_7_q1,
        C_7_we1 => grp_DCT_MAT_Multiply_fu_147_C_7_we1,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        B_pipo_status => grp_DCT_MAT_Multiply_fu_147_B_pipo_status,
        B_pipo_update => grp_DCT_MAT_Multiply_fu_147_B_pipo_update,
        ap_done => grp_DCT_MAT_Multiply_fu_147_ap_done,
        ap_start => grp_DCT_MAT_Multiply_fu_147_ap_start,
        ap_idle => grp_DCT_MAT_Multiply_fu_147_ap_idle,
        ap_ready => grp_DCT_MAT_Multiply_fu_147_ap_ready);

    grp_DCT_Quant_fu_193 : component DCT_Quant
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_DCT_Quant_fu_193_ap_start,
        ap_done => grp_DCT_Quant_fu_193_ap_done,
        ap_idle => grp_DCT_Quant_fu_193_ap_idle,
        ap_ready => grp_DCT_Quant_fu_193_ap_ready,
        X_address0 => grp_DCT_Quant_fu_193_X_address0,
        X_ce0 => grp_DCT_Quant_fu_193_X_ce0,
        X_q0 => grp_DCT_Quant_fu_193_X_q0,
        function_r => grp_DCT_Quant_fu_193_function_r,
        Y_address0 => grp_DCT_Quant_fu_193_Y_address0,
        Y_ce0 => grp_DCT_Quant_fu_193_Y_ce0,
        Y_we0 => grp_DCT_Quant_fu_193_Y_we0,
        Y_d0 => grp_DCT_Quant_fu_193_Y_d0);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_0 = grp_DCT_MAT_Multiply_1_fu_109_ap_done)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_0 = grp_DCT_Quant_fu_193_ap_done)))))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_startack_grp_DCT_MAT_Multiply_1_fu_109_ap_ready assign process. --
    ap_reg_startack_grp_DCT_MAT_Multiply_1_fu_109_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_startack_grp_DCT_MAT_Multiply_1_fu_109_ap_ready <= ap_const_logic_0;
            else
                if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_0 = grp_DCT_MAT_Multiply_fu_147_ap_done)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_0 = grp_DCT_MAT_Multiply_1_fu_109_ap_done))))) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_0 = grp_DCT_MAT_Multiply_1_fu_109_ap_done)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_0 = grp_DCT_Quant_fu_193_ap_done))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((ap_const_logic_0 = grp_DCT_MAT_Multiply_1_fu_109_ap_done))) or (not((ap_const_logic_0 = grp_DCT_MAT_Multiply_1_fu_109_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)))) then 
                    ap_reg_startack_grp_DCT_MAT_Multiply_1_fu_109_ap_ready <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = grp_DCT_MAT_Multiply_1_fu_109_ap_ready) and (p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((ap_const_logic_1 = grp_DCT_MAT_Multiply_1_fu_109_ap_ready) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or ((ap_const_logic_1 = grp_DCT_MAT_Multiply_1_fu_109_ap_ready) and (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) or ((ap_const_logic_1 = grp_DCT_MAT_Multiply_1_fu_109_ap_ready) and (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)))) then 
                    ap_reg_startack_grp_DCT_MAT_Multiply_1_fu_109_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_startack_grp_DCT_MAT_Multiply_fu_147_ap_ready assign process. --
    ap_reg_startack_grp_DCT_MAT_Multiply_fu_147_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_startack_grp_DCT_MAT_Multiply_fu_147_ap_ready <= ap_const_logic_0;
            else
                if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_0 = grp_DCT_Quant_fu_193_ap_done)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_0 = grp_DCT_MAT_Multiply_fu_147_ap_done))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_logic_0 = grp_DCT_MAT_Multiply_fu_147_ap_done))) or (not((ap_const_logic_0 = grp_DCT_MAT_Multiply_fu_147_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5) and not((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_0 = grp_DCT_MAT_Multiply_fu_147_ap_done)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_0 = grp_DCT_MAT_Multiply_1_fu_109_ap_done))))))) then 
                    ap_reg_startack_grp_DCT_MAT_Multiply_fu_147_ap_ready <= ap_const_logic_0;
                elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = grp_DCT_MAT_Multiply_fu_147_ap_ready) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or ((ap_const_logic_1 = grp_DCT_MAT_Multiply_fu_147_ap_ready) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) or ((ap_const_logic_1 = grp_DCT_MAT_Multiply_fu_147_ap_ready) and (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = grp_DCT_MAT_Multiply_fu_147_ap_ready)))) then 
                    ap_reg_startack_grp_DCT_MAT_Multiply_fu_147_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- grp_DCT_MAT_Multiply_1_fu_109_ap_start_ap_start_reg assign process. --
    grp_DCT_MAT_Multiply_1_fu_109_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_DCT_MAT_Multiply_1_fu_109_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (p_read_127_read_fu_102_p2 = ap_const_lv32_4)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_logic_0 = ap_sig_startack_grp_DCT_MAT_Multiply_1_fu_109_ap_ready)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_0 = ap_sig_startack_grp_DCT_MAT_Multiply_1_fu_109_ap_ready) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or ((ap_const_logic_0 = ap_sig_startack_grp_DCT_MAT_Multiply_1_fu_109_ap_ready) and (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or ((ap_const_logic_0 = ap_sig_startack_grp_DCT_MAT_Multiply_1_fu_109_ap_ready) and (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)))) then 
                    grp_DCT_MAT_Multiply_1_fu_109_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_DCT_MAT_Multiply_1_fu_109_ap_ready)) then 
                    grp_DCT_MAT_Multiply_1_fu_109_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_DCT_MAT_Multiply_fu_147_ap_start_ap_start_reg assign process. --
    grp_DCT_MAT_Multiply_fu_147_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_DCT_MAT_Multiply_fu_147_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_234) and (p_read_127_read_fu_102_p2 = ap_const_lv32_4)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_logic_0 = ap_sig_startack_grp_DCT_MAT_Multiply_fu_147_ap_ready)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_234) and (p_read_127_read_fu_102_p2 = ap_const_lv32_3)) or ((ap_const_logic_0 = ap_sig_startack_grp_DCT_MAT_Multiply_fu_147_ap_ready) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_234) and (ap_const_lv32_0 = p_read_127_read_fu_102_p2)) or ((ap_const_logic_0 = ap_sig_startack_grp_DCT_MAT_Multiply_fu_147_ap_ready) and (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_0 = ap_sig_startack_grp_DCT_MAT_Multiply_fu_147_ap_ready)))) then 
                    grp_DCT_MAT_Multiply_fu_147_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_DCT_MAT_Multiply_fu_147_ap_ready)) then 
                    grp_DCT_MAT_Multiply_fu_147_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_DCT_Quant_fu_193_ap_start_ap_start_reg assign process. --
    grp_DCT_Quant_fu_193_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_DCT_Quant_fu_193_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_234) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_234) and (p_read_127_read_fu_102_p2 = ap_const_lv32_2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_234) and (p_read_127_read_fu_102_p2 = ap_const_lv32_1)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)))) then 
                    grp_DCT_Quant_fu_193_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_DCT_Quant_fu_193_ap_ready)) then 
                    grp_DCT_Quant_fu_193_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, p_read_127_read_fu_102_p2, ap_sig_bdd_234, grp_DCT_MAT_Multiply_1_fu_109_ap_done, grp_DCT_MAT_Multiply_fu_147_ap_done, grp_DCT_Quant_fu_193_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if ((not(ap_sig_bdd_234) and (ap_const_lv32_0 = p_read_127_read_fu_102_p2))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                elsif ((not(ap_sig_bdd_234) and ((p_read_127_read_fu_102_p2 = ap_const_lv32_2) or (p_read_127_read_fu_102_p2 = ap_const_lv32_1)))) then
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                elsif ((not(ap_sig_bdd_234) and (p_read_127_read_fu_102_p2 = ap_const_lv32_3))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                elsif ((not(ap_sig_bdd_234) and not((p_read_127_read_fu_102_p2 = ap_const_lv32_5)) and not((p_read_127_read_fu_102_p2 = ap_const_lv32_4)) and not((p_read_127_read_fu_102_p2 = ap_const_lv32_3)) and not((p_read_127_read_fu_102_p2 = ap_const_lv32_2)) and not((p_read_127_read_fu_102_p2 = ap_const_lv32_1)) and not((ap_const_lv32_0 = p_read_127_read_fu_102_p2)))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                elsif ((not(ap_sig_bdd_234) and ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) or (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((not((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_0 = grp_DCT_Quant_fu_193_ap_done)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_0 = grp_DCT_MAT_Multiply_fu_147_ap_done)))) and ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) or (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                if ((not((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_0 = grp_DCT_MAT_Multiply_fu_147_ap_done)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_0 = grp_DCT_MAT_Multiply_1_fu_109_ap_done)))) and ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) or (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                if (not((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_0 = grp_DCT_MAT_Multiply_1_fu_109_ap_done)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_0 = grp_DCT_Quant_fu_193_ap_done))))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st7_fsm_6 => 
                if (not((ap_const_logic_0 = grp_DCT_MAT_Multiply_fu_147_ap_done))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                if (not((ap_const_logic_0 = grp_DCT_MAT_Multiply_1_fu_109_ap_done))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                end if;
            when ap_ST_st10_fsm_9 => 
                if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_2) or (p_read_127_read_fu_102_p2 = ap_const_lv32_1)) and not((((ap_const_logic_0 = grp_DCT_Quant_fu_193_ap_done) and (p_read_127_read_fu_102_p2 = ap_const_lv32_2)) or ((ap_const_logic_0 = grp_DCT_Quant_fu_193_ap_done) and (p_read_127_read_fu_102_p2 = ap_const_lv32_1)))))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                end if;
            when ap_ST_st11_fsm_10 => 
                if (not((ap_const_logic_0 = grp_DCT_MAT_Multiply_fu_147_ap_done))) then
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                if (not((ap_const_logic_0 = grp_DCT_MAT_Multiply_1_fu_109_ap_done))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;

    -- T_0_address0 assign process. --
    T_0_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_0_address0, grp_DCT_MAT_Multiply_fu_147_A_0_address0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_0_address0 <= grp_DCT_MAT_Multiply_fu_147_A_0_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            T_0_address0 <= grp_DCT_MAT_Multiply_1_fu_109_B_0_address0;
        else 
            T_0_address0 <= "XXX";
        end if; 
    end process;

    T_0_address1 <= grp_DCT_MAT_Multiply_fu_147_A_0_address1;

    -- T_0_ce0 assign process. --
    T_0_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_0_ce0, grp_DCT_MAT_Multiply_fu_147_A_0_ce0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_0_ce0 <= grp_DCT_MAT_Multiply_fu_147_A_0_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            T_0_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_B_0_ce0;
        else 
            T_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_0_ce1 assign process. --
    T_0_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_A_0_ce1, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_0_ce1 <= grp_DCT_MAT_Multiply_fu_147_A_0_ce1;
        else 
            T_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_1_address0 assign process. --
    T_1_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_1_address0, grp_DCT_MAT_Multiply_fu_147_A_1_address0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_1_address0 <= grp_DCT_MAT_Multiply_fu_147_A_1_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            T_1_address0 <= grp_DCT_MAT_Multiply_1_fu_109_B_1_address0;
        else 
            T_1_address0 <= "XXX";
        end if; 
    end process;

    T_1_address1 <= grp_DCT_MAT_Multiply_fu_147_A_1_address1;

    -- T_1_ce0 assign process. --
    T_1_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_1_ce0, grp_DCT_MAT_Multiply_fu_147_A_1_ce0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_1_ce0 <= grp_DCT_MAT_Multiply_fu_147_A_1_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            T_1_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_B_1_ce0;
        else 
            T_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_1_ce1 assign process. --
    T_1_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_A_1_ce1, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_1_ce1 <= grp_DCT_MAT_Multiply_fu_147_A_1_ce1;
        else 
            T_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_2_address0 assign process. --
    T_2_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_2_address0, grp_DCT_MAT_Multiply_fu_147_A_2_address0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_2_address0 <= grp_DCT_MAT_Multiply_fu_147_A_2_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            T_2_address0 <= grp_DCT_MAT_Multiply_1_fu_109_B_2_address0;
        else 
            T_2_address0 <= "XXX";
        end if; 
    end process;

    T_2_address1 <= grp_DCT_MAT_Multiply_fu_147_A_2_address1;

    -- T_2_ce0 assign process. --
    T_2_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_2_ce0, grp_DCT_MAT_Multiply_fu_147_A_2_ce0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_2_ce0 <= grp_DCT_MAT_Multiply_fu_147_A_2_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            T_2_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_B_2_ce0;
        else 
            T_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_2_ce1 assign process. --
    T_2_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_A_2_ce1, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_2_ce1 <= grp_DCT_MAT_Multiply_fu_147_A_2_ce1;
        else 
            T_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_3_address0 assign process. --
    T_3_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_3_address0, grp_DCT_MAT_Multiply_fu_147_A_3_address0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_3_address0 <= grp_DCT_MAT_Multiply_fu_147_A_3_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            T_3_address0 <= grp_DCT_MAT_Multiply_1_fu_109_B_3_address0;
        else 
            T_3_address0 <= "XXX";
        end if; 
    end process;

    T_3_address1 <= grp_DCT_MAT_Multiply_fu_147_A_3_address1;

    -- T_3_ce0 assign process. --
    T_3_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_3_ce0, grp_DCT_MAT_Multiply_fu_147_A_3_ce0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_3_ce0 <= grp_DCT_MAT_Multiply_fu_147_A_3_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            T_3_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_B_3_ce0;
        else 
            T_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_3_ce1 assign process. --
    T_3_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_A_3_ce1, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_3_ce1 <= grp_DCT_MAT_Multiply_fu_147_A_3_ce1;
        else 
            T_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_4_address0 assign process. --
    T_4_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_4_address0, grp_DCT_MAT_Multiply_fu_147_A_4_address0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_4_address0 <= grp_DCT_MAT_Multiply_fu_147_A_4_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            T_4_address0 <= grp_DCT_MAT_Multiply_1_fu_109_B_4_address0;
        else 
            T_4_address0 <= "XXX";
        end if; 
    end process;

    T_4_address1 <= grp_DCT_MAT_Multiply_fu_147_A_4_address1;

    -- T_4_ce0 assign process. --
    T_4_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_4_ce0, grp_DCT_MAT_Multiply_fu_147_A_4_ce0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_4_ce0 <= grp_DCT_MAT_Multiply_fu_147_A_4_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            T_4_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_B_4_ce0;
        else 
            T_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_4_ce1 assign process. --
    T_4_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_A_4_ce1, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_4_ce1 <= grp_DCT_MAT_Multiply_fu_147_A_4_ce1;
        else 
            T_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_5_address0 assign process. --
    T_5_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_5_address0, grp_DCT_MAT_Multiply_fu_147_A_5_address0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_5_address0 <= grp_DCT_MAT_Multiply_fu_147_A_5_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            T_5_address0 <= grp_DCT_MAT_Multiply_1_fu_109_B_5_address0;
        else 
            T_5_address0 <= "XXX";
        end if; 
    end process;

    T_5_address1 <= grp_DCT_MAT_Multiply_fu_147_A_5_address1;

    -- T_5_ce0 assign process. --
    T_5_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_5_ce0, grp_DCT_MAT_Multiply_fu_147_A_5_ce0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_5_ce0 <= grp_DCT_MAT_Multiply_fu_147_A_5_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            T_5_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_B_5_ce0;
        else 
            T_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_5_ce1 assign process. --
    T_5_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_A_5_ce1, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_5_ce1 <= grp_DCT_MAT_Multiply_fu_147_A_5_ce1;
        else 
            T_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_6_address0 assign process. --
    T_6_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_6_address0, grp_DCT_MAT_Multiply_fu_147_A_6_address0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_6_address0 <= grp_DCT_MAT_Multiply_fu_147_A_6_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            T_6_address0 <= grp_DCT_MAT_Multiply_1_fu_109_B_6_address0;
        else 
            T_6_address0 <= "XXX";
        end if; 
    end process;

    T_6_address1 <= grp_DCT_MAT_Multiply_fu_147_A_6_address1;

    -- T_6_ce0 assign process. --
    T_6_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_6_ce0, grp_DCT_MAT_Multiply_fu_147_A_6_ce0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_6_ce0 <= grp_DCT_MAT_Multiply_fu_147_A_6_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            T_6_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_B_6_ce0;
        else 
            T_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_6_ce1 assign process. --
    T_6_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_A_6_ce1, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_6_ce1 <= grp_DCT_MAT_Multiply_fu_147_A_6_ce1;
        else 
            T_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_7_address0 assign process. --
    T_7_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_7_address0, grp_DCT_MAT_Multiply_fu_147_A_7_address0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_7_address0 <= grp_DCT_MAT_Multiply_fu_147_A_7_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            T_7_address0 <= grp_DCT_MAT_Multiply_1_fu_109_B_7_address0;
        else 
            T_7_address0 <= "XXX";
        end if; 
    end process;

    T_7_address1 <= grp_DCT_MAT_Multiply_fu_147_A_7_address1;

    -- T_7_ce0 assign process. --
    T_7_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_7_ce0, grp_DCT_MAT_Multiply_fu_147_A_7_ce0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_7_ce0 <= grp_DCT_MAT_Multiply_fu_147_A_7_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            T_7_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_B_7_ce0;
        else 
            T_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- T_7_ce1 assign process. --
    T_7_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_A_7_ce1, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            T_7_ce1 <= grp_DCT_MAT_Multiply_fu_147_A_7_ce1;
        else 
            T_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- Tinv_0_address0 assign process. --
    Tinv_0_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_0_address0, grp_DCT_MAT_Multiply_fu_147_A_0_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_0_address0 <= grp_DCT_MAT_Multiply_fu_147_A_0_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Tinv_0_address0 <= grp_DCT_MAT_Multiply_1_fu_109_B_0_address0;
        else 
            Tinv_0_address0 <= "XXX";
        end if; 
    end process;

    Tinv_0_address1 <= grp_DCT_MAT_Multiply_fu_147_A_0_address1;

    -- Tinv_0_ce0 assign process. --
    Tinv_0_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_0_ce0, grp_DCT_MAT_Multiply_fu_147_A_0_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_0_ce0 <= grp_DCT_MAT_Multiply_fu_147_A_0_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Tinv_0_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_B_0_ce0;
        else 
            Tinv_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Tinv_0_ce1 assign process. --
    Tinv_0_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_A_0_ce1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_0_ce1 <= grp_DCT_MAT_Multiply_fu_147_A_0_ce1;
        else 
            Tinv_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- Tinv_1_address0 assign process. --
    Tinv_1_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_1_address0, grp_DCT_MAT_Multiply_fu_147_A_1_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_1_address0 <= grp_DCT_MAT_Multiply_fu_147_A_1_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Tinv_1_address0 <= grp_DCT_MAT_Multiply_1_fu_109_B_1_address0;
        else 
            Tinv_1_address0 <= "XXX";
        end if; 
    end process;

    Tinv_1_address1 <= grp_DCT_MAT_Multiply_fu_147_A_1_address1;

    -- Tinv_1_ce0 assign process. --
    Tinv_1_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_1_ce0, grp_DCT_MAT_Multiply_fu_147_A_1_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_1_ce0 <= grp_DCT_MAT_Multiply_fu_147_A_1_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Tinv_1_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_B_1_ce0;
        else 
            Tinv_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Tinv_1_ce1 assign process. --
    Tinv_1_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_A_1_ce1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_1_ce1 <= grp_DCT_MAT_Multiply_fu_147_A_1_ce1;
        else 
            Tinv_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- Tinv_2_address0 assign process. --
    Tinv_2_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_2_address0, grp_DCT_MAT_Multiply_fu_147_A_2_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_2_address0 <= grp_DCT_MAT_Multiply_fu_147_A_2_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Tinv_2_address0 <= grp_DCT_MAT_Multiply_1_fu_109_B_2_address0;
        else 
            Tinv_2_address0 <= "XXX";
        end if; 
    end process;

    Tinv_2_address1 <= grp_DCT_MAT_Multiply_fu_147_A_2_address1;

    -- Tinv_2_ce0 assign process. --
    Tinv_2_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_2_ce0, grp_DCT_MAT_Multiply_fu_147_A_2_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_2_ce0 <= grp_DCT_MAT_Multiply_fu_147_A_2_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Tinv_2_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_B_2_ce0;
        else 
            Tinv_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Tinv_2_ce1 assign process. --
    Tinv_2_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_A_2_ce1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_2_ce1 <= grp_DCT_MAT_Multiply_fu_147_A_2_ce1;
        else 
            Tinv_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- Tinv_3_address0 assign process. --
    Tinv_3_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_3_address0, grp_DCT_MAT_Multiply_fu_147_A_3_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_3_address0 <= grp_DCT_MAT_Multiply_fu_147_A_3_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Tinv_3_address0 <= grp_DCT_MAT_Multiply_1_fu_109_B_3_address0;
        else 
            Tinv_3_address0 <= "XXX";
        end if; 
    end process;

    Tinv_3_address1 <= grp_DCT_MAT_Multiply_fu_147_A_3_address1;

    -- Tinv_3_ce0 assign process. --
    Tinv_3_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_3_ce0, grp_DCT_MAT_Multiply_fu_147_A_3_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_3_ce0 <= grp_DCT_MAT_Multiply_fu_147_A_3_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Tinv_3_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_B_3_ce0;
        else 
            Tinv_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Tinv_3_ce1 assign process. --
    Tinv_3_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_A_3_ce1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_3_ce1 <= grp_DCT_MAT_Multiply_fu_147_A_3_ce1;
        else 
            Tinv_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- Tinv_4_address0 assign process. --
    Tinv_4_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_4_address0, grp_DCT_MAT_Multiply_fu_147_A_4_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_4_address0 <= grp_DCT_MAT_Multiply_fu_147_A_4_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Tinv_4_address0 <= grp_DCT_MAT_Multiply_1_fu_109_B_4_address0;
        else 
            Tinv_4_address0 <= "XXX";
        end if; 
    end process;

    Tinv_4_address1 <= grp_DCT_MAT_Multiply_fu_147_A_4_address1;

    -- Tinv_4_ce0 assign process. --
    Tinv_4_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_4_ce0, grp_DCT_MAT_Multiply_fu_147_A_4_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_4_ce0 <= grp_DCT_MAT_Multiply_fu_147_A_4_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Tinv_4_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_B_4_ce0;
        else 
            Tinv_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Tinv_4_ce1 assign process. --
    Tinv_4_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_A_4_ce1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_4_ce1 <= grp_DCT_MAT_Multiply_fu_147_A_4_ce1;
        else 
            Tinv_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- Tinv_5_address0 assign process. --
    Tinv_5_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_5_address0, grp_DCT_MAT_Multiply_fu_147_A_5_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_5_address0 <= grp_DCT_MAT_Multiply_fu_147_A_5_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Tinv_5_address0 <= grp_DCT_MAT_Multiply_1_fu_109_B_5_address0;
        else 
            Tinv_5_address0 <= "XXX";
        end if; 
    end process;

    Tinv_5_address1 <= grp_DCT_MAT_Multiply_fu_147_A_5_address1;

    -- Tinv_5_ce0 assign process. --
    Tinv_5_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_5_ce0, grp_DCT_MAT_Multiply_fu_147_A_5_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_5_ce0 <= grp_DCT_MAT_Multiply_fu_147_A_5_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Tinv_5_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_B_5_ce0;
        else 
            Tinv_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Tinv_5_ce1 assign process. --
    Tinv_5_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_A_5_ce1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_5_ce1 <= grp_DCT_MAT_Multiply_fu_147_A_5_ce1;
        else 
            Tinv_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- Tinv_6_address0 assign process. --
    Tinv_6_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_6_address0, grp_DCT_MAT_Multiply_fu_147_A_6_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_6_address0 <= grp_DCT_MAT_Multiply_fu_147_A_6_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Tinv_6_address0 <= grp_DCT_MAT_Multiply_1_fu_109_B_6_address0;
        else 
            Tinv_6_address0 <= "XXX";
        end if; 
    end process;

    Tinv_6_address1 <= grp_DCT_MAT_Multiply_fu_147_A_6_address1;

    -- Tinv_6_ce0 assign process. --
    Tinv_6_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_6_ce0, grp_DCT_MAT_Multiply_fu_147_A_6_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_6_ce0 <= grp_DCT_MAT_Multiply_fu_147_A_6_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Tinv_6_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_B_6_ce0;
        else 
            Tinv_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Tinv_6_ce1 assign process. --
    Tinv_6_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_A_6_ce1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_6_ce1 <= grp_DCT_MAT_Multiply_fu_147_A_6_ce1;
        else 
            Tinv_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- Tinv_7_address0 assign process. --
    Tinv_7_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_7_address0, grp_DCT_MAT_Multiply_fu_147_A_7_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_7_address0 <= grp_DCT_MAT_Multiply_fu_147_A_7_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Tinv_7_address0 <= grp_DCT_MAT_Multiply_1_fu_109_B_7_address0;
        else 
            Tinv_7_address0 <= "XXX";
        end if; 
    end process;

    Tinv_7_address1 <= grp_DCT_MAT_Multiply_fu_147_A_7_address1;

    -- Tinv_7_ce0 assign process. --
    Tinv_7_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_B_7_ce0, grp_DCT_MAT_Multiply_fu_147_A_7_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_7_ce0 <= grp_DCT_MAT_Multiply_fu_147_A_7_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Tinv_7_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_B_7_ce0;
        else 
            Tinv_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Tinv_7_ce1 assign process. --
    Tinv_7_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_A_7_ce1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            Tinv_7_ce1 <= grp_DCT_MAT_Multiply_fu_147_A_7_ce1;
        else 
            Tinv_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- Xmat2_address0 assign process. --
    Xmat2_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_C_address0, grp_DCT_MAT_Multiply_fu_147_B_address0, grp_DCT_Quant_fu_193_X_address0, grp_DCT_Quant_fu_193_Y_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1))) then 
            Xmat2_address0 <= grp_DCT_Quant_fu_193_Y_address0;
        elsif (((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            Xmat2_address0 <= grp_DCT_Quant_fu_193_X_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5))) then 
            Xmat2_address0 <= grp_DCT_MAT_Multiply_fu_147_B_address0;
        elsif (((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            Xmat2_address0 <= grp_DCT_MAT_Multiply_1_fu_109_C_address0;
        else 
            Xmat2_address0 <= "XXXXXX";
        end if; 
    end process;


    -- Xmat2_ce0 assign process. --
    Xmat2_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_C_ce0, grp_DCT_MAT_Multiply_fu_147_B_ce0, grp_DCT_Quant_fu_193_X_ce0, grp_DCT_Quant_fu_193_Y_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1))) then 
            Xmat2_ce0 <= grp_DCT_Quant_fu_193_Y_ce0;
        elsif (((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            Xmat2_ce0 <= grp_DCT_Quant_fu_193_X_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5))) then 
            Xmat2_ce0 <= grp_DCT_MAT_Multiply_fu_147_B_ce0;
        elsif (((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            Xmat2_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_C_ce0;
        else 
            Xmat2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Xmat2_d0 assign process. --
    Xmat2_d0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_C_d0, grp_DCT_Quant_fu_193_Y_d0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1))) then 
            Xmat2_d0 <= grp_DCT_Quant_fu_193_Y_d0;
        elsif (((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            Xmat2_d0 <= grp_DCT_MAT_Multiply_1_fu_109_C_d0;
        else 
            Xmat2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- Xmat2_we0 assign process. --
    Xmat2_we0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_C_we0, grp_DCT_Quant_fu_193_Y_we0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1))) then 
            Xmat2_we0 <= grp_DCT_Quant_fu_193_Y_we0;
        elsif (((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            Xmat2_we0 <= grp_DCT_MAT_Multiply_1_fu_109_C_we0;
        else 
            Xmat2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Xmat_address0 assign process. --
    Xmat_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_B_address0, grp_DCT_Quant_fu_193_X_address0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)))) then 
            Xmat_address0 <= grp_DCT_Quant_fu_193_X_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            Xmat_address0 <= grp_DCT_MAT_Multiply_fu_147_B_address0;
        else 
            Xmat_address0 <= "XXXXXX";
        end if; 
    end process;


    -- Xmat_ce0 assign process. --
    Xmat_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_B_ce0, grp_DCT_Quant_fu_193_X_ce0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)))) then 
            Xmat_ce0 <= grp_DCT_Quant_fu_193_X_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            Xmat_ce0 <= grp_DCT_MAT_Multiply_fu_147_B_ce0;
        else 
            Xmat_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Ymat_address0 assign process. --
    Ymat_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_C_address0, grp_DCT_Quant_fu_193_Y_address0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)))) then 
            Ymat_address0 <= grp_DCT_Quant_fu_193_Y_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Ymat_address0 <= grp_DCT_MAT_Multiply_1_fu_109_C_address0;
        else 
            Ymat_address0 <= "XXXXXX";
        end if; 
    end process;


    -- Ymat_ce0 assign process. --
    Ymat_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_C_ce0, grp_DCT_Quant_fu_193_Y_ce0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)))) then 
            Ymat_ce0 <= grp_DCT_Quant_fu_193_Y_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Ymat_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_C_ce0;
        else 
            Ymat_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Ymat_d0 assign process. --
    Ymat_d0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_C_d0, grp_DCT_Quant_fu_193_Y_d0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)))) then 
            Ymat_d0 <= grp_DCT_Quant_fu_193_Y_d0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Ymat_d0 <= grp_DCT_MAT_Multiply_1_fu_109_C_d0;
        else 
            Ymat_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- Ymat_we0 assign process. --
    Ymat_we0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_C_we0, grp_DCT_Quant_fu_193_Y_we0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)))) then 
            Ymat_we0 <= grp_DCT_Quant_fu_193_Y_we0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            Ymat_we0 <= grp_DCT_MAT_Multiply_1_fu_109_C_we0;
        else 
            Ymat_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_ap_done, grp_DCT_Quant_fu_193_ap_done, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_0 = grp_DCT_MAT_Multiply_1_fu_109_ap_done)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_0 = grp_DCT_Quant_fu_193_ap_done))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_ap_done, grp_DCT_Quant_fu_193_ap_done, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_0 = grp_DCT_MAT_Multiply_1_fu_109_ap_done)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_0 = grp_DCT_Quant_fu_193_ap_done)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_234 assign process. --
    ap_sig_bdd_234_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_234 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_32 assign process. --
    ap_sig_bdd_32_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_32 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_721 assign process. --
    ap_sig_bdd_721_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_721 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_733 assign process. --
    ap_sig_bdd_733_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_733 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_755 assign process. --
    ap_sig_bdd_755_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_755 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_763 assign process. --
    ap_sig_bdd_763_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_763 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_783 assign process. --
    ap_sig_bdd_783_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_783 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    -- ap_sig_bdd_791 assign process. --
    ap_sig_bdd_791_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_791 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    -- ap_sig_bdd_805 assign process. --
    ap_sig_bdd_805_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_805 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    -- ap_sig_bdd_813 assign process. --
    ap_sig_bdd_813_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_813 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    -- ap_sig_bdd_837 assign process. --
    ap_sig_bdd_837_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_837 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_859 assign process. --
    ap_sig_bdd_859_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_859 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_876 assign process. --
    ap_sig_bdd_876_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_876 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    -- ap_sig_bdd_915 assign process. --
    ap_sig_bdd_915_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_915 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    -- ap_sig_cseq_ST_st10_fsm_9 assign process. --
    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_bdd_915)
    begin
        if (ap_sig_bdd_915) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st11_fsm_10 assign process. --
    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_bdd_876)
    begin
        if (ap_sig_bdd_876) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st12_fsm_11 assign process. --
    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_bdd_805)
    begin
        if (ap_sig_bdd_805) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st13_fsm_12 assign process. --
    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_bdd_813)
    begin
        if (ap_sig_bdd_813) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_32)
    begin
        if (ap_sig_bdd_32) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_837)
    begin
        if (ap_sig_bdd_837) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_721)
    begin
        if (ap_sig_bdd_721) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_733)
    begin
        if (ap_sig_bdd_733) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st5_fsm_4 assign process. --
    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_bdd_755)
    begin
        if (ap_sig_bdd_755) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st6_fsm_5 assign process. --
    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_bdd_763)
    begin
        if (ap_sig_bdd_763) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st7_fsm_6 assign process. --
    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_bdd_859)
    begin
        if (ap_sig_bdd_859) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st8_fsm_7 assign process. --
    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_bdd_783)
    begin
        if (ap_sig_bdd_783) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st9_fsm_8 assign process. --
    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_bdd_791)
    begin
        if (ap_sig_bdd_791) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_startack_grp_DCT_MAT_Multiply_1_fu_109_ap_ready assign process. --
    ap_sig_startack_grp_DCT_MAT_Multiply_1_fu_109_ap_ready_assign_proc : process(grp_DCT_MAT_Multiply_1_fu_109_ap_ready, ap_reg_startack_grp_DCT_MAT_Multiply_1_fu_109_ap_ready)
    begin
        if ((ap_const_logic_0 = ap_reg_startack_grp_DCT_MAT_Multiply_1_fu_109_ap_ready)) then 
            ap_sig_startack_grp_DCT_MAT_Multiply_1_fu_109_ap_ready <= grp_DCT_MAT_Multiply_1_fu_109_ap_ready;
        else 
            ap_sig_startack_grp_DCT_MAT_Multiply_1_fu_109_ap_ready <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_startack_grp_DCT_MAT_Multiply_fu_147_ap_ready assign process. --
    ap_sig_startack_grp_DCT_MAT_Multiply_fu_147_ap_ready_assign_proc : process(grp_DCT_MAT_Multiply_fu_147_ap_ready, ap_reg_startack_grp_DCT_MAT_Multiply_fu_147_ap_ready)
    begin
        if ((ap_const_logic_0 = ap_reg_startack_grp_DCT_MAT_Multiply_fu_147_ap_ready)) then 
            ap_sig_startack_grp_DCT_MAT_Multiply_fu_147_ap_ready <= grp_DCT_MAT_Multiply_fu_147_ap_ready;
        else 
            ap_sig_startack_grp_DCT_MAT_Multiply_fu_147_ap_ready <= ap_const_logic_1;
        end if; 
    end process;

    grp_DCT_MAT_Multiply_1_fu_109_A1_q0 <= temp_1_q0;
    grp_DCT_MAT_Multiply_1_fu_109_A1_q1 <= temp_1_q1;
    grp_DCT_MAT_Multiply_1_fu_109_A2_q0 <= temp_2_q0;
    grp_DCT_MAT_Multiply_1_fu_109_A2_q1 <= temp_2_q1;
    grp_DCT_MAT_Multiply_1_fu_109_A3_q0 <= temp_3_q0;
    grp_DCT_MAT_Multiply_1_fu_109_A3_q1 <= temp_3_q1;
    grp_DCT_MAT_Multiply_1_fu_109_A4_q0 <= temp_4_q0;
    grp_DCT_MAT_Multiply_1_fu_109_A4_q1 <= temp_4_q1;
    grp_DCT_MAT_Multiply_1_fu_109_A5_q0 <= temp_5_q0;
    grp_DCT_MAT_Multiply_1_fu_109_A5_q1 <= temp_5_q1;
    grp_DCT_MAT_Multiply_1_fu_109_A6_q0 <= temp_6_q0;
    grp_DCT_MAT_Multiply_1_fu_109_A6_q1 <= temp_6_q1;
    grp_DCT_MAT_Multiply_1_fu_109_A7_q0 <= temp_7_q0;
    grp_DCT_MAT_Multiply_1_fu_109_A7_q1 <= temp_7_q1;
    grp_DCT_MAT_Multiply_1_fu_109_A_q0 <= temp_0_q0;
    grp_DCT_MAT_Multiply_1_fu_109_A_q1 <= temp_0_q1;

    -- grp_DCT_MAT_Multiply_1_fu_109_B_0_q0 assign process. --
    grp_DCT_MAT_Multiply_1_fu_109_B_0_q0_assign_proc : process(T_0_q0, Tinv_0_q0, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            grp_DCT_MAT_Multiply_1_fu_109_B_0_q0 <= T_0_q0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            grp_DCT_MAT_Multiply_1_fu_109_B_0_q0 <= Tinv_0_q0;
        else 
            grp_DCT_MAT_Multiply_1_fu_109_B_0_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_DCT_MAT_Multiply_1_fu_109_B_0_q1 <= ap_const_lv32_0;

    -- grp_DCT_MAT_Multiply_1_fu_109_B_1_q0 assign process. --
    grp_DCT_MAT_Multiply_1_fu_109_B_1_q0_assign_proc : process(T_1_q0, Tinv_1_q0, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            grp_DCT_MAT_Multiply_1_fu_109_B_1_q0 <= T_1_q0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            grp_DCT_MAT_Multiply_1_fu_109_B_1_q0 <= Tinv_1_q0;
        else 
            grp_DCT_MAT_Multiply_1_fu_109_B_1_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_DCT_MAT_Multiply_1_fu_109_B_1_q1 <= ap_const_lv32_0;

    -- grp_DCT_MAT_Multiply_1_fu_109_B_2_q0 assign process. --
    grp_DCT_MAT_Multiply_1_fu_109_B_2_q0_assign_proc : process(T_2_q0, Tinv_2_q0, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            grp_DCT_MAT_Multiply_1_fu_109_B_2_q0 <= T_2_q0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            grp_DCT_MAT_Multiply_1_fu_109_B_2_q0 <= Tinv_2_q0;
        else 
            grp_DCT_MAT_Multiply_1_fu_109_B_2_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_DCT_MAT_Multiply_1_fu_109_B_2_q1 <= ap_const_lv32_0;

    -- grp_DCT_MAT_Multiply_1_fu_109_B_3_q0 assign process. --
    grp_DCT_MAT_Multiply_1_fu_109_B_3_q0_assign_proc : process(T_3_q0, Tinv_3_q0, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            grp_DCT_MAT_Multiply_1_fu_109_B_3_q0 <= T_3_q0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            grp_DCT_MAT_Multiply_1_fu_109_B_3_q0 <= Tinv_3_q0;
        else 
            grp_DCT_MAT_Multiply_1_fu_109_B_3_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_DCT_MAT_Multiply_1_fu_109_B_3_q1 <= ap_const_lv32_0;

    -- grp_DCT_MAT_Multiply_1_fu_109_B_4_q0 assign process. --
    grp_DCT_MAT_Multiply_1_fu_109_B_4_q0_assign_proc : process(T_4_q0, Tinv_4_q0, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            grp_DCT_MAT_Multiply_1_fu_109_B_4_q0 <= T_4_q0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            grp_DCT_MAT_Multiply_1_fu_109_B_4_q0 <= Tinv_4_q0;
        else 
            grp_DCT_MAT_Multiply_1_fu_109_B_4_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_DCT_MAT_Multiply_1_fu_109_B_4_q1 <= ap_const_lv32_0;

    -- grp_DCT_MAT_Multiply_1_fu_109_B_5_q0 assign process. --
    grp_DCT_MAT_Multiply_1_fu_109_B_5_q0_assign_proc : process(T_5_q0, Tinv_5_q0, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            grp_DCT_MAT_Multiply_1_fu_109_B_5_q0 <= T_5_q0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            grp_DCT_MAT_Multiply_1_fu_109_B_5_q0 <= Tinv_5_q0;
        else 
            grp_DCT_MAT_Multiply_1_fu_109_B_5_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_DCT_MAT_Multiply_1_fu_109_B_5_q1 <= ap_const_lv32_0;

    -- grp_DCT_MAT_Multiply_1_fu_109_B_6_q0 assign process. --
    grp_DCT_MAT_Multiply_1_fu_109_B_6_q0_assign_proc : process(T_6_q0, Tinv_6_q0, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            grp_DCT_MAT_Multiply_1_fu_109_B_6_q0 <= T_6_q0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            grp_DCT_MAT_Multiply_1_fu_109_B_6_q0 <= Tinv_6_q0;
        else 
            grp_DCT_MAT_Multiply_1_fu_109_B_6_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_DCT_MAT_Multiply_1_fu_109_B_6_q1 <= ap_const_lv32_0;

    -- grp_DCT_MAT_Multiply_1_fu_109_B_7_q0 assign process. --
    grp_DCT_MAT_Multiply_1_fu_109_B_7_q0_assign_proc : process(T_7_q0, Tinv_7_q0, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            grp_DCT_MAT_Multiply_1_fu_109_B_7_q0 <= T_7_q0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            grp_DCT_MAT_Multiply_1_fu_109_B_7_q0 <= Tinv_7_q0;
        else 
            grp_DCT_MAT_Multiply_1_fu_109_B_7_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_DCT_MAT_Multiply_1_fu_109_B_7_q1 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_1_fu_109_C_pipo_status <= ap_const_logic_0;
    grp_DCT_MAT_Multiply_1_fu_109_C_q0 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_1_fu_109_C_q1 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_1_fu_109_ap_start <= grp_DCT_MAT_Multiply_1_fu_109_ap_start_ap_start_reg;

    -- grp_DCT_MAT_Multiply_fu_147_A_0_q0 assign process. --
    grp_DCT_MAT_Multiply_fu_147_A_0_q0_assign_proc : process(T_0_q0, Tinv_0_q0, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            grp_DCT_MAT_Multiply_fu_147_A_0_q0 <= Tinv_0_q0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            grp_DCT_MAT_Multiply_fu_147_A_0_q0 <= T_0_q0;
        else 
            grp_DCT_MAT_Multiply_fu_147_A_0_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_DCT_MAT_Multiply_fu_147_A_0_q1 assign process. --
    grp_DCT_MAT_Multiply_fu_147_A_0_q1_assign_proc : process(T_0_q1, Tinv_0_q1, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            grp_DCT_MAT_Multiply_fu_147_A_0_q1 <= Tinv_0_q1;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            grp_DCT_MAT_Multiply_fu_147_A_0_q1 <= T_0_q1;
        else 
            grp_DCT_MAT_Multiply_fu_147_A_0_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_DCT_MAT_Multiply_fu_147_A_1_q0 assign process. --
    grp_DCT_MAT_Multiply_fu_147_A_1_q0_assign_proc : process(T_1_q0, Tinv_1_q0, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            grp_DCT_MAT_Multiply_fu_147_A_1_q0 <= Tinv_1_q0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            grp_DCT_MAT_Multiply_fu_147_A_1_q0 <= T_1_q0;
        else 
            grp_DCT_MAT_Multiply_fu_147_A_1_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_DCT_MAT_Multiply_fu_147_A_1_q1 assign process. --
    grp_DCT_MAT_Multiply_fu_147_A_1_q1_assign_proc : process(T_1_q1, Tinv_1_q1, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            grp_DCT_MAT_Multiply_fu_147_A_1_q1 <= Tinv_1_q1;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            grp_DCT_MAT_Multiply_fu_147_A_1_q1 <= T_1_q1;
        else 
            grp_DCT_MAT_Multiply_fu_147_A_1_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_DCT_MAT_Multiply_fu_147_A_2_q0 assign process. --
    grp_DCT_MAT_Multiply_fu_147_A_2_q0_assign_proc : process(T_2_q0, Tinv_2_q0, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            grp_DCT_MAT_Multiply_fu_147_A_2_q0 <= Tinv_2_q0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            grp_DCT_MAT_Multiply_fu_147_A_2_q0 <= T_2_q0;
        else 
            grp_DCT_MAT_Multiply_fu_147_A_2_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_DCT_MAT_Multiply_fu_147_A_2_q1 assign process. --
    grp_DCT_MAT_Multiply_fu_147_A_2_q1_assign_proc : process(T_2_q1, Tinv_2_q1, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            grp_DCT_MAT_Multiply_fu_147_A_2_q1 <= Tinv_2_q1;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            grp_DCT_MAT_Multiply_fu_147_A_2_q1 <= T_2_q1;
        else 
            grp_DCT_MAT_Multiply_fu_147_A_2_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_DCT_MAT_Multiply_fu_147_A_3_q0 assign process. --
    grp_DCT_MAT_Multiply_fu_147_A_3_q0_assign_proc : process(T_3_q0, Tinv_3_q0, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            grp_DCT_MAT_Multiply_fu_147_A_3_q0 <= Tinv_3_q0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            grp_DCT_MAT_Multiply_fu_147_A_3_q0 <= T_3_q0;
        else 
            grp_DCT_MAT_Multiply_fu_147_A_3_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_DCT_MAT_Multiply_fu_147_A_3_q1 assign process. --
    grp_DCT_MAT_Multiply_fu_147_A_3_q1_assign_proc : process(T_3_q1, Tinv_3_q1, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            grp_DCT_MAT_Multiply_fu_147_A_3_q1 <= Tinv_3_q1;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            grp_DCT_MAT_Multiply_fu_147_A_3_q1 <= T_3_q1;
        else 
            grp_DCT_MAT_Multiply_fu_147_A_3_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_DCT_MAT_Multiply_fu_147_A_4_q0 assign process. --
    grp_DCT_MAT_Multiply_fu_147_A_4_q0_assign_proc : process(T_4_q0, Tinv_4_q0, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            grp_DCT_MAT_Multiply_fu_147_A_4_q0 <= Tinv_4_q0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            grp_DCT_MAT_Multiply_fu_147_A_4_q0 <= T_4_q0;
        else 
            grp_DCT_MAT_Multiply_fu_147_A_4_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_DCT_MAT_Multiply_fu_147_A_4_q1 assign process. --
    grp_DCT_MAT_Multiply_fu_147_A_4_q1_assign_proc : process(T_4_q1, Tinv_4_q1, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            grp_DCT_MAT_Multiply_fu_147_A_4_q1 <= Tinv_4_q1;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            grp_DCT_MAT_Multiply_fu_147_A_4_q1 <= T_4_q1;
        else 
            grp_DCT_MAT_Multiply_fu_147_A_4_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_DCT_MAT_Multiply_fu_147_A_5_q0 assign process. --
    grp_DCT_MAT_Multiply_fu_147_A_5_q0_assign_proc : process(T_5_q0, Tinv_5_q0, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            grp_DCT_MAT_Multiply_fu_147_A_5_q0 <= Tinv_5_q0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            grp_DCT_MAT_Multiply_fu_147_A_5_q0 <= T_5_q0;
        else 
            grp_DCT_MAT_Multiply_fu_147_A_5_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_DCT_MAT_Multiply_fu_147_A_5_q1 assign process. --
    grp_DCT_MAT_Multiply_fu_147_A_5_q1_assign_proc : process(T_5_q1, Tinv_5_q1, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            grp_DCT_MAT_Multiply_fu_147_A_5_q1 <= Tinv_5_q1;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            grp_DCT_MAT_Multiply_fu_147_A_5_q1 <= T_5_q1;
        else 
            grp_DCT_MAT_Multiply_fu_147_A_5_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_DCT_MAT_Multiply_fu_147_A_6_q0 assign process. --
    grp_DCT_MAT_Multiply_fu_147_A_6_q0_assign_proc : process(T_6_q0, Tinv_6_q0, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            grp_DCT_MAT_Multiply_fu_147_A_6_q0 <= Tinv_6_q0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            grp_DCT_MAT_Multiply_fu_147_A_6_q0 <= T_6_q0;
        else 
            grp_DCT_MAT_Multiply_fu_147_A_6_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_DCT_MAT_Multiply_fu_147_A_6_q1 assign process. --
    grp_DCT_MAT_Multiply_fu_147_A_6_q1_assign_proc : process(T_6_q1, Tinv_6_q1, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            grp_DCT_MAT_Multiply_fu_147_A_6_q1 <= Tinv_6_q1;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            grp_DCT_MAT_Multiply_fu_147_A_6_q1 <= T_6_q1;
        else 
            grp_DCT_MAT_Multiply_fu_147_A_6_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_DCT_MAT_Multiply_fu_147_A_7_q0 assign process. --
    grp_DCT_MAT_Multiply_fu_147_A_7_q0_assign_proc : process(T_7_q0, Tinv_7_q0, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            grp_DCT_MAT_Multiply_fu_147_A_7_q0 <= Tinv_7_q0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            grp_DCT_MAT_Multiply_fu_147_A_7_q0 <= T_7_q0;
        else 
            grp_DCT_MAT_Multiply_fu_147_A_7_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- grp_DCT_MAT_Multiply_fu_147_A_7_q1 assign process. --
    grp_DCT_MAT_Multiply_fu_147_A_7_q1_assign_proc : process(T_7_q1, Tinv_7_q1, p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            grp_DCT_MAT_Multiply_fu_147_A_7_q1 <= Tinv_7_q1;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            grp_DCT_MAT_Multiply_fu_147_A_7_q1 <= T_7_q1;
        else 
            grp_DCT_MAT_Multiply_fu_147_A_7_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_DCT_MAT_Multiply_fu_147_B_pipo_status <= ap_const_logic_0;

    -- grp_DCT_MAT_Multiply_fu_147_B_q0 assign process. --
    grp_DCT_MAT_Multiply_fu_147_B_q0_assign_proc : process(Xmat_q0, p_read_127_read_fu_102_p2, Xmat2_q0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5))) then 
            grp_DCT_MAT_Multiply_fu_147_B_q0 <= Xmat2_q0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            grp_DCT_MAT_Multiply_fu_147_B_q0 <= Xmat_q0;
        else 
            grp_DCT_MAT_Multiply_fu_147_B_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_DCT_MAT_Multiply_fu_147_B_q1 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_fu_147_C_0_q0 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_fu_147_C_0_q1 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_fu_147_C_1_q0 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_fu_147_C_1_q1 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_fu_147_C_2_q0 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_fu_147_C_2_q1 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_fu_147_C_3_q0 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_fu_147_C_3_q1 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_fu_147_C_4_q0 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_fu_147_C_4_q1 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_fu_147_C_5_q0 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_fu_147_C_5_q1 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_fu_147_C_6_q0 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_fu_147_C_6_q1 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_fu_147_C_7_q0 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_fu_147_C_7_q1 <= ap_const_lv32_0;
    grp_DCT_MAT_Multiply_fu_147_ap_start <= grp_DCT_MAT_Multiply_fu_147_ap_start_ap_start_reg;

    -- grp_DCT_Quant_fu_193_X_q0 assign process. --
    grp_DCT_Quant_fu_193_X_q0_assign_proc : process(Xmat_q0, p_read_127_read_fu_102_p2, Xmat2_q0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            grp_DCT_Quant_fu_193_X_q0 <= Xmat2_q0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)))) then 
            grp_DCT_Quant_fu_193_X_q0 <= Xmat_q0;
        else 
            grp_DCT_Quant_fu_193_X_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_DCT_Quant_fu_193_ap_start <= grp_DCT_Quant_fu_193_ap_start_ap_start_reg;

    -- grp_DCT_Quant_fu_193_function_r assign process. --
    grp_DCT_Quant_fu_193_function_r_assign_proc : process(p_read_127_read_fu_102_p2, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)))) then 
            grp_DCT_Quant_fu_193_function_r <= ap_const_lv1_0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)))) then 
            grp_DCT_Quant_fu_193_function_r <= ap_const_lv1_1;
        else 
            grp_DCT_Quant_fu_193_function_r <= "X";
        end if; 
    end process;

    p_read_127_read_fu_102_p2 <= p_read;

    -- temp_0_address0 assign process. --
    temp_0_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A_address0, grp_DCT_MAT_Multiply_fu_147_C_0_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_0_address0 <= grp_DCT_MAT_Multiply_fu_147_C_0_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_0_address0 <= grp_DCT_MAT_Multiply_1_fu_109_A_address0;
        else 
            temp_0_address0 <= "XXX";
        end if; 
    end process;

    temp_0_address1 <= grp_DCT_MAT_Multiply_1_fu_109_A_address1;

    -- temp_0_ce0 assign process. --
    temp_0_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A_ce0, grp_DCT_MAT_Multiply_fu_147_C_0_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_0_ce0 <= grp_DCT_MAT_Multiply_fu_147_C_0_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_0_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_A_ce0;
        else 
            temp_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- temp_0_ce1 assign process. --
    temp_0_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A_ce1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_0_ce1 <= grp_DCT_MAT_Multiply_1_fu_109_A_ce1;
        else 
            temp_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    temp_0_d0 <= grp_DCT_MAT_Multiply_fu_147_C_0_d0;

    -- temp_0_we0 assign process. --
    temp_0_we0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_C_0_we0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_0_we0 <= grp_DCT_MAT_Multiply_fu_147_C_0_we0;
        else 
            temp_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- temp_1_address0 assign process. --
    temp_1_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A1_address0, grp_DCT_MAT_Multiply_fu_147_C_1_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_1_address0 <= grp_DCT_MAT_Multiply_fu_147_C_1_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_1_address0 <= grp_DCT_MAT_Multiply_1_fu_109_A1_address0;
        else 
            temp_1_address0 <= "XXX";
        end if; 
    end process;

    temp_1_address1 <= grp_DCT_MAT_Multiply_1_fu_109_A1_address1;

    -- temp_1_ce0 assign process. --
    temp_1_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A1_ce0, grp_DCT_MAT_Multiply_fu_147_C_1_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_1_ce0 <= grp_DCT_MAT_Multiply_fu_147_C_1_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_1_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_A1_ce0;
        else 
            temp_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- temp_1_ce1 assign process. --
    temp_1_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A1_ce1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_1_ce1 <= grp_DCT_MAT_Multiply_1_fu_109_A1_ce1;
        else 
            temp_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    temp_1_d0 <= grp_DCT_MAT_Multiply_fu_147_C_1_d0;

    -- temp_1_we0 assign process. --
    temp_1_we0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_C_1_we0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_1_we0 <= grp_DCT_MAT_Multiply_fu_147_C_1_we0;
        else 
            temp_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- temp_2_address0 assign process. --
    temp_2_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A2_address0, grp_DCT_MAT_Multiply_fu_147_C_2_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_2_address0 <= grp_DCT_MAT_Multiply_fu_147_C_2_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_2_address0 <= grp_DCT_MAT_Multiply_1_fu_109_A2_address0;
        else 
            temp_2_address0 <= "XXX";
        end if; 
    end process;

    temp_2_address1 <= grp_DCT_MAT_Multiply_1_fu_109_A2_address1;

    -- temp_2_ce0 assign process. --
    temp_2_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A2_ce0, grp_DCT_MAT_Multiply_fu_147_C_2_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_2_ce0 <= grp_DCT_MAT_Multiply_fu_147_C_2_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_2_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_A2_ce0;
        else 
            temp_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- temp_2_ce1 assign process. --
    temp_2_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A2_ce1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_2_ce1 <= grp_DCT_MAT_Multiply_1_fu_109_A2_ce1;
        else 
            temp_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    temp_2_d0 <= grp_DCT_MAT_Multiply_fu_147_C_2_d0;

    -- temp_2_we0 assign process. --
    temp_2_we0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_C_2_we0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_2_we0 <= grp_DCT_MAT_Multiply_fu_147_C_2_we0;
        else 
            temp_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- temp_3_address0 assign process. --
    temp_3_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A3_address0, grp_DCT_MAT_Multiply_fu_147_C_3_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_3_address0 <= grp_DCT_MAT_Multiply_fu_147_C_3_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_3_address0 <= grp_DCT_MAT_Multiply_1_fu_109_A3_address0;
        else 
            temp_3_address0 <= "XXX";
        end if; 
    end process;

    temp_3_address1 <= grp_DCT_MAT_Multiply_1_fu_109_A3_address1;

    -- temp_3_ce0 assign process. --
    temp_3_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A3_ce0, grp_DCT_MAT_Multiply_fu_147_C_3_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_3_ce0 <= grp_DCT_MAT_Multiply_fu_147_C_3_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_3_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_A3_ce0;
        else 
            temp_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- temp_3_ce1 assign process. --
    temp_3_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A3_ce1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_3_ce1 <= grp_DCT_MAT_Multiply_1_fu_109_A3_ce1;
        else 
            temp_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    temp_3_d0 <= grp_DCT_MAT_Multiply_fu_147_C_3_d0;

    -- temp_3_we0 assign process. --
    temp_3_we0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_C_3_we0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_3_we0 <= grp_DCT_MAT_Multiply_fu_147_C_3_we0;
        else 
            temp_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- temp_4_address0 assign process. --
    temp_4_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A4_address0, grp_DCT_MAT_Multiply_fu_147_C_4_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_4_address0 <= grp_DCT_MAT_Multiply_fu_147_C_4_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_4_address0 <= grp_DCT_MAT_Multiply_1_fu_109_A4_address0;
        else 
            temp_4_address0 <= "XXX";
        end if; 
    end process;

    temp_4_address1 <= grp_DCT_MAT_Multiply_1_fu_109_A4_address1;

    -- temp_4_ce0 assign process. --
    temp_4_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A4_ce0, grp_DCT_MAT_Multiply_fu_147_C_4_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_4_ce0 <= grp_DCT_MAT_Multiply_fu_147_C_4_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_4_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_A4_ce0;
        else 
            temp_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- temp_4_ce1 assign process. --
    temp_4_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A4_ce1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_4_ce1 <= grp_DCT_MAT_Multiply_1_fu_109_A4_ce1;
        else 
            temp_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    temp_4_d0 <= grp_DCT_MAT_Multiply_fu_147_C_4_d0;

    -- temp_4_we0 assign process. --
    temp_4_we0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_C_4_we0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_4_we0 <= grp_DCT_MAT_Multiply_fu_147_C_4_we0;
        else 
            temp_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- temp_5_address0 assign process. --
    temp_5_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A5_address0, grp_DCT_MAT_Multiply_fu_147_C_5_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_5_address0 <= grp_DCT_MAT_Multiply_fu_147_C_5_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_5_address0 <= grp_DCT_MAT_Multiply_1_fu_109_A5_address0;
        else 
            temp_5_address0 <= "XXX";
        end if; 
    end process;

    temp_5_address1 <= grp_DCT_MAT_Multiply_1_fu_109_A5_address1;

    -- temp_5_ce0 assign process. --
    temp_5_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A5_ce0, grp_DCT_MAT_Multiply_fu_147_C_5_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_5_ce0 <= grp_DCT_MAT_Multiply_fu_147_C_5_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_5_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_A5_ce0;
        else 
            temp_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- temp_5_ce1 assign process. --
    temp_5_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A5_ce1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_5_ce1 <= grp_DCT_MAT_Multiply_1_fu_109_A5_ce1;
        else 
            temp_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    temp_5_d0 <= grp_DCT_MAT_Multiply_fu_147_C_5_d0;

    -- temp_5_we0 assign process. --
    temp_5_we0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_C_5_we0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_5_we0 <= grp_DCT_MAT_Multiply_fu_147_C_5_we0;
        else 
            temp_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- temp_6_address0 assign process. --
    temp_6_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A6_address0, grp_DCT_MAT_Multiply_fu_147_C_6_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_6_address0 <= grp_DCT_MAT_Multiply_fu_147_C_6_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_6_address0 <= grp_DCT_MAT_Multiply_1_fu_109_A6_address0;
        else 
            temp_6_address0 <= "XXX";
        end if; 
    end process;

    temp_6_address1 <= grp_DCT_MAT_Multiply_1_fu_109_A6_address1;

    -- temp_6_ce0 assign process. --
    temp_6_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A6_ce0, grp_DCT_MAT_Multiply_fu_147_C_6_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_6_ce0 <= grp_DCT_MAT_Multiply_fu_147_C_6_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_6_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_A6_ce0;
        else 
            temp_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- temp_6_ce1 assign process. --
    temp_6_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A6_ce1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_6_ce1 <= grp_DCT_MAT_Multiply_1_fu_109_A6_ce1;
        else 
            temp_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    temp_6_d0 <= grp_DCT_MAT_Multiply_fu_147_C_6_d0;

    -- temp_6_we0 assign process. --
    temp_6_we0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_C_6_we0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_6_we0 <= grp_DCT_MAT_Multiply_fu_147_C_6_we0;
        else 
            temp_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- temp_7_address0 assign process. --
    temp_7_address0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A7_address0, grp_DCT_MAT_Multiply_fu_147_C_7_address0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_7_address0 <= grp_DCT_MAT_Multiply_fu_147_C_7_address0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_7_address0 <= grp_DCT_MAT_Multiply_1_fu_109_A7_address0;
        else 
            temp_7_address0 <= "XXX";
        end if; 
    end process;

    temp_7_address1 <= grp_DCT_MAT_Multiply_1_fu_109_A7_address1;

    -- temp_7_ce0 assign process. --
    temp_7_ce0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A7_ce0, grp_DCT_MAT_Multiply_fu_147_C_7_ce0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_7_ce0 <= grp_DCT_MAT_Multiply_fu_147_C_7_ce0;
        elsif ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_7_ce0 <= grp_DCT_MAT_Multiply_1_fu_109_A7_ce0;
        else 
            temp_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- temp_7_ce1 assign process. --
    temp_7_ce1_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_1_fu_109_A7_ce1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) or ((p_read_127_read_fu_102_p2 = ap_const_lv32_5) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp_7_ce1 <= grp_DCT_MAT_Multiply_1_fu_109_A7_ce1;
        else 
            temp_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    temp_7_d0 <= grp_DCT_MAT_Multiply_fu_147_C_7_d0;

    -- temp_7_we0 assign process. --
    temp_7_we0_assign_proc : process(p_read_127_read_fu_102_p2, grp_DCT_MAT_Multiply_fu_147_C_7_we0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((((p_read_127_read_fu_102_p2 = ap_const_lv32_4) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (p_read_127_read_fu_102_p2 = ap_const_lv32_5)))) then 
            temp_7_we0 <= grp_DCT_MAT_Multiply_fu_147_C_7_we0;
        else 
            temp_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
