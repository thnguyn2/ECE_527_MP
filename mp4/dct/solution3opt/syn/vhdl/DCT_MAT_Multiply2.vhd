-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.1
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity DCT_MAT_Multiply2 is
port (
    A_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_ce0 : OUT STD_LOGIC;
    A_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_we0 : OUT STD_LOGIC;
    A_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_ce1 : OUT STD_LOGIC;
    A_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_we1 : OUT STD_LOGIC;
    B_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_0_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_0_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_0_5_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_0_6_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_0_7_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_1_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_1_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_1_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_1_5_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_1_6_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_1_7_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_2_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_2_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_2_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_2_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_2_5_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_2_6_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_2_7_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_3_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_3_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_3_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_3_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_3_5_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_3_6_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_3_7_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_4_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_4_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_4_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_4_5_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_4_6_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_4_7_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_5_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_5_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_5_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_5_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_5_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_5_6_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_5_7_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_6_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_6_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_6_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_6_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_6_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_6_5_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_6_7_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_7_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_7_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_7_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_7_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_7_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_7_5_read : IN STD_LOGIC_VECTOR (31 downto 0);
    B_7_6_read : IN STD_LOGIC_VECTOR (31 downto 0);
    C_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_full_n : IN STD_LOGIC;
    C_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    B_5_2_read_ap_ack : OUT STD_LOGIC;
    B_1_4_read_ap_ack : OUT STD_LOGIC;
    B_6_5_read_ap_ack : OUT STD_LOGIC;
    B_0_2_read_ap_ack : OUT STD_LOGIC;
    B_7_2_read_ap_ack : OUT STD_LOGIC;
    B_3_0_read_ap_ack : OUT STD_LOGIC;
    B_7_5_read_ap_ack : OUT STD_LOGIC;
    B_4_3_read_ap_ack : OUT STD_LOGIC;
    B_1_7_read_ap_ack : OUT STD_LOGIC;
    B_5_3_read_ap_ack : OUT STD_LOGIC;
    B_7_0_read_ap_ack : OUT STD_LOGIC;
    B_3_6_read_ap_ack : OUT STD_LOGIC;
    B_1_2_read_ap_ack : OUT STD_LOGIC;
    B_0_7_read_ap_ack : OUT STD_LOGIC;
    B_1_6_read_ap_ack : OUT STD_LOGIC;
    B_7_3_read_ap_ack : OUT STD_LOGIC;
    B_4_1_read_ap_ack : OUT STD_LOGIC;
    B_6_1_read_ap_ack : OUT STD_LOGIC;
    B_2_1_read_ap_ack : OUT STD_LOGIC;
    B_5_6_read_ap_ack : OUT STD_LOGIC;
    B_2_5_read_ap_ack : OUT STD_LOGIC;
    B_2_4_read_ap_ack : OUT STD_LOGIC;
    B_4_7_read_ap_ack : OUT STD_LOGIC;
    B_2_0_read_ap_ack : OUT STD_LOGIC;
    B_6_3_read_ap_ack : OUT STD_LOGIC;
    B_0_3_read_ap_ack : OUT STD_LOGIC;
    B_3_7_read_ap_ack : OUT STD_LOGIC;
    B_4_2_read_ap_ack : OUT STD_LOGIC;
    B_2_3_read_ap_ack : OUT STD_LOGIC;
    B_4_6_read_ap_ack : OUT STD_LOGIC;
    B_1_5_read_ap_ack : OUT STD_LOGIC;
    B_0_6_read_ap_ack : OUT STD_LOGIC;
    B_3_1_read_ap_ack : OUT STD_LOGIC;
    B_1_3_read_ap_ack : OUT STD_LOGIC;
    B_0_5_read_ap_ack : OUT STD_LOGIC;
    B_2_7_read_ap_ack : OUT STD_LOGIC;
    B_5_4_read_ap_ack : OUT STD_LOGIC;
    B_7_4_read_ap_ack : OUT STD_LOGIC;
    B_3_5_read_ap_ack : OUT STD_LOGIC;
    B_7_1_read_ap_ack : OUT STD_LOGIC;
    B_6_7_read_ap_ack : OUT STD_LOGIC;
    B_3_4_read_ap_ack : OUT STD_LOGIC;
    B_5_7_read_ap_ack : OUT STD_LOGIC;
    B_6_0_read_ap_ack : OUT STD_LOGIC;
    B_0_1_read_ap_ack : OUT STD_LOGIC;
    B_2_6_read_ap_ack : OUT STD_LOGIC;
    B_3_2_read_ap_ack : OUT STD_LOGIC;
    B_5_0_read_ap_ack : OUT STD_LOGIC;
    B_4_5_read_ap_ack : OUT STD_LOGIC;
    B_5_1_read_ap_ack : OUT STD_LOGIC;
    B_6_2_read_ap_ack : OUT STD_LOGIC;
    B_7_6_read_ap_ack : OUT STD_LOGIC;
    B_1_0_read_ap_ack : OUT STD_LOGIC;
    B_6_4_read_ap_ack : OUT STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC );
end;


architecture behav of DCT_MAT_Multiply2 is 
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_true : BOOLEAN := true;

    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_start : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_continue : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_idle : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_ready : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_ce0 : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read8 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read24 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read25 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read26 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read27 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read28 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read29 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read30 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read31 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read32 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read34 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read35 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read36 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read37 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read38 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read39 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read40 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read41 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read42 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read43 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read44 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read45 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read46 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read48 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read49 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read50 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read51 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read55 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read56 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read57 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read58 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read59 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read60 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read62 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read63 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read64 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read65 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read67 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read69 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read70 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read72 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read73 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read74 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read75 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read76 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read77 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read78 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read79 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read80 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read81 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read82 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read83 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read84 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read85 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_2_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_2_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_2_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_1_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_1_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_1_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_4_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_4_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_4_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_5_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_5_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_5_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_2_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_2_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_2_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_2_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_2_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_2_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_0_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_0_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_0_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_5_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_5_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_5_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_3_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_3_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_3_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_7_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_7_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_7_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_3_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_3_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_3_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_7_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_7_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_7_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_0_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_0_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_0_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_6_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_6_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_6_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_2_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_2_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_2_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_7_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_7_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_7_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_6_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_6_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_6_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_3_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_3_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_3_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_1_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_1_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_1_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_1_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_1_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_1_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_1_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_1_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_1_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_6_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_6_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_6_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_5_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_5_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_5_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_4_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_4_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_4_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_7_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_7_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_7_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_4_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_4_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_4_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_0_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_0_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_0_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_3_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_3_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_3_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_3_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_3_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_3_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_7_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_7_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_7_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_6_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_6_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_6_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_2_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_2_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_2_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_0_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_0_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_0_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_2_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_2_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_2_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_3_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_3_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_3_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_6_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_6_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_6_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_5_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_5_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_5_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_6_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_6_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_6_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_1_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_1_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_1_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_0_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_0_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_0_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_3_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_3_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_3_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_5_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_5_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_5_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_7_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_7_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_7_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_4_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_4_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_4_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_3_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_3_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_3_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_4_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_4_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_4_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_5_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_5_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_5_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_5_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_5_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_5_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_1_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_1_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_1_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_4_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_4_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_4_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_7_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_7_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_7_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_4_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_4_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_4_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_7_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_7_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_7_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_0_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_0_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_0_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_1_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_1_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_1_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_6_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_6_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_6_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_2_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_2_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_2_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_0_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_0_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_0_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_5_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_5_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_5_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_1_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_1_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_1_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_2_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_2_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_2_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_6_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_6_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_6_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_0_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_0_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_0_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_4_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_4_out_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_4_out_write : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_7_loc_channel : STD_LOGIC;
    signal A_cached_row_7_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ready_A_cached_row_7_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_A_cached_row_7_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_5_loc_channel : STD_LOGIC;
    signal A_cached_row_5_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ready_A_cached_row_5_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_A_cached_row_5_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_3_loc_channel : STD_LOGIC;
    signal A_cached_row_3_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ready_A_cached_row_3_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_A_cached_row_3_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_2_loc_channel : STD_LOGIC;
    signal A_cached_row_2_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ready_A_cached_row_2_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_A_cached_row_2_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_6_loc_channel : STD_LOGIC;
    signal A_cached_row_6_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ready_A_cached_row_6_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_A_cached_row_6_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_4_loc_channel : STD_LOGIC;
    signal A_cached_row_4_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ready_A_cached_row_4_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_A_cached_row_4_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_0_loc_channel : STD_LOGIC;
    signal A_cached_row_0_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ready_A_cached_row_0_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_A_cached_row_0_loc_channel_full_n : STD_LOGIC;
    signal ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_1_loc_channel : STD_LOGIC;
    signal A_cached_row_1_loc_channel_full_n : STD_LOGIC;
    signal ap_reg_ready_A_cached_row_1_loc_channel_full_n : STD_LOGIC := '0';
    signal ap_sig_ready_A_cached_row_1_loc_channel_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_start : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_done : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_continue : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_idle : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_ready : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_0_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_0_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_0_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_1_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_1_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_2_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_2_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_3_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_3_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_3_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_4_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_4_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_4_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_5_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_5_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_5_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_6_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_6_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_6_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_7_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_7_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_7_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_0_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_0_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_0_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_1_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_1_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_2_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_2_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_3_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_3_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_3_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_4_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_4_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_4_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_5_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_5_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_5_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_6_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_6_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_6_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_7_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_7_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_7_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read1 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_0_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_0_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_0_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_1_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_1_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_2_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_2_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_3_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_3_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_3_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_4_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_4_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_4_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_5_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_5_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_5_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_6_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_6_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_6_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_7_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_7_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_7_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read2 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_0_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_0_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_0_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_1_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_1_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_2_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_2_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_3_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_3_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_3_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_4_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_4_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_4_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_5_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_5_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_5_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_6_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_6_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_6_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_7_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_7_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_7_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read3 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_0_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_0_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_0_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_1_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_1_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_2_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_2_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_3_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_3_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_3_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_4_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_4_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_4_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_5_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_5_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_5_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_6_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_6_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_6_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_7_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_7_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_7_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read4 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_0_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_0_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_0_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_1_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_1_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_2_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_2_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_3_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_3_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_3_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_4_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_4_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_4_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_5_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_5_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_5_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_6_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_6_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_6_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_7_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_7_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_7_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read5 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_0_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_0_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_0_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_1_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_1_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_2_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_2_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_3_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_3_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_3_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_4_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_4_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_4_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_5_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_5_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_5_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_6_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_6_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_6_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_7_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_7_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_7_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read6 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_0_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_0_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_0_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_1_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_1_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_2_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_2_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_3_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_3_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_3_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_4_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_4_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_4_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_5_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_5_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_5_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_6_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_6_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_6_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_7_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_7_empty_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_7_read : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read7 : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_C_din : STD_LOGIC_VECTOR (31 downto 0);
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_C_full_n : STD_LOGIC;
    signal DCT_MAT_Multiply2_Loop_Col_proc291_U0_C_write : STD_LOGIC;
    signal ap_sig_hs_continue : STD_LOGIC;
    signal B_5_2235_U_ap_dummy_ce : STD_LOGIC;
    signal B_5_2235_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_2235_full_n : STD_LOGIC;
    signal B_5_2235_write : STD_LOGIC;
    signal B_5_2235_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_2235_empty_n : STD_LOGIC;
    signal B_5_2235_read : STD_LOGIC;
    signal B_1_1236_U_ap_dummy_ce : STD_LOGIC;
    signal B_1_1236_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_1236_full_n : STD_LOGIC;
    signal B_1_1236_write : STD_LOGIC;
    signal B_1_1236_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_1236_empty_n : STD_LOGIC;
    signal B_1_1236_read : STD_LOGIC;
    signal B_1_4237_U_ap_dummy_ce : STD_LOGIC;
    signal B_1_4237_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_4237_full_n : STD_LOGIC;
    signal B_1_4237_write : STD_LOGIC;
    signal B_1_4237_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_4237_empty_n : STD_LOGIC;
    signal B_1_4237_read : STD_LOGIC;
    signal B_6_5238_U_ap_dummy_ce : STD_LOGIC;
    signal B_6_5238_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_5238_full_n : STD_LOGIC;
    signal B_6_5238_write : STD_LOGIC;
    signal B_6_5238_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_5238_empty_n : STD_LOGIC;
    signal B_6_5238_read : STD_LOGIC;
    signal B_0_2239_U_ap_dummy_ce : STD_LOGIC;
    signal B_0_2239_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_0_2239_full_n : STD_LOGIC;
    signal B_0_2239_write : STD_LOGIC;
    signal B_0_2239_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_0_2239_empty_n : STD_LOGIC;
    signal B_0_2239_read : STD_LOGIC;
    signal B_7_2240_U_ap_dummy_ce : STD_LOGIC;
    signal B_7_2240_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_2240_full_n : STD_LOGIC;
    signal B_7_2240_write : STD_LOGIC;
    signal B_7_2240_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_2240_empty_n : STD_LOGIC;
    signal B_7_2240_read : STD_LOGIC;
    signal B_3_0241_U_ap_dummy_ce : STD_LOGIC;
    signal B_3_0241_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_0241_full_n : STD_LOGIC;
    signal B_3_0241_write : STD_LOGIC;
    signal B_3_0241_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_0241_empty_n : STD_LOGIC;
    signal B_3_0241_read : STD_LOGIC;
    signal B_7_5242_U_ap_dummy_ce : STD_LOGIC;
    signal B_7_5242_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_5242_full_n : STD_LOGIC;
    signal B_7_5242_write : STD_LOGIC;
    signal B_7_5242_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_5242_empty_n : STD_LOGIC;
    signal B_7_5242_read : STD_LOGIC;
    signal B_4_3243_U_ap_dummy_ce : STD_LOGIC;
    signal B_4_3243_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_3243_full_n : STD_LOGIC;
    signal B_4_3243_write : STD_LOGIC;
    signal B_4_3243_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_3243_empty_n : STD_LOGIC;
    signal B_4_3243_read : STD_LOGIC;
    signal B_1_7244_U_ap_dummy_ce : STD_LOGIC;
    signal B_1_7244_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_7244_full_n : STD_LOGIC;
    signal B_1_7244_write : STD_LOGIC;
    signal B_1_7244_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_7244_empty_n : STD_LOGIC;
    signal B_1_7244_read : STD_LOGIC;
    signal B_5_3245_U_ap_dummy_ce : STD_LOGIC;
    signal B_5_3245_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_3245_full_n : STD_LOGIC;
    signal B_5_3245_write : STD_LOGIC;
    signal B_5_3245_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_3245_empty_n : STD_LOGIC;
    signal B_5_3245_read : STD_LOGIC;
    signal B_7_7246_U_ap_dummy_ce : STD_LOGIC;
    signal B_7_7246_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_7246_full_n : STD_LOGIC;
    signal B_7_7246_write : STD_LOGIC;
    signal B_7_7246_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_7246_empty_n : STD_LOGIC;
    signal B_7_7246_read : STD_LOGIC;
    signal B_7_0247_U_ap_dummy_ce : STD_LOGIC;
    signal B_7_0247_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_0247_full_n : STD_LOGIC;
    signal B_7_0247_write : STD_LOGIC;
    signal B_7_0247_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_0247_empty_n : STD_LOGIC;
    signal B_7_0247_read : STD_LOGIC;
    signal B_3_6248_U_ap_dummy_ce : STD_LOGIC;
    signal B_3_6248_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_6248_full_n : STD_LOGIC;
    signal B_3_6248_write : STD_LOGIC;
    signal B_3_6248_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_6248_empty_n : STD_LOGIC;
    signal B_3_6248_read : STD_LOGIC;
    signal B_1_2249_U_ap_dummy_ce : STD_LOGIC;
    signal B_1_2249_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_2249_full_n : STD_LOGIC;
    signal B_1_2249_write : STD_LOGIC;
    signal B_1_2249_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_2249_empty_n : STD_LOGIC;
    signal B_1_2249_read : STD_LOGIC;
    signal B_0_7250_U_ap_dummy_ce : STD_LOGIC;
    signal B_0_7250_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_0_7250_full_n : STD_LOGIC;
    signal B_0_7250_write : STD_LOGIC;
    signal B_0_7250_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_0_7250_empty_n : STD_LOGIC;
    signal B_0_7250_read : STD_LOGIC;
    signal B_1_6251_U_ap_dummy_ce : STD_LOGIC;
    signal B_1_6251_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_6251_full_n : STD_LOGIC;
    signal B_1_6251_write : STD_LOGIC;
    signal B_1_6251_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_6251_empty_n : STD_LOGIC;
    signal B_1_6251_read : STD_LOGIC;
    signal B_7_3252_U_ap_dummy_ce : STD_LOGIC;
    signal B_7_3252_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_3252_full_n : STD_LOGIC;
    signal B_7_3252_write : STD_LOGIC;
    signal B_7_3252_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_3252_empty_n : STD_LOGIC;
    signal B_7_3252_read : STD_LOGIC;
    signal B_4_1253_U_ap_dummy_ce : STD_LOGIC;
    signal B_4_1253_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_1253_full_n : STD_LOGIC;
    signal B_4_1253_write : STD_LOGIC;
    signal B_4_1253_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_1253_empty_n : STD_LOGIC;
    signal B_4_1253_read : STD_LOGIC;
    signal B_6_1254_U_ap_dummy_ce : STD_LOGIC;
    signal B_6_1254_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_1254_full_n : STD_LOGIC;
    signal B_6_1254_write : STD_LOGIC;
    signal B_6_1254_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_1254_empty_n : STD_LOGIC;
    signal B_6_1254_read : STD_LOGIC;
    signal B_2_1255_U_ap_dummy_ce : STD_LOGIC;
    signal B_2_1255_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_1255_full_n : STD_LOGIC;
    signal B_2_1255_write : STD_LOGIC;
    signal B_2_1255_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_1255_empty_n : STD_LOGIC;
    signal B_2_1255_read : STD_LOGIC;
    signal B_5_6256_U_ap_dummy_ce : STD_LOGIC;
    signal B_5_6256_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_6256_full_n : STD_LOGIC;
    signal B_5_6256_write : STD_LOGIC;
    signal B_5_6256_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_6256_empty_n : STD_LOGIC;
    signal B_5_6256_read : STD_LOGIC;
    signal B_2_5257_U_ap_dummy_ce : STD_LOGIC;
    signal B_2_5257_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_5257_full_n : STD_LOGIC;
    signal B_2_5257_write : STD_LOGIC;
    signal B_2_5257_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_5257_empty_n : STD_LOGIC;
    signal B_2_5257_read : STD_LOGIC;
    signal B_2_4258_U_ap_dummy_ce : STD_LOGIC;
    signal B_2_4258_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_4258_full_n : STD_LOGIC;
    signal B_2_4258_write : STD_LOGIC;
    signal B_2_4258_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_4258_empty_n : STD_LOGIC;
    signal B_2_4258_read : STD_LOGIC;
    signal B_4_7259_U_ap_dummy_ce : STD_LOGIC;
    signal B_4_7259_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_7259_full_n : STD_LOGIC;
    signal B_4_7259_write : STD_LOGIC;
    signal B_4_7259_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_7259_empty_n : STD_LOGIC;
    signal B_4_7259_read : STD_LOGIC;
    signal B_0_4260_U_ap_dummy_ce : STD_LOGIC;
    signal B_0_4260_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_0_4260_full_n : STD_LOGIC;
    signal B_0_4260_write : STD_LOGIC;
    signal B_0_4260_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_0_4260_empty_n : STD_LOGIC;
    signal B_0_4260_read : STD_LOGIC;
    signal B_2_0261_U_ap_dummy_ce : STD_LOGIC;
    signal B_2_0261_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_0261_full_n : STD_LOGIC;
    signal B_2_0261_write : STD_LOGIC;
    signal B_2_0261_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_0261_empty_n : STD_LOGIC;
    signal B_2_0261_read : STD_LOGIC;
    signal B_6_3262_U_ap_dummy_ce : STD_LOGIC;
    signal B_6_3262_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_3262_full_n : STD_LOGIC;
    signal B_6_3262_write : STD_LOGIC;
    signal B_6_3262_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_3262_empty_n : STD_LOGIC;
    signal B_6_3262_read : STD_LOGIC;
    signal B_0_3263_U_ap_dummy_ce : STD_LOGIC;
    signal B_0_3263_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_0_3263_full_n : STD_LOGIC;
    signal B_0_3263_write : STD_LOGIC;
    signal B_0_3263_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_0_3263_empty_n : STD_LOGIC;
    signal B_0_3263_read : STD_LOGIC;
    signal B_3_7264_U_ap_dummy_ce : STD_LOGIC;
    signal B_3_7264_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_7264_full_n : STD_LOGIC;
    signal B_3_7264_write : STD_LOGIC;
    signal B_3_7264_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_7264_empty_n : STD_LOGIC;
    signal B_3_7264_read : STD_LOGIC;
    signal B_6_6265_U_ap_dummy_ce : STD_LOGIC;
    signal B_6_6265_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_6265_full_n : STD_LOGIC;
    signal B_6_6265_write : STD_LOGIC;
    signal B_6_6265_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_6265_empty_n : STD_LOGIC;
    signal B_6_6265_read : STD_LOGIC;
    signal B_2_2266_U_ap_dummy_ce : STD_LOGIC;
    signal B_2_2266_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_2266_full_n : STD_LOGIC;
    signal B_2_2266_write : STD_LOGIC;
    signal B_2_2266_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_2266_empty_n : STD_LOGIC;
    signal B_2_2266_read : STD_LOGIC;
    signal B_4_0267_U_ap_dummy_ce : STD_LOGIC;
    signal B_4_0267_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_0267_full_n : STD_LOGIC;
    signal B_4_0267_write : STD_LOGIC;
    signal B_4_0267_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_0267_empty_n : STD_LOGIC;
    signal B_4_0267_read : STD_LOGIC;
    signal B_4_2268_U_ap_dummy_ce : STD_LOGIC;
    signal B_4_2268_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_2268_full_n : STD_LOGIC;
    signal B_4_2268_write : STD_LOGIC;
    signal B_4_2268_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_2268_empty_n : STD_LOGIC;
    signal B_4_2268_read : STD_LOGIC;
    signal B_2_3269_U_ap_dummy_ce : STD_LOGIC;
    signal B_2_3269_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_3269_full_n : STD_LOGIC;
    signal B_2_3269_write : STD_LOGIC;
    signal B_2_3269_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_3269_empty_n : STD_LOGIC;
    signal B_2_3269_read : STD_LOGIC;
    signal B_4_6270_U_ap_dummy_ce : STD_LOGIC;
    signal B_4_6270_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_6270_full_n : STD_LOGIC;
    signal B_4_6270_write : STD_LOGIC;
    signal B_4_6270_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_6270_empty_n : STD_LOGIC;
    signal B_4_6270_read : STD_LOGIC;
    signal B_1_5271_U_ap_dummy_ce : STD_LOGIC;
    signal B_1_5271_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_5271_full_n : STD_LOGIC;
    signal B_1_5271_write : STD_LOGIC;
    signal B_1_5271_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_5271_empty_n : STD_LOGIC;
    signal B_1_5271_read : STD_LOGIC;
    signal B_0_6272_U_ap_dummy_ce : STD_LOGIC;
    signal B_0_6272_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_0_6272_full_n : STD_LOGIC;
    signal B_0_6272_write : STD_LOGIC;
    signal B_0_6272_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_0_6272_empty_n : STD_LOGIC;
    signal B_0_6272_read : STD_LOGIC;
    signal B_3_1273_U_ap_dummy_ce : STD_LOGIC;
    signal B_3_1273_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_1273_full_n : STD_LOGIC;
    signal B_3_1273_write : STD_LOGIC;
    signal B_3_1273_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_1273_empty_n : STD_LOGIC;
    signal B_3_1273_read : STD_LOGIC;
    signal B_0_0274_U_ap_dummy_ce : STD_LOGIC;
    signal B_0_0274_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_0_0274_full_n : STD_LOGIC;
    signal B_0_0274_write : STD_LOGIC;
    signal B_0_0274_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_0_0274_empty_n : STD_LOGIC;
    signal B_0_0274_read : STD_LOGIC;
    signal B_1_3275_U_ap_dummy_ce : STD_LOGIC;
    signal B_1_3275_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_3275_full_n : STD_LOGIC;
    signal B_1_3275_write : STD_LOGIC;
    signal B_1_3275_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_3275_empty_n : STD_LOGIC;
    signal B_1_3275_read : STD_LOGIC;
    signal B_0_5276_U_ap_dummy_ce : STD_LOGIC;
    signal B_0_5276_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_0_5276_full_n : STD_LOGIC;
    signal B_0_5276_write : STD_LOGIC;
    signal B_0_5276_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_0_5276_empty_n : STD_LOGIC;
    signal B_0_5276_read : STD_LOGIC;
    signal B_2_7277_U_ap_dummy_ce : STD_LOGIC;
    signal B_2_7277_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_7277_full_n : STD_LOGIC;
    signal B_2_7277_write : STD_LOGIC;
    signal B_2_7277_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_7277_empty_n : STD_LOGIC;
    signal B_2_7277_read : STD_LOGIC;
    signal B_5_4278_U_ap_dummy_ce : STD_LOGIC;
    signal B_5_4278_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_4278_full_n : STD_LOGIC;
    signal B_5_4278_write : STD_LOGIC;
    signal B_5_4278_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_4278_empty_n : STD_LOGIC;
    signal B_5_4278_read : STD_LOGIC;
    signal B_3_3279_U_ap_dummy_ce : STD_LOGIC;
    signal B_3_3279_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_3279_full_n : STD_LOGIC;
    signal B_3_3279_write : STD_LOGIC;
    signal B_3_3279_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_3279_empty_n : STD_LOGIC;
    signal B_3_3279_read : STD_LOGIC;
    signal B_7_4280_U_ap_dummy_ce : STD_LOGIC;
    signal B_7_4280_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_4280_full_n : STD_LOGIC;
    signal B_7_4280_write : STD_LOGIC;
    signal B_7_4280_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_4280_empty_n : STD_LOGIC;
    signal B_7_4280_read : STD_LOGIC;
    signal B_5_5281_U_ap_dummy_ce : STD_LOGIC;
    signal B_5_5281_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_5281_full_n : STD_LOGIC;
    signal B_5_5281_write : STD_LOGIC;
    signal B_5_5281_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_5281_empty_n : STD_LOGIC;
    signal B_5_5281_read : STD_LOGIC;
    signal B_3_5282_U_ap_dummy_ce : STD_LOGIC;
    signal B_3_5282_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_5282_full_n : STD_LOGIC;
    signal B_3_5282_write : STD_LOGIC;
    signal B_3_5282_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_5282_empty_n : STD_LOGIC;
    signal B_3_5282_read : STD_LOGIC;
    signal B_7_1283_U_ap_dummy_ce : STD_LOGIC;
    signal B_7_1283_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_1283_full_n : STD_LOGIC;
    signal B_7_1283_write : STD_LOGIC;
    signal B_7_1283_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_1283_empty_n : STD_LOGIC;
    signal B_7_1283_read : STD_LOGIC;
    signal B_4_4284_U_ap_dummy_ce : STD_LOGIC;
    signal B_4_4284_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_4284_full_n : STD_LOGIC;
    signal B_4_4284_write : STD_LOGIC;
    signal B_4_4284_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_4284_empty_n : STD_LOGIC;
    signal B_4_4284_read : STD_LOGIC;
    signal B_6_7285_U_ap_dummy_ce : STD_LOGIC;
    signal B_6_7285_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_7285_full_n : STD_LOGIC;
    signal B_6_7285_write : STD_LOGIC;
    signal B_6_7285_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_7285_empty_n : STD_LOGIC;
    signal B_6_7285_read : STD_LOGIC;
    signal B_3_4286_U_ap_dummy_ce : STD_LOGIC;
    signal B_3_4286_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_4286_full_n : STD_LOGIC;
    signal B_3_4286_write : STD_LOGIC;
    signal B_3_4286_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_4286_empty_n : STD_LOGIC;
    signal B_3_4286_read : STD_LOGIC;
    signal B_5_7287_U_ap_dummy_ce : STD_LOGIC;
    signal B_5_7287_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_7287_full_n : STD_LOGIC;
    signal B_5_7287_write : STD_LOGIC;
    signal B_5_7287_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_7287_empty_n : STD_LOGIC;
    signal B_5_7287_read : STD_LOGIC;
    signal B_6_0288_U_ap_dummy_ce : STD_LOGIC;
    signal B_6_0288_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_0288_full_n : STD_LOGIC;
    signal B_6_0288_write : STD_LOGIC;
    signal B_6_0288_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_0288_empty_n : STD_LOGIC;
    signal B_6_0288_read : STD_LOGIC;
    signal B_0_1289_U_ap_dummy_ce : STD_LOGIC;
    signal B_0_1289_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_0_1289_full_n : STD_LOGIC;
    signal B_0_1289_write : STD_LOGIC;
    signal B_0_1289_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_0_1289_empty_n : STD_LOGIC;
    signal B_0_1289_read : STD_LOGIC;
    signal B_2_6290_U_ap_dummy_ce : STD_LOGIC;
    signal B_2_6290_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_6290_full_n : STD_LOGIC;
    signal B_2_6290_write : STD_LOGIC;
    signal B_2_6290_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_6290_empty_n : STD_LOGIC;
    signal B_2_6290_read : STD_LOGIC;
    signal B_3_2291_U_ap_dummy_ce : STD_LOGIC;
    signal B_3_2291_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_2291_full_n : STD_LOGIC;
    signal B_3_2291_write : STD_LOGIC;
    signal B_3_2291_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_2291_empty_n : STD_LOGIC;
    signal B_3_2291_read : STD_LOGIC;
    signal B_5_0292_U_ap_dummy_ce : STD_LOGIC;
    signal B_5_0292_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_0292_full_n : STD_LOGIC;
    signal B_5_0292_write : STD_LOGIC;
    signal B_5_0292_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_0292_empty_n : STD_LOGIC;
    signal B_5_0292_read : STD_LOGIC;
    signal B_4_5293_U_ap_dummy_ce : STD_LOGIC;
    signal B_4_5293_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_5293_full_n : STD_LOGIC;
    signal B_4_5293_write : STD_LOGIC;
    signal B_4_5293_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_5293_empty_n : STD_LOGIC;
    signal B_4_5293_read : STD_LOGIC;
    signal B_5_1294_U_ap_dummy_ce : STD_LOGIC;
    signal B_5_1294_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_1294_full_n : STD_LOGIC;
    signal B_5_1294_write : STD_LOGIC;
    signal B_5_1294_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_1294_empty_n : STD_LOGIC;
    signal B_5_1294_read : STD_LOGIC;
    signal B_6_2295_U_ap_dummy_ce : STD_LOGIC;
    signal B_6_2295_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_2295_full_n : STD_LOGIC;
    signal B_6_2295_write : STD_LOGIC;
    signal B_6_2295_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_2295_empty_n : STD_LOGIC;
    signal B_6_2295_read : STD_LOGIC;
    signal B_7_6296_U_ap_dummy_ce : STD_LOGIC;
    signal B_7_6296_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_6296_full_n : STD_LOGIC;
    signal B_7_6296_write : STD_LOGIC;
    signal B_7_6296_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_6296_empty_n : STD_LOGIC;
    signal B_7_6296_read : STD_LOGIC;
    signal B_1_0297_U_ap_dummy_ce : STD_LOGIC;
    signal B_1_0297_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_0297_full_n : STD_LOGIC;
    signal B_1_0297_write : STD_LOGIC;
    signal B_1_0297_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_0297_empty_n : STD_LOGIC;
    signal B_1_0297_read : STD_LOGIC;
    signal B_6_4298_U_ap_dummy_ce : STD_LOGIC;
    signal B_6_4298_din : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_4298_full_n : STD_LOGIC;
    signal B_6_4298_write : STD_LOGIC;
    signal B_6_4298_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_4298_empty_n : STD_LOGIC;
    signal B_6_4298_read : STD_LOGIC;
    signal A_cached_row_7_loc_channel_U_ap_dummy_ce : STD_LOGIC;
    signal A_cached_row_7_loc_channel_din : STD_LOGIC_VECTOR (31 downto 0);
    signal A_cached_row_7_loc_channel_write : STD_LOGIC;
    signal A_cached_row_7_loc_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal A_cached_row_7_loc_channel_empty_n : STD_LOGIC;
    signal A_cached_row_7_loc_channel_read : STD_LOGIC;
    signal A_cached_row_6_loc_channel_U_ap_dummy_ce : STD_LOGIC;
    signal A_cached_row_6_loc_channel_din : STD_LOGIC_VECTOR (31 downto 0);
    signal A_cached_row_6_loc_channel_write : STD_LOGIC;
    signal A_cached_row_6_loc_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal A_cached_row_6_loc_channel_empty_n : STD_LOGIC;
    signal A_cached_row_6_loc_channel_read : STD_LOGIC;
    signal A_cached_row_5_loc_channel_U_ap_dummy_ce : STD_LOGIC;
    signal A_cached_row_5_loc_channel_din : STD_LOGIC_VECTOR (31 downto 0);
    signal A_cached_row_5_loc_channel_write : STD_LOGIC;
    signal A_cached_row_5_loc_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal A_cached_row_5_loc_channel_empty_n : STD_LOGIC;
    signal A_cached_row_5_loc_channel_read : STD_LOGIC;
    signal A_cached_row_4_loc_channel_U_ap_dummy_ce : STD_LOGIC;
    signal A_cached_row_4_loc_channel_din : STD_LOGIC_VECTOR (31 downto 0);
    signal A_cached_row_4_loc_channel_write : STD_LOGIC;
    signal A_cached_row_4_loc_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal A_cached_row_4_loc_channel_empty_n : STD_LOGIC;
    signal A_cached_row_4_loc_channel_read : STD_LOGIC;
    signal A_cached_row_3_loc_channel_U_ap_dummy_ce : STD_LOGIC;
    signal A_cached_row_3_loc_channel_din : STD_LOGIC_VECTOR (31 downto 0);
    signal A_cached_row_3_loc_channel_write : STD_LOGIC;
    signal A_cached_row_3_loc_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal A_cached_row_3_loc_channel_empty_n : STD_LOGIC;
    signal A_cached_row_3_loc_channel_read : STD_LOGIC;
    signal A_cached_row_2_loc_channel_U_ap_dummy_ce : STD_LOGIC;
    signal A_cached_row_2_loc_channel_din : STD_LOGIC_VECTOR (31 downto 0);
    signal A_cached_row_2_loc_channel_write : STD_LOGIC;
    signal A_cached_row_2_loc_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal A_cached_row_2_loc_channel_empty_n : STD_LOGIC;
    signal A_cached_row_2_loc_channel_read : STD_LOGIC;
    signal A_cached_row_1_loc_channel_U_ap_dummy_ce : STD_LOGIC;
    signal A_cached_row_1_loc_channel_din : STD_LOGIC_VECTOR (31 downto 0);
    signal A_cached_row_1_loc_channel_write : STD_LOGIC;
    signal A_cached_row_1_loc_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal A_cached_row_1_loc_channel_empty_n : STD_LOGIC;
    signal A_cached_row_1_loc_channel_read : STD_LOGIC;
    signal A_cached_row_0_loc_channel_U_ap_dummy_ce : STD_LOGIC;
    signal A_cached_row_0_loc_channel_din : STD_LOGIC_VECTOR (31 downto 0);
    signal A_cached_row_0_loc_channel_write : STD_LOGIC;
    signal A_cached_row_0_loc_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal A_cached_row_0_loc_channel_empty_n : STD_LOGIC;
    signal A_cached_row_0_loc_channel_read : STD_LOGIC;
    signal ap_reg_procdone_DCT_MAT_Multiply2_Loop_Row_proc525_U0 : STD_LOGIC := '0';
    signal ap_sig_hs_done : STD_LOGIC;
    signal ap_reg_procdone_DCT_MAT_Multiply2_Loop_Col_proc291_U0 : STD_LOGIC := '0';
    signal ap_CS : STD_LOGIC;
    signal ap_sig_top_allready : STD_LOGIC;

    component DCT_MAT_Multiply2_Loop_Row_proc525 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read24 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read25 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read26 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read27 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read28 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read29 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read30 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read31 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read32 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read34 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read35 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read36 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read37 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read38 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read39 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read40 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read41 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read42 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read43 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read44 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read45 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read46 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read48 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read49 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read50 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read51 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read55 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read56 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read57 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read58 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read59 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read60 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read62 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read63 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read64 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read65 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read67 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read69 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read70 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read72 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read73 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read74 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read75 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read76 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read77 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read78 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read79 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read80 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read81 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read82 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read83 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read84 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read85 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_5_2_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_5_2_out_full_n : IN STD_LOGIC;
        B_5_2_out_write : OUT STD_LOGIC;
        B_1_1_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_1_1_out_full_n : IN STD_LOGIC;
        B_1_1_out_write : OUT STD_LOGIC;
        B_1_4_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_1_4_out_full_n : IN STD_LOGIC;
        B_1_4_out_write : OUT STD_LOGIC;
        B_6_5_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_6_5_out_full_n : IN STD_LOGIC;
        B_6_5_out_write : OUT STD_LOGIC;
        B_0_2_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_0_2_out_full_n : IN STD_LOGIC;
        B_0_2_out_write : OUT STD_LOGIC;
        B_7_2_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_7_2_out_full_n : IN STD_LOGIC;
        B_7_2_out_write : OUT STD_LOGIC;
        B_3_0_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_3_0_out_full_n : IN STD_LOGIC;
        B_3_0_out_write : OUT STD_LOGIC;
        B_7_5_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_7_5_out_full_n : IN STD_LOGIC;
        B_7_5_out_write : OUT STD_LOGIC;
        B_4_3_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_4_3_out_full_n : IN STD_LOGIC;
        B_4_3_out_write : OUT STD_LOGIC;
        B_1_7_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_1_7_out_full_n : IN STD_LOGIC;
        B_1_7_out_write : OUT STD_LOGIC;
        B_5_3_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_5_3_out_full_n : IN STD_LOGIC;
        B_5_3_out_write : OUT STD_LOGIC;
        B_7_7_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_7_7_out_full_n : IN STD_LOGIC;
        B_7_7_out_write : OUT STD_LOGIC;
        B_7_0_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_7_0_out_full_n : IN STD_LOGIC;
        B_7_0_out_write : OUT STD_LOGIC;
        B_3_6_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_3_6_out_full_n : IN STD_LOGIC;
        B_3_6_out_write : OUT STD_LOGIC;
        B_1_2_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_1_2_out_full_n : IN STD_LOGIC;
        B_1_2_out_write : OUT STD_LOGIC;
        B_0_7_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_0_7_out_full_n : IN STD_LOGIC;
        B_0_7_out_write : OUT STD_LOGIC;
        B_1_6_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_1_6_out_full_n : IN STD_LOGIC;
        B_1_6_out_write : OUT STD_LOGIC;
        B_7_3_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_7_3_out_full_n : IN STD_LOGIC;
        B_7_3_out_write : OUT STD_LOGIC;
        B_4_1_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_4_1_out_full_n : IN STD_LOGIC;
        B_4_1_out_write : OUT STD_LOGIC;
        B_6_1_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_6_1_out_full_n : IN STD_LOGIC;
        B_6_1_out_write : OUT STD_LOGIC;
        B_2_1_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_2_1_out_full_n : IN STD_LOGIC;
        B_2_1_out_write : OUT STD_LOGIC;
        B_5_6_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_5_6_out_full_n : IN STD_LOGIC;
        B_5_6_out_write : OUT STD_LOGIC;
        B_2_5_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_2_5_out_full_n : IN STD_LOGIC;
        B_2_5_out_write : OUT STD_LOGIC;
        B_2_4_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_2_4_out_full_n : IN STD_LOGIC;
        B_2_4_out_write : OUT STD_LOGIC;
        B_4_7_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_4_7_out_full_n : IN STD_LOGIC;
        B_4_7_out_write : OUT STD_LOGIC;
        B_0_4_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_0_4_out_full_n : IN STD_LOGIC;
        B_0_4_out_write : OUT STD_LOGIC;
        B_2_0_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_2_0_out_full_n : IN STD_LOGIC;
        B_2_0_out_write : OUT STD_LOGIC;
        B_6_3_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_6_3_out_full_n : IN STD_LOGIC;
        B_6_3_out_write : OUT STD_LOGIC;
        B_0_3_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_0_3_out_full_n : IN STD_LOGIC;
        B_0_3_out_write : OUT STD_LOGIC;
        B_3_7_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_3_7_out_full_n : IN STD_LOGIC;
        B_3_7_out_write : OUT STD_LOGIC;
        B_6_6_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_6_6_out_full_n : IN STD_LOGIC;
        B_6_6_out_write : OUT STD_LOGIC;
        B_2_2_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_2_2_out_full_n : IN STD_LOGIC;
        B_2_2_out_write : OUT STD_LOGIC;
        B_4_0_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_4_0_out_full_n : IN STD_LOGIC;
        B_4_0_out_write : OUT STD_LOGIC;
        B_4_2_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_4_2_out_full_n : IN STD_LOGIC;
        B_4_2_out_write : OUT STD_LOGIC;
        B_2_3_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_2_3_out_full_n : IN STD_LOGIC;
        B_2_3_out_write : OUT STD_LOGIC;
        B_4_6_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_4_6_out_full_n : IN STD_LOGIC;
        B_4_6_out_write : OUT STD_LOGIC;
        B_1_5_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_1_5_out_full_n : IN STD_LOGIC;
        B_1_5_out_write : OUT STD_LOGIC;
        B_0_6_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_0_6_out_full_n : IN STD_LOGIC;
        B_0_6_out_write : OUT STD_LOGIC;
        B_3_1_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_3_1_out_full_n : IN STD_LOGIC;
        B_3_1_out_write : OUT STD_LOGIC;
        B_0_0_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_0_0_out_full_n : IN STD_LOGIC;
        B_0_0_out_write : OUT STD_LOGIC;
        B_1_3_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_1_3_out_full_n : IN STD_LOGIC;
        B_1_3_out_write : OUT STD_LOGIC;
        B_0_5_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_0_5_out_full_n : IN STD_LOGIC;
        B_0_5_out_write : OUT STD_LOGIC;
        B_2_7_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_2_7_out_full_n : IN STD_LOGIC;
        B_2_7_out_write : OUT STD_LOGIC;
        B_5_4_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_5_4_out_full_n : IN STD_LOGIC;
        B_5_4_out_write : OUT STD_LOGIC;
        B_3_3_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_3_3_out_full_n : IN STD_LOGIC;
        B_3_3_out_write : OUT STD_LOGIC;
        B_7_4_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_7_4_out_full_n : IN STD_LOGIC;
        B_7_4_out_write : OUT STD_LOGIC;
        B_5_5_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_5_5_out_full_n : IN STD_LOGIC;
        B_5_5_out_write : OUT STD_LOGIC;
        B_3_5_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_3_5_out_full_n : IN STD_LOGIC;
        B_3_5_out_write : OUT STD_LOGIC;
        B_7_1_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_7_1_out_full_n : IN STD_LOGIC;
        B_7_1_out_write : OUT STD_LOGIC;
        B_4_4_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_4_4_out_full_n : IN STD_LOGIC;
        B_4_4_out_write : OUT STD_LOGIC;
        B_6_7_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_6_7_out_full_n : IN STD_LOGIC;
        B_6_7_out_write : OUT STD_LOGIC;
        B_3_4_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_3_4_out_full_n : IN STD_LOGIC;
        B_3_4_out_write : OUT STD_LOGIC;
        B_5_7_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_5_7_out_full_n : IN STD_LOGIC;
        B_5_7_out_write : OUT STD_LOGIC;
        B_6_0_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_6_0_out_full_n : IN STD_LOGIC;
        B_6_0_out_write : OUT STD_LOGIC;
        B_0_1_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_0_1_out_full_n : IN STD_LOGIC;
        B_0_1_out_write : OUT STD_LOGIC;
        B_2_6_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_2_6_out_full_n : IN STD_LOGIC;
        B_2_6_out_write : OUT STD_LOGIC;
        B_3_2_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_3_2_out_full_n : IN STD_LOGIC;
        B_3_2_out_write : OUT STD_LOGIC;
        B_5_0_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_5_0_out_full_n : IN STD_LOGIC;
        B_5_0_out_write : OUT STD_LOGIC;
        B_4_5_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_4_5_out_full_n : IN STD_LOGIC;
        B_4_5_out_write : OUT STD_LOGIC;
        B_5_1_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_5_1_out_full_n : IN STD_LOGIC;
        B_5_1_out_write : OUT STD_LOGIC;
        B_6_2_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_6_2_out_full_n : IN STD_LOGIC;
        B_6_2_out_write : OUT STD_LOGIC;
        B_7_6_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_7_6_out_full_n : IN STD_LOGIC;
        B_7_6_out_write : OUT STD_LOGIC;
        B_1_0_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_1_0_out_full_n : IN STD_LOGIC;
        B_1_0_out_write : OUT STD_LOGIC;
        B_6_4_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_6_4_out_full_n : IN STD_LOGIC;
        B_6_4_out_write : OUT STD_LOGIC;
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DCT_MAT_Multiply2_Loop_Col_proc291 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        B_0_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_0_0_empty_n : IN STD_LOGIC;
        B_0_0_read : OUT STD_LOGIC;
        B_0_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_0_1_empty_n : IN STD_LOGIC;
        B_0_1_read : OUT STD_LOGIC;
        B_0_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_0_2_empty_n : IN STD_LOGIC;
        B_0_2_read : OUT STD_LOGIC;
        B_0_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_0_3_empty_n : IN STD_LOGIC;
        B_0_3_read : OUT STD_LOGIC;
        B_0_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_0_4_empty_n : IN STD_LOGIC;
        B_0_4_read : OUT STD_LOGIC;
        B_0_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_0_5_empty_n : IN STD_LOGIC;
        B_0_5_read : OUT STD_LOGIC;
        B_0_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_0_6_empty_n : IN STD_LOGIC;
        B_0_6_read : OUT STD_LOGIC;
        B_0_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_0_7_empty_n : IN STD_LOGIC;
        B_0_7_read : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        B_1_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_1_0_empty_n : IN STD_LOGIC;
        B_1_0_read : OUT STD_LOGIC;
        B_1_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_1_1_empty_n : IN STD_LOGIC;
        B_1_1_read : OUT STD_LOGIC;
        B_1_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_1_2_empty_n : IN STD_LOGIC;
        B_1_2_read : OUT STD_LOGIC;
        B_1_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_1_3_empty_n : IN STD_LOGIC;
        B_1_3_read : OUT STD_LOGIC;
        B_1_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_1_4_empty_n : IN STD_LOGIC;
        B_1_4_read : OUT STD_LOGIC;
        B_1_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_1_5_empty_n : IN STD_LOGIC;
        B_1_5_read : OUT STD_LOGIC;
        B_1_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_1_6_empty_n : IN STD_LOGIC;
        B_1_6_read : OUT STD_LOGIC;
        B_1_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_1_7_empty_n : IN STD_LOGIC;
        B_1_7_read : OUT STD_LOGIC;
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_2_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_2_0_empty_n : IN STD_LOGIC;
        B_2_0_read : OUT STD_LOGIC;
        B_2_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_2_1_empty_n : IN STD_LOGIC;
        B_2_1_read : OUT STD_LOGIC;
        B_2_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_2_2_empty_n : IN STD_LOGIC;
        B_2_2_read : OUT STD_LOGIC;
        B_2_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_2_3_empty_n : IN STD_LOGIC;
        B_2_3_read : OUT STD_LOGIC;
        B_2_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_2_4_empty_n : IN STD_LOGIC;
        B_2_4_read : OUT STD_LOGIC;
        B_2_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_2_5_empty_n : IN STD_LOGIC;
        B_2_5_read : OUT STD_LOGIC;
        B_2_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_2_6_empty_n : IN STD_LOGIC;
        B_2_6_read : OUT STD_LOGIC;
        B_2_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_2_7_empty_n : IN STD_LOGIC;
        B_2_7_read : OUT STD_LOGIC;
        p_read2 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_3_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_3_0_empty_n : IN STD_LOGIC;
        B_3_0_read : OUT STD_LOGIC;
        B_3_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_3_1_empty_n : IN STD_LOGIC;
        B_3_1_read : OUT STD_LOGIC;
        B_3_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_3_2_empty_n : IN STD_LOGIC;
        B_3_2_read : OUT STD_LOGIC;
        B_3_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_3_3_empty_n : IN STD_LOGIC;
        B_3_3_read : OUT STD_LOGIC;
        B_3_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_3_4_empty_n : IN STD_LOGIC;
        B_3_4_read : OUT STD_LOGIC;
        B_3_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_3_5_empty_n : IN STD_LOGIC;
        B_3_5_read : OUT STD_LOGIC;
        B_3_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_3_6_empty_n : IN STD_LOGIC;
        B_3_6_read : OUT STD_LOGIC;
        B_3_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_3_7_empty_n : IN STD_LOGIC;
        B_3_7_read : OUT STD_LOGIC;
        p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_4_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_4_0_empty_n : IN STD_LOGIC;
        B_4_0_read : OUT STD_LOGIC;
        B_4_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_4_1_empty_n : IN STD_LOGIC;
        B_4_1_read : OUT STD_LOGIC;
        B_4_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_4_2_empty_n : IN STD_LOGIC;
        B_4_2_read : OUT STD_LOGIC;
        B_4_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_4_3_empty_n : IN STD_LOGIC;
        B_4_3_read : OUT STD_LOGIC;
        B_4_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_4_4_empty_n : IN STD_LOGIC;
        B_4_4_read : OUT STD_LOGIC;
        B_4_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_4_5_empty_n : IN STD_LOGIC;
        B_4_5_read : OUT STD_LOGIC;
        B_4_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_4_6_empty_n : IN STD_LOGIC;
        B_4_6_read : OUT STD_LOGIC;
        B_4_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_4_7_empty_n : IN STD_LOGIC;
        B_4_7_read : OUT STD_LOGIC;
        p_read4 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_5_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_5_0_empty_n : IN STD_LOGIC;
        B_5_0_read : OUT STD_LOGIC;
        B_5_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_5_1_empty_n : IN STD_LOGIC;
        B_5_1_read : OUT STD_LOGIC;
        B_5_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_5_2_empty_n : IN STD_LOGIC;
        B_5_2_read : OUT STD_LOGIC;
        B_5_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_5_3_empty_n : IN STD_LOGIC;
        B_5_3_read : OUT STD_LOGIC;
        B_5_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_5_4_empty_n : IN STD_LOGIC;
        B_5_4_read : OUT STD_LOGIC;
        B_5_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_5_5_empty_n : IN STD_LOGIC;
        B_5_5_read : OUT STD_LOGIC;
        B_5_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_5_6_empty_n : IN STD_LOGIC;
        B_5_6_read : OUT STD_LOGIC;
        B_5_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_5_7_empty_n : IN STD_LOGIC;
        B_5_7_read : OUT STD_LOGIC;
        p_read5 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_6_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_6_0_empty_n : IN STD_LOGIC;
        B_6_0_read : OUT STD_LOGIC;
        B_6_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_6_1_empty_n : IN STD_LOGIC;
        B_6_1_read : OUT STD_LOGIC;
        B_6_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_6_2_empty_n : IN STD_LOGIC;
        B_6_2_read : OUT STD_LOGIC;
        B_6_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_6_3_empty_n : IN STD_LOGIC;
        B_6_3_read : OUT STD_LOGIC;
        B_6_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_6_4_empty_n : IN STD_LOGIC;
        B_6_4_read : OUT STD_LOGIC;
        B_6_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_6_5_empty_n : IN STD_LOGIC;
        B_6_5_read : OUT STD_LOGIC;
        B_6_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_6_6_empty_n : IN STD_LOGIC;
        B_6_6_read : OUT STD_LOGIC;
        B_6_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_6_7_empty_n : IN STD_LOGIC;
        B_6_7_read : OUT STD_LOGIC;
        p_read6 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_7_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_7_0_empty_n : IN STD_LOGIC;
        B_7_0_read : OUT STD_LOGIC;
        B_7_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_7_1_empty_n : IN STD_LOGIC;
        B_7_1_read : OUT STD_LOGIC;
        B_7_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_7_2_empty_n : IN STD_LOGIC;
        B_7_2_read : OUT STD_LOGIC;
        B_7_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_7_3_empty_n : IN STD_LOGIC;
        B_7_3_read : OUT STD_LOGIC;
        B_7_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_7_4_empty_n : IN STD_LOGIC;
        B_7_4_read : OUT STD_LOGIC;
        B_7_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_7_5_empty_n : IN STD_LOGIC;
        B_7_5_read : OUT STD_LOGIC;
        B_7_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_7_6_empty_n : IN STD_LOGIC;
        B_7_6_read : OUT STD_LOGIC;
        B_7_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        B_7_7_empty_n : IN STD_LOGIC;
        B_7_7_read : OUT STD_LOGIC;
        p_read7 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_full_n : IN STD_LOGIC;
        C_write : OUT STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_5_2235 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_1_1236 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_1_4237 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_6_5238 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_0_2239 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_7_2240 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_3_0241 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_7_5242 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_4_3243 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_1_7244 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_5_3245 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_7_7246 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_7_0247 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_3_6248 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_1_2249 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_0_7250 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_1_6251 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_7_3252 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_4_1253 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_6_1254 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_2_1255 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_5_6256 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_2_5257 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_2_4258 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_4_7259 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_0_4260 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_2_0261 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_6_3262 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_0_3263 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_3_7264 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_6_6265 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_2_2266 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_4_0267 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_4_2268 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_2_3269 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_4_6270 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_1_5271 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_0_6272 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_3_1273 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_0_0274 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_1_3275 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_0_5276 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_2_7277 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_5_4278 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_3_3279 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_7_4280 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_5_5281 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_3_5282 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_7_1283 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_4_4284 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_6_7285 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_3_4286 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_5_7287 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_6_0288 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_0_1289 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_2_6290 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_3_2291 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_5_0292 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_4_5293 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_5_1294 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_6_2295 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_7_6296 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_1_0297 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_B_6_4298 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_A_cached_row_7_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_A_cached_row_6_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_A_cached_row_5_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_A_cached_row_4_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_A_cached_row_3_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_A_cached_row_2_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_A_cached_row_1_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_DCT_MAT_Multiply2_A_cached_row_0_loc_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    DCT_MAT_Multiply2_Loop_Row_proc525_U0 : component DCT_MAT_Multiply2_Loop_Row_proc525
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_start,
        ap_done => DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done,
        ap_continue => DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_continue,
        ap_idle => DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_idle,
        ap_ready => DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_ready,
        A_address0 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_address0,
        A_ce0 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_ce0,
        A_q0 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_q0,
        p_read8 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read8,
        p_read24 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read24,
        p_read25 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read25,
        p_read26 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read26,
        p_read27 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read27,
        p_read28 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read28,
        p_read29 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read29,
        p_read30 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read30,
        p_read31 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read31,
        p_read32 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read32,
        p_read34 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read34,
        p_read35 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read35,
        p_read36 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read36,
        p_read37 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read37,
        p_read38 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read38,
        p_read39 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read39,
        p_read40 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read40,
        p_read41 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read41,
        p_read42 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read42,
        p_read43 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read43,
        p_read44 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read44,
        p_read45 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read45,
        p_read46 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read46,
        p_read48 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read48,
        p_read49 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read49,
        p_read50 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read50,
        p_read51 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read51,
        p_read55 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read55,
        p_read56 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read56,
        p_read57 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read57,
        p_read58 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read58,
        p_read59 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read59,
        p_read60 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read60,
        p_read62 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read62,
        p_read63 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read63,
        p_read64 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read64,
        p_read65 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read65,
        p_read67 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read67,
        p_read69 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read69,
        p_read70 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read70,
        p_read72 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read72,
        p_read73 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read73,
        p_read74 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read74,
        p_read75 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read75,
        p_read76 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read76,
        p_read77 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read77,
        p_read78 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read78,
        p_read79 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read79,
        p_read80 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read80,
        p_read81 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read81,
        p_read82 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read82,
        p_read83 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read83,
        p_read84 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read84,
        p_read85 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read85,
        B_5_2_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_2_out_din,
        B_5_2_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_2_out_full_n,
        B_5_2_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_2_out_write,
        B_1_1_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_1_out_din,
        B_1_1_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_1_out_full_n,
        B_1_1_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_1_out_write,
        B_1_4_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_4_out_din,
        B_1_4_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_4_out_full_n,
        B_1_4_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_4_out_write,
        B_6_5_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_5_out_din,
        B_6_5_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_5_out_full_n,
        B_6_5_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_5_out_write,
        B_0_2_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_2_out_din,
        B_0_2_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_2_out_full_n,
        B_0_2_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_2_out_write,
        B_7_2_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_2_out_din,
        B_7_2_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_2_out_full_n,
        B_7_2_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_2_out_write,
        B_3_0_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_0_out_din,
        B_3_0_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_0_out_full_n,
        B_3_0_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_0_out_write,
        B_7_5_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_5_out_din,
        B_7_5_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_5_out_full_n,
        B_7_5_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_5_out_write,
        B_4_3_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_3_out_din,
        B_4_3_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_3_out_full_n,
        B_4_3_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_3_out_write,
        B_1_7_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_7_out_din,
        B_1_7_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_7_out_full_n,
        B_1_7_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_7_out_write,
        B_5_3_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_3_out_din,
        B_5_3_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_3_out_full_n,
        B_5_3_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_3_out_write,
        B_7_7_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_7_out_din,
        B_7_7_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_7_out_full_n,
        B_7_7_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_7_out_write,
        B_7_0_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_0_out_din,
        B_7_0_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_0_out_full_n,
        B_7_0_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_0_out_write,
        B_3_6_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_6_out_din,
        B_3_6_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_6_out_full_n,
        B_3_6_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_6_out_write,
        B_1_2_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_2_out_din,
        B_1_2_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_2_out_full_n,
        B_1_2_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_2_out_write,
        B_0_7_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_7_out_din,
        B_0_7_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_7_out_full_n,
        B_0_7_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_7_out_write,
        B_1_6_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_6_out_din,
        B_1_6_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_6_out_full_n,
        B_1_6_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_6_out_write,
        B_7_3_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_3_out_din,
        B_7_3_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_3_out_full_n,
        B_7_3_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_3_out_write,
        B_4_1_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_1_out_din,
        B_4_1_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_1_out_full_n,
        B_4_1_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_1_out_write,
        B_6_1_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_1_out_din,
        B_6_1_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_1_out_full_n,
        B_6_1_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_1_out_write,
        B_2_1_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_1_out_din,
        B_2_1_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_1_out_full_n,
        B_2_1_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_1_out_write,
        B_5_6_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_6_out_din,
        B_5_6_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_6_out_full_n,
        B_5_6_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_6_out_write,
        B_2_5_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_5_out_din,
        B_2_5_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_5_out_full_n,
        B_2_5_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_5_out_write,
        B_2_4_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_4_out_din,
        B_2_4_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_4_out_full_n,
        B_2_4_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_4_out_write,
        B_4_7_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_7_out_din,
        B_4_7_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_7_out_full_n,
        B_4_7_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_7_out_write,
        B_0_4_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_4_out_din,
        B_0_4_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_4_out_full_n,
        B_0_4_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_4_out_write,
        B_2_0_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_0_out_din,
        B_2_0_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_0_out_full_n,
        B_2_0_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_0_out_write,
        B_6_3_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_3_out_din,
        B_6_3_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_3_out_full_n,
        B_6_3_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_3_out_write,
        B_0_3_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_3_out_din,
        B_0_3_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_3_out_full_n,
        B_0_3_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_3_out_write,
        B_3_7_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_7_out_din,
        B_3_7_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_7_out_full_n,
        B_3_7_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_7_out_write,
        B_6_6_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_6_out_din,
        B_6_6_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_6_out_full_n,
        B_6_6_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_6_out_write,
        B_2_2_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_2_out_din,
        B_2_2_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_2_out_full_n,
        B_2_2_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_2_out_write,
        B_4_0_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_0_out_din,
        B_4_0_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_0_out_full_n,
        B_4_0_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_0_out_write,
        B_4_2_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_2_out_din,
        B_4_2_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_2_out_full_n,
        B_4_2_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_2_out_write,
        B_2_3_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_3_out_din,
        B_2_3_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_3_out_full_n,
        B_2_3_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_3_out_write,
        B_4_6_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_6_out_din,
        B_4_6_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_6_out_full_n,
        B_4_6_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_6_out_write,
        B_1_5_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_5_out_din,
        B_1_5_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_5_out_full_n,
        B_1_5_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_5_out_write,
        B_0_6_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_6_out_din,
        B_0_6_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_6_out_full_n,
        B_0_6_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_6_out_write,
        B_3_1_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_1_out_din,
        B_3_1_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_1_out_full_n,
        B_3_1_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_1_out_write,
        B_0_0_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_0_out_din,
        B_0_0_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_0_out_full_n,
        B_0_0_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_0_out_write,
        B_1_3_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_3_out_din,
        B_1_3_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_3_out_full_n,
        B_1_3_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_3_out_write,
        B_0_5_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_5_out_din,
        B_0_5_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_5_out_full_n,
        B_0_5_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_5_out_write,
        B_2_7_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_7_out_din,
        B_2_7_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_7_out_full_n,
        B_2_7_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_7_out_write,
        B_5_4_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_4_out_din,
        B_5_4_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_4_out_full_n,
        B_5_4_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_4_out_write,
        B_3_3_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_3_out_din,
        B_3_3_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_3_out_full_n,
        B_3_3_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_3_out_write,
        B_7_4_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_4_out_din,
        B_7_4_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_4_out_full_n,
        B_7_4_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_4_out_write,
        B_5_5_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_5_out_din,
        B_5_5_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_5_out_full_n,
        B_5_5_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_5_out_write,
        B_3_5_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_5_out_din,
        B_3_5_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_5_out_full_n,
        B_3_5_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_5_out_write,
        B_7_1_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_1_out_din,
        B_7_1_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_1_out_full_n,
        B_7_1_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_1_out_write,
        B_4_4_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_4_out_din,
        B_4_4_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_4_out_full_n,
        B_4_4_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_4_out_write,
        B_6_7_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_7_out_din,
        B_6_7_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_7_out_full_n,
        B_6_7_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_7_out_write,
        B_3_4_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_4_out_din,
        B_3_4_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_4_out_full_n,
        B_3_4_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_4_out_write,
        B_5_7_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_7_out_din,
        B_5_7_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_7_out_full_n,
        B_5_7_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_7_out_write,
        B_6_0_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_0_out_din,
        B_6_0_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_0_out_full_n,
        B_6_0_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_0_out_write,
        B_0_1_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_1_out_din,
        B_0_1_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_1_out_full_n,
        B_0_1_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_1_out_write,
        B_2_6_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_6_out_din,
        B_2_6_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_6_out_full_n,
        B_2_6_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_6_out_write,
        B_3_2_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_2_out_din,
        B_3_2_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_2_out_full_n,
        B_3_2_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_2_out_write,
        B_5_0_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_0_out_din,
        B_5_0_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_0_out_full_n,
        B_5_0_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_0_out_write,
        B_4_5_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_5_out_din,
        B_4_5_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_5_out_full_n,
        B_4_5_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_5_out_write,
        B_5_1_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_1_out_din,
        B_5_1_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_1_out_full_n,
        B_5_1_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_1_out_write,
        B_6_2_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_2_out_din,
        B_6_2_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_2_out_full_n,
        B_6_2_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_2_out_write,
        B_7_6_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_6_out_din,
        B_7_6_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_6_out_full_n,
        B_7_6_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_6_out_write,
        B_1_0_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_0_out_din,
        B_1_0_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_0_out_full_n,
        B_1_0_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_0_out_write,
        B_6_4_out_din => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_4_out_din,
        B_6_4_out_full_n => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_4_out_full_n,
        B_6_4_out_write => DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_4_out_write,
        ap_return_0 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_0,
        ap_return_1 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_1,
        ap_return_2 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_2,
        ap_return_3 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_3,
        ap_return_4 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_4,
        ap_return_5 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_5,
        ap_return_6 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_6,
        ap_return_7 => DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_7);

    DCT_MAT_Multiply2_Loop_Col_proc291_U0 : component DCT_MAT_Multiply2_Loop_Col_proc291
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_start,
        ap_done => DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_done,
        ap_continue => DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_continue,
        ap_idle => DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_idle,
        ap_ready => DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_ready,
        B_0_0_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_0_dout,
        B_0_0_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_0_empty_n,
        B_0_0_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_0_read,
        B_0_1_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_1_dout,
        B_0_1_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_1_empty_n,
        B_0_1_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_1_read,
        B_0_2_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_2_dout,
        B_0_2_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_2_empty_n,
        B_0_2_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_2_read,
        B_0_3_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_3_dout,
        B_0_3_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_3_empty_n,
        B_0_3_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_3_read,
        B_0_4_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_4_dout,
        B_0_4_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_4_empty_n,
        B_0_4_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_4_read,
        B_0_5_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_5_dout,
        B_0_5_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_5_empty_n,
        B_0_5_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_5_read,
        B_0_6_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_6_dout,
        B_0_6_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_6_empty_n,
        B_0_6_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_6_read,
        B_0_7_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_7_dout,
        B_0_7_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_7_empty_n,
        B_0_7_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_7_read,
        p_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read,
        B_1_0_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_0_dout,
        B_1_0_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_0_empty_n,
        B_1_0_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_0_read,
        B_1_1_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_1_dout,
        B_1_1_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_1_empty_n,
        B_1_1_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_1_read,
        B_1_2_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_2_dout,
        B_1_2_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_2_empty_n,
        B_1_2_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_2_read,
        B_1_3_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_3_dout,
        B_1_3_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_3_empty_n,
        B_1_3_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_3_read,
        B_1_4_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_4_dout,
        B_1_4_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_4_empty_n,
        B_1_4_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_4_read,
        B_1_5_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_5_dout,
        B_1_5_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_5_empty_n,
        B_1_5_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_5_read,
        B_1_6_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_6_dout,
        B_1_6_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_6_empty_n,
        B_1_6_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_6_read,
        B_1_7_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_7_dout,
        B_1_7_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_7_empty_n,
        B_1_7_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_7_read,
        p_read1 => DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read1,
        B_2_0_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_0_dout,
        B_2_0_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_0_empty_n,
        B_2_0_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_0_read,
        B_2_1_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_1_dout,
        B_2_1_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_1_empty_n,
        B_2_1_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_1_read,
        B_2_2_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_2_dout,
        B_2_2_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_2_empty_n,
        B_2_2_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_2_read,
        B_2_3_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_3_dout,
        B_2_3_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_3_empty_n,
        B_2_3_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_3_read,
        B_2_4_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_4_dout,
        B_2_4_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_4_empty_n,
        B_2_4_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_4_read,
        B_2_5_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_5_dout,
        B_2_5_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_5_empty_n,
        B_2_5_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_5_read,
        B_2_6_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_6_dout,
        B_2_6_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_6_empty_n,
        B_2_6_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_6_read,
        B_2_7_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_7_dout,
        B_2_7_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_7_empty_n,
        B_2_7_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_7_read,
        p_read2 => DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read2,
        B_3_0_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_0_dout,
        B_3_0_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_0_empty_n,
        B_3_0_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_0_read,
        B_3_1_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_1_dout,
        B_3_1_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_1_empty_n,
        B_3_1_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_1_read,
        B_3_2_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_2_dout,
        B_3_2_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_2_empty_n,
        B_3_2_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_2_read,
        B_3_3_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_3_dout,
        B_3_3_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_3_empty_n,
        B_3_3_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_3_read,
        B_3_4_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_4_dout,
        B_3_4_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_4_empty_n,
        B_3_4_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_4_read,
        B_3_5_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_5_dout,
        B_3_5_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_5_empty_n,
        B_3_5_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_5_read,
        B_3_6_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_6_dout,
        B_3_6_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_6_empty_n,
        B_3_6_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_6_read,
        B_3_7_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_7_dout,
        B_3_7_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_7_empty_n,
        B_3_7_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_7_read,
        p_read3 => DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read3,
        B_4_0_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_0_dout,
        B_4_0_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_0_empty_n,
        B_4_0_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_0_read,
        B_4_1_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_1_dout,
        B_4_1_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_1_empty_n,
        B_4_1_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_1_read,
        B_4_2_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_2_dout,
        B_4_2_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_2_empty_n,
        B_4_2_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_2_read,
        B_4_3_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_3_dout,
        B_4_3_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_3_empty_n,
        B_4_3_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_3_read,
        B_4_4_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_4_dout,
        B_4_4_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_4_empty_n,
        B_4_4_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_4_read,
        B_4_5_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_5_dout,
        B_4_5_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_5_empty_n,
        B_4_5_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_5_read,
        B_4_6_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_6_dout,
        B_4_6_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_6_empty_n,
        B_4_6_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_6_read,
        B_4_7_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_7_dout,
        B_4_7_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_7_empty_n,
        B_4_7_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_7_read,
        p_read4 => DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read4,
        B_5_0_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_0_dout,
        B_5_0_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_0_empty_n,
        B_5_0_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_0_read,
        B_5_1_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_1_dout,
        B_5_1_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_1_empty_n,
        B_5_1_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_1_read,
        B_5_2_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_2_dout,
        B_5_2_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_2_empty_n,
        B_5_2_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_2_read,
        B_5_3_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_3_dout,
        B_5_3_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_3_empty_n,
        B_5_3_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_3_read,
        B_5_4_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_4_dout,
        B_5_4_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_4_empty_n,
        B_5_4_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_4_read,
        B_5_5_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_5_dout,
        B_5_5_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_5_empty_n,
        B_5_5_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_5_read,
        B_5_6_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_6_dout,
        B_5_6_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_6_empty_n,
        B_5_6_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_6_read,
        B_5_7_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_7_dout,
        B_5_7_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_7_empty_n,
        B_5_7_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_7_read,
        p_read5 => DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read5,
        B_6_0_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_0_dout,
        B_6_0_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_0_empty_n,
        B_6_0_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_0_read,
        B_6_1_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_1_dout,
        B_6_1_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_1_empty_n,
        B_6_1_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_1_read,
        B_6_2_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_2_dout,
        B_6_2_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_2_empty_n,
        B_6_2_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_2_read,
        B_6_3_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_3_dout,
        B_6_3_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_3_empty_n,
        B_6_3_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_3_read,
        B_6_4_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_4_dout,
        B_6_4_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_4_empty_n,
        B_6_4_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_4_read,
        B_6_5_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_5_dout,
        B_6_5_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_5_empty_n,
        B_6_5_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_5_read,
        B_6_6_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_6_dout,
        B_6_6_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_6_empty_n,
        B_6_6_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_6_read,
        B_6_7_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_7_dout,
        B_6_7_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_7_empty_n,
        B_6_7_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_7_read,
        p_read6 => DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read6,
        B_7_0_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_0_dout,
        B_7_0_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_0_empty_n,
        B_7_0_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_0_read,
        B_7_1_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_1_dout,
        B_7_1_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_1_empty_n,
        B_7_1_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_1_read,
        B_7_2_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_2_dout,
        B_7_2_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_2_empty_n,
        B_7_2_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_2_read,
        B_7_3_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_3_dout,
        B_7_3_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_3_empty_n,
        B_7_3_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_3_read,
        B_7_4_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_4_dout,
        B_7_4_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_4_empty_n,
        B_7_4_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_4_read,
        B_7_5_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_5_dout,
        B_7_5_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_5_empty_n,
        B_7_5_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_5_read,
        B_7_6_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_6_dout,
        B_7_6_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_6_empty_n,
        B_7_6_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_6_read,
        B_7_7_dout => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_7_dout,
        B_7_7_empty_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_7_empty_n,
        B_7_7_read => DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_7_read,
        p_read7 => DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read7,
        C_din => DCT_MAT_Multiply2_Loop_Col_proc291_U0_C_din,
        C_full_n => DCT_MAT_Multiply2_Loop_Col_proc291_U0_C_full_n,
        C_write => DCT_MAT_Multiply2_Loop_Col_proc291_U0_C_write);

    B_5_2235_U : component FIFO_DCT_MAT_Multiply2_B_5_2235
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_5_2235_U_ap_dummy_ce,
        if_write_ce => B_5_2235_U_ap_dummy_ce,
        if_din => B_5_2235_din,
        if_full_n => B_5_2235_full_n,
        if_write => B_5_2235_write,
        if_dout => B_5_2235_dout,
        if_empty_n => B_5_2235_empty_n,
        if_read => B_5_2235_read);

    B_1_1236_U : component FIFO_DCT_MAT_Multiply2_B_1_1236
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_1_1236_U_ap_dummy_ce,
        if_write_ce => B_1_1236_U_ap_dummy_ce,
        if_din => B_1_1236_din,
        if_full_n => B_1_1236_full_n,
        if_write => B_1_1236_write,
        if_dout => B_1_1236_dout,
        if_empty_n => B_1_1236_empty_n,
        if_read => B_1_1236_read);

    B_1_4237_U : component FIFO_DCT_MAT_Multiply2_B_1_4237
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_1_4237_U_ap_dummy_ce,
        if_write_ce => B_1_4237_U_ap_dummy_ce,
        if_din => B_1_4237_din,
        if_full_n => B_1_4237_full_n,
        if_write => B_1_4237_write,
        if_dout => B_1_4237_dout,
        if_empty_n => B_1_4237_empty_n,
        if_read => B_1_4237_read);

    B_6_5238_U : component FIFO_DCT_MAT_Multiply2_B_6_5238
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_6_5238_U_ap_dummy_ce,
        if_write_ce => B_6_5238_U_ap_dummy_ce,
        if_din => B_6_5238_din,
        if_full_n => B_6_5238_full_n,
        if_write => B_6_5238_write,
        if_dout => B_6_5238_dout,
        if_empty_n => B_6_5238_empty_n,
        if_read => B_6_5238_read);

    B_0_2239_U : component FIFO_DCT_MAT_Multiply2_B_0_2239
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_0_2239_U_ap_dummy_ce,
        if_write_ce => B_0_2239_U_ap_dummy_ce,
        if_din => B_0_2239_din,
        if_full_n => B_0_2239_full_n,
        if_write => B_0_2239_write,
        if_dout => B_0_2239_dout,
        if_empty_n => B_0_2239_empty_n,
        if_read => B_0_2239_read);

    B_7_2240_U : component FIFO_DCT_MAT_Multiply2_B_7_2240
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_7_2240_U_ap_dummy_ce,
        if_write_ce => B_7_2240_U_ap_dummy_ce,
        if_din => B_7_2240_din,
        if_full_n => B_7_2240_full_n,
        if_write => B_7_2240_write,
        if_dout => B_7_2240_dout,
        if_empty_n => B_7_2240_empty_n,
        if_read => B_7_2240_read);

    B_3_0241_U : component FIFO_DCT_MAT_Multiply2_B_3_0241
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_3_0241_U_ap_dummy_ce,
        if_write_ce => B_3_0241_U_ap_dummy_ce,
        if_din => B_3_0241_din,
        if_full_n => B_3_0241_full_n,
        if_write => B_3_0241_write,
        if_dout => B_3_0241_dout,
        if_empty_n => B_3_0241_empty_n,
        if_read => B_3_0241_read);

    B_7_5242_U : component FIFO_DCT_MAT_Multiply2_B_7_5242
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_7_5242_U_ap_dummy_ce,
        if_write_ce => B_7_5242_U_ap_dummy_ce,
        if_din => B_7_5242_din,
        if_full_n => B_7_5242_full_n,
        if_write => B_7_5242_write,
        if_dout => B_7_5242_dout,
        if_empty_n => B_7_5242_empty_n,
        if_read => B_7_5242_read);

    B_4_3243_U : component FIFO_DCT_MAT_Multiply2_B_4_3243
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_4_3243_U_ap_dummy_ce,
        if_write_ce => B_4_3243_U_ap_dummy_ce,
        if_din => B_4_3243_din,
        if_full_n => B_4_3243_full_n,
        if_write => B_4_3243_write,
        if_dout => B_4_3243_dout,
        if_empty_n => B_4_3243_empty_n,
        if_read => B_4_3243_read);

    B_1_7244_U : component FIFO_DCT_MAT_Multiply2_B_1_7244
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_1_7244_U_ap_dummy_ce,
        if_write_ce => B_1_7244_U_ap_dummy_ce,
        if_din => B_1_7244_din,
        if_full_n => B_1_7244_full_n,
        if_write => B_1_7244_write,
        if_dout => B_1_7244_dout,
        if_empty_n => B_1_7244_empty_n,
        if_read => B_1_7244_read);

    B_5_3245_U : component FIFO_DCT_MAT_Multiply2_B_5_3245
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_5_3245_U_ap_dummy_ce,
        if_write_ce => B_5_3245_U_ap_dummy_ce,
        if_din => B_5_3245_din,
        if_full_n => B_5_3245_full_n,
        if_write => B_5_3245_write,
        if_dout => B_5_3245_dout,
        if_empty_n => B_5_3245_empty_n,
        if_read => B_5_3245_read);

    B_7_7246_U : component FIFO_DCT_MAT_Multiply2_B_7_7246
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_7_7246_U_ap_dummy_ce,
        if_write_ce => B_7_7246_U_ap_dummy_ce,
        if_din => B_7_7246_din,
        if_full_n => B_7_7246_full_n,
        if_write => B_7_7246_write,
        if_dout => B_7_7246_dout,
        if_empty_n => B_7_7246_empty_n,
        if_read => B_7_7246_read);

    B_7_0247_U : component FIFO_DCT_MAT_Multiply2_B_7_0247
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_7_0247_U_ap_dummy_ce,
        if_write_ce => B_7_0247_U_ap_dummy_ce,
        if_din => B_7_0247_din,
        if_full_n => B_7_0247_full_n,
        if_write => B_7_0247_write,
        if_dout => B_7_0247_dout,
        if_empty_n => B_7_0247_empty_n,
        if_read => B_7_0247_read);

    B_3_6248_U : component FIFO_DCT_MAT_Multiply2_B_3_6248
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_3_6248_U_ap_dummy_ce,
        if_write_ce => B_3_6248_U_ap_dummy_ce,
        if_din => B_3_6248_din,
        if_full_n => B_3_6248_full_n,
        if_write => B_3_6248_write,
        if_dout => B_3_6248_dout,
        if_empty_n => B_3_6248_empty_n,
        if_read => B_3_6248_read);

    B_1_2249_U : component FIFO_DCT_MAT_Multiply2_B_1_2249
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_1_2249_U_ap_dummy_ce,
        if_write_ce => B_1_2249_U_ap_dummy_ce,
        if_din => B_1_2249_din,
        if_full_n => B_1_2249_full_n,
        if_write => B_1_2249_write,
        if_dout => B_1_2249_dout,
        if_empty_n => B_1_2249_empty_n,
        if_read => B_1_2249_read);

    B_0_7250_U : component FIFO_DCT_MAT_Multiply2_B_0_7250
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_0_7250_U_ap_dummy_ce,
        if_write_ce => B_0_7250_U_ap_dummy_ce,
        if_din => B_0_7250_din,
        if_full_n => B_0_7250_full_n,
        if_write => B_0_7250_write,
        if_dout => B_0_7250_dout,
        if_empty_n => B_0_7250_empty_n,
        if_read => B_0_7250_read);

    B_1_6251_U : component FIFO_DCT_MAT_Multiply2_B_1_6251
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_1_6251_U_ap_dummy_ce,
        if_write_ce => B_1_6251_U_ap_dummy_ce,
        if_din => B_1_6251_din,
        if_full_n => B_1_6251_full_n,
        if_write => B_1_6251_write,
        if_dout => B_1_6251_dout,
        if_empty_n => B_1_6251_empty_n,
        if_read => B_1_6251_read);

    B_7_3252_U : component FIFO_DCT_MAT_Multiply2_B_7_3252
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_7_3252_U_ap_dummy_ce,
        if_write_ce => B_7_3252_U_ap_dummy_ce,
        if_din => B_7_3252_din,
        if_full_n => B_7_3252_full_n,
        if_write => B_7_3252_write,
        if_dout => B_7_3252_dout,
        if_empty_n => B_7_3252_empty_n,
        if_read => B_7_3252_read);

    B_4_1253_U : component FIFO_DCT_MAT_Multiply2_B_4_1253
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_4_1253_U_ap_dummy_ce,
        if_write_ce => B_4_1253_U_ap_dummy_ce,
        if_din => B_4_1253_din,
        if_full_n => B_4_1253_full_n,
        if_write => B_4_1253_write,
        if_dout => B_4_1253_dout,
        if_empty_n => B_4_1253_empty_n,
        if_read => B_4_1253_read);

    B_6_1254_U : component FIFO_DCT_MAT_Multiply2_B_6_1254
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_6_1254_U_ap_dummy_ce,
        if_write_ce => B_6_1254_U_ap_dummy_ce,
        if_din => B_6_1254_din,
        if_full_n => B_6_1254_full_n,
        if_write => B_6_1254_write,
        if_dout => B_6_1254_dout,
        if_empty_n => B_6_1254_empty_n,
        if_read => B_6_1254_read);

    B_2_1255_U : component FIFO_DCT_MAT_Multiply2_B_2_1255
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_2_1255_U_ap_dummy_ce,
        if_write_ce => B_2_1255_U_ap_dummy_ce,
        if_din => B_2_1255_din,
        if_full_n => B_2_1255_full_n,
        if_write => B_2_1255_write,
        if_dout => B_2_1255_dout,
        if_empty_n => B_2_1255_empty_n,
        if_read => B_2_1255_read);

    B_5_6256_U : component FIFO_DCT_MAT_Multiply2_B_5_6256
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_5_6256_U_ap_dummy_ce,
        if_write_ce => B_5_6256_U_ap_dummy_ce,
        if_din => B_5_6256_din,
        if_full_n => B_5_6256_full_n,
        if_write => B_5_6256_write,
        if_dout => B_5_6256_dout,
        if_empty_n => B_5_6256_empty_n,
        if_read => B_5_6256_read);

    B_2_5257_U : component FIFO_DCT_MAT_Multiply2_B_2_5257
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_2_5257_U_ap_dummy_ce,
        if_write_ce => B_2_5257_U_ap_dummy_ce,
        if_din => B_2_5257_din,
        if_full_n => B_2_5257_full_n,
        if_write => B_2_5257_write,
        if_dout => B_2_5257_dout,
        if_empty_n => B_2_5257_empty_n,
        if_read => B_2_5257_read);

    B_2_4258_U : component FIFO_DCT_MAT_Multiply2_B_2_4258
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_2_4258_U_ap_dummy_ce,
        if_write_ce => B_2_4258_U_ap_dummy_ce,
        if_din => B_2_4258_din,
        if_full_n => B_2_4258_full_n,
        if_write => B_2_4258_write,
        if_dout => B_2_4258_dout,
        if_empty_n => B_2_4258_empty_n,
        if_read => B_2_4258_read);

    B_4_7259_U : component FIFO_DCT_MAT_Multiply2_B_4_7259
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_4_7259_U_ap_dummy_ce,
        if_write_ce => B_4_7259_U_ap_dummy_ce,
        if_din => B_4_7259_din,
        if_full_n => B_4_7259_full_n,
        if_write => B_4_7259_write,
        if_dout => B_4_7259_dout,
        if_empty_n => B_4_7259_empty_n,
        if_read => B_4_7259_read);

    B_0_4260_U : component FIFO_DCT_MAT_Multiply2_B_0_4260
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_0_4260_U_ap_dummy_ce,
        if_write_ce => B_0_4260_U_ap_dummy_ce,
        if_din => B_0_4260_din,
        if_full_n => B_0_4260_full_n,
        if_write => B_0_4260_write,
        if_dout => B_0_4260_dout,
        if_empty_n => B_0_4260_empty_n,
        if_read => B_0_4260_read);

    B_2_0261_U : component FIFO_DCT_MAT_Multiply2_B_2_0261
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_2_0261_U_ap_dummy_ce,
        if_write_ce => B_2_0261_U_ap_dummy_ce,
        if_din => B_2_0261_din,
        if_full_n => B_2_0261_full_n,
        if_write => B_2_0261_write,
        if_dout => B_2_0261_dout,
        if_empty_n => B_2_0261_empty_n,
        if_read => B_2_0261_read);

    B_6_3262_U : component FIFO_DCT_MAT_Multiply2_B_6_3262
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_6_3262_U_ap_dummy_ce,
        if_write_ce => B_6_3262_U_ap_dummy_ce,
        if_din => B_6_3262_din,
        if_full_n => B_6_3262_full_n,
        if_write => B_6_3262_write,
        if_dout => B_6_3262_dout,
        if_empty_n => B_6_3262_empty_n,
        if_read => B_6_3262_read);

    B_0_3263_U : component FIFO_DCT_MAT_Multiply2_B_0_3263
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_0_3263_U_ap_dummy_ce,
        if_write_ce => B_0_3263_U_ap_dummy_ce,
        if_din => B_0_3263_din,
        if_full_n => B_0_3263_full_n,
        if_write => B_0_3263_write,
        if_dout => B_0_3263_dout,
        if_empty_n => B_0_3263_empty_n,
        if_read => B_0_3263_read);

    B_3_7264_U : component FIFO_DCT_MAT_Multiply2_B_3_7264
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_3_7264_U_ap_dummy_ce,
        if_write_ce => B_3_7264_U_ap_dummy_ce,
        if_din => B_3_7264_din,
        if_full_n => B_3_7264_full_n,
        if_write => B_3_7264_write,
        if_dout => B_3_7264_dout,
        if_empty_n => B_3_7264_empty_n,
        if_read => B_3_7264_read);

    B_6_6265_U : component FIFO_DCT_MAT_Multiply2_B_6_6265
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_6_6265_U_ap_dummy_ce,
        if_write_ce => B_6_6265_U_ap_dummy_ce,
        if_din => B_6_6265_din,
        if_full_n => B_6_6265_full_n,
        if_write => B_6_6265_write,
        if_dout => B_6_6265_dout,
        if_empty_n => B_6_6265_empty_n,
        if_read => B_6_6265_read);

    B_2_2266_U : component FIFO_DCT_MAT_Multiply2_B_2_2266
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_2_2266_U_ap_dummy_ce,
        if_write_ce => B_2_2266_U_ap_dummy_ce,
        if_din => B_2_2266_din,
        if_full_n => B_2_2266_full_n,
        if_write => B_2_2266_write,
        if_dout => B_2_2266_dout,
        if_empty_n => B_2_2266_empty_n,
        if_read => B_2_2266_read);

    B_4_0267_U : component FIFO_DCT_MAT_Multiply2_B_4_0267
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_4_0267_U_ap_dummy_ce,
        if_write_ce => B_4_0267_U_ap_dummy_ce,
        if_din => B_4_0267_din,
        if_full_n => B_4_0267_full_n,
        if_write => B_4_0267_write,
        if_dout => B_4_0267_dout,
        if_empty_n => B_4_0267_empty_n,
        if_read => B_4_0267_read);

    B_4_2268_U : component FIFO_DCT_MAT_Multiply2_B_4_2268
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_4_2268_U_ap_dummy_ce,
        if_write_ce => B_4_2268_U_ap_dummy_ce,
        if_din => B_4_2268_din,
        if_full_n => B_4_2268_full_n,
        if_write => B_4_2268_write,
        if_dout => B_4_2268_dout,
        if_empty_n => B_4_2268_empty_n,
        if_read => B_4_2268_read);

    B_2_3269_U : component FIFO_DCT_MAT_Multiply2_B_2_3269
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_2_3269_U_ap_dummy_ce,
        if_write_ce => B_2_3269_U_ap_dummy_ce,
        if_din => B_2_3269_din,
        if_full_n => B_2_3269_full_n,
        if_write => B_2_3269_write,
        if_dout => B_2_3269_dout,
        if_empty_n => B_2_3269_empty_n,
        if_read => B_2_3269_read);

    B_4_6270_U : component FIFO_DCT_MAT_Multiply2_B_4_6270
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_4_6270_U_ap_dummy_ce,
        if_write_ce => B_4_6270_U_ap_dummy_ce,
        if_din => B_4_6270_din,
        if_full_n => B_4_6270_full_n,
        if_write => B_4_6270_write,
        if_dout => B_4_6270_dout,
        if_empty_n => B_4_6270_empty_n,
        if_read => B_4_6270_read);

    B_1_5271_U : component FIFO_DCT_MAT_Multiply2_B_1_5271
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_1_5271_U_ap_dummy_ce,
        if_write_ce => B_1_5271_U_ap_dummy_ce,
        if_din => B_1_5271_din,
        if_full_n => B_1_5271_full_n,
        if_write => B_1_5271_write,
        if_dout => B_1_5271_dout,
        if_empty_n => B_1_5271_empty_n,
        if_read => B_1_5271_read);

    B_0_6272_U : component FIFO_DCT_MAT_Multiply2_B_0_6272
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_0_6272_U_ap_dummy_ce,
        if_write_ce => B_0_6272_U_ap_dummy_ce,
        if_din => B_0_6272_din,
        if_full_n => B_0_6272_full_n,
        if_write => B_0_6272_write,
        if_dout => B_0_6272_dout,
        if_empty_n => B_0_6272_empty_n,
        if_read => B_0_6272_read);

    B_3_1273_U : component FIFO_DCT_MAT_Multiply2_B_3_1273
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_3_1273_U_ap_dummy_ce,
        if_write_ce => B_3_1273_U_ap_dummy_ce,
        if_din => B_3_1273_din,
        if_full_n => B_3_1273_full_n,
        if_write => B_3_1273_write,
        if_dout => B_3_1273_dout,
        if_empty_n => B_3_1273_empty_n,
        if_read => B_3_1273_read);

    B_0_0274_U : component FIFO_DCT_MAT_Multiply2_B_0_0274
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_0_0274_U_ap_dummy_ce,
        if_write_ce => B_0_0274_U_ap_dummy_ce,
        if_din => B_0_0274_din,
        if_full_n => B_0_0274_full_n,
        if_write => B_0_0274_write,
        if_dout => B_0_0274_dout,
        if_empty_n => B_0_0274_empty_n,
        if_read => B_0_0274_read);

    B_1_3275_U : component FIFO_DCT_MAT_Multiply2_B_1_3275
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_1_3275_U_ap_dummy_ce,
        if_write_ce => B_1_3275_U_ap_dummy_ce,
        if_din => B_1_3275_din,
        if_full_n => B_1_3275_full_n,
        if_write => B_1_3275_write,
        if_dout => B_1_3275_dout,
        if_empty_n => B_1_3275_empty_n,
        if_read => B_1_3275_read);

    B_0_5276_U : component FIFO_DCT_MAT_Multiply2_B_0_5276
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_0_5276_U_ap_dummy_ce,
        if_write_ce => B_0_5276_U_ap_dummy_ce,
        if_din => B_0_5276_din,
        if_full_n => B_0_5276_full_n,
        if_write => B_0_5276_write,
        if_dout => B_0_5276_dout,
        if_empty_n => B_0_5276_empty_n,
        if_read => B_0_5276_read);

    B_2_7277_U : component FIFO_DCT_MAT_Multiply2_B_2_7277
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_2_7277_U_ap_dummy_ce,
        if_write_ce => B_2_7277_U_ap_dummy_ce,
        if_din => B_2_7277_din,
        if_full_n => B_2_7277_full_n,
        if_write => B_2_7277_write,
        if_dout => B_2_7277_dout,
        if_empty_n => B_2_7277_empty_n,
        if_read => B_2_7277_read);

    B_5_4278_U : component FIFO_DCT_MAT_Multiply2_B_5_4278
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_5_4278_U_ap_dummy_ce,
        if_write_ce => B_5_4278_U_ap_dummy_ce,
        if_din => B_5_4278_din,
        if_full_n => B_5_4278_full_n,
        if_write => B_5_4278_write,
        if_dout => B_5_4278_dout,
        if_empty_n => B_5_4278_empty_n,
        if_read => B_5_4278_read);

    B_3_3279_U : component FIFO_DCT_MAT_Multiply2_B_3_3279
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_3_3279_U_ap_dummy_ce,
        if_write_ce => B_3_3279_U_ap_dummy_ce,
        if_din => B_3_3279_din,
        if_full_n => B_3_3279_full_n,
        if_write => B_3_3279_write,
        if_dout => B_3_3279_dout,
        if_empty_n => B_3_3279_empty_n,
        if_read => B_3_3279_read);

    B_7_4280_U : component FIFO_DCT_MAT_Multiply2_B_7_4280
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_7_4280_U_ap_dummy_ce,
        if_write_ce => B_7_4280_U_ap_dummy_ce,
        if_din => B_7_4280_din,
        if_full_n => B_7_4280_full_n,
        if_write => B_7_4280_write,
        if_dout => B_7_4280_dout,
        if_empty_n => B_7_4280_empty_n,
        if_read => B_7_4280_read);

    B_5_5281_U : component FIFO_DCT_MAT_Multiply2_B_5_5281
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_5_5281_U_ap_dummy_ce,
        if_write_ce => B_5_5281_U_ap_dummy_ce,
        if_din => B_5_5281_din,
        if_full_n => B_5_5281_full_n,
        if_write => B_5_5281_write,
        if_dout => B_5_5281_dout,
        if_empty_n => B_5_5281_empty_n,
        if_read => B_5_5281_read);

    B_3_5282_U : component FIFO_DCT_MAT_Multiply2_B_3_5282
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_3_5282_U_ap_dummy_ce,
        if_write_ce => B_3_5282_U_ap_dummy_ce,
        if_din => B_3_5282_din,
        if_full_n => B_3_5282_full_n,
        if_write => B_3_5282_write,
        if_dout => B_3_5282_dout,
        if_empty_n => B_3_5282_empty_n,
        if_read => B_3_5282_read);

    B_7_1283_U : component FIFO_DCT_MAT_Multiply2_B_7_1283
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_7_1283_U_ap_dummy_ce,
        if_write_ce => B_7_1283_U_ap_dummy_ce,
        if_din => B_7_1283_din,
        if_full_n => B_7_1283_full_n,
        if_write => B_7_1283_write,
        if_dout => B_7_1283_dout,
        if_empty_n => B_7_1283_empty_n,
        if_read => B_7_1283_read);

    B_4_4284_U : component FIFO_DCT_MAT_Multiply2_B_4_4284
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_4_4284_U_ap_dummy_ce,
        if_write_ce => B_4_4284_U_ap_dummy_ce,
        if_din => B_4_4284_din,
        if_full_n => B_4_4284_full_n,
        if_write => B_4_4284_write,
        if_dout => B_4_4284_dout,
        if_empty_n => B_4_4284_empty_n,
        if_read => B_4_4284_read);

    B_6_7285_U : component FIFO_DCT_MAT_Multiply2_B_6_7285
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_6_7285_U_ap_dummy_ce,
        if_write_ce => B_6_7285_U_ap_dummy_ce,
        if_din => B_6_7285_din,
        if_full_n => B_6_7285_full_n,
        if_write => B_6_7285_write,
        if_dout => B_6_7285_dout,
        if_empty_n => B_6_7285_empty_n,
        if_read => B_6_7285_read);

    B_3_4286_U : component FIFO_DCT_MAT_Multiply2_B_3_4286
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_3_4286_U_ap_dummy_ce,
        if_write_ce => B_3_4286_U_ap_dummy_ce,
        if_din => B_3_4286_din,
        if_full_n => B_3_4286_full_n,
        if_write => B_3_4286_write,
        if_dout => B_3_4286_dout,
        if_empty_n => B_3_4286_empty_n,
        if_read => B_3_4286_read);

    B_5_7287_U : component FIFO_DCT_MAT_Multiply2_B_5_7287
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_5_7287_U_ap_dummy_ce,
        if_write_ce => B_5_7287_U_ap_dummy_ce,
        if_din => B_5_7287_din,
        if_full_n => B_5_7287_full_n,
        if_write => B_5_7287_write,
        if_dout => B_5_7287_dout,
        if_empty_n => B_5_7287_empty_n,
        if_read => B_5_7287_read);

    B_6_0288_U : component FIFO_DCT_MAT_Multiply2_B_6_0288
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_6_0288_U_ap_dummy_ce,
        if_write_ce => B_6_0288_U_ap_dummy_ce,
        if_din => B_6_0288_din,
        if_full_n => B_6_0288_full_n,
        if_write => B_6_0288_write,
        if_dout => B_6_0288_dout,
        if_empty_n => B_6_0288_empty_n,
        if_read => B_6_0288_read);

    B_0_1289_U : component FIFO_DCT_MAT_Multiply2_B_0_1289
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_0_1289_U_ap_dummy_ce,
        if_write_ce => B_0_1289_U_ap_dummy_ce,
        if_din => B_0_1289_din,
        if_full_n => B_0_1289_full_n,
        if_write => B_0_1289_write,
        if_dout => B_0_1289_dout,
        if_empty_n => B_0_1289_empty_n,
        if_read => B_0_1289_read);

    B_2_6290_U : component FIFO_DCT_MAT_Multiply2_B_2_6290
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_2_6290_U_ap_dummy_ce,
        if_write_ce => B_2_6290_U_ap_dummy_ce,
        if_din => B_2_6290_din,
        if_full_n => B_2_6290_full_n,
        if_write => B_2_6290_write,
        if_dout => B_2_6290_dout,
        if_empty_n => B_2_6290_empty_n,
        if_read => B_2_6290_read);

    B_3_2291_U : component FIFO_DCT_MAT_Multiply2_B_3_2291
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_3_2291_U_ap_dummy_ce,
        if_write_ce => B_3_2291_U_ap_dummy_ce,
        if_din => B_3_2291_din,
        if_full_n => B_3_2291_full_n,
        if_write => B_3_2291_write,
        if_dout => B_3_2291_dout,
        if_empty_n => B_3_2291_empty_n,
        if_read => B_3_2291_read);

    B_5_0292_U : component FIFO_DCT_MAT_Multiply2_B_5_0292
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_5_0292_U_ap_dummy_ce,
        if_write_ce => B_5_0292_U_ap_dummy_ce,
        if_din => B_5_0292_din,
        if_full_n => B_5_0292_full_n,
        if_write => B_5_0292_write,
        if_dout => B_5_0292_dout,
        if_empty_n => B_5_0292_empty_n,
        if_read => B_5_0292_read);

    B_4_5293_U : component FIFO_DCT_MAT_Multiply2_B_4_5293
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_4_5293_U_ap_dummy_ce,
        if_write_ce => B_4_5293_U_ap_dummy_ce,
        if_din => B_4_5293_din,
        if_full_n => B_4_5293_full_n,
        if_write => B_4_5293_write,
        if_dout => B_4_5293_dout,
        if_empty_n => B_4_5293_empty_n,
        if_read => B_4_5293_read);

    B_5_1294_U : component FIFO_DCT_MAT_Multiply2_B_5_1294
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_5_1294_U_ap_dummy_ce,
        if_write_ce => B_5_1294_U_ap_dummy_ce,
        if_din => B_5_1294_din,
        if_full_n => B_5_1294_full_n,
        if_write => B_5_1294_write,
        if_dout => B_5_1294_dout,
        if_empty_n => B_5_1294_empty_n,
        if_read => B_5_1294_read);

    B_6_2295_U : component FIFO_DCT_MAT_Multiply2_B_6_2295
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_6_2295_U_ap_dummy_ce,
        if_write_ce => B_6_2295_U_ap_dummy_ce,
        if_din => B_6_2295_din,
        if_full_n => B_6_2295_full_n,
        if_write => B_6_2295_write,
        if_dout => B_6_2295_dout,
        if_empty_n => B_6_2295_empty_n,
        if_read => B_6_2295_read);

    B_7_6296_U : component FIFO_DCT_MAT_Multiply2_B_7_6296
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_7_6296_U_ap_dummy_ce,
        if_write_ce => B_7_6296_U_ap_dummy_ce,
        if_din => B_7_6296_din,
        if_full_n => B_7_6296_full_n,
        if_write => B_7_6296_write,
        if_dout => B_7_6296_dout,
        if_empty_n => B_7_6296_empty_n,
        if_read => B_7_6296_read);

    B_1_0297_U : component FIFO_DCT_MAT_Multiply2_B_1_0297
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_1_0297_U_ap_dummy_ce,
        if_write_ce => B_1_0297_U_ap_dummy_ce,
        if_din => B_1_0297_din,
        if_full_n => B_1_0297_full_n,
        if_write => B_1_0297_write,
        if_dout => B_1_0297_dout,
        if_empty_n => B_1_0297_empty_n,
        if_read => B_1_0297_read);

    B_6_4298_U : component FIFO_DCT_MAT_Multiply2_B_6_4298
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => B_6_4298_U_ap_dummy_ce,
        if_write_ce => B_6_4298_U_ap_dummy_ce,
        if_din => B_6_4298_din,
        if_full_n => B_6_4298_full_n,
        if_write => B_6_4298_write,
        if_dout => B_6_4298_dout,
        if_empty_n => B_6_4298_empty_n,
        if_read => B_6_4298_read);

    A_cached_row_7_loc_channel_U : component FIFO_DCT_MAT_Multiply2_A_cached_row_7_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => A_cached_row_7_loc_channel_U_ap_dummy_ce,
        if_write_ce => A_cached_row_7_loc_channel_U_ap_dummy_ce,
        if_din => A_cached_row_7_loc_channel_din,
        if_full_n => A_cached_row_7_loc_channel_full_n,
        if_write => A_cached_row_7_loc_channel_write,
        if_dout => A_cached_row_7_loc_channel_dout,
        if_empty_n => A_cached_row_7_loc_channel_empty_n,
        if_read => A_cached_row_7_loc_channel_read);

    A_cached_row_6_loc_channel_U : component FIFO_DCT_MAT_Multiply2_A_cached_row_6_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => A_cached_row_6_loc_channel_U_ap_dummy_ce,
        if_write_ce => A_cached_row_6_loc_channel_U_ap_dummy_ce,
        if_din => A_cached_row_6_loc_channel_din,
        if_full_n => A_cached_row_6_loc_channel_full_n,
        if_write => A_cached_row_6_loc_channel_write,
        if_dout => A_cached_row_6_loc_channel_dout,
        if_empty_n => A_cached_row_6_loc_channel_empty_n,
        if_read => A_cached_row_6_loc_channel_read);

    A_cached_row_5_loc_channel_U : component FIFO_DCT_MAT_Multiply2_A_cached_row_5_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => A_cached_row_5_loc_channel_U_ap_dummy_ce,
        if_write_ce => A_cached_row_5_loc_channel_U_ap_dummy_ce,
        if_din => A_cached_row_5_loc_channel_din,
        if_full_n => A_cached_row_5_loc_channel_full_n,
        if_write => A_cached_row_5_loc_channel_write,
        if_dout => A_cached_row_5_loc_channel_dout,
        if_empty_n => A_cached_row_5_loc_channel_empty_n,
        if_read => A_cached_row_5_loc_channel_read);

    A_cached_row_4_loc_channel_U : component FIFO_DCT_MAT_Multiply2_A_cached_row_4_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => A_cached_row_4_loc_channel_U_ap_dummy_ce,
        if_write_ce => A_cached_row_4_loc_channel_U_ap_dummy_ce,
        if_din => A_cached_row_4_loc_channel_din,
        if_full_n => A_cached_row_4_loc_channel_full_n,
        if_write => A_cached_row_4_loc_channel_write,
        if_dout => A_cached_row_4_loc_channel_dout,
        if_empty_n => A_cached_row_4_loc_channel_empty_n,
        if_read => A_cached_row_4_loc_channel_read);

    A_cached_row_3_loc_channel_U : component FIFO_DCT_MAT_Multiply2_A_cached_row_3_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => A_cached_row_3_loc_channel_U_ap_dummy_ce,
        if_write_ce => A_cached_row_3_loc_channel_U_ap_dummy_ce,
        if_din => A_cached_row_3_loc_channel_din,
        if_full_n => A_cached_row_3_loc_channel_full_n,
        if_write => A_cached_row_3_loc_channel_write,
        if_dout => A_cached_row_3_loc_channel_dout,
        if_empty_n => A_cached_row_3_loc_channel_empty_n,
        if_read => A_cached_row_3_loc_channel_read);

    A_cached_row_2_loc_channel_U : component FIFO_DCT_MAT_Multiply2_A_cached_row_2_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => A_cached_row_2_loc_channel_U_ap_dummy_ce,
        if_write_ce => A_cached_row_2_loc_channel_U_ap_dummy_ce,
        if_din => A_cached_row_2_loc_channel_din,
        if_full_n => A_cached_row_2_loc_channel_full_n,
        if_write => A_cached_row_2_loc_channel_write,
        if_dout => A_cached_row_2_loc_channel_dout,
        if_empty_n => A_cached_row_2_loc_channel_empty_n,
        if_read => A_cached_row_2_loc_channel_read);

    A_cached_row_1_loc_channel_U : component FIFO_DCT_MAT_Multiply2_A_cached_row_1_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => A_cached_row_1_loc_channel_U_ap_dummy_ce,
        if_write_ce => A_cached_row_1_loc_channel_U_ap_dummy_ce,
        if_din => A_cached_row_1_loc_channel_din,
        if_full_n => A_cached_row_1_loc_channel_full_n,
        if_write => A_cached_row_1_loc_channel_write,
        if_dout => A_cached_row_1_loc_channel_dout,
        if_empty_n => A_cached_row_1_loc_channel_empty_n,
        if_read => A_cached_row_1_loc_channel_read);

    A_cached_row_0_loc_channel_U : component FIFO_DCT_MAT_Multiply2_A_cached_row_0_loc_channel
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => A_cached_row_0_loc_channel_U_ap_dummy_ce,
        if_write_ce => A_cached_row_0_loc_channel_U_ap_dummy_ce,
        if_din => A_cached_row_0_loc_channel_din,
        if_full_n => A_cached_row_0_loc_channel_full_n,
        if_write => A_cached_row_0_loc_channel_write,
        if_dout => A_cached_row_0_loc_channel_dout,
        if_empty_n => A_cached_row_0_loc_channel_empty_n,
        if_read => A_cached_row_0_loc_channel_read);





    -- ap_reg_procdone_DCT_MAT_Multiply2_Loop_Col_proc291_U0 assign process. --
    ap_reg_procdone_DCT_MAT_Multiply2_Loop_Col_proc291_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_DCT_MAT_Multiply2_Loop_Col_proc291_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_DCT_MAT_Multiply2_Loop_Col_proc291_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_done)) then 
                    ap_reg_procdone_DCT_MAT_Multiply2_Loop_Col_proc291_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_DCT_MAT_Multiply2_Loop_Row_proc525_U0 assign process. --
    ap_reg_procdone_DCT_MAT_Multiply2_Loop_Row_proc525_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_DCT_MAT_Multiply2_Loop_Row_proc525_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_DCT_MAT_Multiply2_Loop_Row_proc525_U0 <= ap_const_logic_0;
                elsif ((DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done = ap_const_logic_1)) then 
                    ap_reg_procdone_DCT_MAT_Multiply2_Loop_Row_proc525_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_A_cached_row_0_loc_channel_full_n assign process. --
    ap_reg_ready_A_cached_row_0_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_A_cached_row_0_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done = ap_const_logic_1) and (DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_A_cached_row_0_loc_channel_full_n <= ap_const_logic_0;
                elsif (((DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = A_cached_row_0_loc_channel_full_n))) then 
                    ap_reg_ready_A_cached_row_0_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_A_cached_row_1_loc_channel_full_n assign process. --
    ap_reg_ready_A_cached_row_1_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_A_cached_row_1_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done = ap_const_logic_1) and (DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_A_cached_row_1_loc_channel_full_n <= ap_const_logic_0;
                elsif (((DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = A_cached_row_1_loc_channel_full_n))) then 
                    ap_reg_ready_A_cached_row_1_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_A_cached_row_2_loc_channel_full_n assign process. --
    ap_reg_ready_A_cached_row_2_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_A_cached_row_2_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done = ap_const_logic_1) and (DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_A_cached_row_2_loc_channel_full_n <= ap_const_logic_0;
                elsif (((DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = A_cached_row_2_loc_channel_full_n))) then 
                    ap_reg_ready_A_cached_row_2_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_A_cached_row_3_loc_channel_full_n assign process. --
    ap_reg_ready_A_cached_row_3_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_A_cached_row_3_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done = ap_const_logic_1) and (DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_A_cached_row_3_loc_channel_full_n <= ap_const_logic_0;
                elsif (((DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = A_cached_row_3_loc_channel_full_n))) then 
                    ap_reg_ready_A_cached_row_3_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_A_cached_row_4_loc_channel_full_n assign process. --
    ap_reg_ready_A_cached_row_4_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_A_cached_row_4_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done = ap_const_logic_1) and (DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_A_cached_row_4_loc_channel_full_n <= ap_const_logic_0;
                elsif (((DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = A_cached_row_4_loc_channel_full_n))) then 
                    ap_reg_ready_A_cached_row_4_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_A_cached_row_5_loc_channel_full_n assign process. --
    ap_reg_ready_A_cached_row_5_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_A_cached_row_5_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done = ap_const_logic_1) and (DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_A_cached_row_5_loc_channel_full_n <= ap_const_logic_0;
                elsif (((DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = A_cached_row_5_loc_channel_full_n))) then 
                    ap_reg_ready_A_cached_row_5_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_A_cached_row_6_loc_channel_full_n assign process. --
    ap_reg_ready_A_cached_row_6_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_A_cached_row_6_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done = ap_const_logic_1) and (DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_A_cached_row_6_loc_channel_full_n <= ap_const_logic_0;
                elsif (((DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = A_cached_row_6_loc_channel_full_n))) then 
                    ap_reg_ready_A_cached_row_6_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_A_cached_row_7_loc_channel_full_n assign process. --
    ap_reg_ready_A_cached_row_7_loc_channel_full_n_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_A_cached_row_7_loc_channel_full_n <= ap_const_logic_0;
            else
                if (((DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done = ap_const_logic_1) and (DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_continue = ap_const_logic_1))) then 
                    ap_reg_ready_A_cached_row_7_loc_channel_full_n <= ap_const_logic_0;
                elsif (((DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done = ap_const_logic_1) and (ap_const_logic_1 = A_cached_row_7_loc_channel_full_n))) then 
                    ap_reg_ready_A_cached_row_7_loc_channel_full_n <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_CS assign process. --
    ap_CS_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_CS <= ap_const_logic_0;
        end if;
    end process;
    A_address0 <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_address0;
    A_address1 <= ap_const_lv6_0;
    A_cached_row_0_loc_channel_U_ap_dummy_ce <= ap_const_logic_1;
    A_cached_row_0_loc_channel_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_7;
    A_cached_row_0_loc_channel_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_ready;
    A_cached_row_0_loc_channel_write <= ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_0_loc_channel;
    A_cached_row_1_loc_channel_U_ap_dummy_ce <= ap_const_logic_1;
    A_cached_row_1_loc_channel_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_6;
    A_cached_row_1_loc_channel_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_ready;
    A_cached_row_1_loc_channel_write <= ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_1_loc_channel;
    A_cached_row_2_loc_channel_U_ap_dummy_ce <= ap_const_logic_1;
    A_cached_row_2_loc_channel_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_5;
    A_cached_row_2_loc_channel_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_ready;
    A_cached_row_2_loc_channel_write <= ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_2_loc_channel;
    A_cached_row_3_loc_channel_U_ap_dummy_ce <= ap_const_logic_1;
    A_cached_row_3_loc_channel_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_4;
    A_cached_row_3_loc_channel_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_ready;
    A_cached_row_3_loc_channel_write <= ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_3_loc_channel;
    A_cached_row_4_loc_channel_U_ap_dummy_ce <= ap_const_logic_1;
    A_cached_row_4_loc_channel_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_3;
    A_cached_row_4_loc_channel_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_ready;
    A_cached_row_4_loc_channel_write <= ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_4_loc_channel;
    A_cached_row_5_loc_channel_U_ap_dummy_ce <= ap_const_logic_1;
    A_cached_row_5_loc_channel_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_2;
    A_cached_row_5_loc_channel_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_ready;
    A_cached_row_5_loc_channel_write <= ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_5_loc_channel;
    A_cached_row_6_loc_channel_U_ap_dummy_ce <= ap_const_logic_1;
    A_cached_row_6_loc_channel_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_1;
    A_cached_row_6_loc_channel_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_ready;
    A_cached_row_6_loc_channel_write <= ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_6_loc_channel;
    A_cached_row_7_loc_channel_U_ap_dummy_ce <= ap_const_logic_1;
    A_cached_row_7_loc_channel_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_return_0;
    A_cached_row_7_loc_channel_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_ready;
    A_cached_row_7_loc_channel_write <= ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_7_loc_channel;
    A_ce0 <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_ce0;
    A_ce1 <= ap_const_logic_0;
    A_d0 <= ap_const_lv32_0;
    A_d1 <= ap_const_lv32_0;
    A_we0 <= ap_const_logic_0;
    A_we1 <= ap_const_logic_0;
    B_0_0274_U_ap_dummy_ce <= ap_const_logic_1;
    B_0_0274_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_0_out_din;
    B_0_0274_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_0_read;
    B_0_0274_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_0_out_write;
    B_0_1289_U_ap_dummy_ce <= ap_const_logic_1;
    B_0_1289_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_1_out_din;
    B_0_1289_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_1_read;
    B_0_1289_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_1_out_write;
    B_0_1_read_ap_ack <= ap_const_logic_1;
    B_0_2239_U_ap_dummy_ce <= ap_const_logic_1;
    B_0_2239_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_2_out_din;
    B_0_2239_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_2_read;
    B_0_2239_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_2_out_write;
    B_0_2_read_ap_ack <= ap_const_logic_1;
    B_0_3263_U_ap_dummy_ce <= ap_const_logic_1;
    B_0_3263_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_3_out_din;
    B_0_3263_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_3_read;
    B_0_3263_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_3_out_write;
    B_0_3_read_ap_ack <= ap_const_logic_1;
    B_0_4260_U_ap_dummy_ce <= ap_const_logic_1;
    B_0_4260_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_4_out_din;
    B_0_4260_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_4_read;
    B_0_4260_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_4_out_write;
    B_0_5276_U_ap_dummy_ce <= ap_const_logic_1;
    B_0_5276_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_5_out_din;
    B_0_5276_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_5_read;
    B_0_5276_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_5_out_write;
    B_0_5_read_ap_ack <= ap_const_logic_1;
    B_0_6272_U_ap_dummy_ce <= ap_const_logic_1;
    B_0_6272_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_6_out_din;
    B_0_6272_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_6_read;
    B_0_6272_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_6_out_write;
    B_0_6_read_ap_ack <= ap_const_logic_1;
    B_0_7250_U_ap_dummy_ce <= ap_const_logic_1;
    B_0_7250_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_7_out_din;
    B_0_7250_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_7_read;
    B_0_7250_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_7_out_write;
    B_0_7_read_ap_ack <= ap_const_logic_1;
    B_1_0297_U_ap_dummy_ce <= ap_const_logic_1;
    B_1_0297_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_0_out_din;
    B_1_0297_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_0_read;
    B_1_0297_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_0_out_write;
    B_1_0_read_ap_ack <= ap_const_logic_1;
    B_1_1236_U_ap_dummy_ce <= ap_const_logic_1;
    B_1_1236_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_1_out_din;
    B_1_1236_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_1_read;
    B_1_1236_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_1_out_write;
    B_1_2249_U_ap_dummy_ce <= ap_const_logic_1;
    B_1_2249_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_2_out_din;
    B_1_2249_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_2_read;
    B_1_2249_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_2_out_write;
    B_1_2_read_ap_ack <= ap_const_logic_1;
    B_1_3275_U_ap_dummy_ce <= ap_const_logic_1;
    B_1_3275_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_3_out_din;
    B_1_3275_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_3_read;
    B_1_3275_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_3_out_write;
    B_1_3_read_ap_ack <= ap_const_logic_1;
    B_1_4237_U_ap_dummy_ce <= ap_const_logic_1;
    B_1_4237_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_4_out_din;
    B_1_4237_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_4_read;
    B_1_4237_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_4_out_write;
    B_1_4_read_ap_ack <= ap_const_logic_1;
    B_1_5271_U_ap_dummy_ce <= ap_const_logic_1;
    B_1_5271_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_5_out_din;
    B_1_5271_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_5_read;
    B_1_5271_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_5_out_write;
    B_1_5_read_ap_ack <= ap_const_logic_1;
    B_1_6251_U_ap_dummy_ce <= ap_const_logic_1;
    B_1_6251_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_6_out_din;
    B_1_6251_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_6_read;
    B_1_6251_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_6_out_write;
    B_1_6_read_ap_ack <= ap_const_logic_1;
    B_1_7244_U_ap_dummy_ce <= ap_const_logic_1;
    B_1_7244_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_7_out_din;
    B_1_7244_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_7_read;
    B_1_7244_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_7_out_write;
    B_1_7_read_ap_ack <= ap_const_logic_1;
    B_2_0261_U_ap_dummy_ce <= ap_const_logic_1;
    B_2_0261_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_0_out_din;
    B_2_0261_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_0_read;
    B_2_0261_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_0_out_write;
    B_2_0_read_ap_ack <= ap_const_logic_1;
    B_2_1255_U_ap_dummy_ce <= ap_const_logic_1;
    B_2_1255_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_1_out_din;
    B_2_1255_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_1_read;
    B_2_1255_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_1_out_write;
    B_2_1_read_ap_ack <= ap_const_logic_1;
    B_2_2266_U_ap_dummy_ce <= ap_const_logic_1;
    B_2_2266_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_2_out_din;
    B_2_2266_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_2_read;
    B_2_2266_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_2_out_write;
    B_2_3269_U_ap_dummy_ce <= ap_const_logic_1;
    B_2_3269_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_3_out_din;
    B_2_3269_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_3_read;
    B_2_3269_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_3_out_write;
    B_2_3_read_ap_ack <= ap_const_logic_1;
    B_2_4258_U_ap_dummy_ce <= ap_const_logic_1;
    B_2_4258_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_4_out_din;
    B_2_4258_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_4_read;
    B_2_4258_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_4_out_write;
    B_2_4_read_ap_ack <= ap_const_logic_1;
    B_2_5257_U_ap_dummy_ce <= ap_const_logic_1;
    B_2_5257_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_5_out_din;
    B_2_5257_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_5_read;
    B_2_5257_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_5_out_write;
    B_2_5_read_ap_ack <= ap_const_logic_1;
    B_2_6290_U_ap_dummy_ce <= ap_const_logic_1;
    B_2_6290_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_6_out_din;
    B_2_6290_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_6_read;
    B_2_6290_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_6_out_write;
    B_2_6_read_ap_ack <= ap_const_logic_1;
    B_2_7277_U_ap_dummy_ce <= ap_const_logic_1;
    B_2_7277_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_7_out_din;
    B_2_7277_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_7_read;
    B_2_7277_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_7_out_write;
    B_2_7_read_ap_ack <= ap_const_logic_1;
    B_3_0241_U_ap_dummy_ce <= ap_const_logic_1;
    B_3_0241_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_0_out_din;
    B_3_0241_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_0_read;
    B_3_0241_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_0_out_write;
    B_3_0_read_ap_ack <= ap_const_logic_1;
    B_3_1273_U_ap_dummy_ce <= ap_const_logic_1;
    B_3_1273_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_1_out_din;
    B_3_1273_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_1_read;
    B_3_1273_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_1_out_write;
    B_3_1_read_ap_ack <= ap_const_logic_1;
    B_3_2291_U_ap_dummy_ce <= ap_const_logic_1;
    B_3_2291_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_2_out_din;
    B_3_2291_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_2_read;
    B_3_2291_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_2_out_write;
    B_3_2_read_ap_ack <= ap_const_logic_1;
    B_3_3279_U_ap_dummy_ce <= ap_const_logic_1;
    B_3_3279_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_3_out_din;
    B_3_3279_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_3_read;
    B_3_3279_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_3_out_write;
    B_3_4286_U_ap_dummy_ce <= ap_const_logic_1;
    B_3_4286_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_4_out_din;
    B_3_4286_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_4_read;
    B_3_4286_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_4_out_write;
    B_3_4_read_ap_ack <= ap_const_logic_1;
    B_3_5282_U_ap_dummy_ce <= ap_const_logic_1;
    B_3_5282_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_5_out_din;
    B_3_5282_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_5_read;
    B_3_5282_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_5_out_write;
    B_3_5_read_ap_ack <= ap_const_logic_1;
    B_3_6248_U_ap_dummy_ce <= ap_const_logic_1;
    B_3_6248_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_6_out_din;
    B_3_6248_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_6_read;
    B_3_6248_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_6_out_write;
    B_3_6_read_ap_ack <= ap_const_logic_1;
    B_3_7264_U_ap_dummy_ce <= ap_const_logic_1;
    B_3_7264_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_7_out_din;
    B_3_7264_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_7_read;
    B_3_7264_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_7_out_write;
    B_3_7_read_ap_ack <= ap_const_logic_1;
    B_4_0267_U_ap_dummy_ce <= ap_const_logic_1;
    B_4_0267_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_0_out_din;
    B_4_0267_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_0_read;
    B_4_0267_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_0_out_write;
    B_4_1253_U_ap_dummy_ce <= ap_const_logic_1;
    B_4_1253_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_1_out_din;
    B_4_1253_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_1_read;
    B_4_1253_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_1_out_write;
    B_4_1_read_ap_ack <= ap_const_logic_1;
    B_4_2268_U_ap_dummy_ce <= ap_const_logic_1;
    B_4_2268_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_2_out_din;
    B_4_2268_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_2_read;
    B_4_2268_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_2_out_write;
    B_4_2_read_ap_ack <= ap_const_logic_1;
    B_4_3243_U_ap_dummy_ce <= ap_const_logic_1;
    B_4_3243_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_3_out_din;
    B_4_3243_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_3_read;
    B_4_3243_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_3_out_write;
    B_4_3_read_ap_ack <= ap_const_logic_1;
    B_4_4284_U_ap_dummy_ce <= ap_const_logic_1;
    B_4_4284_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_4_out_din;
    B_4_4284_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_4_read;
    B_4_4284_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_4_out_write;
    B_4_5293_U_ap_dummy_ce <= ap_const_logic_1;
    B_4_5293_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_5_out_din;
    B_4_5293_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_5_read;
    B_4_5293_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_5_out_write;
    B_4_5_read_ap_ack <= ap_const_logic_1;
    B_4_6270_U_ap_dummy_ce <= ap_const_logic_1;
    B_4_6270_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_6_out_din;
    B_4_6270_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_6_read;
    B_4_6270_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_6_out_write;
    B_4_6_read_ap_ack <= ap_const_logic_1;
    B_4_7259_U_ap_dummy_ce <= ap_const_logic_1;
    B_4_7259_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_7_out_din;
    B_4_7259_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_7_read;
    B_4_7259_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_7_out_write;
    B_4_7_read_ap_ack <= ap_const_logic_1;
    B_5_0292_U_ap_dummy_ce <= ap_const_logic_1;
    B_5_0292_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_0_out_din;
    B_5_0292_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_0_read;
    B_5_0292_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_0_out_write;
    B_5_0_read_ap_ack <= ap_const_logic_1;
    B_5_1294_U_ap_dummy_ce <= ap_const_logic_1;
    B_5_1294_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_1_out_din;
    B_5_1294_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_1_read;
    B_5_1294_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_1_out_write;
    B_5_1_read_ap_ack <= ap_const_logic_1;
    B_5_2235_U_ap_dummy_ce <= ap_const_logic_1;
    B_5_2235_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_2_out_din;
    B_5_2235_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_2_read;
    B_5_2235_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_2_out_write;
    B_5_2_read_ap_ack <= ap_const_logic_1;
    B_5_3245_U_ap_dummy_ce <= ap_const_logic_1;
    B_5_3245_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_3_out_din;
    B_5_3245_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_3_read;
    B_5_3245_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_3_out_write;
    B_5_3_read_ap_ack <= ap_const_logic_1;
    B_5_4278_U_ap_dummy_ce <= ap_const_logic_1;
    B_5_4278_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_4_out_din;
    B_5_4278_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_4_read;
    B_5_4278_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_4_out_write;
    B_5_4_read_ap_ack <= ap_const_logic_1;
    B_5_5281_U_ap_dummy_ce <= ap_const_logic_1;
    B_5_5281_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_5_out_din;
    B_5_5281_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_5_read;
    B_5_5281_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_5_out_write;
    B_5_6256_U_ap_dummy_ce <= ap_const_logic_1;
    B_5_6256_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_6_out_din;
    B_5_6256_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_6_read;
    B_5_6256_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_6_out_write;
    B_5_6_read_ap_ack <= ap_const_logic_1;
    B_5_7287_U_ap_dummy_ce <= ap_const_logic_1;
    B_5_7287_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_7_out_din;
    B_5_7287_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_7_read;
    B_5_7287_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_7_out_write;
    B_5_7_read_ap_ack <= ap_const_logic_1;
    B_6_0288_U_ap_dummy_ce <= ap_const_logic_1;
    B_6_0288_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_0_out_din;
    B_6_0288_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_0_read;
    B_6_0288_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_0_out_write;
    B_6_0_read_ap_ack <= ap_const_logic_1;
    B_6_1254_U_ap_dummy_ce <= ap_const_logic_1;
    B_6_1254_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_1_out_din;
    B_6_1254_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_1_read;
    B_6_1254_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_1_out_write;
    B_6_1_read_ap_ack <= ap_const_logic_1;
    B_6_2295_U_ap_dummy_ce <= ap_const_logic_1;
    B_6_2295_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_2_out_din;
    B_6_2295_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_2_read;
    B_6_2295_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_2_out_write;
    B_6_2_read_ap_ack <= ap_const_logic_1;
    B_6_3262_U_ap_dummy_ce <= ap_const_logic_1;
    B_6_3262_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_3_out_din;
    B_6_3262_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_3_read;
    B_6_3262_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_3_out_write;
    B_6_3_read_ap_ack <= ap_const_logic_1;
    B_6_4298_U_ap_dummy_ce <= ap_const_logic_1;
    B_6_4298_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_4_out_din;
    B_6_4298_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_4_read;
    B_6_4298_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_4_out_write;
    B_6_4_read_ap_ack <= ap_const_logic_1;
    B_6_5238_U_ap_dummy_ce <= ap_const_logic_1;
    B_6_5238_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_5_out_din;
    B_6_5238_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_5_read;
    B_6_5238_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_5_out_write;
    B_6_5_read_ap_ack <= ap_const_logic_1;
    B_6_6265_U_ap_dummy_ce <= ap_const_logic_1;
    B_6_6265_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_6_out_din;
    B_6_6265_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_6_read;
    B_6_6265_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_6_out_write;
    B_6_7285_U_ap_dummy_ce <= ap_const_logic_1;
    B_6_7285_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_7_out_din;
    B_6_7285_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_7_read;
    B_6_7285_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_7_out_write;
    B_6_7_read_ap_ack <= ap_const_logic_1;
    B_7_0247_U_ap_dummy_ce <= ap_const_logic_1;
    B_7_0247_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_0_out_din;
    B_7_0247_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_0_read;
    B_7_0247_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_0_out_write;
    B_7_0_read_ap_ack <= ap_const_logic_1;
    B_7_1283_U_ap_dummy_ce <= ap_const_logic_1;
    B_7_1283_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_1_out_din;
    B_7_1283_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_1_read;
    B_7_1283_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_1_out_write;
    B_7_1_read_ap_ack <= ap_const_logic_1;
    B_7_2240_U_ap_dummy_ce <= ap_const_logic_1;
    B_7_2240_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_2_out_din;
    B_7_2240_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_2_read;
    B_7_2240_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_2_out_write;
    B_7_2_read_ap_ack <= ap_const_logic_1;
    B_7_3252_U_ap_dummy_ce <= ap_const_logic_1;
    B_7_3252_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_3_out_din;
    B_7_3252_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_3_read;
    B_7_3252_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_3_out_write;
    B_7_3_read_ap_ack <= ap_const_logic_1;
    B_7_4280_U_ap_dummy_ce <= ap_const_logic_1;
    B_7_4280_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_4_out_din;
    B_7_4280_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_4_read;
    B_7_4280_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_4_out_write;
    B_7_4_read_ap_ack <= ap_const_logic_1;
    B_7_5242_U_ap_dummy_ce <= ap_const_logic_1;
    B_7_5242_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_5_out_din;
    B_7_5242_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_5_read;
    B_7_5242_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_5_out_write;
    B_7_5_read_ap_ack <= ap_const_logic_1;
    B_7_6296_U_ap_dummy_ce <= ap_const_logic_1;
    B_7_6296_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_6_out_din;
    B_7_6296_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_6_read;
    B_7_6296_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_6_out_write;
    B_7_6_read_ap_ack <= ap_const_logic_1;
    B_7_7246_U_ap_dummy_ce <= ap_const_logic_1;
    B_7_7246_din <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_7_out_din;
    B_7_7246_read <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_7_read;
    B_7_7246_write <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_7_out_write;
    C_din <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_C_din;
    C_write <= DCT_MAT_Multiply2_Loop_Col_proc291_U0_C_write;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_0_dout <= B_0_0274_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_0_empty_n <= B_0_0274_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_1_dout <= B_0_1289_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_1_empty_n <= B_0_1289_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_2_dout <= B_0_2239_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_2_empty_n <= B_0_2239_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_3_dout <= B_0_3263_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_3_empty_n <= B_0_3263_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_4_dout <= B_0_4260_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_4_empty_n <= B_0_4260_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_5_dout <= B_0_5276_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_5_empty_n <= B_0_5276_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_6_dout <= B_0_6272_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_6_empty_n <= B_0_6272_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_7_dout <= B_0_7250_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_0_7_empty_n <= B_0_7250_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_0_dout <= B_1_0297_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_0_empty_n <= B_1_0297_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_1_dout <= B_1_1236_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_1_empty_n <= B_1_1236_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_2_dout <= B_1_2249_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_2_empty_n <= B_1_2249_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_3_dout <= B_1_3275_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_3_empty_n <= B_1_3275_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_4_dout <= B_1_4237_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_4_empty_n <= B_1_4237_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_5_dout <= B_1_5271_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_5_empty_n <= B_1_5271_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_6_dout <= B_1_6251_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_6_empty_n <= B_1_6251_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_7_dout <= B_1_7244_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_1_7_empty_n <= B_1_7244_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_0_dout <= B_2_0261_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_0_empty_n <= B_2_0261_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_1_dout <= B_2_1255_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_1_empty_n <= B_2_1255_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_2_dout <= B_2_2266_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_2_empty_n <= B_2_2266_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_3_dout <= B_2_3269_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_3_empty_n <= B_2_3269_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_4_dout <= B_2_4258_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_4_empty_n <= B_2_4258_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_5_dout <= B_2_5257_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_5_empty_n <= B_2_5257_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_6_dout <= B_2_6290_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_6_empty_n <= B_2_6290_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_7_dout <= B_2_7277_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_2_7_empty_n <= B_2_7277_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_0_dout <= B_3_0241_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_0_empty_n <= B_3_0241_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_1_dout <= B_3_1273_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_1_empty_n <= B_3_1273_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_2_dout <= B_3_2291_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_2_empty_n <= B_3_2291_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_3_dout <= B_3_3279_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_3_empty_n <= B_3_3279_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_4_dout <= B_3_4286_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_4_empty_n <= B_3_4286_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_5_dout <= B_3_5282_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_5_empty_n <= B_3_5282_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_6_dout <= B_3_6248_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_6_empty_n <= B_3_6248_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_7_dout <= B_3_7264_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_3_7_empty_n <= B_3_7264_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_0_dout <= B_4_0267_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_0_empty_n <= B_4_0267_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_1_dout <= B_4_1253_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_1_empty_n <= B_4_1253_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_2_dout <= B_4_2268_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_2_empty_n <= B_4_2268_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_3_dout <= B_4_3243_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_3_empty_n <= B_4_3243_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_4_dout <= B_4_4284_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_4_empty_n <= B_4_4284_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_5_dout <= B_4_5293_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_5_empty_n <= B_4_5293_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_6_dout <= B_4_6270_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_6_empty_n <= B_4_6270_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_7_dout <= B_4_7259_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_4_7_empty_n <= B_4_7259_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_0_dout <= B_5_0292_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_0_empty_n <= B_5_0292_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_1_dout <= B_5_1294_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_1_empty_n <= B_5_1294_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_2_dout <= B_5_2235_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_2_empty_n <= B_5_2235_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_3_dout <= B_5_3245_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_3_empty_n <= B_5_3245_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_4_dout <= B_5_4278_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_4_empty_n <= B_5_4278_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_5_dout <= B_5_5281_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_5_empty_n <= B_5_5281_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_6_dout <= B_5_6256_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_6_empty_n <= B_5_6256_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_7_dout <= B_5_7287_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_5_7_empty_n <= B_5_7287_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_0_dout <= B_6_0288_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_0_empty_n <= B_6_0288_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_1_dout <= B_6_1254_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_1_empty_n <= B_6_1254_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_2_dout <= B_6_2295_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_2_empty_n <= B_6_2295_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_3_dout <= B_6_3262_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_3_empty_n <= B_6_3262_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_4_dout <= B_6_4298_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_4_empty_n <= B_6_4298_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_5_dout <= B_6_5238_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_5_empty_n <= B_6_5238_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_6_dout <= B_6_6265_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_6_empty_n <= B_6_6265_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_7_dout <= B_6_7285_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_6_7_empty_n <= B_6_7285_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_0_dout <= B_7_0247_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_0_empty_n <= B_7_0247_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_1_dout <= B_7_1283_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_1_empty_n <= B_7_1283_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_2_dout <= B_7_2240_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_2_empty_n <= B_7_2240_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_3_dout <= B_7_3252_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_3_empty_n <= B_7_3252_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_4_dout <= B_7_4280_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_4_empty_n <= B_7_4280_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_5_dout <= B_7_5242_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_5_empty_n <= B_7_5242_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_6_dout <= B_7_6296_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_6_empty_n <= B_7_6296_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_7_dout <= B_7_7246_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_B_7_7_empty_n <= B_7_7246_empty_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_C_full_n <= C_full_n;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_continue <= ap_sig_hs_continue;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_start <= (A_cached_row_7_loc_channel_empty_n and A_cached_row_6_loc_channel_empty_n and A_cached_row_5_loc_channel_empty_n and A_cached_row_4_loc_channel_empty_n and A_cached_row_3_loc_channel_empty_n and A_cached_row_2_loc_channel_empty_n and A_cached_row_1_loc_channel_empty_n and A_cached_row_0_loc_channel_empty_n);
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read <= A_cached_row_0_loc_channel_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read1 <= A_cached_row_1_loc_channel_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read2 <= A_cached_row_2_loc_channel_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read3 <= A_cached_row_3_loc_channel_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read4 <= A_cached_row_4_loc_channel_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read5 <= A_cached_row_5_loc_channel_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read6 <= A_cached_row_6_loc_channel_dout;
    DCT_MAT_Multiply2_Loop_Col_proc291_U0_p_read7 <= A_cached_row_7_loc_channel_dout;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_q0 <= A_q0;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_0_out_full_n <= B_0_0274_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_1_out_full_n <= B_0_1289_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_2_out_full_n <= B_0_2239_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_3_out_full_n <= B_0_3263_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_4_out_full_n <= B_0_4260_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_5_out_full_n <= B_0_5276_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_6_out_full_n <= B_0_6272_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_0_7_out_full_n <= B_0_7250_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_0_out_full_n <= B_1_0297_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_1_out_full_n <= B_1_1236_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_2_out_full_n <= B_1_2249_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_3_out_full_n <= B_1_3275_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_4_out_full_n <= B_1_4237_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_5_out_full_n <= B_1_5271_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_6_out_full_n <= B_1_6251_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_1_7_out_full_n <= B_1_7244_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_0_out_full_n <= B_2_0261_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_1_out_full_n <= B_2_1255_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_2_out_full_n <= B_2_2266_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_3_out_full_n <= B_2_3269_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_4_out_full_n <= B_2_4258_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_5_out_full_n <= B_2_5257_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_6_out_full_n <= B_2_6290_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_2_7_out_full_n <= B_2_7277_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_0_out_full_n <= B_3_0241_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_1_out_full_n <= B_3_1273_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_2_out_full_n <= B_3_2291_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_3_out_full_n <= B_3_3279_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_4_out_full_n <= B_3_4286_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_5_out_full_n <= B_3_5282_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_6_out_full_n <= B_3_6248_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_3_7_out_full_n <= B_3_7264_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_0_out_full_n <= B_4_0267_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_1_out_full_n <= B_4_1253_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_2_out_full_n <= B_4_2268_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_3_out_full_n <= B_4_3243_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_4_out_full_n <= B_4_4284_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_5_out_full_n <= B_4_5293_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_6_out_full_n <= B_4_6270_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_4_7_out_full_n <= B_4_7259_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_0_out_full_n <= B_5_0292_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_1_out_full_n <= B_5_1294_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_2_out_full_n <= B_5_2235_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_3_out_full_n <= B_5_3245_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_4_out_full_n <= B_5_4278_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_5_out_full_n <= B_5_5281_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_6_out_full_n <= B_5_6256_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_5_7_out_full_n <= B_5_7287_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_0_out_full_n <= B_6_0288_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_1_out_full_n <= B_6_1254_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_2_out_full_n <= B_6_2295_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_3_out_full_n <= B_6_3262_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_4_out_full_n <= B_6_4298_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_5_out_full_n <= B_6_5238_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_6_out_full_n <= B_6_6265_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_6_7_out_full_n <= B_6_7285_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_0_out_full_n <= B_7_0247_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_1_out_full_n <= B_7_1283_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_2_out_full_n <= B_7_2240_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_3_out_full_n <= B_7_3252_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_4_out_full_n <= B_7_4280_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_5_out_full_n <= B_7_5242_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_6_out_full_n <= B_7_6296_full_n;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_B_7_7_out_full_n <= B_7_7246_full_n;

    -- DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_continue assign process. --
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_continue_assign_proc : process(ap_sig_ready_A_cached_row_7_loc_channel_full_n, ap_sig_ready_A_cached_row_5_loc_channel_full_n, ap_sig_ready_A_cached_row_3_loc_channel_full_n, ap_sig_ready_A_cached_row_2_loc_channel_full_n, ap_sig_ready_A_cached_row_6_loc_channel_full_n, ap_sig_ready_A_cached_row_4_loc_channel_full_n, ap_sig_ready_A_cached_row_0_loc_channel_full_n, ap_sig_ready_A_cached_row_1_loc_channel_full_n)
    begin
        if (((ap_const_logic_1 = ap_sig_ready_A_cached_row_7_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ready_A_cached_row_5_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ready_A_cached_row_3_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ready_A_cached_row_2_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ready_A_cached_row_6_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ready_A_cached_row_4_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ready_A_cached_row_0_loc_channel_full_n) and (ap_const_logic_1 = ap_sig_ready_A_cached_row_1_loc_channel_full_n))) then 
            DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_continue <= ap_const_logic_1;
        else 
            DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_start <= ap_start;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read24 <= B_1_4_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read25 <= B_6_5_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read26 <= B_0_2_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read27 <= B_7_2_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read28 <= B_3_0_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read29 <= B_7_5_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read30 <= B_4_3_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read31 <= B_1_7_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read32 <= B_5_3_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read34 <= B_7_0_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read35 <= B_3_6_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read36 <= B_1_2_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read37 <= B_0_7_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read38 <= B_1_6_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read39 <= B_7_3_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read40 <= B_4_1_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read41 <= B_6_1_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read42 <= B_2_1_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read43 <= B_5_6_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read44 <= B_2_5_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read45 <= B_2_4_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read46 <= B_4_7_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read48 <= B_2_0_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read49 <= B_6_3_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read50 <= B_0_3_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read51 <= B_3_7_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read55 <= B_4_2_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read56 <= B_2_3_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read57 <= B_4_6_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read58 <= B_1_5_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read59 <= B_0_6_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read60 <= B_3_1_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read62 <= B_1_3_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read63 <= B_0_5_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read64 <= B_2_7_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read65 <= B_5_4_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read67 <= B_7_4_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read69 <= B_3_5_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read70 <= B_7_1_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read72 <= B_6_7_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read73 <= B_3_4_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read74 <= B_5_7_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read75 <= B_6_0_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read76 <= B_0_1_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read77 <= B_2_6_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read78 <= B_3_2_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read79 <= B_5_0_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read8 <= B_5_2_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read80 <= B_4_5_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read81 <= B_5_1_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read82 <= B_6_2_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read83 <= B_7_6_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read84 <= B_1_0_read;
    DCT_MAT_Multiply2_Loop_Row_proc525_U0_p_read85 <= B_6_4_read;

    -- ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_0_loc_channel assign process. --
    ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_0_loc_channel_assign_proc : process(DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done, ap_reg_ready_A_cached_row_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_A_cached_row_0_loc_channel_full_n)) then 
            ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_0_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_0_loc_channel <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_1_loc_channel assign process. --
    ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_1_loc_channel_assign_proc : process(DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done, ap_reg_ready_A_cached_row_1_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_A_cached_row_1_loc_channel_full_n)) then 
            ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_1_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_1_loc_channel <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_2_loc_channel assign process. --
    ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_2_loc_channel_assign_proc : process(DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done, ap_reg_ready_A_cached_row_2_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_A_cached_row_2_loc_channel_full_n)) then 
            ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_2_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_2_loc_channel <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_3_loc_channel assign process. --
    ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_3_loc_channel_assign_proc : process(DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done, ap_reg_ready_A_cached_row_3_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_A_cached_row_3_loc_channel_full_n)) then 
            ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_3_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_3_loc_channel <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_4_loc_channel assign process. --
    ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_4_loc_channel_assign_proc : process(DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done, ap_reg_ready_A_cached_row_4_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_A_cached_row_4_loc_channel_full_n)) then 
            ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_4_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_4_loc_channel <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_5_loc_channel assign process. --
    ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_5_loc_channel_assign_proc : process(DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done, ap_reg_ready_A_cached_row_5_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_A_cached_row_5_loc_channel_full_n)) then 
            ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_5_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_5_loc_channel <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_6_loc_channel assign process. --
    ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_6_loc_channel_assign_proc : process(DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done, ap_reg_ready_A_cached_row_6_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_A_cached_row_6_loc_channel_full_n)) then 
            ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_6_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_6_loc_channel <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_7_loc_channel assign process. --
    ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_7_loc_channel_assign_proc : process(DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done, ap_reg_ready_A_cached_row_7_loc_channel_full_n)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_A_cached_row_7_loc_channel_full_n)) then 
            ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_7_loc_channel <= ap_const_logic_0;
        else 
            ap_chn_write_DCT_MAT_Multiply2_Loop_Row_proc525_U0_A_cached_row_7_loc_channel <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_done;
        end if; 
    end process;

    ap_done <= ap_sig_hs_done;

    -- ap_idle assign process. --
    ap_idle_assign_proc : process(DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_idle, DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_idle, A_cached_row_7_loc_channel_empty_n, A_cached_row_6_loc_channel_empty_n, A_cached_row_5_loc_channel_empty_n, A_cached_row_4_loc_channel_empty_n, A_cached_row_3_loc_channel_empty_n, A_cached_row_2_loc_channel_empty_n, A_cached_row_1_loc_channel_empty_n, A_cached_row_0_loc_channel_empty_n)
    begin
        if (((DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_idle = ap_const_logic_1) and (ap_const_logic_1 = DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_idle) and (ap_const_logic_0 = A_cached_row_7_loc_channel_empty_n) and (ap_const_logic_0 = A_cached_row_6_loc_channel_empty_n) and (ap_const_logic_0 = A_cached_row_5_loc_channel_empty_n) and (ap_const_logic_0 = A_cached_row_4_loc_channel_empty_n) and (ap_const_logic_0 = A_cached_row_3_loc_channel_empty_n) and (ap_const_logic_0 = A_cached_row_2_loc_channel_empty_n) and (ap_const_logic_0 = A_cached_row_1_loc_channel_empty_n) and (ap_const_logic_0 = A_cached_row_0_loc_channel_empty_n))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= ap_sig_top_allready;
    ap_sig_hs_continue <= ap_const_logic_1;

    -- ap_sig_hs_done assign process. --
    ap_sig_hs_done_assign_proc : process(DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_done)
    begin
        if ((ap_const_logic_1 = DCT_MAT_Multiply2_Loop_Col_proc291_U0_ap_done)) then 
            ap_sig_hs_done <= ap_const_logic_1;
        else 
            ap_sig_hs_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ready_A_cached_row_0_loc_channel_full_n assign process. --
    ap_sig_ready_A_cached_row_0_loc_channel_full_n_assign_proc : process(A_cached_row_0_loc_channel_full_n, ap_reg_ready_A_cached_row_0_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_A_cached_row_0_loc_channel_full_n)) then 
            ap_sig_ready_A_cached_row_0_loc_channel_full_n <= A_cached_row_0_loc_channel_full_n;
        else 
            ap_sig_ready_A_cached_row_0_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_A_cached_row_1_loc_channel_full_n assign process. --
    ap_sig_ready_A_cached_row_1_loc_channel_full_n_assign_proc : process(A_cached_row_1_loc_channel_full_n, ap_reg_ready_A_cached_row_1_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_A_cached_row_1_loc_channel_full_n)) then 
            ap_sig_ready_A_cached_row_1_loc_channel_full_n <= A_cached_row_1_loc_channel_full_n;
        else 
            ap_sig_ready_A_cached_row_1_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_A_cached_row_2_loc_channel_full_n assign process. --
    ap_sig_ready_A_cached_row_2_loc_channel_full_n_assign_proc : process(A_cached_row_2_loc_channel_full_n, ap_reg_ready_A_cached_row_2_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_A_cached_row_2_loc_channel_full_n)) then 
            ap_sig_ready_A_cached_row_2_loc_channel_full_n <= A_cached_row_2_loc_channel_full_n;
        else 
            ap_sig_ready_A_cached_row_2_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_A_cached_row_3_loc_channel_full_n assign process. --
    ap_sig_ready_A_cached_row_3_loc_channel_full_n_assign_proc : process(A_cached_row_3_loc_channel_full_n, ap_reg_ready_A_cached_row_3_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_A_cached_row_3_loc_channel_full_n)) then 
            ap_sig_ready_A_cached_row_3_loc_channel_full_n <= A_cached_row_3_loc_channel_full_n;
        else 
            ap_sig_ready_A_cached_row_3_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_A_cached_row_4_loc_channel_full_n assign process. --
    ap_sig_ready_A_cached_row_4_loc_channel_full_n_assign_proc : process(A_cached_row_4_loc_channel_full_n, ap_reg_ready_A_cached_row_4_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_A_cached_row_4_loc_channel_full_n)) then 
            ap_sig_ready_A_cached_row_4_loc_channel_full_n <= A_cached_row_4_loc_channel_full_n;
        else 
            ap_sig_ready_A_cached_row_4_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_A_cached_row_5_loc_channel_full_n assign process. --
    ap_sig_ready_A_cached_row_5_loc_channel_full_n_assign_proc : process(A_cached_row_5_loc_channel_full_n, ap_reg_ready_A_cached_row_5_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_A_cached_row_5_loc_channel_full_n)) then 
            ap_sig_ready_A_cached_row_5_loc_channel_full_n <= A_cached_row_5_loc_channel_full_n;
        else 
            ap_sig_ready_A_cached_row_5_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_A_cached_row_6_loc_channel_full_n assign process. --
    ap_sig_ready_A_cached_row_6_loc_channel_full_n_assign_proc : process(A_cached_row_6_loc_channel_full_n, ap_reg_ready_A_cached_row_6_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_A_cached_row_6_loc_channel_full_n)) then 
            ap_sig_ready_A_cached_row_6_loc_channel_full_n <= A_cached_row_6_loc_channel_full_n;
        else 
            ap_sig_ready_A_cached_row_6_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_A_cached_row_7_loc_channel_full_n assign process. --
    ap_sig_ready_A_cached_row_7_loc_channel_full_n_assign_proc : process(A_cached_row_7_loc_channel_full_n, ap_reg_ready_A_cached_row_7_loc_channel_full_n)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_A_cached_row_7_loc_channel_full_n)) then 
            ap_sig_ready_A_cached_row_7_loc_channel_full_n <= A_cached_row_7_loc_channel_full_n;
        else 
            ap_sig_ready_A_cached_row_7_loc_channel_full_n <= ap_const_logic_1;
        end if; 
    end process;

    ap_sig_top_allready <= DCT_MAT_Multiply2_Loop_Row_proc525_U0_ap_ready;
end behav;
