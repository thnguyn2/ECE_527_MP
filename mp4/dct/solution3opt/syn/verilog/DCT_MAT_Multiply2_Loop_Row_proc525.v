// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module DCT_MAT_Multiply2_Loop_Row_proc525 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_q0,
        p_read8,
        p_read24,
        p_read25,
        p_read26,
        p_read27,
        p_read28,
        p_read29,
        p_read30,
        p_read31,
        p_read32,
        p_read34,
        p_read35,
        p_read36,
        p_read37,
        p_read38,
        p_read39,
        p_read40,
        p_read41,
        p_read42,
        p_read43,
        p_read44,
        p_read45,
        p_read46,
        p_read48,
        p_read49,
        p_read50,
        p_read51,
        p_read55,
        p_read56,
        p_read57,
        p_read58,
        p_read59,
        p_read60,
        p_read62,
        p_read63,
        p_read64,
        p_read65,
        p_read67,
        p_read69,
        p_read70,
        p_read72,
        p_read73,
        p_read74,
        p_read75,
        p_read76,
        p_read77,
        p_read78,
        p_read79,
        p_read80,
        p_read81,
        p_read82,
        p_read83,
        p_read84,
        p_read85,
        B_5_2_out_din,
        B_5_2_out_full_n,
        B_5_2_out_write,
        B_1_1_out_din,
        B_1_1_out_full_n,
        B_1_1_out_write,
        B_1_4_out_din,
        B_1_4_out_full_n,
        B_1_4_out_write,
        B_6_5_out_din,
        B_6_5_out_full_n,
        B_6_5_out_write,
        B_0_2_out_din,
        B_0_2_out_full_n,
        B_0_2_out_write,
        B_7_2_out_din,
        B_7_2_out_full_n,
        B_7_2_out_write,
        B_3_0_out_din,
        B_3_0_out_full_n,
        B_3_0_out_write,
        B_7_5_out_din,
        B_7_5_out_full_n,
        B_7_5_out_write,
        B_4_3_out_din,
        B_4_3_out_full_n,
        B_4_3_out_write,
        B_1_7_out_din,
        B_1_7_out_full_n,
        B_1_7_out_write,
        B_5_3_out_din,
        B_5_3_out_full_n,
        B_5_3_out_write,
        B_7_7_out_din,
        B_7_7_out_full_n,
        B_7_7_out_write,
        B_7_0_out_din,
        B_7_0_out_full_n,
        B_7_0_out_write,
        B_3_6_out_din,
        B_3_6_out_full_n,
        B_3_6_out_write,
        B_1_2_out_din,
        B_1_2_out_full_n,
        B_1_2_out_write,
        B_0_7_out_din,
        B_0_7_out_full_n,
        B_0_7_out_write,
        B_1_6_out_din,
        B_1_6_out_full_n,
        B_1_6_out_write,
        B_7_3_out_din,
        B_7_3_out_full_n,
        B_7_3_out_write,
        B_4_1_out_din,
        B_4_1_out_full_n,
        B_4_1_out_write,
        B_6_1_out_din,
        B_6_1_out_full_n,
        B_6_1_out_write,
        B_2_1_out_din,
        B_2_1_out_full_n,
        B_2_1_out_write,
        B_5_6_out_din,
        B_5_6_out_full_n,
        B_5_6_out_write,
        B_2_5_out_din,
        B_2_5_out_full_n,
        B_2_5_out_write,
        B_2_4_out_din,
        B_2_4_out_full_n,
        B_2_4_out_write,
        B_4_7_out_din,
        B_4_7_out_full_n,
        B_4_7_out_write,
        B_0_4_out_din,
        B_0_4_out_full_n,
        B_0_4_out_write,
        B_2_0_out_din,
        B_2_0_out_full_n,
        B_2_0_out_write,
        B_6_3_out_din,
        B_6_3_out_full_n,
        B_6_3_out_write,
        B_0_3_out_din,
        B_0_3_out_full_n,
        B_0_3_out_write,
        B_3_7_out_din,
        B_3_7_out_full_n,
        B_3_7_out_write,
        B_6_6_out_din,
        B_6_6_out_full_n,
        B_6_6_out_write,
        B_2_2_out_din,
        B_2_2_out_full_n,
        B_2_2_out_write,
        B_4_0_out_din,
        B_4_0_out_full_n,
        B_4_0_out_write,
        B_4_2_out_din,
        B_4_2_out_full_n,
        B_4_2_out_write,
        B_2_3_out_din,
        B_2_3_out_full_n,
        B_2_3_out_write,
        B_4_6_out_din,
        B_4_6_out_full_n,
        B_4_6_out_write,
        B_1_5_out_din,
        B_1_5_out_full_n,
        B_1_5_out_write,
        B_0_6_out_din,
        B_0_6_out_full_n,
        B_0_6_out_write,
        B_3_1_out_din,
        B_3_1_out_full_n,
        B_3_1_out_write,
        B_0_0_out_din,
        B_0_0_out_full_n,
        B_0_0_out_write,
        B_1_3_out_din,
        B_1_3_out_full_n,
        B_1_3_out_write,
        B_0_5_out_din,
        B_0_5_out_full_n,
        B_0_5_out_write,
        B_2_7_out_din,
        B_2_7_out_full_n,
        B_2_7_out_write,
        B_5_4_out_din,
        B_5_4_out_full_n,
        B_5_4_out_write,
        B_3_3_out_din,
        B_3_3_out_full_n,
        B_3_3_out_write,
        B_7_4_out_din,
        B_7_4_out_full_n,
        B_7_4_out_write,
        B_5_5_out_din,
        B_5_5_out_full_n,
        B_5_5_out_write,
        B_3_5_out_din,
        B_3_5_out_full_n,
        B_3_5_out_write,
        B_7_1_out_din,
        B_7_1_out_full_n,
        B_7_1_out_write,
        B_4_4_out_din,
        B_4_4_out_full_n,
        B_4_4_out_write,
        B_6_7_out_din,
        B_6_7_out_full_n,
        B_6_7_out_write,
        B_3_4_out_din,
        B_3_4_out_full_n,
        B_3_4_out_write,
        B_5_7_out_din,
        B_5_7_out_full_n,
        B_5_7_out_write,
        B_6_0_out_din,
        B_6_0_out_full_n,
        B_6_0_out_write,
        B_0_1_out_din,
        B_0_1_out_full_n,
        B_0_1_out_write,
        B_2_6_out_din,
        B_2_6_out_full_n,
        B_2_6_out_write,
        B_3_2_out_din,
        B_3_2_out_full_n,
        B_3_2_out_write,
        B_5_0_out_din,
        B_5_0_out_full_n,
        B_5_0_out_write,
        B_4_5_out_din,
        B_4_5_out_full_n,
        B_4_5_out_write,
        B_5_1_out_din,
        B_5_1_out_full_n,
        B_5_1_out_write,
        B_6_2_out_din,
        B_6_2_out_full_n,
        B_6_2_out_write,
        B_7_6_out_din,
        B_7_6_out_full_n,
        B_7_6_out_write,
        B_1_0_out_din,
        B_1_0_out_full_n,
        B_1_0_out_write,
        B_6_4_out_din,
        B_6_4_out_full_n,
        B_6_4_out_write,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b10;
parameter    ap_ST_st5_fsm_2 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_true = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_3ED4DB31 = 32'b111110110101001101101100110001;
parameter    ap_const_lv32_BDC7C5C2 = 32'b10111101110001111100010111000010;
parameter    ap_const_lv32_3EB504F3 = 32'b111110101101010000010011110011;
parameter    ap_const_lv32_BEEC835F = 32'b10111110111011001000001101011111;
parameter    ap_const_lv32_BE43EF15 = 32'b10111110010000111110111100010101;
parameter    ap_const_lv32_BE8E39DA = 32'b10111110100011100011100111011010;
parameter    ap_const_lv7_40 = 7'b1000000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_3 = 3'b11;
parameter    ap_const_lv3_2 = 3'b10;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv32_2 = 32'b10;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [5:0] A_address0;
output   A_ce0;
input  [31:0] A_q0;
input  [31:0] p_read8;
input  [31:0] p_read24;
input  [31:0] p_read25;
input  [31:0] p_read26;
input  [31:0] p_read27;
input  [31:0] p_read28;
input  [31:0] p_read29;
input  [31:0] p_read30;
input  [31:0] p_read31;
input  [31:0] p_read32;
input  [31:0] p_read34;
input  [31:0] p_read35;
input  [31:0] p_read36;
input  [31:0] p_read37;
input  [31:0] p_read38;
input  [31:0] p_read39;
input  [31:0] p_read40;
input  [31:0] p_read41;
input  [31:0] p_read42;
input  [31:0] p_read43;
input  [31:0] p_read44;
input  [31:0] p_read45;
input  [31:0] p_read46;
input  [31:0] p_read48;
input  [31:0] p_read49;
input  [31:0] p_read50;
input  [31:0] p_read51;
input  [31:0] p_read55;
input  [31:0] p_read56;
input  [31:0] p_read57;
input  [31:0] p_read58;
input  [31:0] p_read59;
input  [31:0] p_read60;
input  [31:0] p_read62;
input  [31:0] p_read63;
input  [31:0] p_read64;
input  [31:0] p_read65;
input  [31:0] p_read67;
input  [31:0] p_read69;
input  [31:0] p_read70;
input  [31:0] p_read72;
input  [31:0] p_read73;
input  [31:0] p_read74;
input  [31:0] p_read75;
input  [31:0] p_read76;
input  [31:0] p_read77;
input  [31:0] p_read78;
input  [31:0] p_read79;
input  [31:0] p_read80;
input  [31:0] p_read81;
input  [31:0] p_read82;
input  [31:0] p_read83;
input  [31:0] p_read84;
input  [31:0] p_read85;
output  [31:0] B_5_2_out_din;
input   B_5_2_out_full_n;
output   B_5_2_out_write;
output  [31:0] B_1_1_out_din;
input   B_1_1_out_full_n;
output   B_1_1_out_write;
output  [31:0] B_1_4_out_din;
input   B_1_4_out_full_n;
output   B_1_4_out_write;
output  [31:0] B_6_5_out_din;
input   B_6_5_out_full_n;
output   B_6_5_out_write;
output  [31:0] B_0_2_out_din;
input   B_0_2_out_full_n;
output   B_0_2_out_write;
output  [31:0] B_7_2_out_din;
input   B_7_2_out_full_n;
output   B_7_2_out_write;
output  [31:0] B_3_0_out_din;
input   B_3_0_out_full_n;
output   B_3_0_out_write;
output  [31:0] B_7_5_out_din;
input   B_7_5_out_full_n;
output   B_7_5_out_write;
output  [31:0] B_4_3_out_din;
input   B_4_3_out_full_n;
output   B_4_3_out_write;
output  [31:0] B_1_7_out_din;
input   B_1_7_out_full_n;
output   B_1_7_out_write;
output  [31:0] B_5_3_out_din;
input   B_5_3_out_full_n;
output   B_5_3_out_write;
output  [31:0] B_7_7_out_din;
input   B_7_7_out_full_n;
output   B_7_7_out_write;
output  [31:0] B_7_0_out_din;
input   B_7_0_out_full_n;
output   B_7_0_out_write;
output  [31:0] B_3_6_out_din;
input   B_3_6_out_full_n;
output   B_3_6_out_write;
output  [31:0] B_1_2_out_din;
input   B_1_2_out_full_n;
output   B_1_2_out_write;
output  [31:0] B_0_7_out_din;
input   B_0_7_out_full_n;
output   B_0_7_out_write;
output  [31:0] B_1_6_out_din;
input   B_1_6_out_full_n;
output   B_1_6_out_write;
output  [31:0] B_7_3_out_din;
input   B_7_3_out_full_n;
output   B_7_3_out_write;
output  [31:0] B_4_1_out_din;
input   B_4_1_out_full_n;
output   B_4_1_out_write;
output  [31:0] B_6_1_out_din;
input   B_6_1_out_full_n;
output   B_6_1_out_write;
output  [31:0] B_2_1_out_din;
input   B_2_1_out_full_n;
output   B_2_1_out_write;
output  [31:0] B_5_6_out_din;
input   B_5_6_out_full_n;
output   B_5_6_out_write;
output  [31:0] B_2_5_out_din;
input   B_2_5_out_full_n;
output   B_2_5_out_write;
output  [31:0] B_2_4_out_din;
input   B_2_4_out_full_n;
output   B_2_4_out_write;
output  [31:0] B_4_7_out_din;
input   B_4_7_out_full_n;
output   B_4_7_out_write;
output  [31:0] B_0_4_out_din;
input   B_0_4_out_full_n;
output   B_0_4_out_write;
output  [31:0] B_2_0_out_din;
input   B_2_0_out_full_n;
output   B_2_0_out_write;
output  [31:0] B_6_3_out_din;
input   B_6_3_out_full_n;
output   B_6_3_out_write;
output  [31:0] B_0_3_out_din;
input   B_0_3_out_full_n;
output   B_0_3_out_write;
output  [31:0] B_3_7_out_din;
input   B_3_7_out_full_n;
output   B_3_7_out_write;
output  [31:0] B_6_6_out_din;
input   B_6_6_out_full_n;
output   B_6_6_out_write;
output  [31:0] B_2_2_out_din;
input   B_2_2_out_full_n;
output   B_2_2_out_write;
output  [31:0] B_4_0_out_din;
input   B_4_0_out_full_n;
output   B_4_0_out_write;
output  [31:0] B_4_2_out_din;
input   B_4_2_out_full_n;
output   B_4_2_out_write;
output  [31:0] B_2_3_out_din;
input   B_2_3_out_full_n;
output   B_2_3_out_write;
output  [31:0] B_4_6_out_din;
input   B_4_6_out_full_n;
output   B_4_6_out_write;
output  [31:0] B_1_5_out_din;
input   B_1_5_out_full_n;
output   B_1_5_out_write;
output  [31:0] B_0_6_out_din;
input   B_0_6_out_full_n;
output   B_0_6_out_write;
output  [31:0] B_3_1_out_din;
input   B_3_1_out_full_n;
output   B_3_1_out_write;
output  [31:0] B_0_0_out_din;
input   B_0_0_out_full_n;
output   B_0_0_out_write;
output  [31:0] B_1_3_out_din;
input   B_1_3_out_full_n;
output   B_1_3_out_write;
output  [31:0] B_0_5_out_din;
input   B_0_5_out_full_n;
output   B_0_5_out_write;
output  [31:0] B_2_7_out_din;
input   B_2_7_out_full_n;
output   B_2_7_out_write;
output  [31:0] B_5_4_out_din;
input   B_5_4_out_full_n;
output   B_5_4_out_write;
output  [31:0] B_3_3_out_din;
input   B_3_3_out_full_n;
output   B_3_3_out_write;
output  [31:0] B_7_4_out_din;
input   B_7_4_out_full_n;
output   B_7_4_out_write;
output  [31:0] B_5_5_out_din;
input   B_5_5_out_full_n;
output   B_5_5_out_write;
output  [31:0] B_3_5_out_din;
input   B_3_5_out_full_n;
output   B_3_5_out_write;
output  [31:0] B_7_1_out_din;
input   B_7_1_out_full_n;
output   B_7_1_out_write;
output  [31:0] B_4_4_out_din;
input   B_4_4_out_full_n;
output   B_4_4_out_write;
output  [31:0] B_6_7_out_din;
input   B_6_7_out_full_n;
output   B_6_7_out_write;
output  [31:0] B_3_4_out_din;
input   B_3_4_out_full_n;
output   B_3_4_out_write;
output  [31:0] B_5_7_out_din;
input   B_5_7_out_full_n;
output   B_5_7_out_write;
output  [31:0] B_6_0_out_din;
input   B_6_0_out_full_n;
output   B_6_0_out_write;
output  [31:0] B_0_1_out_din;
input   B_0_1_out_full_n;
output   B_0_1_out_write;
output  [31:0] B_2_6_out_din;
input   B_2_6_out_full_n;
output   B_2_6_out_write;
output  [31:0] B_3_2_out_din;
input   B_3_2_out_full_n;
output   B_3_2_out_write;
output  [31:0] B_5_0_out_din;
input   B_5_0_out_full_n;
output   B_5_0_out_write;
output  [31:0] B_4_5_out_din;
input   B_4_5_out_full_n;
output   B_4_5_out_write;
output  [31:0] B_5_1_out_din;
input   B_5_1_out_full_n;
output   B_5_1_out_write;
output  [31:0] B_6_2_out_din;
input   B_6_2_out_full_n;
output   B_6_2_out_write;
output  [31:0] B_7_6_out_din;
input   B_7_6_out_full_n;
output   B_7_6_out_write;
output  [31:0] B_1_0_out_din;
input   B_1_0_out_full_n;
output   B_1_0_out_write;
output  [31:0] B_6_4_out_din;
input   B_6_4_out_full_n;
output   B_6_4_out_write;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_ce0;
reg B_5_2_out_write;
reg B_1_1_out_write;
reg B_1_4_out_write;
reg B_6_5_out_write;
reg B_0_2_out_write;
reg B_7_2_out_write;
reg B_3_0_out_write;
reg B_7_5_out_write;
reg B_4_3_out_write;
reg B_1_7_out_write;
reg B_5_3_out_write;
reg B_7_7_out_write;
reg B_7_0_out_write;
reg B_3_6_out_write;
reg B_1_2_out_write;
reg B_0_7_out_write;
reg B_1_6_out_write;
reg B_7_3_out_write;
reg B_4_1_out_write;
reg B_6_1_out_write;
reg B_2_1_out_write;
reg B_5_6_out_write;
reg B_2_5_out_write;
reg B_2_4_out_write;
reg B_4_7_out_write;
reg B_0_4_out_write;
reg B_2_0_out_write;
reg B_6_3_out_write;
reg B_0_3_out_write;
reg B_3_7_out_write;
reg B_6_6_out_write;
reg B_2_2_out_write;
reg B_4_0_out_write;
reg B_4_2_out_write;
reg B_2_3_out_write;
reg B_4_6_out_write;
reg B_1_5_out_write;
reg B_0_6_out_write;
reg B_3_1_out_write;
reg B_0_0_out_write;
reg B_1_3_out_write;
reg B_0_5_out_write;
reg B_2_7_out_write;
reg B_5_4_out_write;
reg B_3_3_out_write;
reg B_7_4_out_write;
reg B_5_5_out_write;
reg B_3_5_out_write;
reg B_7_1_out_write;
reg B_4_4_out_write;
reg B_6_7_out_write;
reg B_3_4_out_write;
reg B_5_7_out_write;
reg B_6_0_out_write;
reg B_0_1_out_write;
reg B_2_6_out_write;
reg B_3_2_out_write;
reg B_5_0_out_write;
reg B_4_5_out_write;
reg B_5_1_out_write;
reg B_6_2_out_write;
reg B_7_6_out_write;
reg B_1_0_out_write;
reg B_6_4_out_write;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm = 3'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_22;
reg   [6:0] indvar_flatten_reg_1416;
reg   [3:0] i_0_i_i_i_i_reg_1427;
reg   [31:0] A_cached_row_7_1_i_i_reg_1438;
reg   [31:0] A_cached_row_6_1_i_i_reg_1450;
reg   [31:0] A_cached_row_7_38_reg_1462;
reg   [31:0] A_cached_row_7_14_reg_1474;
reg   [31:0] A_cached_row_7_21_reg_1486;
reg   [31:0] A_cached_row_7_27_reg_1498;
reg   [31:0] A_cached_row_7_32_reg_1510;
reg   [31:0] A_cached_row_7_36_reg_1522;
reg   [3:0] k_0_i_i_i_i_reg_1534;
wire   [0:0] exitcond_flatten_fu_1546_p2;
reg   [0:0] exitcond_flatten_reg_1963;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_383;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_1963_pp0_it1;
wire   [6:0] indvar_flatten_next_fu_1552_p2;
wire   [3:0] i_0_i_i_i_i_mid2_fu_1578_p3;
reg   [3:0] i_0_i_i_i_i_mid2_reg_1972;
wire   [2:0] tmp_19_fu_1613_p1;
reg   [2:0] tmp_19_reg_1982;
wire   [3:0] k_fu_1617_p2;
reg   [31:0] A_cached_row_0_reg_1998;
wire   [0:0] sel_tmp2_fu_1636_p2;
reg   [0:0] sel_tmp2_reg_2004;
wire   [0:0] sel_tmp4_fu_1649_p2;
reg   [0:0] sel_tmp4_reg_2009;
wire   [31:0] A_cached_row_7_2_fu_1654_p3;
reg   [31:0] A_cached_row_7_2_reg_2015;
wire   [0:0] sel_tmp6_fu_1662_p2;
reg   [0:0] sel_tmp6_reg_2020;
wire   [0:0] sel_tmp8_fu_1667_p2;
reg   [0:0] sel_tmp8_reg_2028;
wire   [0:0] sel_tmp1_fu_1672_p2;
reg   [0:0] sel_tmp1_reg_2036;
wire   [0:0] sel_tmp5_fu_1677_p2;
reg   [0:0] sel_tmp5_reg_2044;
wire   [31:0] A_cached_row_7_9_fu_1698_p3;
reg   [31:0] A_cached_row_7_9_reg_2052;
wire   [31:0] A_cached_row_7_31_fu_1730_p3;
reg   [31:0] A_cached_row_7_31_reg_2057;
wire   [31:0] A_cached_row_7_35_fu_1754_p3;
reg   [31:0] A_cached_row_7_35_reg_2062;
wire   [31:0] A_cached_row_7_40_fu_1770_p3;
reg   [31:0] A_cached_row_7_40_reg_2067;
wire   [31:0] A_cached_row_7_41_fu_1778_p3;
reg   [31:0] A_cached_row_7_41_reg_2072;
wire   [31:0] A_cached_row_7_6_fu_1806_p3;
wire   [31:0] A_cached_row_7_13_fu_1833_p3;
wire   [31:0] A_cached_row_7_20_fu_1874_p3;
wire   [31:0] A_cached_row_7_26_fu_1908_p3;
reg    ap_sig_bdd_578;
reg   [3:0] i_0_i_i_i_i_phi_fu_1431_p4;
reg   [31:0] A_cached_row_7_1_i_i_phi_fu_1442_p4;
reg   [31:0] A_cached_row_6_1_i_i_phi_fu_1454_p4;
reg   [31:0] A_cached_row_7_21_phi_fu_1490_p4;
reg   [31:0] A_cached_row_7_27_phi_fu_1502_p4;
reg   [31:0] A_cached_row_7_32_phi_fu_1514_p4;
reg   [31:0] A_cached_row_7_36_phi_fu_1526_p4;
wire   [63:0] tmp_s_fu_1608_p1;
wire   [0:0] exitcond2_i_i_i_i5_fu_1558_p2;
wire   [3:0] tmp_1_i_i_i_dup3_fu_1572_p2;
wire   [3:0] k_0_i_i_i_i_mid2_fu_1564_p3;
wire   [6:0] tmp_fu_1590_p3;
wire   [7:0] p_addr_cast_fu_1598_p1;
wire   [7:0] tmp_2_i_i_i_trn_cast_fu_1586_p1;
wire   [7:0] p_addr1_fu_1602_p2;
wire   [0:0] sel_tmp_fu_1623_p2;
wire   [31:0] A_cached_row_7_fu_1628_p3;
wire   [31:0] A_cached_row_7_1_fu_1641_p3;
wire   [31:0] A_cached_row_7_7_fu_1682_p3;
wire   [31:0] A_cached_row_7_8_fu_1690_p3;
wire   [31:0] A_cached_row_7_28_fu_1706_p3;
wire   [31:0] A_cached_row_7_29_fu_1714_p3;
wire   [31:0] A_cached_row_7_30_fu_1722_p3;
wire   [31:0] A_cached_row_7_33_fu_1738_p3;
wire   [31:0] A_cached_row_7_34_fu_1746_p3;
wire   [31:0] A_cached_row_7_39_fu_1762_p3;
wire   [31:0] A_cached_row_7_3_fu_1786_p3;
wire   [31:0] A_cached_row_7_4_fu_1792_p3;
wire   [31:0] A_cached_row_7_5_fu_1799_p3;
wire   [31:0] A_cached_row_7_10_fu_1813_p3;
wire   [31:0] A_cached_row_7_11_fu_1819_p3;
wire   [31:0] A_cached_row_7_12_fu_1826_p3;
wire   [31:0] A_cached_row_7_15_fu_1840_p3;
wire   [31:0] A_cached_row_7_16_fu_1846_p3;
wire   [31:0] A_cached_row_7_17_fu_1853_p3;
wire   [31:0] A_cached_row_7_18_fu_1860_p3;
wire   [31:0] A_cached_row_7_19_fu_1867_p3;
wire   [31:0] A_cached_row_7_22_fu_1881_p3;
wire   [31:0] A_cached_row_7_23_fu_1887_p3;
wire   [31:0] A_cached_row_7_24_fu_1894_p3;
wire   [31:0] A_cached_row_7_25_fu_1901_p3;
reg    ap_sig_cseq_ST_st5_fsm_2;
reg    ap_sig_bdd_925;
reg   [2:0] ap_NS_fsm;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_2)) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond_flatten_fu_1546_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_fu_1546_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond_flatten_fu_1546_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1963 == ap_const_lv1_0))) begin
        i_0_i_i_i_i_reg_1427 <= i_0_i_i_i_i_mid2_reg_1972;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        i_0_i_i_i_i_reg_1427 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_1546_p2 == ap_const_lv1_0))) begin
        indvar_flatten_reg_1416 <= indvar_flatten_next_fu_1552_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        indvar_flatten_reg_1416 <= ap_const_lv7_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_1546_p2 == ap_const_lv1_0))) begin
        k_0_i_i_i_i_reg_1534 <= k_fu_1617_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        k_0_i_i_i_i_reg_1534 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_reg_1963 == ap_const_lv1_0))) begin
        A_cached_row_0_reg_1998 <= A_q0;
        A_cached_row_7_2_reg_2015 <= A_cached_row_7_2_fu_1654_p3;
        A_cached_row_7_9_reg_2052 <= A_cached_row_7_9_fu_1698_p3;
        sel_tmp1_reg_2036 <= sel_tmp1_fu_1672_p2;
        sel_tmp2_reg_2004 <= sel_tmp2_fu_1636_p2;
        sel_tmp4_reg_2009 <= sel_tmp4_fu_1649_p2;
        sel_tmp5_reg_2044 <= sel_tmp5_fu_1677_p2;
        sel_tmp6_reg_2020 <= sel_tmp6_fu_1662_p2;
        sel_tmp8_reg_2028 <= sel_tmp8_fu_1667_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond_flatten_reg_1963_pp0_it1 == ap_const_lv1_0))) begin
        A_cached_row_6_1_i_i_reg_1450 <= A_cached_row_7_13_fu_1833_p3;
        A_cached_row_7_14_reg_1474 <= A_cached_row_7_26_fu_1908_p3;
        A_cached_row_7_1_i_i_reg_1438 <= A_cached_row_7_6_fu_1806_p3;
        A_cached_row_7_21_reg_1486 <= A_cached_row_7_31_reg_2057;
        A_cached_row_7_27_reg_1498 <= A_cached_row_7_35_reg_2062;
        A_cached_row_7_32_reg_1510 <= A_cached_row_7_40_reg_2067;
        A_cached_row_7_36_reg_1522 <= A_cached_row_7_41_reg_2072;
        A_cached_row_7_38_reg_1462 <= A_cached_row_7_20_fu_1874_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1963 == ap_const_lv1_0))) begin
        A_cached_row_7_31_reg_2057 <= A_cached_row_7_31_fu_1730_p3;
        A_cached_row_7_35_reg_2062 <= A_cached_row_7_35_fu_1754_p3;
        A_cached_row_7_40_reg_2067 <= A_cached_row_7_40_fu_1770_p3;
        A_cached_row_7_41_reg_2072 <= A_cached_row_7_41_fu_1778_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
        ap_reg_ppstg_exitcond_flatten_reg_1963_pp0_it1 <= exitcond_flatten_reg_1963;
        exitcond_flatten_reg_1963 <= exitcond_flatten_fu_1546_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_1546_p2 == ap_const_lv1_0))) begin
        i_0_i_i_i_i_mid2_reg_1972 <= i_0_i_i_i_i_mid2_fu_1578_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_fu_1546_p2 == ap_const_lv1_0))) begin
        tmp_19_reg_1982 <= tmp_19_fu_1613_p1;
    end
end

/// A_cached_row_6_1_i_i_phi_fu_1454_p4 assign process. ///
always @ (A_cached_row_6_1_i_i_reg_1450 or ap_reg_ppiten_pp0_it2 or ap_reg_ppstg_exitcond_flatten_reg_1963_pp0_it1 or A_cached_row_7_13_fu_1833_p3)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond_flatten_reg_1963_pp0_it1 == ap_const_lv1_0))) begin
        A_cached_row_6_1_i_i_phi_fu_1454_p4 = A_cached_row_7_13_fu_1833_p3;
    end else begin
        A_cached_row_6_1_i_i_phi_fu_1454_p4 = A_cached_row_6_1_i_i_reg_1450;
    end
end

/// A_cached_row_7_1_i_i_phi_fu_1442_p4 assign process. ///
always @ (A_cached_row_7_1_i_i_reg_1438 or ap_reg_ppiten_pp0_it2 or ap_reg_ppstg_exitcond_flatten_reg_1963_pp0_it1 or A_cached_row_7_6_fu_1806_p3)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond_flatten_reg_1963_pp0_it1 == ap_const_lv1_0))) begin
        A_cached_row_7_1_i_i_phi_fu_1442_p4 = A_cached_row_7_6_fu_1806_p3;
    end else begin
        A_cached_row_7_1_i_i_phi_fu_1442_p4 = A_cached_row_7_1_i_i_reg_1438;
    end
end

/// A_cached_row_7_21_phi_fu_1490_p4 assign process. ///
always @ (A_cached_row_7_21_reg_1486 or ap_reg_ppiten_pp0_it2 or ap_reg_ppstg_exitcond_flatten_reg_1963_pp0_it1 or A_cached_row_7_31_reg_2057)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond_flatten_reg_1963_pp0_it1 == ap_const_lv1_0))) begin
        A_cached_row_7_21_phi_fu_1490_p4 = A_cached_row_7_31_reg_2057;
    end else begin
        A_cached_row_7_21_phi_fu_1490_p4 = A_cached_row_7_21_reg_1486;
    end
end

/// A_cached_row_7_27_phi_fu_1502_p4 assign process. ///
always @ (A_cached_row_7_27_reg_1498 or ap_reg_ppiten_pp0_it2 or ap_reg_ppstg_exitcond_flatten_reg_1963_pp0_it1 or A_cached_row_7_35_reg_2062)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond_flatten_reg_1963_pp0_it1 == ap_const_lv1_0))) begin
        A_cached_row_7_27_phi_fu_1502_p4 = A_cached_row_7_35_reg_2062;
    end else begin
        A_cached_row_7_27_phi_fu_1502_p4 = A_cached_row_7_27_reg_1498;
    end
end

/// A_cached_row_7_32_phi_fu_1514_p4 assign process. ///
always @ (A_cached_row_7_32_reg_1510 or ap_reg_ppiten_pp0_it2 or ap_reg_ppstg_exitcond_flatten_reg_1963_pp0_it1 or A_cached_row_7_40_reg_2067)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond_flatten_reg_1963_pp0_it1 == ap_const_lv1_0))) begin
        A_cached_row_7_32_phi_fu_1514_p4 = A_cached_row_7_40_reg_2067;
    end else begin
        A_cached_row_7_32_phi_fu_1514_p4 = A_cached_row_7_32_reg_1510;
    end
end

/// A_cached_row_7_36_phi_fu_1526_p4 assign process. ///
always @ (A_cached_row_7_36_reg_1522 or ap_reg_ppiten_pp0_it2 or ap_reg_ppstg_exitcond_flatten_reg_1963_pp0_it1 or A_cached_row_7_41_reg_2072)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & (ap_reg_ppstg_exitcond_flatten_reg_1963_pp0_it1 == ap_const_lv1_0))) begin
        A_cached_row_7_36_phi_fu_1526_p4 = A_cached_row_7_41_reg_2072;
    end else begin
        A_cached_row_7_36_phi_fu_1526_p4 = A_cached_row_7_36_reg_1522;
    end
end

/// A_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        A_ce0 = ap_const_logic_1;
    end else begin
        A_ce0 = ap_const_logic_0;
    end
end

/// B_0_0_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_0_0_out_write = ap_const_logic_1;
    end else begin
        B_0_0_out_write = ap_const_logic_0;
    end
end

/// B_0_1_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_0_1_out_write = ap_const_logic_1;
    end else begin
        B_0_1_out_write = ap_const_logic_0;
    end
end

/// B_0_2_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_0_2_out_write = ap_const_logic_1;
    end else begin
        B_0_2_out_write = ap_const_logic_0;
    end
end

/// B_0_3_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_0_3_out_write = ap_const_logic_1;
    end else begin
        B_0_3_out_write = ap_const_logic_0;
    end
end

/// B_0_4_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_0_4_out_write = ap_const_logic_1;
    end else begin
        B_0_4_out_write = ap_const_logic_0;
    end
end

/// B_0_5_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_0_5_out_write = ap_const_logic_1;
    end else begin
        B_0_5_out_write = ap_const_logic_0;
    end
end

/// B_0_6_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_0_6_out_write = ap_const_logic_1;
    end else begin
        B_0_6_out_write = ap_const_logic_0;
    end
end

/// B_0_7_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_0_7_out_write = ap_const_logic_1;
    end else begin
        B_0_7_out_write = ap_const_logic_0;
    end
end

/// B_1_0_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_1_0_out_write = ap_const_logic_1;
    end else begin
        B_1_0_out_write = ap_const_logic_0;
    end
end

/// B_1_1_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_1_1_out_write = ap_const_logic_1;
    end else begin
        B_1_1_out_write = ap_const_logic_0;
    end
end

/// B_1_2_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_1_2_out_write = ap_const_logic_1;
    end else begin
        B_1_2_out_write = ap_const_logic_0;
    end
end

/// B_1_3_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_1_3_out_write = ap_const_logic_1;
    end else begin
        B_1_3_out_write = ap_const_logic_0;
    end
end

/// B_1_4_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_1_4_out_write = ap_const_logic_1;
    end else begin
        B_1_4_out_write = ap_const_logic_0;
    end
end

/// B_1_5_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_1_5_out_write = ap_const_logic_1;
    end else begin
        B_1_5_out_write = ap_const_logic_0;
    end
end

/// B_1_6_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_1_6_out_write = ap_const_logic_1;
    end else begin
        B_1_6_out_write = ap_const_logic_0;
    end
end

/// B_1_7_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_1_7_out_write = ap_const_logic_1;
    end else begin
        B_1_7_out_write = ap_const_logic_0;
    end
end

/// B_2_0_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_2_0_out_write = ap_const_logic_1;
    end else begin
        B_2_0_out_write = ap_const_logic_0;
    end
end

/// B_2_1_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_2_1_out_write = ap_const_logic_1;
    end else begin
        B_2_1_out_write = ap_const_logic_0;
    end
end

/// B_2_2_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_2_2_out_write = ap_const_logic_1;
    end else begin
        B_2_2_out_write = ap_const_logic_0;
    end
end

/// B_2_3_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_2_3_out_write = ap_const_logic_1;
    end else begin
        B_2_3_out_write = ap_const_logic_0;
    end
end

/// B_2_4_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_2_4_out_write = ap_const_logic_1;
    end else begin
        B_2_4_out_write = ap_const_logic_0;
    end
end

/// B_2_5_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_2_5_out_write = ap_const_logic_1;
    end else begin
        B_2_5_out_write = ap_const_logic_0;
    end
end

/// B_2_6_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_2_6_out_write = ap_const_logic_1;
    end else begin
        B_2_6_out_write = ap_const_logic_0;
    end
end

/// B_2_7_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_2_7_out_write = ap_const_logic_1;
    end else begin
        B_2_7_out_write = ap_const_logic_0;
    end
end

/// B_3_0_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_3_0_out_write = ap_const_logic_1;
    end else begin
        B_3_0_out_write = ap_const_logic_0;
    end
end

/// B_3_1_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_3_1_out_write = ap_const_logic_1;
    end else begin
        B_3_1_out_write = ap_const_logic_0;
    end
end

/// B_3_2_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_3_2_out_write = ap_const_logic_1;
    end else begin
        B_3_2_out_write = ap_const_logic_0;
    end
end

/// B_3_3_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_3_3_out_write = ap_const_logic_1;
    end else begin
        B_3_3_out_write = ap_const_logic_0;
    end
end

/// B_3_4_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_3_4_out_write = ap_const_logic_1;
    end else begin
        B_3_4_out_write = ap_const_logic_0;
    end
end

/// B_3_5_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_3_5_out_write = ap_const_logic_1;
    end else begin
        B_3_5_out_write = ap_const_logic_0;
    end
end

/// B_3_6_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_3_6_out_write = ap_const_logic_1;
    end else begin
        B_3_6_out_write = ap_const_logic_0;
    end
end

/// B_3_7_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_3_7_out_write = ap_const_logic_1;
    end else begin
        B_3_7_out_write = ap_const_logic_0;
    end
end

/// B_4_0_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_4_0_out_write = ap_const_logic_1;
    end else begin
        B_4_0_out_write = ap_const_logic_0;
    end
end

/// B_4_1_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_4_1_out_write = ap_const_logic_1;
    end else begin
        B_4_1_out_write = ap_const_logic_0;
    end
end

/// B_4_2_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_4_2_out_write = ap_const_logic_1;
    end else begin
        B_4_2_out_write = ap_const_logic_0;
    end
end

/// B_4_3_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_4_3_out_write = ap_const_logic_1;
    end else begin
        B_4_3_out_write = ap_const_logic_0;
    end
end

/// B_4_4_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_4_4_out_write = ap_const_logic_1;
    end else begin
        B_4_4_out_write = ap_const_logic_0;
    end
end

/// B_4_5_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_4_5_out_write = ap_const_logic_1;
    end else begin
        B_4_5_out_write = ap_const_logic_0;
    end
end

/// B_4_6_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_4_6_out_write = ap_const_logic_1;
    end else begin
        B_4_6_out_write = ap_const_logic_0;
    end
end

/// B_4_7_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_4_7_out_write = ap_const_logic_1;
    end else begin
        B_4_7_out_write = ap_const_logic_0;
    end
end

/// B_5_0_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_5_0_out_write = ap_const_logic_1;
    end else begin
        B_5_0_out_write = ap_const_logic_0;
    end
end

/// B_5_1_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_5_1_out_write = ap_const_logic_1;
    end else begin
        B_5_1_out_write = ap_const_logic_0;
    end
end

/// B_5_2_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_5_2_out_write = ap_const_logic_1;
    end else begin
        B_5_2_out_write = ap_const_logic_0;
    end
end

/// B_5_3_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_5_3_out_write = ap_const_logic_1;
    end else begin
        B_5_3_out_write = ap_const_logic_0;
    end
end

/// B_5_4_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_5_4_out_write = ap_const_logic_1;
    end else begin
        B_5_4_out_write = ap_const_logic_0;
    end
end

/// B_5_5_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_5_5_out_write = ap_const_logic_1;
    end else begin
        B_5_5_out_write = ap_const_logic_0;
    end
end

/// B_5_6_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_5_6_out_write = ap_const_logic_1;
    end else begin
        B_5_6_out_write = ap_const_logic_0;
    end
end

/// B_5_7_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_5_7_out_write = ap_const_logic_1;
    end else begin
        B_5_7_out_write = ap_const_logic_0;
    end
end

/// B_6_0_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_6_0_out_write = ap_const_logic_1;
    end else begin
        B_6_0_out_write = ap_const_logic_0;
    end
end

/// B_6_1_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_6_1_out_write = ap_const_logic_1;
    end else begin
        B_6_1_out_write = ap_const_logic_0;
    end
end

/// B_6_2_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_6_2_out_write = ap_const_logic_1;
    end else begin
        B_6_2_out_write = ap_const_logic_0;
    end
end

/// B_6_3_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_6_3_out_write = ap_const_logic_1;
    end else begin
        B_6_3_out_write = ap_const_logic_0;
    end
end

/// B_6_4_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_6_4_out_write = ap_const_logic_1;
    end else begin
        B_6_4_out_write = ap_const_logic_0;
    end
end

/// B_6_5_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_6_5_out_write = ap_const_logic_1;
    end else begin
        B_6_5_out_write = ap_const_logic_0;
    end
end

/// B_6_6_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_6_6_out_write = ap_const_logic_1;
    end else begin
        B_6_6_out_write = ap_const_logic_0;
    end
end

/// B_6_7_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_6_7_out_write = ap_const_logic_1;
    end else begin
        B_6_7_out_write = ap_const_logic_0;
    end
end

/// B_7_0_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_7_0_out_write = ap_const_logic_1;
    end else begin
        B_7_0_out_write = ap_const_logic_0;
    end
end

/// B_7_1_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_7_1_out_write = ap_const_logic_1;
    end else begin
        B_7_1_out_write = ap_const_logic_0;
    end
end

/// B_7_2_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_7_2_out_write = ap_const_logic_1;
    end else begin
        B_7_2_out_write = ap_const_logic_0;
    end
end

/// B_7_3_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_7_3_out_write = ap_const_logic_1;
    end else begin
        B_7_3_out_write = ap_const_logic_0;
    end
end

/// B_7_4_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_7_4_out_write = ap_const_logic_1;
    end else begin
        B_7_4_out_write = ap_const_logic_0;
    end
end

/// B_7_5_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_7_5_out_write = ap_const_logic_1;
    end else begin
        B_7_5_out_write = ap_const_logic_0;
    end
end

/// B_7_6_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_7_6_out_write = ap_const_logic_1;
    end else begin
        B_7_6_out_write = ap_const_logic_0;
    end
end

/// B_7_7_out_write assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_578)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_578)) begin
        B_7_7_out_write = ap_const_logic_1;
    end else begin
        B_7_7_out_write = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st5_fsm_2)
begin
    if (((ap_const_logic_1 == ap_done_reg) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_2)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. ///
always @ (ap_sig_bdd_383)
begin
    if (ap_sig_bdd_383) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_22)
begin
    if (ap_sig_bdd_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_2 assign process. ///
always @ (ap_sig_bdd_925)
begin
    if (ap_sig_bdd_925) begin
        ap_sig_cseq_ST_st5_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_2 = ap_const_logic_0;
    end
end

/// i_0_i_i_i_i_phi_fu_1431_p4 assign process. ///
always @ (i_0_i_i_i_i_reg_1427 or exitcond_flatten_reg_1963 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or i_0_i_i_i_i_mid2_reg_1972)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_1963 == ap_const_lv1_0))) begin
        i_0_i_i_i_i_phi_fu_1431_p4 = i_0_i_i_i_i_mid2_reg_1972;
    end else begin
        i_0_i_i_i_i_phi_fu_1431_p4 = i_0_i_i_i_i_reg_1427;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or exitcond_flatten_fu_1546_p2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_578)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_578) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_flatten_fu_1546_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_flatten_fu_1546_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st5_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_2;
            end
        end
        ap_ST_st5_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_address0 = tmp_s_fu_1608_p1;
assign A_cached_row_7_10_fu_1813_p3 = ((sel_tmp6_reg_2020[0:0]===1'b1)? A_cached_row_6_1_i_i_reg_1450: A_cached_row_7_9_reg_2052);
assign A_cached_row_7_11_fu_1819_p3 = ((sel_tmp8_reg_2028[0:0]===1'b1)? A_cached_row_6_1_i_i_reg_1450: A_cached_row_7_10_fu_1813_p3);
assign A_cached_row_7_12_fu_1826_p3 = ((sel_tmp1_reg_2036[0:0]===1'b1)? A_cached_row_6_1_i_i_reg_1450: A_cached_row_7_11_fu_1819_p3);
assign A_cached_row_7_13_fu_1833_p3 = ((sel_tmp5_reg_2044[0:0]===1'b1)? A_cached_row_6_1_i_i_reg_1450: A_cached_row_7_12_fu_1826_p3);
assign A_cached_row_7_15_fu_1840_p3 = ((sel_tmp2_reg_2004[0:0]===1'b1)? A_cached_row_0_reg_1998: A_cached_row_7_38_reg_1462);
assign A_cached_row_7_16_fu_1846_p3 = ((sel_tmp4_reg_2009[0:0]===1'b1)? A_cached_row_7_38_reg_1462: A_cached_row_7_15_fu_1840_p3);
assign A_cached_row_7_17_fu_1853_p3 = ((sel_tmp6_reg_2020[0:0]===1'b1)? A_cached_row_7_38_reg_1462: A_cached_row_7_16_fu_1846_p3);
assign A_cached_row_7_18_fu_1860_p3 = ((sel_tmp8_reg_2028[0:0]===1'b1)? A_cached_row_7_38_reg_1462: A_cached_row_7_17_fu_1853_p3);
assign A_cached_row_7_19_fu_1867_p3 = ((sel_tmp1_reg_2036[0:0]===1'b1)? A_cached_row_7_38_reg_1462: A_cached_row_7_18_fu_1860_p3);
assign A_cached_row_7_1_fu_1641_p3 = ((sel_tmp2_fu_1636_p2[0:0]===1'b1)? A_cached_row_7_1_i_i_phi_fu_1442_p4: A_cached_row_7_fu_1628_p3);
assign A_cached_row_7_20_fu_1874_p3 = ((sel_tmp5_reg_2044[0:0]===1'b1)? A_cached_row_7_38_reg_1462: A_cached_row_7_19_fu_1867_p3);
assign A_cached_row_7_22_fu_1881_p3 = ((sel_tmp4_reg_2009[0:0]===1'b1)? A_cached_row_0_reg_1998: A_cached_row_7_14_reg_1474);
assign A_cached_row_7_23_fu_1887_p3 = ((sel_tmp6_reg_2020[0:0]===1'b1)? A_cached_row_7_14_reg_1474: A_cached_row_7_22_fu_1881_p3);
assign A_cached_row_7_24_fu_1894_p3 = ((sel_tmp8_reg_2028[0:0]===1'b1)? A_cached_row_7_14_reg_1474: A_cached_row_7_23_fu_1887_p3);
assign A_cached_row_7_25_fu_1901_p3 = ((sel_tmp1_reg_2036[0:0]===1'b1)? A_cached_row_7_14_reg_1474: A_cached_row_7_24_fu_1894_p3);
assign A_cached_row_7_26_fu_1908_p3 = ((sel_tmp5_reg_2044[0:0]===1'b1)? A_cached_row_7_14_reg_1474: A_cached_row_7_25_fu_1901_p3);
assign A_cached_row_7_28_fu_1706_p3 = ((sel_tmp6_fu_1662_p2[0:0]===1'b1)? A_q0: A_cached_row_7_21_phi_fu_1490_p4);
assign A_cached_row_7_29_fu_1714_p3 = ((sel_tmp8_fu_1667_p2[0:0]===1'b1)? A_cached_row_7_21_phi_fu_1490_p4: A_cached_row_7_28_fu_1706_p3);
assign A_cached_row_7_2_fu_1654_p3 = ((sel_tmp4_fu_1649_p2[0:0]===1'b1)? A_cached_row_7_1_i_i_phi_fu_1442_p4: A_cached_row_7_1_fu_1641_p3);
assign A_cached_row_7_30_fu_1722_p3 = ((sel_tmp1_fu_1672_p2[0:0]===1'b1)? A_cached_row_7_21_phi_fu_1490_p4: A_cached_row_7_29_fu_1714_p3);
assign A_cached_row_7_31_fu_1730_p3 = ((sel_tmp5_fu_1677_p2[0:0]===1'b1)? A_cached_row_7_21_phi_fu_1490_p4: A_cached_row_7_30_fu_1722_p3);
assign A_cached_row_7_33_fu_1738_p3 = ((sel_tmp8_fu_1667_p2[0:0]===1'b1)? A_q0: A_cached_row_7_27_phi_fu_1502_p4);
assign A_cached_row_7_34_fu_1746_p3 = ((sel_tmp1_fu_1672_p2[0:0]===1'b1)? A_cached_row_7_27_phi_fu_1502_p4: A_cached_row_7_33_fu_1738_p3);
assign A_cached_row_7_35_fu_1754_p3 = ((sel_tmp5_fu_1677_p2[0:0]===1'b1)? A_cached_row_7_27_phi_fu_1502_p4: A_cached_row_7_34_fu_1746_p3);
assign A_cached_row_7_39_fu_1762_p3 = ((sel_tmp1_fu_1672_p2[0:0]===1'b1)? A_q0: A_cached_row_7_32_phi_fu_1514_p4);
assign A_cached_row_7_3_fu_1786_p3 = ((sel_tmp6_reg_2020[0:0]===1'b1)? A_cached_row_7_1_i_i_reg_1438: A_cached_row_7_2_reg_2015);
assign A_cached_row_7_40_fu_1770_p3 = ((sel_tmp5_fu_1677_p2[0:0]===1'b1)? A_cached_row_7_32_phi_fu_1514_p4: A_cached_row_7_39_fu_1762_p3);
assign A_cached_row_7_41_fu_1778_p3 = ((sel_tmp5_fu_1677_p2[0:0]===1'b1)? A_q0: A_cached_row_7_36_phi_fu_1526_p4);
assign A_cached_row_7_4_fu_1792_p3 = ((sel_tmp8_reg_2028[0:0]===1'b1)? A_cached_row_7_1_i_i_reg_1438: A_cached_row_7_3_fu_1786_p3);
assign A_cached_row_7_5_fu_1799_p3 = ((sel_tmp1_reg_2036[0:0]===1'b1)? A_cached_row_7_1_i_i_reg_1438: A_cached_row_7_4_fu_1792_p3);
assign A_cached_row_7_6_fu_1806_p3 = ((sel_tmp5_reg_2044[0:0]===1'b1)? A_cached_row_7_1_i_i_reg_1438: A_cached_row_7_5_fu_1799_p3);
assign A_cached_row_7_7_fu_1682_p3 = ((sel_tmp_fu_1623_p2[0:0]===1'b1)? A_q0: A_cached_row_6_1_i_i_phi_fu_1454_p4);
assign A_cached_row_7_8_fu_1690_p3 = ((sel_tmp2_fu_1636_p2[0:0]===1'b1)? A_cached_row_6_1_i_i_phi_fu_1454_p4: A_cached_row_7_7_fu_1682_p3);
assign A_cached_row_7_9_fu_1698_p3 = ((sel_tmp4_fu_1649_p2[0:0]===1'b1)? A_cached_row_6_1_i_i_phi_fu_1454_p4: A_cached_row_7_8_fu_1690_p3);
assign A_cached_row_7_fu_1628_p3 = ((sel_tmp_fu_1623_p2[0:0]===1'b1)? A_cached_row_7_1_i_i_phi_fu_1442_p4: A_q0);
assign B_0_0_out_din = ap_const_lv32_3EB504F3;
assign B_0_1_out_din = p_read76;
assign B_0_2_out_din = p_read26;
assign B_0_3_out_din = p_read50;
assign B_0_4_out_din = ap_const_lv32_3EB504F3;
assign B_0_5_out_din = p_read63;
assign B_0_6_out_din = p_read59;
assign B_0_7_out_din = p_read37;
assign B_1_0_out_din = p_read84;
assign B_1_1_out_din = ap_const_lv32_3ED4DB31;
assign B_1_2_out_din = p_read36;
assign B_1_3_out_din = p_read62;
assign B_1_4_out_din = p_read24;
assign B_1_5_out_din = p_read58;
assign B_1_6_out_din = p_read38;
assign B_1_7_out_din = p_read31;
assign B_2_0_out_din = p_read48;
assign B_2_1_out_din = p_read42;
assign B_2_2_out_din = ap_const_lv32_BE43EF15;
assign B_2_3_out_din = p_read56;
assign B_2_4_out_din = p_read45;
assign B_2_5_out_din = p_read44;
assign B_2_6_out_din = p_read77;
assign B_2_7_out_din = p_read64;
assign B_3_0_out_din = p_read28;
assign B_3_1_out_din = p_read60;
assign B_3_2_out_din = p_read78;
assign B_3_3_out_din = ap_const_lv32_BE8E39DA;
assign B_3_4_out_din = p_read73;
assign B_3_5_out_din = p_read69;
assign B_3_6_out_din = p_read35;
assign B_3_7_out_din = p_read51;
assign B_4_0_out_din = ap_const_lv32_3EB504F3;
assign B_4_1_out_din = p_read40;
assign B_4_2_out_din = p_read55;
assign B_4_3_out_din = p_read30;
assign B_4_4_out_din = ap_const_lv32_3EB504F3;
assign B_4_5_out_din = p_read80;
assign B_4_6_out_din = p_read57;
assign B_4_7_out_din = p_read46;
assign B_5_0_out_din = p_read79;
assign B_5_1_out_din = p_read81;
assign B_5_2_out_din = p_read8;
assign B_5_3_out_din = p_read32;
assign B_5_4_out_din = p_read65;
assign B_5_5_out_din = ap_const_lv32_BDC7C5C2;
assign B_5_6_out_din = p_read43;
assign B_5_7_out_din = p_read74;
assign B_6_0_out_din = p_read75;
assign B_6_1_out_din = p_read41;
assign B_6_2_out_din = p_read82;
assign B_6_3_out_din = p_read49;
assign B_6_4_out_din = p_read85;
assign B_6_5_out_din = p_read25;
assign B_6_6_out_din = ap_const_lv32_BEEC835F;
assign B_6_7_out_din = p_read72;
assign B_7_0_out_din = p_read34;
assign B_7_1_out_din = p_read70;
assign B_7_2_out_din = p_read27;
assign B_7_3_out_din = p_read39;
assign B_7_4_out_din = p_read67;
assign B_7_5_out_din = p_read29;
assign B_7_6_out_din = p_read83;
assign B_7_7_out_din = ap_const_lv32_BDC7C5C2;
assign ap_return_0 = A_cached_row_7_1_i_i_reg_1438;
assign ap_return_1 = A_cached_row_6_1_i_i_reg_1450;
assign ap_return_2 = A_cached_row_7_38_reg_1462;
assign ap_return_3 = A_cached_row_7_14_reg_1474;
assign ap_return_4 = A_cached_row_7_21_reg_1486;
assign ap_return_5 = A_cached_row_7_27_reg_1498;
assign ap_return_6 = A_cached_row_7_32_reg_1510;
assign ap_return_7 = A_cached_row_7_36_reg_1522;

/// ap_sig_bdd_22 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_22 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_383 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_383 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_578 assign process. ///
always @ (ap_start or ap_done_reg or B_5_2_out_full_n or B_1_1_out_full_n or B_1_4_out_full_n or B_6_5_out_full_n or B_0_2_out_full_n or B_7_2_out_full_n or B_3_0_out_full_n or B_7_5_out_full_n or B_4_3_out_full_n or B_1_7_out_full_n or B_5_3_out_full_n or B_7_7_out_full_n or B_7_0_out_full_n or B_3_6_out_full_n or B_1_2_out_full_n or B_0_7_out_full_n or B_1_6_out_full_n or B_7_3_out_full_n or B_4_1_out_full_n or B_6_1_out_full_n or B_2_1_out_full_n or B_5_6_out_full_n or B_2_5_out_full_n or B_2_4_out_full_n or B_4_7_out_full_n or B_0_4_out_full_n or B_2_0_out_full_n or B_6_3_out_full_n or B_0_3_out_full_n or B_3_7_out_full_n or B_6_6_out_full_n or B_2_2_out_full_n or B_4_0_out_full_n or B_4_2_out_full_n or B_2_3_out_full_n or B_4_6_out_full_n or B_1_5_out_full_n or B_0_6_out_full_n or B_3_1_out_full_n or B_0_0_out_full_n or B_1_3_out_full_n or B_0_5_out_full_n or B_2_7_out_full_n or B_5_4_out_full_n or B_3_3_out_full_n or B_7_4_out_full_n or B_5_5_out_full_n or B_3_5_out_full_n or B_7_1_out_full_n or B_4_4_out_full_n or B_6_7_out_full_n or B_3_4_out_full_n or B_5_7_out_full_n or B_6_0_out_full_n or B_0_1_out_full_n or B_2_6_out_full_n or B_3_2_out_full_n or B_5_0_out_full_n or B_4_5_out_full_n or B_5_1_out_full_n or B_6_2_out_full_n or B_7_6_out_full_n or B_1_0_out_full_n or B_6_4_out_full_n)
begin
    ap_sig_bdd_578 = ((B_5_2_out_full_n == ap_const_logic_0) | (B_1_1_out_full_n == ap_const_logic_0) | (B_1_4_out_full_n == ap_const_logic_0) | (B_6_5_out_full_n == ap_const_logic_0) | (B_0_2_out_full_n == ap_const_logic_0) | (B_7_2_out_full_n == ap_const_logic_0) | (B_3_0_out_full_n == ap_const_logic_0) | (B_7_5_out_full_n == ap_const_logic_0) | (B_4_3_out_full_n == ap_const_logic_0) | (B_1_7_out_full_n == ap_const_logic_0) | (B_5_3_out_full_n == ap_const_logic_0) | (B_7_7_out_full_n == ap_const_logic_0) | (B_7_0_out_full_n == ap_const_logic_0) | (B_3_6_out_full_n == ap_const_logic_0) | (B_1_2_out_full_n == ap_const_logic_0) | (B_0_7_out_full_n == ap_const_logic_0) | (B_1_6_out_full_n == ap_const_logic_0) | (B_7_3_out_full_n == ap_const_logic_0) | (B_4_1_out_full_n == ap_const_logic_0) | (B_6_1_out_full_n == ap_const_logic_0) | (B_2_1_out_full_n == ap_const_logic_0) | (B_5_6_out_full_n == ap_const_logic_0) | (B_2_5_out_full_n == ap_const_logic_0) | (B_2_4_out_full_n == ap_const_logic_0) | (B_4_7_out_full_n == ap_const_logic_0) | (B_0_4_out_full_n == ap_const_logic_0) | (B_2_0_out_full_n == ap_const_logic_0) | (B_6_3_out_full_n == ap_const_logic_0) | (B_0_3_out_full_n == ap_const_logic_0) | (B_3_7_out_full_n == ap_const_logic_0) | (B_6_6_out_full_n == ap_const_logic_0) | (B_2_2_out_full_n == ap_const_logic_0) | (B_4_0_out_full_n == ap_const_logic_0) | (B_4_2_out_full_n == ap_const_logic_0) | (B_2_3_out_full_n == ap_const_logic_0) | (B_4_6_out_full_n == ap_const_logic_0) | (B_1_5_out_full_n == ap_const_logic_0) | (B_0_6_out_full_n == ap_const_logic_0) | (B_3_1_out_full_n == ap_const_logic_0) | (B_0_0_out_full_n == ap_const_logic_0) | (B_1_3_out_full_n == ap_const_logic_0) | (B_0_5_out_full_n == ap_const_logic_0) | (B_2_7_out_full_n == ap_const_logic_0) | (B_5_4_out_full_n == ap_const_logic_0) | (B_3_3_out_full_n == ap_const_logic_0) | (B_7_4_out_full_n == ap_const_logic_0) | (B_5_5_out_full_n == ap_const_logic_0) | (B_3_5_out_full_n == ap_const_logic_0) | (B_7_1_out_full_n == ap_const_logic_0) | (B_4_4_out_full_n == ap_const_logic_0) | (B_6_7_out_full_n == ap_const_logic_0) | (B_3_4_out_full_n == ap_const_logic_0) | (B_5_7_out_full_n == ap_const_logic_0) | (B_6_0_out_full_n == ap_const_logic_0) | (B_0_1_out_full_n == ap_const_logic_0) | (B_2_6_out_full_n == ap_const_logic_0) | (B_3_2_out_full_n == ap_const_logic_0) | (B_5_0_out_full_n == ap_const_logic_0) | (B_4_5_out_full_n == ap_const_logic_0) | (B_5_1_out_full_n == ap_const_logic_0) | (B_6_2_out_full_n == ap_const_logic_0) | (B_7_6_out_full_n == ap_const_logic_0) | (B_1_0_out_full_n == ap_const_logic_0) | (B_6_4_out_full_n == ap_const_logic_0) | (ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_925 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_925 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end
assign exitcond2_i_i_i_i5_fu_1558_p2 = (k_0_i_i_i_i_reg_1534 == ap_const_lv4_8? 1'b1: 1'b0);
assign exitcond_flatten_fu_1546_p2 = (indvar_flatten_reg_1416 == ap_const_lv7_40? 1'b1: 1'b0);
assign i_0_i_i_i_i_mid2_fu_1578_p3 = ((exitcond2_i_i_i_i5_fu_1558_p2[0:0]===1'b1)? tmp_1_i_i_i_dup3_fu_1572_p2: i_0_i_i_i_i_phi_fu_1431_p4);
assign indvar_flatten_next_fu_1552_p2 = (indvar_flatten_reg_1416 + ap_const_lv7_1);
assign k_0_i_i_i_i_mid2_fu_1564_p3 = ((exitcond2_i_i_i_i5_fu_1558_p2[0:0]===1'b1)? ap_const_lv4_0: k_0_i_i_i_i_reg_1534);
assign k_fu_1617_p2 = (ap_const_lv4_1 + k_0_i_i_i_i_mid2_fu_1564_p3);
assign p_addr1_fu_1602_p2 = (p_addr_cast_fu_1598_p1 + tmp_2_i_i_i_trn_cast_fu_1586_p1);
assign p_addr_cast_fu_1598_p1 = tmp_fu_1590_p3;
assign sel_tmp1_fu_1672_p2 = (tmp_19_reg_1982 == ap_const_lv3_1? 1'b1: 1'b0);
assign sel_tmp2_fu_1636_p2 = (tmp_19_reg_1982 == ap_const_lv3_5? 1'b1: 1'b0);
assign sel_tmp4_fu_1649_p2 = (tmp_19_reg_1982 == ap_const_lv3_4? 1'b1: 1'b0);
assign sel_tmp5_fu_1677_p2 = (tmp_19_reg_1982 == ap_const_lv3_0? 1'b1: 1'b0);
assign sel_tmp6_fu_1662_p2 = (tmp_19_reg_1982 == ap_const_lv3_3? 1'b1: 1'b0);
assign sel_tmp8_fu_1667_p2 = (tmp_19_reg_1982 == ap_const_lv3_2? 1'b1: 1'b0);
assign sel_tmp_fu_1623_p2 = (tmp_19_reg_1982 == ap_const_lv3_6? 1'b1: 1'b0);
assign tmp_19_fu_1613_p1 = k_0_i_i_i_i_mid2_fu_1564_p3[2:0];
assign tmp_1_i_i_i_dup3_fu_1572_p2 = (ap_const_lv4_1 + i_0_i_i_i_i_phi_fu_1431_p4);
assign tmp_2_i_i_i_trn_cast_fu_1586_p1 = k_0_i_i_i_i_mid2_fu_1564_p3;
assign tmp_fu_1590_p3 = {{i_0_i_i_i_i_mid2_fu_1578_p3}, {ap_const_lv3_0}};
assign tmp_s_fu_1608_p1 = p_addr1_fu_1602_p2;


endmodule //DCT_MAT_Multiply2_Loop_Row_proc525

