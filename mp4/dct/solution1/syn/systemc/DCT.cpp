// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "DCT.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic DCT::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic DCT::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> DCT::ap_ST_st1_fsm_0 = "1";
const sc_lv<6> DCT::ap_ST_st2_fsm_1 = "10";
const sc_lv<6> DCT::ap_ST_st3_fsm_2 = "100";
const sc_lv<6> DCT::ap_ST_st4_fsm_3 = "1000";
const sc_lv<6> DCT::ap_ST_st5_fsm_4 = "10000";
const sc_lv<6> DCT::ap_ST_st6_fsm_5 = "100000";
const sc_lv<32> DCT::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> DCT::ap_const_lv1_1 = "1";
const sc_lv<1> DCT::ap_const_lv1_0 = "0";
const sc_lv<32> DCT::ap_const_lv32_1 = "1";
const sc_lv<32> DCT::ap_const_lv32_4 = "100";
const sc_lv<32> DCT::ap_const_lv32_2 = "10";
const sc_lv<32> DCT::ap_const_lv32_5 = "101";
const sc_lv<32> DCT::ap_const_lv32_3 = "11";
const sc_lv<8> DCT::ap_const_lv8_1 = "1";

DCT::DCT(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Tinv_U = new DCT_Tinv("Tinv_U");
    Tinv_U->clk(ap_clk);
    Tinv_U->reset(ap_rst);
    Tinv_U->address0(Tinv_address0);
    Tinv_U->ce0(Tinv_ce0);
    Tinv_U->q0(Tinv_q0);
    T_U = new DCT_T("T_U");
    T_U->clk(ap_clk);
    T_U->reset(ap_rst);
    T_U->address0(T_address0);
    T_U->ce0(T_ce0);
    T_U->q0(T_q0);
    temp_U = new DCT_MAT_Multiply_B_cached("temp_U");
    temp_U->clk(ap_clk);
    temp_U->reset(ap_rst);
    temp_U->address0(temp_address0);
    temp_U->ce0(temp_ce0);
    temp_U->we0(temp_we0);
    temp_U->d0(temp_d0);
    temp_U->q0(temp_q0);
    grp_DCT_MAT_Multiply_fu_37 = new DCT_MAT_Multiply("grp_DCT_MAT_Multiply_fu_37");
    grp_DCT_MAT_Multiply_fu_37->ap_clk(ap_clk);
    grp_DCT_MAT_Multiply_fu_37->ap_rst(ap_rst);
    grp_DCT_MAT_Multiply_fu_37->ap_start(grp_DCT_MAT_Multiply_fu_37_ap_start);
    grp_DCT_MAT_Multiply_fu_37->ap_done(grp_DCT_MAT_Multiply_fu_37_ap_done);
    grp_DCT_MAT_Multiply_fu_37->ap_idle(grp_DCT_MAT_Multiply_fu_37_ap_idle);
    grp_DCT_MAT_Multiply_fu_37->ap_ready(grp_DCT_MAT_Multiply_fu_37_ap_ready);
    grp_DCT_MAT_Multiply_fu_37->A_address0(grp_DCT_MAT_Multiply_fu_37_A_address0);
    grp_DCT_MAT_Multiply_fu_37->A_ce0(grp_DCT_MAT_Multiply_fu_37_A_ce0);
    grp_DCT_MAT_Multiply_fu_37->A_q0(grp_DCT_MAT_Multiply_fu_37_A_q0);
    grp_DCT_MAT_Multiply_fu_37->B_address0(grp_DCT_MAT_Multiply_fu_37_B_address0);
    grp_DCT_MAT_Multiply_fu_37->B_ce0(grp_DCT_MAT_Multiply_fu_37_B_ce0);
    grp_DCT_MAT_Multiply_fu_37->B_q0(grp_DCT_MAT_Multiply_fu_37_B_q0);
    grp_DCT_MAT_Multiply_fu_37->C_address0(grp_DCT_MAT_Multiply_fu_37_C_address0);
    grp_DCT_MAT_Multiply_fu_37->C_ce0(grp_DCT_MAT_Multiply_fu_37_C_ce0);
    grp_DCT_MAT_Multiply_fu_37->C_we0(grp_DCT_MAT_Multiply_fu_37_C_we0);
    grp_DCT_MAT_Multiply_fu_37->C_d0(grp_DCT_MAT_Multiply_fu_37_C_d0);
    grp_DCT_MAT_Multiply2_fu_48 = new DCT_MAT_Multiply2("grp_DCT_MAT_Multiply2_fu_48");
    grp_DCT_MAT_Multiply2_fu_48->ap_clk(ap_clk);
    grp_DCT_MAT_Multiply2_fu_48->ap_rst(ap_rst);
    grp_DCT_MAT_Multiply2_fu_48->ap_start(grp_DCT_MAT_Multiply2_fu_48_ap_start);
    grp_DCT_MAT_Multiply2_fu_48->ap_done(grp_DCT_MAT_Multiply2_fu_48_ap_done);
    grp_DCT_MAT_Multiply2_fu_48->ap_idle(grp_DCT_MAT_Multiply2_fu_48_ap_idle);
    grp_DCT_MAT_Multiply2_fu_48->ap_ready(grp_DCT_MAT_Multiply2_fu_48_ap_ready);
    grp_DCT_MAT_Multiply2_fu_48->A_address0(grp_DCT_MAT_Multiply2_fu_48_A_address0);
    grp_DCT_MAT_Multiply2_fu_48->A_ce0(grp_DCT_MAT_Multiply2_fu_48_A_ce0);
    grp_DCT_MAT_Multiply2_fu_48->A_q0(grp_DCT_MAT_Multiply2_fu_48_A_q0);
    grp_DCT_MAT_Multiply2_fu_48->B_address0(grp_DCT_MAT_Multiply2_fu_48_B_address0);
    grp_DCT_MAT_Multiply2_fu_48->B_ce0(grp_DCT_MAT_Multiply2_fu_48_B_ce0);
    grp_DCT_MAT_Multiply2_fu_48->B_q0(grp_DCT_MAT_Multiply2_fu_48_B_q0);
    grp_DCT_MAT_Multiply2_fu_48->C_address0(grp_DCT_MAT_Multiply2_fu_48_C_address0);
    grp_DCT_MAT_Multiply2_fu_48->C_ce0(grp_DCT_MAT_Multiply2_fu_48_C_ce0);
    grp_DCT_MAT_Multiply2_fu_48->C_we0(grp_DCT_MAT_Multiply2_fu_48_C_we0);
    grp_DCT_MAT_Multiply2_fu_48->C_d0(grp_DCT_MAT_Multiply2_fu_48_C_d0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_T_address0);
    sensitive << ( cond_reg_64 );
    sensitive << ( grp_DCT_MAT_Multiply_fu_37_A_address0 );
    sensitive << ( grp_DCT_MAT_Multiply2_fu_48_B_address0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_T_ce0);
    sensitive << ( cond_reg_64 );
    sensitive << ( grp_DCT_MAT_Multiply_fu_37_A_ce0 );
    sensitive << ( grp_DCT_MAT_Multiply2_fu_48_B_ce0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_Tinv_address0);
    sensitive << ( cond_reg_64 );
    sensitive << ( grp_DCT_MAT_Multiply_fu_37_A_address0 );
    sensitive << ( grp_DCT_MAT_Multiply2_fu_48_B_address0 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_Tinv_ce0);
    sensitive << ( cond_reg_64 );
    sensitive << ( grp_DCT_MAT_Multiply_fu_37_A_ce0 );
    sensitive << ( grp_DCT_MAT_Multiply2_fu_48_B_ce0 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_X_address0);
    sensitive << ( grp_DCT_MAT_Multiply_fu_37_B_address0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_X_ce0);
    sensitive << ( grp_DCT_MAT_Multiply_fu_37_B_ce0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_Y_address0);
    sensitive << ( cond_reg_64 );
    sensitive << ( grp_DCT_MAT_Multiply2_fu_48_C_address0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_Y_ce0);
    sensitive << ( cond_reg_64 );
    sensitive << ( grp_DCT_MAT_Multiply2_fu_48_C_ce0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_Y_d0);
    sensitive << ( cond_reg_64 );
    sensitive << ( grp_DCT_MAT_Multiply2_fu_48_C_d0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_Y_we0);
    sensitive << ( cond_reg_64 );
    sensitive << ( grp_DCT_MAT_Multiply2_fu_48_C_we0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_ap_done);
    sensitive << ( cond_reg_64 );
    sensitive << ( grp_DCT_MAT_Multiply2_fu_48_ap_done );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( cond_reg_64 );
    sensitive << ( grp_DCT_MAT_Multiply2_fu_48_ap_done );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_ap_sig_bdd_119);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_126);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_136);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_143);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_151);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_22 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_119 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_136 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_151 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_bdd_126 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_bdd_143 );

    SC_METHOD(thread_cond_fu_58_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( function_r );

    SC_METHOD(thread_grp_DCT_MAT_Multiply2_fu_48_A_q0);
    sensitive << ( cond_reg_64 );
    sensitive << ( temp_q0 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_grp_DCT_MAT_Multiply2_fu_48_B_q0);
    sensitive << ( Tinv_q0 );
    sensitive << ( T_q0 );
    sensitive << ( cond_reg_64 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_grp_DCT_MAT_Multiply2_fu_48_ap_start);
    sensitive << ( grp_DCT_MAT_Multiply2_fu_48_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_DCT_MAT_Multiply_fu_37_A_q0);
    sensitive << ( Tinv_q0 );
    sensitive << ( T_q0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_grp_DCT_MAT_Multiply_fu_37_B_q0);
    sensitive << ( X_q0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_grp_DCT_MAT_Multiply_fu_37_ap_start);
    sensitive << ( grp_DCT_MAT_Multiply_fu_37_ap_start_ap_start_reg );

    SC_METHOD(thread_temp_address0);
    sensitive << ( cond_reg_64 );
    sensitive << ( grp_DCT_MAT_Multiply_fu_37_C_address0 );
    sensitive << ( grp_DCT_MAT_Multiply2_fu_48_A_address0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_temp_ce0);
    sensitive << ( cond_reg_64 );
    sensitive << ( grp_DCT_MAT_Multiply_fu_37_C_ce0 );
    sensitive << ( grp_DCT_MAT_Multiply2_fu_48_A_ce0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_temp_d0);
    sensitive << ( grp_DCT_MAT_Multiply_fu_37_C_d0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_temp_we0);
    sensitive << ( grp_DCT_MAT_Multiply_fu_37_C_we0 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( cond_fu_58_p2 );
    sensitive << ( cond_reg_64 );
    sensitive << ( grp_DCT_MAT_Multiply_fu_37_ap_done );
    sensitive << ( grp_DCT_MAT_Multiply2_fu_48_ap_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000001";
    grp_DCT_MAT_Multiply_fu_37_ap_start_ap_start_reg = SC_LOGIC_0;
    grp_DCT_MAT_Multiply2_fu_48_ap_start_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "DCT_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, X_address0, "(port)X_address0");
    sc_trace(mVcdFile, X_ce0, "(port)X_ce0");
    sc_trace(mVcdFile, X_q0, "(port)X_q0");
    sc_trace(mVcdFile, function_r, "(port)function_r");
    sc_trace(mVcdFile, Y_address0, "(port)Y_address0");
    sc_trace(mVcdFile, Y_ce0, "(port)Y_ce0");
    sc_trace(mVcdFile, Y_we0, "(port)Y_we0");
    sc_trace(mVcdFile, Y_d0, "(port)Y_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_22, "ap_sig_bdd_22");
    sc_trace(mVcdFile, Tinv_address0, "Tinv_address0");
    sc_trace(mVcdFile, Tinv_ce0, "Tinv_ce0");
    sc_trace(mVcdFile, Tinv_q0, "Tinv_q0");
    sc_trace(mVcdFile, T_address0, "T_address0");
    sc_trace(mVcdFile, T_ce0, "T_ce0");
    sc_trace(mVcdFile, T_q0, "T_q0");
    sc_trace(mVcdFile, cond_fu_58_p2, "cond_fu_58_p2");
    sc_trace(mVcdFile, cond_reg_64, "cond_reg_64");
    sc_trace(mVcdFile, temp_address0, "temp_address0");
    sc_trace(mVcdFile, temp_ce0, "temp_ce0");
    sc_trace(mVcdFile, temp_we0, "temp_we0");
    sc_trace(mVcdFile, temp_d0, "temp_d0");
    sc_trace(mVcdFile, temp_q0, "temp_q0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply_fu_37_ap_start, "grp_DCT_MAT_Multiply_fu_37_ap_start");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply_fu_37_ap_done, "grp_DCT_MAT_Multiply_fu_37_ap_done");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply_fu_37_ap_idle, "grp_DCT_MAT_Multiply_fu_37_ap_idle");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply_fu_37_ap_ready, "grp_DCT_MAT_Multiply_fu_37_ap_ready");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply_fu_37_A_address0, "grp_DCT_MAT_Multiply_fu_37_A_address0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply_fu_37_A_ce0, "grp_DCT_MAT_Multiply_fu_37_A_ce0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply_fu_37_A_q0, "grp_DCT_MAT_Multiply_fu_37_A_q0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply_fu_37_B_address0, "grp_DCT_MAT_Multiply_fu_37_B_address0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply_fu_37_B_ce0, "grp_DCT_MAT_Multiply_fu_37_B_ce0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply_fu_37_B_q0, "grp_DCT_MAT_Multiply_fu_37_B_q0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply_fu_37_C_address0, "grp_DCT_MAT_Multiply_fu_37_C_address0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply_fu_37_C_ce0, "grp_DCT_MAT_Multiply_fu_37_C_ce0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply_fu_37_C_we0, "grp_DCT_MAT_Multiply_fu_37_C_we0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply_fu_37_C_d0, "grp_DCT_MAT_Multiply_fu_37_C_d0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply2_fu_48_ap_start, "grp_DCT_MAT_Multiply2_fu_48_ap_start");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply2_fu_48_ap_done, "grp_DCT_MAT_Multiply2_fu_48_ap_done");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply2_fu_48_ap_idle, "grp_DCT_MAT_Multiply2_fu_48_ap_idle");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply2_fu_48_ap_ready, "grp_DCT_MAT_Multiply2_fu_48_ap_ready");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply2_fu_48_A_address0, "grp_DCT_MAT_Multiply2_fu_48_A_address0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply2_fu_48_A_ce0, "grp_DCT_MAT_Multiply2_fu_48_A_ce0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply2_fu_48_A_q0, "grp_DCT_MAT_Multiply2_fu_48_A_q0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply2_fu_48_B_address0, "grp_DCT_MAT_Multiply2_fu_48_B_address0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply2_fu_48_B_ce0, "grp_DCT_MAT_Multiply2_fu_48_B_ce0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply2_fu_48_B_q0, "grp_DCT_MAT_Multiply2_fu_48_B_q0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply2_fu_48_C_address0, "grp_DCT_MAT_Multiply2_fu_48_C_address0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply2_fu_48_C_ce0, "grp_DCT_MAT_Multiply2_fu_48_C_ce0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply2_fu_48_C_we0, "grp_DCT_MAT_Multiply2_fu_48_C_we0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply2_fu_48_C_d0, "grp_DCT_MAT_Multiply2_fu_48_C_d0");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply_fu_37_ap_start_ap_start_reg, "grp_DCT_MAT_Multiply_fu_37_ap_start_ap_start_reg");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_119, "ap_sig_bdd_119");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_126, "ap_sig_bdd_126");
    sc_trace(mVcdFile, grp_DCT_MAT_Multiply2_fu_48_ap_start_ap_start_reg, "grp_DCT_MAT_Multiply2_fu_48_ap_start_ap_start_reg");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_136, "ap_sig_bdd_136");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_143, "ap_sig_bdd_143");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_151, "ap_sig_bdd_151");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("DCT.hdltvin.dat");
    mHdltvoutHandle.open("DCT.hdltvout.dat");
}

DCT::~DCT() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete Tinv_U;
    delete T_U;
    delete temp_U;
    delete grp_DCT_MAT_Multiply_fu_37;
    delete grp_DCT_MAT_Multiply2_fu_48;
}

void DCT::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_DCT_MAT_Multiply2_fu_48_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()))) {
            grp_DCT_MAT_Multiply2_fu_48_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_DCT_MAT_Multiply2_fu_48_ap_ready.read())) {
            grp_DCT_MAT_Multiply2_fu_48_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_DCT_MAT_Multiply_fu_37_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
              !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
              esl_seteq<1,1,1>(cond_fu_58_p2.read(), ap_const_lv1_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
              !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
              !esl_seteq<1,1,1>(cond_fu_58_p2.read(), ap_const_lv1_0)))) {
            grp_DCT_MAT_Multiply_fu_37_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_DCT_MAT_Multiply_fu_37_ap_ready.read())) {
            grp_DCT_MAT_Multiply_fu_37_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        cond_reg_64 = cond_fu_58_p2.read();
    }
}

void DCT::thread_T_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0))) {
        T_address0 = grp_DCT_MAT_Multiply2_fu_48_B_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        T_address0 = grp_DCT_MAT_Multiply_fu_37_A_address0.read();
    } else {
        T_address0 = "XXXXXX";
    }
}

void DCT::thread_T_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0))) {
        T_ce0 = grp_DCT_MAT_Multiply2_fu_48_B_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        T_ce0 = grp_DCT_MAT_Multiply_fu_37_A_ce0.read();
    } else {
        T_ce0 = ap_const_logic_0;
    }
}

void DCT::thread_Tinv_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0))) {
        Tinv_address0 = grp_DCT_MAT_Multiply2_fu_48_B_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        Tinv_address0 = grp_DCT_MAT_Multiply_fu_37_A_address0.read();
    } else {
        Tinv_address0 = "XXXXXX";
    }
}

void DCT::thread_Tinv_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0))) {
        Tinv_ce0 = grp_DCT_MAT_Multiply2_fu_48_B_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        Tinv_ce0 = grp_DCT_MAT_Multiply_fu_37_A_ce0.read();
    } else {
        Tinv_ce0 = ap_const_logic_0;
    }
}

void DCT::thread_X_address0() {
    X_address0 = grp_DCT_MAT_Multiply_fu_37_B_address0.read();
}

void DCT::thread_X_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()))) {
        X_ce0 = grp_DCT_MAT_Multiply_fu_37_B_ce0.read();
    } else {
        X_ce0 = ap_const_logic_0;
    }
}

void DCT::thread_Y_address0() {
    Y_address0 = grp_DCT_MAT_Multiply2_fu_48_C_address0.read();
}

void DCT::thread_Y_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          !esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0)))) {
        Y_ce0 = grp_DCT_MAT_Multiply2_fu_48_C_ce0.read();
    } else {
        Y_ce0 = ap_const_logic_0;
    }
}

void DCT::thread_Y_d0() {
    Y_d0 = grp_DCT_MAT_Multiply2_fu_48_C_d0.read();
}

void DCT::thread_Y_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          !esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0)))) {
        Y_we0 = grp_DCT_MAT_Multiply2_fu_48_C_we0.read();
    } else {
        Y_we0 = ap_const_logic_0;
    }
}

void DCT::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !((esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_DCT_MAT_Multiply2_fu_48_ap_done.read())) || (!esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_DCT_MAT_Multiply2_fu_48_ap_done.read()))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void DCT::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void DCT::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !((esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_DCT_MAT_Multiply2_fu_48_ap_done.read())) || (!esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_DCT_MAT_Multiply2_fu_48_ap_done.read()))))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void DCT::thread_ap_sig_bdd_119() {
    ap_sig_bdd_119 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void DCT::thread_ap_sig_bdd_126() {
    ap_sig_bdd_126 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void DCT::thread_ap_sig_bdd_136() {
    ap_sig_bdd_136 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void DCT::thread_ap_sig_bdd_143() {
    ap_sig_bdd_143 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void DCT::thread_ap_sig_bdd_151() {
    ap_sig_bdd_151 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void DCT::thread_ap_sig_bdd_22() {
    ap_sig_bdd_22 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void DCT::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_22.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void DCT::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_119.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void DCT::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_136.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void DCT::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_151.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void DCT::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_bdd_126.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void DCT::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_bdd_143.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void DCT::thread_cond_fu_58_p2() {
    cond_fu_58_p2 = (!function_r.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<1>(): sc_lv<1>(function_r.read() == ap_const_lv8_1);
}

void DCT::thread_grp_DCT_MAT_Multiply2_fu_48_A_q0() {
    grp_DCT_MAT_Multiply2_fu_48_A_q0 = temp_q0.read();
}

void DCT::thread_grp_DCT_MAT_Multiply2_fu_48_B_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        if (!esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0)) {
            grp_DCT_MAT_Multiply2_fu_48_B_q0 = T_q0.read();
        } else if (esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0)) {
            grp_DCT_MAT_Multiply2_fu_48_B_q0 = Tinv_q0.read();
        } else {
            grp_DCT_MAT_Multiply2_fu_48_B_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        grp_DCT_MAT_Multiply2_fu_48_B_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void DCT::thread_grp_DCT_MAT_Multiply2_fu_48_ap_start() {
    grp_DCT_MAT_Multiply2_fu_48_ap_start = grp_DCT_MAT_Multiply2_fu_48_ap_start_ap_start_reg.read();
}

void DCT::thread_grp_DCT_MAT_Multiply_fu_37_A_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        grp_DCT_MAT_Multiply_fu_37_A_q0 = Tinv_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        grp_DCT_MAT_Multiply_fu_37_A_q0 = T_q0.read();
    } else {
        grp_DCT_MAT_Multiply_fu_37_A_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void DCT::thread_grp_DCT_MAT_Multiply_fu_37_B_q0() {
    grp_DCT_MAT_Multiply_fu_37_B_q0 = X_q0.read();
}

void DCT::thread_grp_DCT_MAT_Multiply_fu_37_ap_start() {
    grp_DCT_MAT_Multiply_fu_37_ap_start = grp_DCT_MAT_Multiply_fu_37_ap_start_ap_start_reg.read();
}

void DCT::thread_temp_address0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          !esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0)))) {
        temp_address0 = grp_DCT_MAT_Multiply2_fu_48_A_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()))) {
        temp_address0 = grp_DCT_MAT_Multiply_fu_37_C_address0.read();
    } else {
        temp_address0 = "XXXXXX";
    }
}

void DCT::thread_temp_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          !esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0)))) {
        temp_ce0 = grp_DCT_MAT_Multiply2_fu_48_A_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()))) {
        temp_ce0 = grp_DCT_MAT_Multiply_fu_37_C_ce0.read();
    } else {
        temp_ce0 = ap_const_logic_0;
    }
}

void DCT::thread_temp_d0() {
    temp_d0 = grp_DCT_MAT_Multiply_fu_37_C_d0.read();
}

void DCT::thread_temp_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()))) {
        temp_we0 = grp_DCT_MAT_Multiply_fu_37_C_we0.read();
    } else {
        temp_we0 = ap_const_logic_0;
    }
}

void DCT::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(cond_fu_58_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(cond_fu_58_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_DCT_MAT_Multiply_fu_37_ap_done.read())) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            if (!((esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_DCT_MAT_Multiply2_fu_48_ap_done.read())) || (!esl_seteq<1,1,1>(cond_reg_64.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_DCT_MAT_Multiply2_fu_48_ap_done.read())))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_DCT_MAT_Multiply_fu_37_ap_done.read())) {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}

void DCT::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"X_address0\" :  \"" << X_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"X_ce0\" :  \"" << X_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"X_q0\" :  \"" << X_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"function_r\" :  \"" << function_r.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Y_address0\" :  \"" << Y_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Y_ce0\" :  \"" << Y_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Y_we0\" :  \"" << Y_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Y_d0\" :  \"" << Y_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

