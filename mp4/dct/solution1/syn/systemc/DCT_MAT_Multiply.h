// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _DCT_MAT_Multiply_HH_
#define _DCT_MAT_Multiply_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "DCT_fadd_32ns_32ns_32_5_full_dsp.h"
#include "DCT_fmul_32ns_32ns_32_4_max_dsp.h"
#include "DCT_MAT_Multiply_B_cached.h"

namespace ap_rtl {

struct DCT_MAT_Multiply : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > A_address0;
    sc_out< sc_logic > A_ce0;
    sc_in< sc_lv<32> > A_q0;
    sc_out< sc_lv<6> > B_address0;
    sc_out< sc_logic > B_ce0;
    sc_in< sc_lv<32> > B_q0;
    sc_out< sc_lv<6> > C_address0;
    sc_out< sc_logic > C_ce0;
    sc_out< sc_logic > C_we0;
    sc_out< sc_lv<32> > C_d0;


    // Module declarations
    DCT_MAT_Multiply(sc_module_name name);
    SC_HAS_PROCESS(DCT_MAT_Multiply);

    ~DCT_MAT_Multiply();

    sc_trace_file* mVcdFile;

    DCT_MAT_Multiply_B_cached* B_cached_U;
    DCT_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>* DCT_fadd_32ns_32ns_32_5_full_dsp_U0;
    DCT_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>* DCT_fmul_32ns_32ns_32_4_max_dsp_U1;
    sc_signal< sc_lv<16> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_34;
    sc_signal< sc_lv<4> > i_2_fu_187_p2;
    sc_signal< sc_lv<4> > i_2_reg_331;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_65;
    sc_signal< sc_lv<8> > p_addr8_cast_fu_201_p1;
    sc_signal< sc_lv<8> > p_addr8_cast_reg_336;
    sc_signal< sc_lv<1> > exitcond4_fu_181_p2;
    sc_signal< sc_lv<4> > j_2_fu_211_p2;
    sc_signal< sc_lv<4> > j_2_reg_344;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_80;
    sc_signal< sc_lv<64> > tmp_3_fu_226_p1;
    sc_signal< sc_lv<64> > tmp_3_reg_349;
    sc_signal< sc_lv<1> > exitcond3_fu_205_p2;
    sc_signal< sc_lv<4> > i_3_fu_237_p2;
    sc_signal< sc_lv<4> > i_3_reg_362;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_bdd_96;
    sc_signal< sc_lv<8> > p_addr4_cast_fu_251_p1;
    sc_signal< sc_lv<8> > p_addr4_cast_reg_367;
    sc_signal< sc_lv<1> > exitcond2_fu_231_p2;
    sc_signal< sc_lv<4> > j_3_fu_261_p2;
    sc_signal< sc_lv<4> > j_3_reg_376;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_bdd_110;
    sc_signal< sc_lv<8> > tmp_6_trn_cast_fu_267_p1;
    sc_signal< sc_lv<8> > tmp_6_trn_cast_reg_381;
    sc_signal< sc_lv<1> > exitcond1_fu_255_p2;
    sc_signal< sc_lv<4> > k_1_fu_277_p2;
    sc_signal< sc_lv<4> > k_1_reg_390;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_bdd_124;
    sc_signal< sc_lv<1> > exitcond_fu_271_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_7;
    sc_signal< bool > ap_sig_bdd_139;
    sc_signal< sc_lv<32> > B_cached_q0;
    sc_signal< sc_lv<32> > grp_fu_175_p2;
    sc_signal< sc_lv<32> > tmp_9_reg_415;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_10;
    sc_signal< bool > ap_sig_bdd_150;
    sc_signal< sc_lv<32> > grp_fu_170_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st16_fsm_15;
    sc_signal< bool > ap_sig_bdd_159;
    sc_signal< sc_lv<6> > B_cached_address0;
    sc_signal< sc_logic > B_cached_ce0;
    sc_signal< sc_logic > B_cached_we0;
    sc_signal< sc_lv<32> > B_cached_d0;
    sc_signal< sc_lv<4> > i_reg_101;
    sc_signal< sc_lv<4> > j_reg_112;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_185;
    sc_signal< sc_lv<4> > i_1_reg_123;
    sc_signal< sc_lv<4> > j_1_reg_134;
    sc_signal< sc_lv<4> > k_reg_145;
    sc_signal< sc_lv<32> > temp_reg_156;
    sc_signal< sc_lv<64> > tmp_6_fu_292_p1;
    sc_signal< sc_lv<64> > tmp_8_fu_314_p1;
    sc_signal< sc_lv<64> > tmp_4_fu_323_p1;
    sc_signal< sc_lv<32> > grp_fu_170_p0;
    sc_signal< sc_lv<32> > grp_fu_170_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st12_fsm_11;
    sc_signal< bool > ap_sig_bdd_216;
    sc_signal< sc_lv<32> > grp_fu_175_p0;
    sc_signal< sc_lv<32> > grp_fu_175_p1;
    sc_signal< sc_lv<7> > tmp_fu_193_p3;
    sc_signal< sc_lv<8> > tmp_3_trn7_cast_fu_217_p1;
    sc_signal< sc_lv<8> > p_addr9_fu_221_p2;
    sc_signal< sc_lv<7> > tmp_1_fu_243_p3;
    sc_signal< sc_lv<8> > tmp_8_trn1_cast_fu_283_p1;
    sc_signal< sc_lv<8> > p_addr5_fu_287_p2;
    sc_signal< sc_lv<7> > tmp_7_fu_297_p3;
    sc_signal< sc_lv<8> > p_addr_cast_fu_305_p1;
    sc_signal< sc_lv<8> > p_addr1_fu_309_p2;
    sc_signal< sc_lv<8> > p_addr7_fu_319_p2;
    sc_signal< sc_logic > grp_fu_170_ce;
    sc_signal< sc_logic > grp_fu_175_ce;
    sc_signal< sc_lv<16> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_ST_st1_fsm_0;
    static const sc_lv<16> ap_ST_st2_fsm_1;
    static const sc_lv<16> ap_ST_st3_fsm_2;
    static const sc_lv<16> ap_ST_st4_fsm_3;
    static const sc_lv<16> ap_ST_st5_fsm_4;
    static const sc_lv<16> ap_ST_st6_fsm_5;
    static const sc_lv<16> ap_ST_st7_fsm_6;
    static const sc_lv<16> ap_ST_st8_fsm_7;
    static const sc_lv<16> ap_ST_st9_fsm_8;
    static const sc_lv<16> ap_ST_st10_fsm_9;
    static const sc_lv<16> ap_ST_st11_fsm_10;
    static const sc_lv<16> ap_ST_st12_fsm_11;
    static const sc_lv<16> ap_ST_st13_fsm_12;
    static const sc_lv<16> ap_ST_st14_fsm_13;
    static const sc_lv<16> ap_ST_st15_fsm_14;
    static const sc_lv<16> ap_ST_st16_fsm_15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_ce0();
    void thread_B_address0();
    void thread_B_cached_address0();
    void thread_B_cached_ce0();
    void thread_B_cached_d0();
    void thread_B_cached_we0();
    void thread_B_ce0();
    void thread_C_address0();
    void thread_C_ce0();
    void thread_C_d0();
    void thread_C_we0();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_110();
    void thread_ap_sig_bdd_124();
    void thread_ap_sig_bdd_139();
    void thread_ap_sig_bdd_150();
    void thread_ap_sig_bdd_159();
    void thread_ap_sig_bdd_185();
    void thread_ap_sig_bdd_216();
    void thread_ap_sig_bdd_34();
    void thread_ap_sig_bdd_65();
    void thread_ap_sig_bdd_80();
    void thread_ap_sig_bdd_96();
    void thread_ap_sig_cseq_ST_st11_fsm_10();
    void thread_ap_sig_cseq_ST_st12_fsm_11();
    void thread_ap_sig_cseq_ST_st16_fsm_15();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_ap_sig_cseq_ST_st8_fsm_7();
    void thread_exitcond1_fu_255_p2();
    void thread_exitcond2_fu_231_p2();
    void thread_exitcond3_fu_205_p2();
    void thread_exitcond4_fu_181_p2();
    void thread_exitcond_fu_271_p2();
    void thread_grp_fu_170_ce();
    void thread_grp_fu_170_p0();
    void thread_grp_fu_170_p1();
    void thread_grp_fu_175_ce();
    void thread_grp_fu_175_p0();
    void thread_grp_fu_175_p1();
    void thread_i_2_fu_187_p2();
    void thread_i_3_fu_237_p2();
    void thread_j_2_fu_211_p2();
    void thread_j_3_fu_261_p2();
    void thread_k_1_fu_277_p2();
    void thread_p_addr1_fu_309_p2();
    void thread_p_addr4_cast_fu_251_p1();
    void thread_p_addr5_fu_287_p2();
    void thread_p_addr7_fu_319_p2();
    void thread_p_addr8_cast_fu_201_p1();
    void thread_p_addr9_fu_221_p2();
    void thread_p_addr_cast_fu_305_p1();
    void thread_tmp_1_fu_243_p3();
    void thread_tmp_3_fu_226_p1();
    void thread_tmp_3_trn7_cast_fu_217_p1();
    void thread_tmp_4_fu_323_p1();
    void thread_tmp_6_fu_292_p1();
    void thread_tmp_6_trn_cast_fu_267_p1();
    void thread_tmp_7_fu_297_p3();
    void thread_tmp_8_fu_314_p1();
    void thread_tmp_8_trn1_cast_fu_283_p1();
    void thread_tmp_fu_193_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
