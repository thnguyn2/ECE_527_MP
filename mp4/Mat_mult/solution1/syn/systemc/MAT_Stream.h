// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _MAT_Stream_HH_
#define _MAT_Stream_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "MAT_Stream_fadd_32ns_32ns_32_5_full_dsp.h"

namespace ap_rtl {

struct MAT_Stream : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<32> > in_arr_dout;
    sc_in< sc_logic > in_arr_empty_n;
    sc_out< sc_logic > in_arr_read;
    sc_out< sc_lv<32> > out_arr_din;
    sc_in< sc_logic > out_arr_full_n;
    sc_out< sc_logic > out_arr_write;
    sc_in< sc_lv<8> > op_type;


    // Module declarations
    MAT_Stream(sc_module_name name);
    SC_HAS_PROCESS(MAT_Stream);

    ~MAT_Stream();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    MAT_Stream_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>* MAT_Stream_fadd_32ns_32ns_32_5_full_dsp_U1;
    sc_signal< sc_lv<32> > temp_reg_55;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_31;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_44;
    sc_signal< sc_lv<32> > grp_fu_42_p2;
    sc_signal< sc_lv<32> > tmp_reg_65;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_bdd_53;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_bdd_62;
    sc_signal< sc_lv<32> > grp_fu_42_p0;
    sc_signal< sc_lv<32> > grp_fu_42_p1;
    sc_signal< sc_logic > grp_fu_42_ce;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_st1_fsm_0;
    static const sc_lv<7> ap_ST_st2_fsm_1;
    static const sc_lv<7> ap_ST_st3_fsm_2;
    static const sc_lv<7> ap_ST_st4_fsm_3;
    static const sc_lv<7> ap_ST_st5_fsm_4;
    static const sc_lv<7> ap_ST_st6_fsm_5;
    static const sc_lv<7> ap_ST_st7_fsm_6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_40A00000;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_sig_bdd_31();
    void thread_ap_sig_bdd_44();
    void thread_ap_sig_bdd_53();
    void thread_ap_sig_bdd_62();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_grp_fu_42_ce();
    void thread_grp_fu_42_p0();
    void thread_grp_fu_42_p1();
    void thread_in_arr_read();
    void thread_out_arr_din();
    void thread_out_arr_write();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
